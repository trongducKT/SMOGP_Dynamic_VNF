{"1": [{"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "Max( Max( RCSe,MUM ),( DS + MUC ) )", "obj1": 0.48406374501992033, "obj2": 0.48668276388049686}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / RCSe ) )", "obj1": 0.9800796812749004, "obj2": 0.026998738640769553}, {"determining": "( Max( CRS,Const ) + ( Const / ACS ) )", "choosing": "Max( Min( MUM ,MUC ),( RCSe * RRSe ) )", "obj1": 0.39243027888446214, "obj2": 0.5728899239346302}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( MUR + CS ) / Min( RCSe ,DS ) )", "obj1": 0.20916334661354583, "obj2": 0.774912163783138}, {"determining": "( Max( ACS,ARS ) + ( MRS * BR ) )", "choosing": "Max( Max( RRSe,MUC ),( MLU * DS ) )", "obj1": 0.37649402390438247, "obj2": 0.5723966952949177}, {"determining": "( ( CRS * FirstVNF_RAM ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUR - Max( MLU,RRSe ) ),Min( MLU ,RMSe ) )", "obj1": 0.38645418326693226, "obj2": 0.571694586336726}, {"determining": "Min( ( AMS + DDR ) ,Max( RRS,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( MLU / MUC ) - ( MUC + RCSe ) )", "obj1": 0.4043824701195219, "obj2": 0.562997446787841}, {"determining": "( ( CRS * Const ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( MUR / MUR ) * Min( MUC ,RRSe ) )", "obj1": 0.41434262948207173, "obj2": 0.5053132609483824}, {"determining": "( Min( Const ,RRS ) * ( DDR * MDR ) )", "choosing": "Max( ( RCSe / RRSe ),( MUM + RRSe ) )", "obj1": 0.33067729083665337, "obj2": 0.6061749732784274}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( PN * ACS ) )", "choosing": "Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) )", "obj1": 0.4203187250996016, "obj2": 0.5303694869635586}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,BR ) )", "choosing": "( ( MLU / MUC ) * ( MUC * MUR ) )", "obj1": 0.43824701195219123, "obj2": 0.5577975491807114}, {"determining": "Min( Min( Const ,RRS ) ,( MDR / PN ) )", "choosing": "( Min( MUM ,DS ) - Max( MUM,DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5937452855426476}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( MLU / RCSe ) )", "obj1": 0.36852589641434264, "obj2": 0.6057893043502576}, {"determining": "Min( ( FirstVNF_RAM_Server / MRS ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.2908366533864542, "obj2": 0.6803616028260052}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU_Server * CRS ),( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,MUM ) / Min( MUC ,MUC ) )", "obj1": 0.3286852589641434, "obj2": 0.626773582078881}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( MDR + ARS ) )", "choosing": "Min( ( CS / MUM ) ,Min( MLU ,RCSe ) )", "obj1": 0.4123505976095618, "obj2": 0.5608511543043163}, {"determining": "Max( Min( RRS ,FirstVNF_Mem ),( FirstVNF_Mem * Const ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( Max( Min( MUM ,( RCSe / MUC ) ),MUM ) + MUM ) ) * DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.5489137859199812}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + Max( AMS,MRS ) )", "choosing": "Min( ( MUR * RMSe ) ,Max( DS,MLU ) )", "obj1": 0.45617529880478086, "obj2": 0.5466246322620993}, {"determining": "Min( ( FirstVNF_Mem - CRS ) ,( MDR * FirstVNF_Mem ) )", "choosing": "Min( ( MLU + MUM ) ,( RCSe + MUR ) )", "obj1": 0.40836653386454186, "obj2": 0.5479988157363288}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( CS - MUM ) + ( MLU + RCSe ) )", "obj1": 0.44223107569721115, "obj2": 0.565033856941377}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MDR ) / Max( FirstVNF_RAM_Server,BR ) )", "choosing": "Min( ( RRSe * MUC ) ,Max( DS,MUM ) )", "obj1": 0.4243027888446215, "obj2": 0.5181221139561628}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Max( DS,MUR ) )", "obj1": 0.2290836653386454, "obj2": 0.7472474042861583}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( RRSe + CS ) ,( MUC * MUC ) )", "obj1": 0.4581673306772908, "obj2": 0.5127868414618105}, {"determining": "( ( DDR + AMS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM * ( FirstVNF_RAM - CRS ) ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - ( DS / Max( MLU,Min( RMSe ,RMSe ) ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5926964894054033}, {"determining": "Max( ( RRS * MRS ),Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * ( FirstVNF_Mem + Max( Const,BR ) ) ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,( RRSe * Min( MLU ,RRSe ) ) ) / MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.5770198649265754}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( PN * Const ) )", "choosing": "( ( Max( ( Min( MUM ,CS ) - ( MUR / CS ) ),MUM ) - DS ) * ( RMSe + RCSe ) )", "obj1": 0.4362549800796813, "obj2": 0.5701869251210807}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * RRS ) * Min( ( PN + ARS ) ,( PN / CRS ) ) )", "choosing": "( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( MLU,RRSe ) - Max( CS,CS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.6097084970609586}, {"determining": "( ( ( AMS - Const ) - ( AMS * ARS ) ) / ( ( RRS * AMS ) / ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( ( RCSe - MUR ) / ( RCSe - CS ) ) / Max( ( DS + RRSe ),( MUR / DS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.6376361076984423}, {"determining": "( ( DDR - ( CRS + MRS ) ) + Min( FirstVNF_CPU ,Max( CRS,Const ) ) )", "choosing": "( ( RCSe * MLU ) * ( RCSe - Min( MLU ,RRSe ) ) )", "obj1": 0.300796812749004, "obj2": 0.6538913903573546}, {"determining": "( ( ( BR * PN ) - Min( PN ,RRS ) ) * Max( ARS,( BR + Const ) ) )", "choosing": "( ( RMSe - MUM ) * ( Max( CS,RMSe ) + RRSe ) )", "obj1": 0.34063745019920316, "obj2": 0.6250120431422075}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "Max( Max( ( DDR + RRS ),( FirstVNF_Mem + RRS ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MUR ) + CS ),( RRSe + ( MUR + RRSe ) ) )", "obj1": 0.42231075697211157, "obj2": 0.5258198225842751}, {"determining": "( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( AMS,FirstVNF_RAM ),( DDR / CRS ) ) )", "choosing": "( ( ( DS + RMSe ) - ( MUM + CS ) ) + ( ( CS / RRSe ) + ( MLU - RRSe ) ) )", "obj1": 0.2788844621513944, "obj2": 0.6987822156248246}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * ACS ) * ( FirstVNF_Mem_Server + AMS ) )", "choosing": "Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) )", "obj1": 0.4043824701195219, "obj2": 0.5771292318645058}, {"determining": "Min( Min( PN ,PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS / MLU ),Max( DS,MLU ) )", "obj1": 0.2788844621513944, "obj2": 0.6952188621375479}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( MRS - MRS ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) * Max( MUC,MUR ) )", "obj1": 0.3745019920318725, "obj2": 0.5984330894079936}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( Max( RCSe,MUC ) / ( RCSe * RCSe ) ) - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.08973190428266728}, {"determining": "( ( ACS * DDR ) / ( ( PN / MRS ) * AMS ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + MUR ) )", "obj1": 0.37649402390438247, "obj2": 0.57890935180469}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( ( RMSe - DS ) * ( CS / MUM ) ),Max( ( DS - MLU ),( MUR - CS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.009760979256314665}, {"determining": "Max( ( Const / DDR ),( PN * ( Const - CRS ) ) )", "choosing": "( Max( MUM,( RMSe * MLU ) ) - ( RRSe - ( MLU / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.6724571912142503}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( RRS,Const ) / PN ),Min( FirstVNF_CPU_Server ,Min( FirstVNF_RAM_Server ,DDR ) ) )", "choosing": "Min( Min( Max( RMSe,RRSe ) ,Max( MUC,CS ) ) ,( ( RMSe + MUM ) / Min( MUC ,DS ) ) )", "obj1": 0.4302788844621514, "obj2": 0.5500706248121547}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_Mem / AMS ) + FirstVNF_Mem_Server ) - ACS ) ) )", "choosing": "( ( Min( MUC ,MUR ) / ( CS / ( Min( ( MUR / Min( RMSe ,( MLU + CS ) ) ) ,( MUC * ( DS - ( CS / RCSe ) ) ) ) / ( RCSe * MUM ) ) ) ) * Max( ( CS / MUC ),( RMSe + MLU ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5873722739457242}, {"determining": "Min( ( ( AMS - BR ) * ( Max( ( Max( CRS,ACS ) * Min( BR ,FirstVNF_CPU_Server ) ),FirstVNF_Mem ) - MDR ) ) ,Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RMSe ,( DS - ( MUC - DS ) ) ) + MUM ) / CS ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) )", "obj1": 0.3844621513944223, "obj2": 0.5693516922367857}, {"determining": "( Min( Min( MRS ,BR ) ,( FirstVNF_CPU_Server / ARS ) ) * Max( ( FirstVNF_RAM_Server / Const ),Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( Min( ( ( ( MUR * ( ( MLU / RMSe ) - MLU ) ) + ( RMSe - MUR ) ) / CS ) ,Min( MUM ,CS ) ) / Max( ( MUM - RMSe ),( MUR - CS ) ) )", "obj1": 0.3207171314741036, "obj2": 0.6253411864978384}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / ACS ) ) ,Min( Max( FirstVNF_RAM,MDR ) ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( RMSe + MUC ) + Min( MUM ,Max( MUM,CS ) ) )", "obj1": 0.40239043824701193, "obj2": 0.5538953136321668}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_RAM_Server ) / ( ARS - RRS ) ) * ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( ACS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUR / MLU ) * ( CS / RMSe ) ) ,Min( ( RMSe + CS ) ,Min( CS ,MLU ) ) )", "obj1": 0.4043824701195219, "obj2": 0.5698679614311201}, {"determining": "Max( Max( Max( FirstVNF_Mem,CRS ),( DDR * FirstVNF_Mem_Server ) ),( ( ACS * AMS ) - ( BR / DDR ) ) )", "choosing": "Min( Max( RCSe,( MLU + RMSe ) ) ,Min( RCSe ,RMSe ) )", "obj1": 0.3784860557768924, "obj2": 0.5792776119282506}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) * ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS + MUR ) - ( MLU / MUC ) ) ,( ( MUC * MUR ) / Min( CS ,MLU ) ) )", "obj1": 0.45219123505976094, "obj2": 0.5177432797271381}, {"determining": "( Min( ( Const / BR ) ,PN ) + Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM - ( DS * MUR ) ) / Max( MLU,DS ) ) - Max( Min( RRSe ,DS ),( RMSe + RRSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.0575080472912131}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Max( ( ARS + FirstVNF_Mem ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( MUC ,MUM ) ),MUR ) + ( CS * ( ( MUR / ( ( MUM / DS ) - MUR ) ) * ( MUR / CS ) ) ) ) - MLU ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17928286852589642, "obj2": 0.782314949222034}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),( FirstVNF_Mem_Server + ( Min( PN ,RRS ) / ( FirstVNF_Mem_Server + ( Min( BR ,Const ) - Min( FirstVNF_RAM ,BR ) ) ) ) ) ) )", "choosing": "Min( Min( RRSe ,DS ) ,( RRSe - RCSe ) )", "obj1": 0.2749003984063745, "obj2": 0.6712275152148658}, {"determining": "Min( ( Max( FirstVNF_Mem,MDR ) * ( FirstVNF_CPU * RRS ) ) ,( Min( ACS ,AMS ) * ( AMS + PN ) ) )", "choosing": "( Max( MLU,RMSe ) + Min( MLU ,Min( CS ,MUM ) ) )", "obj1": 0.3844621513944223, "obj2": 0.5990241107432115}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( ( MUC / MUR ) + ( Max( RMSe,MUC ) + DS ) )", "obj1": 0.450199203187251, "obj2": 0.5256384730495467}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( ( MUR * RCSe ) * ( DS * RRSe ) ) ,Max( Min( RMSe ,MUM ),( CS + RCSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.480530189906547}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5697211155378487, "obj2": 0.3679148806335169}, {"determining": "Min( Min( ( PN * BR ) ,FirstVNF_CPU_Server ) ,( BR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * MLU ) * ( Min( Min( MUM ,RCSe ) ,( MLU / CS ) ) / RMSe ) )", "obj1": 0.4342629482071713, "obj2": 0.5505876945345975}, {"determining": "( ( ( PN / CRS ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) + ( FirstVNF_RAM / ( Max( Const,PN ) / CRS ) ) )", "choosing": "( ( RCSe * ( Max( MUR,RMSe ) - MLU ) ) / Max( RMSe,( ( MUR - MLU ) - CS ) ) )", "obj1": 0.40039840637450197, "obj2": 0.5903547096586219}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / DDR ) ,PN ) ,Max( FirstVNF_RAM_Server,CRS ) )", "choosing": "( Max( CS,Min( Max( ( MUR * Min( MUR ,MUM ) ),MUC ) ,( RCSe - ( RRSe / MUR ) ) ) ) - ( DS / ( CS + Min( RRSe ,MUR ) ) ) )", "obj1": 0.2908366533864542, "obj2": 0.6581189687091388}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.6488507119712118}, {"determining": "( ( ( ( AMS * CRS ) + ( Const / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem - MDR ) / ( MDR * MRS ) ) ) - ( Max( ( CRS + FirstVNF_RAM_Server ),( BR / FirstVNF_Mem ) ) - Max( ( FirstVNF_CPU_Server / BR ),Min( ARS ,DDR ) ) ) )", "choosing": "Max( ( Min( MUR ,Max( RMSe,RMSe ) ) - ( CS / Min( MUR ,MUR ) ) ),Min( MUC ,MLU ) )", "obj1": 0.9043824701195219, "obj2": 0.1053263047763339}, {"determining": "( ( CRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "( ( Max( Min( DS ,MUC ),( CS / RMSe ) ) / ( ( RRSe * MUR ) - Max( RMSe,RCSe ) ) ) / ( ( Max( MUM,MUC ) * Max( MUR,MLU ) ) * Min( ( RRSe / MUM ) ,( MUM / MLU ) ) ) )", "obj1": 0.3346613545816733, "obj2": 0.6508822170372546}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( MDR - ACS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) + Min( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) ,Max( ( RMSe + CS ),( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( ARS ,RRS ) - ( MRS - BR ) ) ,( Max( AMS,MRS ) - ( MRS - FirstVNF_CPU_Server ) ) ),( Max( Max( FirstVNF_CPU,FirstVNF_CPU_Server ),( RRS / FirstVNF_RAM ) ) / ( Max( MRS,RRS ) / Min( Const ,DDR ) ) ) )", "choosing": "Max( ( Min( Max( RCSe,CS ) ,Min( MUR ,MUR ) ) * Min( Max( MUM,MUR ) ,( CS - MLU ) ) ),( ( ( MUC + CS ) - Min( MLU ,MUM ) ) * ( Min( CS ,DS ) + Max( MUR,MUC ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.5649641429983481}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) )", "obj1": 0.36852589641434264, "obj2": 0.5495771009611908}, {"determining": "( ( DDR * CRS ) + Min( MRS ,Min( BR ,( FirstVNF_RAM_Server / BR ) ) ) )", "choosing": "( Max( ( ( MLU + CS ) - Max( CS,CS ) ),( ( RRSe + MUM ) - ( RRSe * RRSe ) ) ) * ( ( ( MUC / MUC ) + ( MLU * MUC ) ) / ( ( RRSe / RCSe ) / ( CS / RCSe ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.68299972905454}, {"determining": "( ( ( Max( Const,PN ) - ( DDR / FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) + ( BR + ACS ) ) ) * ( ( Min( DDR ,MRS ) - Max( MRS,ACS ) ) / ( ( FirstVNF_Mem_Server / BR ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUC - Max( CS,RRSe ) ),MUC ) + ( ( MUM / ( CS / RMSe ) ) - ( MUC / MUR ) ) )", "obj1": 0.4442231075697211, "obj2": 0.5320244184449703}, {"determining": "Max( Min( ACS ,FirstVNF_CPU_Server ),Min( ( ARS * DDR ) ,BR ) )", "choosing": "Min( ( ( DS - DS ) + Max( MUM,Max( MLU,MUM ) ) ) ,Max( RRSe,( ( DS * RRSe ) / RMSe ) ) )", "obj1": 0.40836653386454186, "obj2": 0.5461403786411437}, {"determining": "Max( ( ( CRS * ARS ) * ( PN + FirstVNF_CPU ) ),( FirstVNF_CPU * ( BR * RRS ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MUR / RRSe ) ) * ( Max( RRSe,RCSe ) + ( MUM - MUR ) ) ) / ( ( ( MLU * MUC ) * ( MUC / DS ) ) + ( ( RCSe - DS ) / ( RRSe + RCSe ) ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5901698314488889}, {"determining": "Max( Max( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( MRS - PN ) ),Max( ( ARS - ARS ),Max( PN,AMS ) ) ),( ( ( MRS / FirstVNF_CPU ) + ( RRS * MDR ) ) - Min( ( MDR * PN ) ,Max( Const,Const ) ) ) )", "choosing": "( ( ( ( MLU / MUM ) - Max( MUR,RCSe ) ) + ( ( RMSe - MUR ) / ( DS - MUC ) ) ) / Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) )", "obj1": 0.3247011952191235, "obj2": 0.6185077460322361}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( PN * ( ACS - MDR ) ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR * RMSe ),( RCSe / MUC ) ) + Max( ( MUR * MLU ),( RRSe * RRSe ) ) ) - Max( ( ( MUM - MLU ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 0.4063745019920319, "obj2": 0.5714213466161597}, {"determining": "Max( ( MDR * ACS ),( Max( ( FirstVNF_CPU + FirstVNF_Mem ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC / RRSe ) ,Max( MLU,Min( ( ( ( ( ( CS * MUR ) + ( RMSe / RMSe ) ) / ( DS / MUC ) ) * ( Max( ( MUR * RRSe ),( MUC - MUM ) ) + ( MUM / RRSe ) ) ) / RMSe ) ,Max( DS,MUM ) ) ) )", "obj1": 0.4262948207171315, "obj2": 0.5657324557251193}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + ( Min( ( ( Const - DDR ) / FirstVNF_CPU ) ,PN ) / ( ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) - ACS ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( CS + MUM ) ) ,( ( RRSe / MUR ) / ( ( MUC + ( Min( Min( RMSe ,MUM ) ,DS ) - MUC ) ) + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( FirstVNF_RAM + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) )", "choosing": "( ( RCSe / MLU ) / ( MUC + MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.6412156669420653}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( RRSe - MUR ) ) ) )", "obj1": 0.3247011952191235, "obj2": 0.6616738081002146}, {"determining": "( ( ( ( Const * DDR ) / Min( AMS ,DDR ) ) - RRS ) / Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( ( ( ( MUC - ( ( DS - RMSe ) / ( MLU - MUR ) ) ) - MUM ) / ( CS / ( MUC + Min( ( Max( Min( CS ,MUR ),CS ) / ( MUM - ( RRSe + RCSe ) ) ) ,( RCSe + RMSe ) ) ) ) ) ,( Max( Max( Min( ( RCSe + Max( ( MUM + RCSe ),CS ) ) ,MUM ),CS ),( Min( ( DS - ( CS - RRSe ) ) ,Min( MLU ,( Min( CS ,CS ) - ( RMSe / MLU ) ) ) ) * ( ( MUM + ( ( RMSe * RMSe ) - RRSe ) ) / RCSe ) ) ) / ( ( CS + ( MUR / Max( ( ( MUR + MUM ) + RRSe ),( MUR - RMSe ) ) ) ) + MUM ) ) )", "obj1": 0.2649402390438247, "obj2": 0.6305953648733944}, {"determining": "Max( Min( Max( ( CRS / FirstVNF_Mem ),( FirstVNF_CPU / ARS ) ) ,( Max( ARS,DDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,( FirstVNF_RAM * CRS ) ) / ( ( ACS / RRS ) + ( FirstVNF_Mem_Server * RRS ) ) ) )", "choosing": "( ( MUC + ( RCSe - ( MUC - RCSe ) ) ) / ( MUC / ( RCSe * MUC ) ) )", "obj1": 0.44223107569721115, "obj2": 0.5328896141457433}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( Max( ( MUC + RRSe ),MLU ) + Min( ( CS - ( CS / MUC ) ) ,RRSe ) )", "obj1": 0.40836653386454186, "obj2": 0.5412962002210965}, {"determining": "Min( ( ( Const / BR ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) ,( ( ( MRS - ACS ) + ( FirstVNF_Mem_Server * ACS ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.2968127490039841, "obj2": 0.6049043376087903}, {"determining": "( ( ( ( FirstVNF_Mem * ACS ) + ( CRS * DDR ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - ( RRSe - RRSe ) ) + Min( RMSe ,RRSe ) )", "obj1": 0.4641434262948207, "obj2": 0.5127026985593666}, {"determining": "( ( FirstVNF_RAM + ( ( DDR / Max( FirstVNF_RAM,Max( CRS,Max( Max( AMS,CRS ),FirstVNF_RAM ) ) ) ) / Const ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( ACS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( Min( RRSe ,Max( MUM,CS ) ) / Min( ( MUM - MLU ) ,( MUM / RRSe ) ) ) ) ) / MLU ) ) / ( RMSe + ( CS / MUM ) ) )", "obj1": 0.2788844621513944, "obj2": 0.6821829886854408}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM ) ),Max( ( FirstVNF_RAM_Server - MRS ),( Const + PN ) ) ),( ( ( DDR * FirstVNF_RAM ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( ( DDR * CRS ) + ( PN * CRS ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.36852589641434264, "obj2": 0.5789370359068107}], "2": [{"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + ( Min( ( ( Const - DDR ) / FirstVNF_CPU ) ,PN ) / ( ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) - ACS ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( CS + MUM ) ) ,( ( RRSe / MUR ) / ( ( MUC + ( Min( Min( RMSe ,MUM ) ,DS ) - MUC ) ) + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( CRS - BR ) + RRS )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MUC + Max( RMSe,RCSe ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.24570778192650453}, {"determining": "( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 0.6414342629482072, "obj2": 0.3582787873196631}, {"determining": "( ( ( Max( Const,PN ) - ( DDR / FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) + ( BR + ACS ) ) ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( MUC - Max( CS,RRSe ) ),MUC ) + ( Max( ( ( MLU + CS ) - Max( CS,CS ) ),( ( RRSe + MUM ) - ( RRSe * RRSe ) ) ) * ( ( ( MUC / MUC ) + ( MLU * MUC ) ) / ( ( RRSe / RCSe ) / ( CS / RCSe ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.12467634570096606}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) / ( ( FirstVNF_CPU / DDR ) + ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MUR ) / ( ( Max( ( RRSe * MUM ),( RRSe + DS ) ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) ) / MLU ) ) * Max( ( MUC + CS ),( RMSe + MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6922677786696344}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.366758397331547}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "Min( Min( ( PN * Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) ) ) ,FirstVNF_CPU_Server ) ,( BR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * MLU ) * ( Min( ( Max( MUR,MUC ) - ( MUM - MUC ) ) ,( MLU / CS ) ) / RMSe ) )", "obj1": 0.547808764940239, "obj2": 0.39194247768102475}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7868525896414342, "obj2": 0.19361723956499208}, {"determining": "Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( MUM,RRSe ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.3629523576345351}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7650872448599392}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "Max( Min( RRS ,FirstVNF_Mem ),( FirstVNF_Mem * Const ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( Max( Min( MUM ,( RCSe / MUC ) ),MUM ) + MUM ) ) * DS ) ) )", "obj1": 0.4402390438247012, "obj2": 0.49453488659166744}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.05087300360934599}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( AMS - MDR ) / Max( FirstVNF_RAM_Server,( Const + AMS ) ) )", "choosing": "Min( ( DS * MUC ) ,Max( DS,MUM ) )", "obj1": 0.48804780876494025, "obj2": 0.44142447990348355}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUM ,MUC ),( RCSe * RRSe ) )", "obj1": 0.9681274900398407, "obj2": 0.0388549466294535}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Max( DS,MUR ) )", "obj1": 0.24302788844621515, "obj2": 0.7029301583000468}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.41434262948207173, "obj2": 0.5053132609483824}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5840431416623691}, {"determining": "( Max( ( Const * RRS ),( Min( ARS ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( RMSe + RRSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5910478377099361}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Max( ( FirstVNF_Mem_Server - CRS ),Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / MUR ) + MUM ) ) * DS ) ) )", "obj1": 0.4940239043824701, "obj2": 0.4413834324113912}, {"determining": "( ( ACS * DDR ) / ( ( PN / MRS ) * AMS ) )", "choosing": "( ( Max( RCSe,MUC ) / ( RCSe * RCSe ) ) - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.28884462151394424, "obj2": 0.609346020326564}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) )", "obj1": 0.3745019920318725, "obj2": 0.5367015398206517}, {"determining": "( ( CRS * Const ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( MUR / MUR ) * Min( MUC ,RRSe ) )", "obj1": 0.41434262948207173, "obj2": 0.5053132609483824}, {"determining": "( ( ( PN / MRS ) * AMS ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( Max( RCSe,MUC ) / ( RCSe * RCSe ) ) - ( Max( MUR,RCSe ) * ( CS + RMSe ) ) )", "obj1": 0.3147410358565737, "obj2": 0.5909500048229103}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( ACS * DDR ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) / MRS ) * AMS ) )", "choosing": "( ( RCSe / RMSe ) + ( ( Max( RCSe,MUC ) / ( RCSe * RCSe ) ) - ( Max( MUR,RCSe ) * ( CS + MLU ) ) ) )", "obj1": 0.27689243027888444, "obj2": 0.6119096541609377}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * RRS ) * Min( ( PN + ARS ) ,( PN / CRS ) ) )", "choosing": "( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( MLU,RRSe ) - Max( CS,CS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.6097084970609586}, {"determining": "Max( Min( RRS ,FirstVNF_Mem ),( FirstVNF_Mem * Const ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( Max( Min( MUM ,( RCSe / MUC ) ),MUM ) + MUM ) ) * DS ) ) )", "obj1": 0.4402390438247012, "obj2": 0.49453488659166744}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( MDR - ACS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) + Min( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) ,Max( ( RMSe + CS ),( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( RRS * ( ( DDR - ( ( MRS + DDR ) / Max( FirstVNF_Mem,BR ) ) ) * ( Const / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( Const / BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( ( ( RMSe * DS ) * Min( ( ( MUC * RRSe ) - MUC ) ,RRSe ) ) - CS ) ) * ( ( Min( RRSe ,( MUR * RRSe ) ) - ( ( CS + MLU ) / Max( MUC,DS ) ) ) + ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + ( ACS / ( FirstVNF_CPU * DDR ) ) ),( ( Max( DDR,Min( MDR ,ARS ) ) + Min( Min( RRS ,BR ) ,ARS ) ) * MRS ) ) + Min( MDR ,CRS ) )", "choosing": "( ( Max( ( ( ( RMSe + RCSe ) * Max( RCSe,MUC ) ) / Max( ( Max( DS,RCSe ) - ( DS * RCSe ) ),MUR ) ),RRSe ) + MLU ) * ( Max( RCSe,( RMSe + CS ) ) - ( ( ( ( CS - RRSe ) * ( DS * MUM ) ) + MLU ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server / MRS ) ,Min( BR ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( Max( MUM,RMSe ) - Max( MUM,RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) - ( MDR + ARS ) ) - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( CS / MUM ) ,Min( MLU ,RCSe ) ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) ) - ( MDR + ARS ) )", "choosing": "Min( ( CS / ( RRSe - CS ) ) ,Min( MLU ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,AMS )", "choosing": "( ( ( RRSe - CS ) / RRSe ) + ( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "( ( RRSe - CS ) + ( MUM * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( CS - MUM ) + ( ( MLU * DS ) + ( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( CS - MUM ) + ( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * DDR ) / ( Const + ACS ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( CS - MUM ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - MDR ) / Max( FirstVNF_RAM_Server,BR ) ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * ( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( MRS - MRS ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) / ( RCSe * ( ( RMSe / RCSe ) * Max( MUC,MUR ) ) ) ) - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( Max( RMSe,RRSe ) ,Max( MUC,CS ) ) ,( ( RMSe + MUM ) / Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - DDR )", "choosing": "Max( ( ( MUM * ( Min( MUC ,MUR ) / ( CS / MLU ) ) ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU ) ,( Max( FirstVNF_CPU_Server,CRS ) + ARS ) )", "choosing": "Max( Max( ( MUM * CS ),( RRSe / RCSe ) ),( Min( ( RRSe / CS ) ,Min( MUM ,CS ) ) / Max( ( MUM - RMSe ),( MUR - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) )", "choosing": "( Min( ( RRSe / CS ) ,Min( MUM ,CS ) ) / Max( ( MUM - RMSe ),( MUR - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Min( ( ( ARS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / ACS ) ) ,Min( Max( FirstVNF_RAM,MDR ) ,( FirstVNF_RAM_Server - CRS ) ) ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,MUM ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_RAM,MDR ) ,( FirstVNF_RAM_Server - CRS ) ) / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * ( ( RMSe + MUC ) + Min( MUM ,Max( MUM,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + ( Min( ( ( Const - DDR ) / FirstVNF_CPU ) ,PN ) / ( ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) - ACS ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( CS + MUM ) ) ,( ( RRSe / MUR ) / ( ( MUC + ( Min( Min( RMSe ,MUM ) ,DS ) - MUC ) ) + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( CRS - BR ) + RRS )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MUC + Max( RMSe,RCSe ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.24570778192650453}, {"determining": "( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 0.6414342629482072, "obj2": 0.3582787873196631}, {"determining": "( ( ( Max( Const,PN ) - ( DDR / FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) + ( BR + ACS ) ) ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( MUC - Max( CS,RRSe ) ),MUC ) + ( Max( ( ( MLU + CS ) - Max( CS,CS ) ),( ( RRSe + MUM ) - ( RRSe * RRSe ) ) ) * ( ( ( MUC / MUC ) + ( MLU * MUC ) ) / ( ( RRSe / RCSe ) / ( CS / RCSe ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.12467634570096606}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.366758397331547}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "Min( Min( ( PN * Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) ) ) ,FirstVNF_CPU_Server ) ,( BR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * MLU ) * ( Min( ( Max( MUR,MUC ) - ( MUM - MUC ) ) ,( MLU / CS ) ) / RMSe ) )", "obj1": 0.547808764940239, "obj2": 0.39194247768102475}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7868525896414342, "obj2": 0.19361723956499208}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Max( ( ACS - ( ( ACS * DDR ) / ( ( PN / MRS ) * AMS ) ) ),( PN * ACS ) )", "choosing": "( ( ( RCSe / RMSe ) + ( RMSe + MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.4103585657370518, "obj2": 0.5022064684957243}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) / ( ( FirstVNF_CPU / DDR ) + ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MUR ) / ( ( Max( ( RRSe * MUM ),( RRSe + DS ) ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) ) / MLU ) ) * Max( ( MUC + CS ),( RMSe + MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6922677786696344}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( MUM,RRSe ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.3629523576345351}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7650872448599392}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / ( Min( MLU ,RRSe ) + Max( DS,RCSe ) ) ) + MUM ) ) * DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4907206100223028}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5840431416623691}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( AMS - MDR ) / Max( FirstVNF_RAM_Server,( Const + AMS ) ) )", "choosing": "Min( ( DS * MUC ) ,Max( DS,MUM ) )", "obj1": 0.48804780876494025, "obj2": 0.44142447990348355}, {"determining": "( ( CRS + PN ) / RRS )", "choosing": "( Max( DS,RMSe ) / ( MUM * ( Min( RRSe ,MUM ) / Min( MUC ,DS ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5501751255950854}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Max( DS,MUR ) )", "obj1": 0.24302788844621515, "obj2": 0.7029301583000468}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,MUM ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.03630572920585383}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + ( DDR - FirstVNF_RAM ) ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( Max( ( MUC + RRSe ),MLU ) + Min( ( CS - ( CS / DS ) ) ,RRSe ) )", "obj1": 0.4900398406374502, "obj2": 0.4390437949126553}, {"determining": "Max( ( RRS + FirstVNF_Mem_Server ),( RRS + Const ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * ( Min( RRSe ,MUM ) / Min( MUC ,MUC ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2868525896414343, "obj2": 0.5997658131985071}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,RRS )", "choosing": "( ( DS / MUM ) + Min( RMSe ,( MUM * RRSe ) ) )", "obj1": 0.9302788844621513, "obj2": 0.05167130887586279}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.05087300360934599}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( Max( ( Const * RRS ),( Min( ARS ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( RMSe + RRSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5910478377099361}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) )", "obj1": 0.3745019920318725, "obj2": 0.5367015398206517}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) )", "choosing": "Min( ( CS / MUM ) ,Min( MLU ,CS ) )", "obj1": 0.9960159362549801, "obj2": 0.002046815432264794}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) )", "obj1": 0.3745019920318725, "obj2": 0.5367015398206517}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( MDR - ACS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) + Min( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) ,Max( ( RMSe + CS ),( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( RRS * ( ( DDR - ( ( MRS + DDR ) / Max( FirstVNF_Mem,BR ) ) ) * ( Const / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( Const / BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( ( ( RMSe * DS ) * Min( ( ( MUC * RRSe ) - MUC ) ,RRSe ) ) - CS ) ) * ( ( Min( RRSe ,( MUR * RRSe ) ) - ( ( CS + MLU ) / Max( MUC,DS ) ) ) + ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + ( ACS / ( FirstVNF_CPU * DDR ) ) ),( ( Max( DDR,Min( MDR ,ARS ) ) + Min( Min( RRS ,BR ) ,ARS ) ) * MRS ) ) + Min( MDR ,CRS ) )", "choosing": "( ( Max( ( ( ( RMSe + RCSe ) * Max( RCSe,MUC ) ) / Max( ( Max( DS,RCSe ) - ( DS * RCSe ) ),MUR ) ),RRSe ) + MLU ) * ( Max( RCSe,( RMSe + CS ) ) - ( ( ( ( CS - RRSe ) * ( DS * MUM ) ) + MLU ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server / MRS ) ,Min( BR ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( Max( MUM,RMSe ) - Max( MUM,RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) - ( MDR + ARS ) ) - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( CS / MUM ) ,Min( MLU ,RCSe ) ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) ) - ( MDR + ARS ) )", "choosing": "Min( ( CS / ( RRSe - CS ) ) ,Min( MLU ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,AMS )", "choosing": "( ( ( RRSe - CS ) / RRSe ) + ( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "( ( RRSe - CS ) + ( MUM * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( CS - MUM ) + ( ( MLU * DS ) + ( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( CS - MUM ) + ( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * DDR ) / ( Const + ACS ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( CS - MUM ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - MDR ) / Max( FirstVNF_RAM_Server,BR ) ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * ( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( MRS - MRS ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) / ( RCSe * ( ( RMSe / RCSe ) * Max( MUC,MUR ) ) ) ) - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( Max( RMSe,RRSe ) ,Max( MUC,CS ) ) ,( ( RMSe + MUM ) / Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - DDR )", "choosing": "Max( ( ( MUM * ( Min( MUC ,MUR ) / ( CS / MLU ) ) ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + ( Min( ( ( Const - DDR ) / FirstVNF_CPU ) ,PN ) / ( ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) - ACS ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( CS + MUM ) ) ,( ( RRSe / MUR ) / ( ( MUC + ( Min( Min( RMSe ,MUM ) ,DS ) - MUC ) ) + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( FirstVNF_CPU - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( MLU + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( CRS - BR ) + RRS )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MUC + Max( RMSe,RCSe ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.24570778192650453}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.6952191235059761, "obj2": 0.3029018805318375}, {"determining": "( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 0.6414342629482072, "obj2": 0.3582787873196631}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.366758397331547}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( Max( Const,PN ) - ( DDR / FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) + ( BR + ACS ) ) ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( MUC - Max( CS,RRSe ) ),MUC ) + ( Max( ( ( MLU + CS ) - Max( CS,CS ) ),( ( RRSe + MUM ) - ( RRSe * RRSe ) ) ) * ( ( ( MUC / MUC ) + ( MLU * MUC ) ) / ( ( RRSe / RCSe ) / ( CS / RCSe ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.12467634570096606}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Max( DS,MUR ) )", "obj1": 0.24302788844621515, "obj2": 0.7029301583000468}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "Min( Min( ( PN * Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) ) ) ,FirstVNF_CPU_Server ) ,( BR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * MLU ) * ( Min( ( Max( MUR,MUC ) - ( MUM - MUC ) ) ,( MLU / CS ) ) / RMSe ) )", "obj1": 0.547808764940239, "obj2": 0.39194247768102475}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7868525896414342, "obj2": 0.19361723956499208}, {"determining": "Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * CRS ) ),( RRS + Const ) )", "choosing": "( ( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) ) / Min( MUC ,MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6506488960653574}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( MUM,RRSe ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.3629523576345351}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7650872448599392}, {"determining": "Max( ( ACS - ( ( ACS * DDR ) / ( ( PN / MRS ) * AMS ) ) ),( PN * ACS ) )", "choosing": "( ( ( RCSe / RMSe ) + ( RMSe + MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.4103585657370518, "obj2": 0.5022064684957243}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.28742724504333866}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.28742724504333866}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / ( Min( MLU ,RRSe ) + Max( DS,RCSe ) ) ) + MUM ) ) * DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4907206100223028}, {"determining": "( ( CRS + PN ) / RRS )", "choosing": "( Max( DS,RMSe ) / ( MUM * ( Min( RRSe ,MUM ) / Min( MUC ,DS ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5501751255950854}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,MUM ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.03630572920585383}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.15796203522349597}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) / FirstVNF_CPU ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( CS / MUM ),( MLU / DS ) ) * DS ) * RRSe ) + DS ) * ( Min( ( MLU / Min( Max( MLU,RRSe ) ,Max( CS,MUC ) ) ) ,Min( ( Min( RRSe ,RRSe ) * DS ) ,MUM ) ) * MUR ) ) + ( ( Min( ( DS / Min( CS ,MUC ) ) ,MLU ) + ( ( ( ( MLU - RRSe ) - RCSe ) - MUC ) - RRSe ) ) * RRSe ) ) + ( MUR * Max( ( MUR - MUC ),( Max( MUR,DS ) + Max( MUC,RCSe ) ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5753513094180017}, {"determining": "Min( Min( Const ,RRS ) ,Max( CRS,Const ) )", "choosing": "( RRSe - Max( MUM,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5948512275115988}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Max( ( FirstVNF_CPU * FirstVNF_Mem ),AMS ) + FirstVNF_RAM ) )", "choosing": "( ( MUR / MUR ) * Min( Max( CS,Max( MUM,( MUM + RCSe ) ) ) ,RRSe ) )", "obj1": 0.43227091633466136, "obj2": 0.49309926760215456}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,RRS )", "choosing": "( ( DS / MUM ) + Min( RMSe ,( MUM * RRSe ) ) )", "obj1": 0.9302788844621513, "obj2": 0.05167130887586279}, {"determining": "( ( FirstVNF_Mem * Const ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - CS ) - Min( MUR ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5893089499733323}, {"determining": "( Max( Min( CRS ,( CRS / RRS ) ),Const ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS + FirstVNF_RAM ) - ( DDR + MRS ) ) ) ,( BR + BR ) ),DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) * ( ( ( ( Min( Max( CS,( RCSe * MUC ) ) ,MUR ) / RRSe ) - RCSe ) * ( Max( ( ( Max( MUR,MUC ) / MLU ) * DS ),( ( Min( MUC ,MUM ) * Max( MLU,RCSe ) ) + MUM ) ) - MUR ) ) - RCSe ) )", "obj1": 0.796812749003984, "obj2": 0.15796203522349597}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5840431416623691}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.05087300360934599}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( Max( ( Const * RRS ),( Min( ARS ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( RMSe + RRSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5910478377099361}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) )", "choosing": "Min( ( CS / MUM ) ,Min( MLU ,CS ) )", "obj1": 0.9960159362549801, "obj2": 0.002046815432264794}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( MDR - ACS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) + Min( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) ,Max( ( RMSe + CS ),( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( RRS * ( ( DDR - ( ( MRS + DDR ) / Max( FirstVNF_Mem,BR ) ) ) * ( Const / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( Const / BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( ( ( RMSe * DS ) * Min( ( ( MUC * RRSe ) - MUC ) ,RRSe ) ) - CS ) ) * ( ( Min( RRSe ,( MUR * RRSe ) ) - ( ( CS + MLU ) / Max( MUC,DS ) ) ) + ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + ( ACS / ( FirstVNF_CPU * DDR ) ) ),( ( Max( DDR,Min( MDR ,ARS ) ) + Min( Min( RRS ,BR ) ,ARS ) ) * MRS ) ) + Min( MDR ,CRS ) )", "choosing": "( ( Max( ( ( ( RMSe + RCSe ) * Max( RCSe,MUC ) ) / Max( ( Max( DS,RCSe ) - ( DS * RCSe ) ),MUR ) ),RRSe ) + MLU ) * ( Max( RCSe,( RMSe + CS ) ) - ( ( ( ( CS - RRSe ) * ( DS * MUM ) ) + MLU ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server / MRS ) ,Min( BR ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( Max( MUM,RMSe ) - Max( MUM,RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) - ( MDR + ARS ) ) - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( CS / MUM ) ,Min( MLU ,RCSe ) ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) ) - ( MDR + ARS ) )", "choosing": "Min( ( CS / ( RRSe - CS ) ) ,Min( MLU ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,AMS )", "choosing": "( ( ( RRSe - CS ) / RRSe ) + ( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "( ( RRSe - CS ) + ( MUM * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( CS - MUM ) + ( ( MLU * DS ) + ( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( CS - MUM ) + ( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * DDR ) / ( Const + ACS ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( CS - MUM ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - MDR ) / Max( FirstVNF_RAM_Server,BR ) ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + ( Min( ( ( Const - DDR ) / FirstVNF_CPU ) ,PN ) / ( ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) - ACS ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( CS + MUM ) ) ,( ( RRSe / MUR ) / ( ( MUC + ( Min( Min( RMSe ,MUM ) ,DS ) - MUC ) ) + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( ACS - ( Max( ( ( FirstVNF_Mem / MRS ) - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( ( RCSe / MLU ) / ( MUC + MUR ) ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( MLU + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( CRS - BR ) + RRS )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MUC + Max( RMSe,RCSe ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.24570778192650453}, {"determining": "( Min( FirstVNF_CPU ,MDR ) * ( Max( AMS,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / MLU ) * ( MLU / Max( Min( RMSe ,( ( RRSe / MUR ) * ( RCSe + ( MUC / ( CS + MUC ) ) ) ) ),( ( Max( ( ( MUR / RMSe ) - MUC ),Min( MUM ,RCSe ) ) + Min( MLU ,MLU ) ) * RCSe ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.3505969930663156}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) )", "obj1": 0.6752988047808764, "obj2": 0.31854075026014844}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.366758397331547}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( Max( Const,PN ) - ( DDR / FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) + ( BR + ACS ) ) ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( MUC - Max( CS,RRSe ) ),MUC ) + ( Max( ( ( MLU + CS ) - Max( CS,CS ) ),( ( RRSe + MUM ) - ( RRSe * RRSe ) ) ) * ( ( ( MUC / MUC ) + ( MLU * MUC ) ) / ( ( RRSe / RCSe ) / ( CS / RCSe ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.12467634570096606}, {"determining": "Min( Min( ( PN * Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) ) ) ,FirstVNF_CPU_Server ) ,( BR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * MLU ) * ( Min( ( Max( MUR,MUC ) - ( MUM - MUC ) ) ,( MLU / CS ) ) / RMSe ) )", "obj1": 0.547808764940239, "obj2": 0.39194247768102475}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7868525896414342, "obj2": 0.19361723956499208}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RRSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7131474103585658, "obj2": 0.2757261961584374}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * CRS ) ),( RRS + Const ) )", "choosing": "( ( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) ) / Min( MUC ,MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6506488960653574}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "Max( ( ACS - ( ( ACS * DDR ) / ( ( PN / MRS ) * AMS ) ) ),( PN * ACS ) )", "choosing": "( ( ( RCSe / RMSe ) + ( RMSe + MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.4103585657370518, "obj2": 0.5022064684957243}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Max( DS,MUR ) )", "obj1": 0.24302788844621515, "obj2": 0.7029301583000468}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / ( Min( MLU ,RRSe ) + Max( DS,RCSe ) ) ) + MUM ) ) * DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4907206100223028}, {"determining": "Max( ( BR * CRS ),( ( ( ACS + BR ) / ( AMS / FirstVNF_Mem ) ) + Const ) )", "choosing": "( Min( RRSe ,Min( Max( DS,RMSe ) ,( RRSe * MUM ) ) ) / Min( MUC ,( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,DS ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) ) )", "obj1": 0.35856573705179284, "obj2": 0.5479503961603119}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,MUM ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.03630572920585383}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.15796203522349597}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7650872448599392}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.6952191235059761, "obj2": 0.3029018805318375}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),AMS ) ) )", "choosing": "Min( ( ( MLU - RRSe ) - RCSe ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) )", "obj1": 0.23904382470119523, "obj2": 0.7094483783900514}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - Max( RRS,ACS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / ( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) ) ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.6932270916334662, "obj2": 0.30877336600690053}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) / FirstVNF_CPU ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( CS / MUM ),( MLU / DS ) ) * DS ) * RRSe ) + DS ) * ( Min( ( MLU / Min( Max( MLU,RRSe ) ,Max( CS,MUC ) ) ) ,Min( ( Min( RRSe ,RRSe ) * DS ) ,MUM ) ) * MUR ) ) + ( ( Min( ( DS / Min( CS ,MUC ) ) ,MLU ) + ( ( ( ( MLU - RRSe ) - RCSe ) - MUC ) - RRSe ) ) * RRSe ) ) + ( MUR * Max( ( MUR - MUC ),( Max( MUR,DS ) + Max( MUC,RCSe ) ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5753513094180017}, {"determining": "Min( Min( Const ,RRS ) ,Max( CRS,Const ) )", "choosing": "( RRSe - Max( MUM,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5948512275115988}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Max( ( FirstVNF_CPU * FirstVNF_Mem ),AMS ) + FirstVNF_RAM ) )", "choosing": "( ( MUR / MUR ) * Min( Max( CS,Max( MUM,( MUM + RCSe ) ) ) ,RRSe ) )", "obj1": 0.43227091633466136, "obj2": 0.49309926760215456}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,RRS )", "choosing": "( ( DS / MUM ) + Min( RMSe ,( MUM * RRSe ) ) )", "obj1": 0.9302788844621513, "obj2": 0.05167130887586279}, {"determining": "( ( FirstVNF_Mem * Const ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - CS ) - Min( MUR ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5893089499733323}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.28742724504333866}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.15796203522349597}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5840431416623691}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.05087300360934599}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.28742724504333866}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( Max( ( Const * RRS ),( Min( ARS ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( RMSe + RRSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5910478377099361}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) )", "choosing": "Min( ( CS / MUM ) ,Min( MLU ,CS ) )", "obj1": 0.9960159362549801, "obj2": 0.002046815432264794}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( MDR - ACS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) + Min( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) ,Max( ( RMSe + CS ),( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( RRS * ( ( DDR - ( ( MRS + DDR ) / Max( FirstVNF_Mem,BR ) ) ) * ( Const / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( Const / BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( ( ( RMSe * DS ) * Min( ( ( MUC * RRSe ) - MUC ) ,RRSe ) ) - CS ) ) * ( ( Min( RRSe ,( MUR * RRSe ) ) - ( ( CS + MLU ) / Max( MUC,DS ) ) ) + ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + ( ACS / ( FirstVNF_CPU * DDR ) ) ),( ( Max( DDR,Min( MDR ,ARS ) ) + Min( Min( RRS ,BR ) ,ARS ) ) * MRS ) ) + Min( MDR ,CRS ) )", "choosing": "( ( Max( ( ( ( RMSe + RCSe ) * Max( RCSe,MUC ) ) / Max( ( Max( DS,RCSe ) - ( DS * RCSe ) ),MUR ) ),RRSe ) + MLU ) * ( Max( RCSe,( RMSe + CS ) ) - ( ( ( ( CS - RRSe ) * ( DS * MUM ) ) + MLU ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server / MRS ) ,Min( BR ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( Max( MUM,RMSe ) - Max( MUM,RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server + AMS ) - ( MDR + ARS ) ) - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( CS / MUM ) ,Min( MLU ,RCSe ) ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) ) - ( MDR + ARS ) )", "choosing": "Min( ( CS / ( RRSe - CS ) ) ,Min( MLU ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,AMS )", "choosing": "( ( ( RRSe - CS ) / RRSe ) + ( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + ( Min( ( ( Const - DDR ) / FirstVNF_CPU ) ,PN ) / ( ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) - ACS ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( CS + MUM ) ) ,( ( RRSe / MUR ) / ( ( MUC + ( Min( Min( RMSe ,MUM ) ,DS ) - MUC ) ) + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - ( Max( ACS,ARS ) + ( BR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( RCSe,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( ACS - ( Max( ( ( FirstVNF_Mem / MRS ) - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( ( RCSe / MLU ) / ( MUC + MUR ) ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( CRS - BR ) + RRS )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MUC + Max( RMSe,RCSe ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.24570778192650453}, {"determining": "( Min( FirstVNF_CPU ,MDR ) * ( Max( AMS,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / MLU ) * ( MLU / Max( Min( RMSe ,( ( RRSe / MUR ) * ( RCSe + ( MUC / ( CS + MUC ) ) ) ) ),( ( Max( ( ( MUR / RMSe ) - MUC ),Min( MUM ,RCSe ) ) + Min( MLU ,MLU ) ) * RCSe ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.3505969930663156}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) )", "obj1": 0.6752988047808764, "obj2": 0.31854075026014844}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.366758397331547}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( Max( Const,PN ) - ( DDR / FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) + ( BR + ACS ) ) ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( MUC - Max( CS,RRSe ) ),MUC ) + ( Max( ( ( MLU + CS ) - Max( CS,CS ) ),( ( RRSe + MUM ) - ( RRSe * RRSe ) ) ) * ( ( ( MUC / MUC ) + ( MLU * MUC ) ) / ( ( RRSe / RCSe ) / ( CS / RCSe ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.12467634570096606}, {"determining": "Min( Min( ( PN * Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) ) ) ,FirstVNF_CPU_Server ) ,( BR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * MLU ) * ( Min( ( Max( MUR,MUC ) - ( MUM - MUC ) ) ,( MLU / CS ) ) / RMSe ) )", "obj1": 0.547808764940239, "obj2": 0.39194247768102475}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7868525896414342, "obj2": 0.19361723956499208}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RRSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7131474103585658, "obj2": 0.2757261961584374}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "Max( ( ACS - ( ( ACS * DDR ) / ( ( PN / MRS ) * AMS ) ) ),( PN * ACS ) )", "choosing": "( ( ( RCSe / RMSe ) + ( RMSe + MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.4103585657370518, "obj2": 0.5022064684957243}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),AMS ) ) )", "choosing": "Min( ( ( MLU - RRSe ) - RCSe ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) )", "obj1": 0.23904382470119523, "obj2": 0.7094483783900514}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - Max( CRS,Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6661059200888358}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / ( Min( MLU ,RRSe ) + Max( DS,RCSe ) ) ) + MUM ) ) * DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4907206100223028}, {"determining": "Max( ( BR * CRS ),( ( ( ACS + BR ) / ( AMS / FirstVNF_Mem ) ) + Const ) )", "choosing": "( Min( RRSe ,Min( Max( DS,RMSe ) ,( RRSe * MUM ) ) ) / Min( MUC ,( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,DS ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) ) )", "obj1": 0.35856573705179284, "obj2": 0.5479503961603119}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * CRS ) ),( RRS + Const ) )", "choosing": "( ( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) ) / Min( MUC ,MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6506488960653574}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7650872448599392}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - Max( RRS,ACS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / ( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) ) ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.6932270916334662, "obj2": 0.30877336600690053}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) / FirstVNF_CPU ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( CS / MUM ),( MLU / DS ) ) * DS ) * RRSe ) + DS ) * ( Min( ( MLU / Min( Max( MLU,RRSe ) ,Max( CS,MUC ) ) ) ,Min( ( Min( RRSe ,RRSe ) * DS ) ,MUM ) ) * MUR ) ) + ( ( Min( ( DS / Min( CS ,MUC ) ) ,MLU ) + ( ( ( ( MLU - RRSe ) - RCSe ) - MUC ) - RRSe ) ) * RRSe ) ) + ( MUR * Max( ( MUR - MUC ),( Max( MUR,DS ) + Max( MUC,RCSe ) ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5753513094180017}, {"determining": "Min( Min( Const ,RRS ) ,Max( CRS,Const ) )", "choosing": "( RRSe - Max( MUM,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5948512275115988}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "( ( FirstVNF_CPU_Server * ( ARS * ( BR + ( Max( CRS,Max( Const,RRS ) ) / RRS ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),MUM ) ) * ( MLU / RCSe ) )", "obj1": 0.7051792828685259, "obj2": 0.2946197471981181}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Max( ( FirstVNF_CPU * FirstVNF_Mem ),AMS ) + FirstVNF_RAM ) )", "choosing": "( ( MUR / MUR ) * Min( Max( CS,Max( MUM,( MUM + RCSe ) ) ) ,RRSe ) )", "obj1": 0.43227091633466136, "obj2": 0.49309926760215456}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,RRS )", "choosing": "( ( DS / MUM ) + Min( RMSe ,( MUM * RRSe ) ) )", "obj1": 0.9302788844621513, "obj2": 0.05167130887586279}, {"determining": "( ( FirstVNF_Mem * Const ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - CS ) - Min( MUR ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5893089499733323}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,MUM ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.03630572920585383}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.6952191235059761, "obj2": 0.3029018805318375}, {"determining": "( Max( MDR,MRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( ( RCSe * RRSe ),Min( MUR ,MLU ) ),( RCSe * RRSe ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.035174422300174944}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5840431416623691}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.28742724504333866}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( Max( ( Const * RRS ),( Min( ARS ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( RMSe + RRSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5910478377099361}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "Min( ( FirstVNF_RAM_Server / MRS ) ,Min( Min( AMS ,PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) ),RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.16334661354581673, "obj2": 0.7989035312554326}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( ( PN * AMS ) ,Min( MDR ,( ( PN + CRS ) + ( Min( ARS ,MRS ) - ( Min( DDR ,PN ) - ACS ) ) ) ) )", "choosing": "( ( CS * Max( ( Max( RCSe,( ( MUM / MUM ) / MUR ) ) / RRSe ),RMSe ) ) - Min( RCSe ,( RCSe - MLU ) ) )", "obj1": 0.9402390438247012, "obj2": 0.045489145319235105}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.28742724504333866}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) )", "choosing": "Min( ( CS / MUM ) ,Min( MLU ,CS ) )", "obj1": 0.9960159362549801, "obj2": 0.002046815432264794}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.05087300360934599}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / CS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.045489145319235105}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.05087300360934599}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( FirstVNF_CPU - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( MLU + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( MDR - ACS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) + Min( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) ,Max( ( RMSe + CS ),( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( RRS * ( ( DDR - ( ( MRS + DDR ) / Max( FirstVNF_Mem,BR ) ) ) * ( Const / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( Const / BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( ( ( RMSe * DS ) * Min( ( ( MUC * RRSe ) - MUC ) ,RRSe ) ) - CS ) ) * ( ( Min( RRSe ,( MUR * RRSe ) ) - ( ( CS + MLU ) / Max( MUC,DS ) ) ) + ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + ( Min( ( ( Const - DDR ) / FirstVNF_CPU ) ,PN ) / ( ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) - ACS ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( CS + MUM ) ) ,( ( RRSe / MUR ) / ( ( MUC + ( Min( Min( RMSe ,MUM ) ,DS ) - MUC ) ) + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( ( MDR * RRS ) + ( ( ARS * ( MDR * RRS ) ) - PN ) )", "choosing": "( ( ( MUM * MUR ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( Max( RCSe,( RMSe / RRSe ) ),( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - ( Max( ACS,ARS ) + ( BR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( RCSe,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( Min( FirstVNF_CPU ,MDR ) * ( Max( AMS,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / MLU ) * ( MLU / Max( Min( RMSe ,( ( RRSe / MUR ) * ( RCSe + ( MUC / ( CS + MUC ) ) ) ) ),( ( Max( ( ( MUR / RMSe ) - MUC ),Min( MUM ,RCSe ) ) + Min( MLU ,MLU ) ) * RCSe ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.3505969930663156}, {"determining": "( ( CRS - BR ) + RRS )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MUC + Max( RMSe,RCSe ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.24570778192650453}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.366758397331547}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( Min( RRS ,MDR ) + ( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * FirstVNF_CPU_Server ),PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUR ) * ( Max( Min( RMSe ,Max( Min( RRSe ,CS ),MUR ) ),( RRSe * RCSe ) ) / MLU ) )", "obj1": 0.6613545816733067, "obj2": 0.3317659290240294}, {"determining": "( ( ( Max( Const,PN ) - ( DDR / FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) + ( BR + ACS ) ) ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( MUC - Max( CS,RRSe ) ),MUC ) + ( Max( ( ( MLU + CS ) - Max( CS,CS ) ),( ( RRSe + MUM ) - ( RRSe * RRSe ) ) ) * ( ( ( MUC / MUC ) + ( MLU * MUC ) ) / ( ( RRSe / RCSe ) / ( CS / RCSe ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.12467634570096606}, {"determining": "Min( Min( ( PN * Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) ) ) ,FirstVNF_CPU_Server ) ,( BR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * MLU ) * ( Min( ( Max( MUR,MUC ) - ( MUM - MUC ) ) ,( MLU / CS ) ) / RMSe ) )", "obj1": 0.547808764940239, "obj2": 0.39194247768102475}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RRSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7131474103585658, "obj2": 0.2757261961584374}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( MDR * FirstVNF_CPU ) + ( ( ( ( ( DDR - PN ) * FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( ( MLU * ( MUR - RCSe ) ) - MUM ) ) ) * Max( CS,( MUR + MUR ) ) )", "obj1": 0.7729083665338645, "obj2": 0.2192382655566432}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( Max( Max( Max( RCSe,Max( Max( RCSe,MUM ),( DS + MUC ) ) ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) ) ) * ( MLU / RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6648949238582846}, {"determining": "Max( ( ACS - ( ( ACS * DDR ) / ( ( PN / MRS ) * AMS ) ) ),( PN * ACS ) )", "choosing": "( ( ( RCSe / RMSe ) + ( RMSe + MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.4103585657370518, "obj2": 0.5022064684957243}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),AMS ) ) )", "choosing": "Min( ( ( MLU - RRSe ) - RCSe ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) )", "obj1": 0.23904382470119523, "obj2": 0.7094483783900514}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / ( Min( MLU ,RRSe ) + Max( DS,RCSe ) ) ) + MUM ) ) * DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4907206100223028}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) )", "obj1": 0.6752988047808764, "obj2": 0.31854075026014844}, {"determining": "Max( ( BR * CRS ),( ( ( ACS + BR ) / ( AMS / FirstVNF_Mem ) ) + Const ) )", "choosing": "( Min( RRSe ,Min( Max( DS,RMSe ) ,( RRSe * MUM ) ) ) / Min( MUC ,( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,DS ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) ) )", "obj1": 0.35856573705179284, "obj2": 0.5479503961603119}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7868525896414342, "obj2": 0.19361723956499208}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07230162114792815}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7650872448599392}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - Max( RRS,ACS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / ( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) ) ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.6932270916334662, "obj2": 0.30877336600690053}, {"determining": "Min( Min( Const ,RRS ) ,Max( CRS,Const ) )", "choosing": "( RRSe - Max( MUM,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5948512275115988}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "( ( FirstVNF_CPU_Server * ( ARS * ( BR + ( Max( CRS,Max( Const,RRS ) ) / RRS ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),MUM ) ) * ( MLU / RCSe ) )", "obj1": 0.7051792828685259, "obj2": 0.2946197471981181}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Max( ( FirstVNF_CPU * FirstVNF_Mem ),AMS ) + FirstVNF_RAM ) )", "choosing": "( ( MUR / MUR ) * Min( Max( CS,Max( MUM,( MUM + RCSe ) ) ) ,RRSe ) )", "obj1": 0.43227091633466136, "obj2": 0.49309926760215456}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / ( CS * ( RRSe * ( MUR / CS ) ) ) ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "( ( FirstVNF_Mem * Const ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - CS ) - Min( MUR ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5893089499733323}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,MUM ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.03630572920585383}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.6952191235059761, "obj2": 0.3029018805318375}, {"determining": "( Max( MDR,MRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( ( RCSe * RRSe ),Min( MUR ,MLU ) ),( RCSe * RRSe ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.035174422300174944}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) / FirstVNF_CPU ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( CS / MUM ),( MLU / DS ) ) * DS ) * RRSe ) + DS ) * ( Min( ( MLU / Min( Max( MLU,RRSe ) ,Max( CS,MUC ) ) ) ,Min( ( Min( RRSe ,RRSe ) * DS ) ,MUM ) ) * MUR ) ) + ( ( Min( ( DS / Min( CS ,MUC ) ) ,MLU ) + ( ( ( ( MLU - RRSe ) - RCSe ) - MUC ) - RRSe ) ) * RRSe ) ) + ( MUR * Max( ( MUR - MUC ),( Max( MUR,DS ) + Max( MUC,RCSe ) ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5753513094180017}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "Min( Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / CS ) ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.057933030620898}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5840431416623691}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( ( PN * AMS ) ,Min( MDR ,( ( PN + CRS ) + ( Min( ARS ,MRS ) - ( Min( DDR ,PN ) - ACS ) ) ) ) )", "choosing": "( ( CS * Max( ( Max( RCSe,( ( MUM / MUM ) / MUR ) ) / RRSe ),RMSe ) ) - Min( RCSe ,( RCSe - MLU ) ) )", "obj1": 0.9402390438247012, "obj2": 0.045489145319235105}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.28742724504333866}, {"determining": "( ( FirstVNF_RAM + ( ( DDR / Max( FirstVNF_RAM,Max( CRS,Max( Max( AMS,CRS ),FirstVNF_RAM ) ) ) ) / Const ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( ACS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( Min( RRSe ,Max( MUM,CS ) ) / Min( ( MUM - MLU ) ,( MUM / RRSe ) ) ) ) ) / MLU ) ) / ( RMSe + ( CS / MUM ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07230162114792815}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( Max( ( Const * RRS ),( Min( ARS ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( RMSe + RRSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5910478377099361}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "Max( ( BR * CRS ),( ( ( Max( ( Min( Max( ACS,CRS ) ,RRS ) + ACS ),Max( FirstVNF_Mem_Server,AMS ) ) + BR ) / Min( ( ( ACS * FirstVNF_CPU_Server ) / ( RRS + FirstVNF_Mem_Server ) ) ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( Min( RRSe ,( ( ( RCSe + MUR ) + ( Max( MUR,MLU ) - ( MUC - RMSe ) ) ) + MLU ) ) / Min( ( CS + ( DS / RRSe ) ) ,( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5757950075041501}, {"determining": "Min( ( FirstVNF_RAM_Server / MRS ) ,Min( Min( AMS ,PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) ),RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.16334661354581673, "obj2": 0.7989035312554326}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.28742724504333866}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) )", "choosing": "Min( ( CS / MUM ) ,Min( MLU ,CS ) )", "obj1": 0.9960159362549801, "obj2": 0.002046815432264794}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / CS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.045489145319235105}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( ACS - ( Max( ( ( FirstVNF_Mem / MRS ) - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( ( RCSe / MLU ) / ( MUC + MUR ) ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( MLU + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( MDR * RRS ) + ( ( ARS * ( MDR * RRS ) ) - PN ) )", "choosing": "( ( ( MUM * MUR ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( Max( RCSe,( RMSe / RRSe ) ),( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.1971989439426186}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RRSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7131474103585658, "obj2": 0.2757261961584374}, {"determining": "( Min( RRS ,MDR ) + ( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * FirstVNF_CPU_Server ),PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUR ) * ( Max( Min( RMSe ,Max( Min( RRSe ,CS ),MUR ) ),( RRSe * RCSe ) ) / MLU ) )", "obj1": 0.6613545816733067, "obj2": 0.3317659290240294}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( Max( Max( MDR,Const ),( ARS * ( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,( MUR / CS ) ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6653386454183267, "obj2": 0.28468352198593994}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( Max( Const,PN ) - ( DDR / FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) + ( BR + ACS ) ) ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( MUC - Max( CS,RRSe ) ),MUC ) + ( Max( ( ( MLU + CS ) - Max( CS,CS ) ),( ( RRSe + MUM ) - ( RRSe * RRSe ) ) ) * ( ( ( MUC / MUC ) + ( MLU * MUC ) ) / ( ( RRSe / RCSe ) / ( CS / RCSe ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.12467634570096606}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.366758397331547}, {"determining": "Min( Min( ( PN * Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) ) ) ,FirstVNF_CPU_Server ) ,( BR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * MLU ) * ( Min( ( Max( MUR,MUC ) - ( MUM - MUC ) ) ,( MLU / CS ) ) / RMSe ) )", "obj1": 0.547808764940239, "obj2": 0.39194247768102475}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_CPU ,MDR ) * ( Max( AMS,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUR ) / MLU ) * ( MLU / Max( Min( RMSe ,( ( RRSe / MUR ) * ( RCSe + ( MUC / ( CS + MUC ) ) ) ) ),( ( Max( ( ( MUR / RMSe ) - MUC ),Min( MUM ,RCSe ) ) + Min( MLU ,MLU ) ) * RCSe ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.3505969930663156}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( Max( Max( Max( RCSe,Max( Max( RCSe,MUM ),( DS + MUC ) ) ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) ) ) * ( MLU / RCSe ) )", "obj1": 0.2410358565737052, "obj2": 0.6648949238582846}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "Max( ( ACS - ( ( ACS * DDR ) / ( ( PN / MRS ) * AMS ) ) ),( PN * ACS ) )", "choosing": "( ( ( RCSe / RMSe ) + ( RMSe + MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.4103585657370518, "obj2": 0.5022064684957243}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),AMS ) ) )", "choosing": "Min( ( ( MLU - RRSe ) - RCSe ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) )", "obj1": 0.23904382470119523, "obj2": 0.7094483783900514}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7868525896414342, "obj2": 0.19361723956499208}, {"determining": "Min( Min( ( CRS - ( ( BR - CRS ) * ARS ) ) ,RRS ) ,( MDR / PN ) )", "choosing": "( Min( MUM ,DS ) - ( CS - MLU ) )", "obj1": 0.603585657370518, "obj2": 0.3560012319513007}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / ( Min( MLU ,RRSe ) + Max( DS,RCSe ) ) ) + MUM ) ) * DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4907206100223028}, {"determining": "( ( CRS + PN ) / ( ( ( ( CRS / ( RRS / AMS ) ) + BR ) / Min( AMS ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( ( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) / ( MUM * RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5407912488737797}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7650872448599392}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07230162114792815}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "Min( Min( Const ,RRS ) ,Max( CRS,Const ) )", "choosing": "( RRSe - Max( MUM,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5948512275115988}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Max( ( FirstVNF_CPU * FirstVNF_Mem ),AMS ) + FirstVNF_RAM ) )", "choosing": "( ( MUR / MUR ) * Min( Max( CS,Max( MUM,( MUM + RCSe ) ) ) ,RRSe ) )", "obj1": 0.43227091633466136, "obj2": 0.49309926760215456}, {"determining": "( ( FirstVNF_Mem * Const ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - CS ) - Min( MUR ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5893089499733323}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,MUM ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.03630572920585383}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( Max( MDR,MRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( ( RCSe * RRSe ),Min( MUR ,MLU ) ),( RCSe * RRSe ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.035174422300174944}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) / FirstVNF_CPU ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( CS / MUM ),( MLU / DS ) ) * DS ) * RRSe ) + DS ) * ( Min( ( MLU / Min( Max( MLU,RRSe ) ,Max( CS,MUC ) ) ) ,Min( ( Min( RRSe ,RRSe ) * DS ) ,MUM ) ) * MUR ) ) + ( ( Min( ( DS / Min( CS ,MUC ) ) ,MLU ) + ( ( ( ( MLU - RRSe ) - RCSe ) - MUC ) - RRSe ) ) * RRSe ) ) + ( MUR * Max( ( MUR - MUC ),( Max( MUR,DS ) + Max( MUC,RCSe ) ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5753513094180017}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / CS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.0454891453192351}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / ( CS * ( RRSe * ( MUR / CS ) ) ) ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( FirstVNF_RAM_Server / MRS ) ,Min( Min( AMS ,PN ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) ),RMSe ) - Max( MUM,RMSe ) )", "obj1": 0.16334661354581673, "obj2": 0.7989035312554326}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5840431416623691}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( RRS - ( MRS - ( BR + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / Min( MUR ,( MUC - MUC ) ) ) * ( MLU / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9203187250996016, "obj2": 0.061028792935719424}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07230162114792815}, {"determining": "Min( ( ARS * ( Max( ( RRS / PN ),( FirstVNF_Mem + PN ) ) + ( Max( CRS,Max( RRS,Const ) ) / RRS ) ) ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05000199166993491}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( Max( ( Const * RRS ),( Min( ARS ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( RMSe + RRSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5910478377099361}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "Max( ( BR * CRS ),( ( ( Max( ( Min( Max( ACS,CRS ) ,RRS ) + ACS ),Max( FirstVNF_Mem_Server,AMS ) ) + BR ) / Min( ( ( ACS * FirstVNF_CPU_Server ) / ( RRS + FirstVNF_Mem_Server ) ) ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( Min( RRSe ,( ( ( RCSe + MUR ) + ( Max( MUR,MLU ) - ( MUC - RMSe ) ) ) + MLU ) ) / Min( ( CS + ( DS / RRSe ) ) ,( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5757950075041501}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) )", "choosing": "Min( ( CS / MUM ) ,Min( MLU ,CS ) )", "obj1": 0.9960159362549801, "obj2": 0.002046815432264794}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( Const - FirstVNF_CPU_Server ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7969227313802107}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - ( Max( ACS,ARS ) + ( BR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( RCSe,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( ACS - ( Max( ( ( FirstVNF_Mem / MRS ) - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( ( RCSe / MLU ) / ( MUC + MUR ) ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( MLU + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( MUM,MUR ),( Max( DS,( RCSe * RRSe ) ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( MUM,MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( ( RRSe / Max( Max( MUM,MUR ),( Max( DS,DS ) + MUC ) ) ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( MUM,MUR ),( Max( DS,DS ) + MUC ) ) ) * Max( Max( MUM,MUR ),( Max( DS,DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.1971989439426186}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( Min( ACS ,CRS ) + RRS )", "choosing": "( ( RRSe * Max( Max( ( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( RRSe / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) ),MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.2051792828685259, "obj2": 0.706649905611268}, {"determining": "( Min( FirstVNF_CPU ,( Max( Max( ACS,Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),PN ) ),Const ) / ( ( ( ( DDR * DDR ) * ACS ) * RRS ) / ACS ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( RCSe,( Max( MLU,Min( RCSe ,MLU ) ) / CS ) ),( DS + ( ( CS - Max( ( CS / RMSe ),RCSe ) ) + RRSe ) ) ) * ( ( ( DS * MUR ) * Max( MUR,MUC ) ) * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.647410358565737, "obj2": 0.34186636880161947}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( Max( Max( MDR,Const ),( ARS * ( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,( MUR / CS ) ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6653386454183267, "obj2": 0.28468352198593994}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RRSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7131474103585658, "obj2": 0.2757261961584374}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( Max( Const,PN ) - ( DDR / FirstVNF_Mem_Server ) ) / ( Min( MDR ,MDR ) + ( BR + ACS ) ) ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "( Max( ( MUC - Max( CS,RRSe ) ),MUC ) + ( Max( ( ( MLU + CS ) - Max( CS,CS ) ),( ( RRSe + MUM ) - ( RRSe * RRSe ) ) ) * ( ( ( MUC / MUC ) + ( MLU * MUC ) ) / ( ( RRSe / RCSe ) / ( CS / RCSe ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.12467634570096606}, {"determining": "Max( ( ACS - ( ( ACS * DDR ) / ( ( PN / MRS ) * AMS ) ) ),( PN * ACS ) )", "choosing": "( ( ( RCSe / RMSe ) + ( RMSe + MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.4103585657370518, "obj2": 0.5022064684957243}, {"determining": "( Min( RRS ,MDR ) + ( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * FirstVNF_CPU_Server ),PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUR ) * ( Max( Min( RMSe ,Max( Min( RRSe ,CS ),MUR ) ),( RRSe * RCSe ) ) / MLU ) )", "obj1": 0.6613545816733067, "obj2": 0.3317659290240294}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / ( Min( MLU ,RRSe ) + Max( DS,RCSe ) ) ) + MUM ) ) * DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4907206100223028}, {"determining": "( Min( Max( FirstVNF_CPU_Server,( ( Const - ( ( Max( MRS,FirstVNF_RAM ) * MRS ) - FirstVNF_RAM ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ) ) ) ,( MDR - ( FirstVNF_Mem - DDR ) ) ) + Max( FirstVNF_CPU_Server,ACS ) )", "choosing": "( ( MUM * ( Min( Min( DS ,( MUM - DS ) ) ,( RRSe + MUC ) ) - MUR ) ) * ( Min( MUM ,Min( Min( ( MLU / ( MUM / ( CS / CS ) ) ) ,( MUR + MUR ) ) ,RMSe ) ) - DS ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "( ( CRS + PN ) / ( ( ( ( CRS / ( RRS / AMS ) ) + BR ) / Min( AMS ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( ( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) / ( MUM * RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5407912488737797}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7650872448599392}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07230162114792815}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "Min( Min( Const ,RRS ) ,Max( CRS,Const ) )", "choosing": "( RRSe - Max( MUM,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5948512275115988}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Max( ( FirstVNF_CPU * FirstVNF_Mem ),AMS ) + FirstVNF_RAM ) )", "choosing": "( ( MUR / MUR ) * Min( Max( CS,Max( MUM,( MUM + RCSe ) ) ) ,RRSe ) )", "obj1": 0.43227091633466136, "obj2": 0.49309926760215456}, {"determining": "( ( FirstVNF_Mem * Const ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - CS ) - Min( MUR ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5893089499733323}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) / FirstVNF_CPU ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( CS / MUM ),( MLU / DS ) ) * DS ) * RRSe ) + DS ) * ( Min( ( MLU / Min( Max( MLU,RRSe ) ,Max( CS,MUC ) ) ) ,Min( ( Min( RRSe ,RRSe ) * DS ) ,MUM ) ) * MUR ) ) + ( ( Min( ( DS / Min( CS ,MUC ) ) ,MLU ) + ( ( ( ( MLU - RRSe ) - RCSe ) - MUC ) - RRSe ) ) * RRSe ) ) + ( MUR * Max( ( MUR - MUC ),( Max( MUR,DS ) + Max( MUC,RCSe ) ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5753513094180017}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.3187250996015936, "obj2": 0.5840431416623691}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( RRS - ( MRS - ( BR + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / Min( MUR ,( MUC - MUC ) ) ) * ( MLU / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9203187250996016, "obj2": 0.061028792935719424}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( Min( RRS ,Const ) ,( ( ( FirstVNF_CPU_Server * RRS ) + Min( ARS ,MDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( RRSe / Max( Max( RCSe,MUM ),( ( RMSe / DS ) + MUC ) ) ) ) ) )", "obj1": 0.9282868525896414, "obj2": 0.04655553276975079}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / CS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.0454891453192351}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07230162114792815}, {"determining": "Min( ( ARS * ( Max( ( RRS / PN ),( FirstVNF_Mem + PN ) ) + ( Max( CRS,Max( RRS,Const ) ) / RRS ) ) ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05000199166993491}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( Max( ( Const * RRS ),( Min( ARS ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( RMSe + RRSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5910478377099361}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "Max( ( BR * CRS ),( ( ( Max( ( Min( Max( ACS,CRS ) ,RRS ) + ACS ),Max( FirstVNF_Mem_Server,AMS ) ) + BR ) / Min( ( ( ACS * FirstVNF_CPU_Server ) / ( RRS + FirstVNF_Mem_Server ) ) ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( Min( RRSe ,( ( ( RCSe + MUR ) + ( Max( MUR,MLU ) - ( MUC - RMSe ) ) ) + MLU ) ) / Min( ( CS + ( DS / RRSe ) ) ,( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5757950075041501}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) )", "choosing": "Min( ( CS / MUM ) ,Min( MLU ,CS ) )", "obj1": 0.9960159362549801, "obj2": 0.002046815432264794}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / RRSe ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / ( CS * ( RRSe * ( MUR / CS ) ) ) ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( MDR * RRS ) + ( ( ARS * ( MDR * RRS ) ) - PN ) )", "choosing": "( ( ( MUM * MUR ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( Max( RCSe,( RMSe / RRSe ) ),( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - ( Max( ACS,ARS ) + ( BR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( RCSe,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( ACS - ( Max( ( ( FirstVNF_Mem / MRS ) - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( ( RCSe / MLU ) / ( MUC + MUR ) ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( MLU + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( MUM,MUR ),( Max( DS,( RCSe * RRSe ) ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( MUM,MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( ( RRSe / Max( Max( MUM,MUR ),( Max( DS,DS ) + MUC ) ) ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( MUM,MUR ),( Max( DS,DS ) + MUC ) ) ) * Max( Max( MUM,MUR ),( Max( DS,DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.1971989439426186}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( Min( ACS ,CRS ) + RRS )", "choosing": "( ( RRSe * Max( Max( ( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( RRSe / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) ),MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.2051792828685259, "obj2": 0.706649905611268}, {"determining": "( Min( FirstVNF_CPU ,( Max( Max( ACS,Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),PN ) ),Const ) / ( ( ( ( DDR * DDR ) * ACS ) * RRS ) / ACS ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( RCSe,( Max( MLU,Min( RCSe ,MLU ) ) / CS ) ),( DS + ( ( CS - Max( ( CS / RMSe ),RCSe ) ) + RRSe ) ) ) * ( ( ( DS * MUR ) * Max( MUR,MUC ) ) * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.647410358565737, "obj2": 0.34186636880161947}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( Max( Max( MDR,Const ),( ARS * ( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,( MUR / CS ) ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6653386454183267, "obj2": 0.28468352198593994}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RRSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7131474103585658, "obj2": 0.2757261961584374}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.8326693227091634, "obj2": 0.11189602319035721}, {"determining": "( ( ( Max( ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ),FirstVNF_RAM ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Max( DS,( ( ( DS - CS ) + RMSe ) * CS ) ) + MUR ) / RCSe ) )", "obj1": 0.4063745019920319, "obj2": 0.499165831577939}, {"determining": "( Min( RRS ,MDR ) + ( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * FirstVNF_CPU_Server ),PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUR ) * ( Max( Min( RMSe ,Max( Min( RRSe ,CS ),MUR ) ),( RRSe * RCSe ) ) / MLU ) )", "obj1": 0.6613545816733067, "obj2": 0.3317659290240294}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / ( Min( MLU ,RRSe ) + Max( DS,RCSe ) ) ) + MUM ) ) * DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4907206100223028}, {"determining": "( Min( Max( FirstVNF_CPU_Server,( ( Const - ( ( Max( MRS,FirstVNF_RAM ) * MRS ) - FirstVNF_RAM ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ) ) ) ,( MDR - ( FirstVNF_Mem - DDR ) ) ) + Max( FirstVNF_CPU_Server,ACS ) )", "choosing": "( ( MUM * ( Min( Min( DS ,( MUM - DS ) ) ,( RRSe + MUC ) ) - MUR ) ) * ( Min( MUM ,Min( Min( ( MLU / ( MUM / ( CS / CS ) ) ) ,( MUR + MUR ) ) ,RMSe ) ) - DS ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "( ( MDR * DDR ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( RMSe + MUM ) )", "obj1": 0.3884462151394422, "obj2": 0.5279783402037258}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7650872448599392}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( MRS,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( MLU / MLU ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07230162114792815}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Max( ( FirstVNF_CPU * FirstVNF_Mem ),AMS ) + FirstVNF_RAM ) )", "choosing": "( ( MUR / MUR ) * Min( Max( CS,Max( MUM,( MUM + RCSe ) ) ) ,RRSe ) )", "obj1": 0.43227091633466136, "obj2": 0.49309926760215456}, {"determining": "Min( Min( Const ,RRS ) ,Max( CRS,Const ) )", "choosing": "( RRSe - Max( MUM,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5948512275115988}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( CRS + PN ) / ( ( ( ( CRS / ( RRS / AMS ) ) + BR ) / Min( AMS ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( ( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) / ( MUM * RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5407912488737797}, {"determining": "( ( FirstVNF_Mem * Const ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - CS ) - Min( MUR ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5893089499733323}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) / FirstVNF_CPU ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( CS / MUM ),( MLU / DS ) ) * DS ) * RRSe ) + DS ) * ( Min( ( MLU / Min( Max( MLU,RRSe ) ,Max( CS,MUC ) ) ) ,Min( ( Min( RRSe ,RRSe ) * DS ) ,MUM ) ) * MUR ) ) + ( ( Min( ( DS / Min( CS ,MUC ) ) ,MLU ) + ( ( ( ( MLU - RRSe ) - RCSe ) - MUC ) - RRSe ) ) * RRSe ) ) + ( MUR * Max( ( MUR - MUC ),( Max( MUR,DS ) + Max( MUC,RCSe ) ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5753513094180017}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( Max( DDR,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "( ( RRSe * RCSe ) * ( RRSe / Min( ( MUC - MUM ) ,( CS + MUC ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5839267303494636}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( RRS - ( MRS - ( BR + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / Min( MUR ,( MUC - MUC ) ) ) * ( MLU / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9203187250996016, "obj2": 0.061028792935719424}, {"determining": "Min( Min( RRS ,Const ) ,( ( ( FirstVNF_CPU_Server * RRS ) + Min( ARS ,MDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( RRSe / Max( Max( RCSe,MUM ),( ( RMSe / DS ) + MUC ) ) ) ) ) )", "obj1": 0.9282868525896414, "obj2": 0.04655553276975079}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / CS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.0454891453192351}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07230162114792815}, {"determining": "Min( ( ARS * ( Max( ( RRS / PN ),( FirstVNF_Mem + PN ) ) + ( Max( CRS,Max( RRS,Const ) ) / RRS ) ) ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05000199166993491}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( Max( ( Const * RRS ),( Min( ARS ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( RMSe + RRSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5910478377099361}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( FirstVNF_CPU_Server - ( Const / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ARS ) * Max( FirstVNF_RAM,( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) ) ) + Min( FirstVNF_RAM ,( DDR / ( Const + CRS ) ) ) )", "choosing": "( ( RMSe - CS ) * ( ( DS - ( ( CS + ( ( ( MLU + DS ) * RRSe ) * MLU ) ) * ( RRSe / ( ( RMSe / MUM ) - RMSe ) ) ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "Max( ( BR * CRS ),( ( ( Max( ( Min( Max( ACS,CRS ) ,RRS ) + ACS ),Max( FirstVNF_Mem_Server,AMS ) ) + BR ) / Min( ( ( ACS * FirstVNF_CPU_Server ) / ( RRS + FirstVNF_Mem_Server ) ) ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( Min( RRSe ,( ( ( RCSe + MUR ) + ( Max( MUR,MLU ) - ( MUC - RMSe ) ) ) + MLU ) ) / Min( ( CS + ( DS / RRSe ) ) ,( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5757950075041501}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) )", "choosing": "Min( ( CS / MUM ) ,Min( MLU ,CS ) )", "obj1": 0.9960159362549801, "obj2": 0.002046815432264794}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( CS / CS ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / RRSe ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ARS * ( MDR * RRS ) ) - PN ) )", "choosing": "( ( ( MUM * MUR ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( Max( RCSe,( RMSe / RRSe ) ),( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - ( Max( ACS,ARS ) + ( BR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( RCSe,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( ACS - ( Max( ( ( FirstVNF_Mem / MRS ) - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( ( RCSe / MLU ) / ( MUC + MUR ) ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( MLU + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( CRS + Min( Max( PN,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) / ACS ) ) - ( ( Max( MDR,ACS ) + PN ) + CRS ) )", "choosing": "Min( Max( ( ( ( RCSe * Min( DS ,( Min( CS ,CS ) + MUR ) ) ) - MLU ) + DS ),DS ) ,( DS / ( RCSe + Min( CS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,MLU ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - ( BR + ( ( FirstVNF_RAM_Server * ( ( ARS / Max( ACS,FirstVNF_RAM ) ) + FirstVNF_RAM ) ) - Max( RRS,RRS ) ) ) ) ,( ACS * ARS ) )", "choosing": "Max( Max( RCSe,DS ),( ( RRSe * RRSe ) - Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.1971989439426186}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( Min( FirstVNF_CPU ,( Max( Max( ACS,Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),PN ) ),Const ) / ( ( ( ( DDR * DDR ) * ACS ) * RRS ) / ACS ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( RCSe,( Max( MLU,Min( RCSe ,MLU ) ) / CS ) ),( DS + ( ( CS - Max( ( CS / RMSe ),RCSe ) ) + RRSe ) ) ) * ( ( ( DS * MUR ) * Max( MUR,MUC ) ) * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.647410358565737, "obj2": 0.34186636880161947}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.8326693227091634, "obj2": 0.11189602319035721}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( Max( Max( MDR,Const ),( ARS * ( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,( MUR / CS ) ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6653386454183267, "obj2": 0.28468352198593994}, {"determining": "( Min( RRS ,MDR ) + ( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * FirstVNF_CPU_Server ),PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUR ) * ( Max( Min( RMSe ,Max( Min( RRSe ,CS ),MUR ) ),( RRSe * RCSe ) ) / MLU ) )", "obj1": 0.6613545816733067, "obj2": 0.3317659290240294}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - ( Max( AMS,Min( Max( CRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RRSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( RRSe + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 0.7131474103585658, "obj2": 0.2757261961584374}, {"determining": "( ( ( Max( ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ),FirstVNF_RAM ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Max( DS,( ( ( DS - CS ) + RMSe ) * CS ) ) + MUR ) / RCSe ) )", "obj1": 0.4063745019920319, "obj2": 0.499165831577939}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_Mem_Server + PN ) ) * Max( ( FirstVNF_CPU * ARS ),( AMS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_Mem + CRS ) * ( BR * Const ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) )", "choosing": "( ( RRSe - CS ) + ( MUC * ( ( DS + ( ( RMSe / ( Min( MLU ,RRSe ) + Max( DS,RCSe ) ) ) + MUM ) ) * DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4907206100223028}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,Max( ( ( Max( Max( ( RCSe * RMSe ),CS ),( CS + ( DS + RCSe ) ) ) - ( DS * ( ( MLU - RMSe ) + ( MUR + RRSe ) ) ) ) / MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6892430278884463, "obj2": 0.2806409990348404}, {"determining": "( Min( Max( FirstVNF_CPU_Server,( ( Const - ( ( Max( MRS,FirstVNF_RAM ) * MRS ) - FirstVNF_RAM ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ) ) ) ,( MDR - ( FirstVNF_Mem - DDR ) ) ) + Max( FirstVNF_CPU_Server,ACS ) )", "choosing": "( ( MUM * ( Min( Min( DS ,( MUM - DS ) ) ,( RRSe + MUC ) ) - MUR ) ) * ( Min( MUM ,Min( Min( ( MLU / ( MUM / ( CS / CS ) ) ) ,( MUR + MUR ) ) ,RMSe ) ) - DS ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) )", "choosing": "( ( MUR * ( RRSe / ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.770580595354687}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.3844621513944223, "obj2": 0.5206373420489915}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( ( Const / BR ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM - RRSe ) ) ) / MLU ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5832765658056528}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( Min( MDR ,Max( Min( ( PN / ( ( ( Const - BR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) - CRS ) ) ,FirstVNF_RAM_Server ),CRS ) ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( Max( DS,RMSe ) / Min( DS ,RMSe ) ),Min( DS ,CS ) ),( ( DS + RMSe ) - ( Max( Max( ( RCSe - DS ),MUM ),DS ) / MUR ) ) ) * ( RMSe - CS ) )", "obj1": 0.9701195219123506, "obj2": 0.02851468211764443}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * ( Max( ( FirstVNF_CPU * FirstVNF_Mem ),AMS ) + FirstVNF_RAM ) )", "choosing": "( ( MUR / MUR ) * Min( Max( CS,Max( MUM,( MUM + RCSe ) ) ) ,RRSe ) )", "obj1": 0.43227091633466136, "obj2": 0.49309926760215456}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( CRS + PN ) / ( ( ( ( CRS / ( RRS / AMS ) ) + BR ) / Min( AMS ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( ( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) / ( MUM * RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5407912488737797}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) / FirstVNF_CPU ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( CS / MUM ),( MLU / DS ) ) * DS ) * RRSe ) + DS ) * ( Min( ( MLU / Min( Max( MLU,RRSe ) ,Max( CS,MUC ) ) ) ,Min( ( Min( RRSe ,RRSe ) * DS ) ,MUM ) ) * MUR ) ) + ( ( Min( ( DS / Min( CS ,MUC ) ) ,MLU ) + ( ( ( ( MLU - RRSe ) - RCSe ) - MUC ) - RRSe ) ) * RRSe ) ) + ( MUR * Max( ( MUR - MUC ),( Max( MUR,DS ) + Max( MUC,RCSe ) ) ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5753513094180017}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Max( ( BR * CRS ),( ( ( Max( ( Min( Max( ACS,CRS ) ,RRS ) + ACS ),Max( FirstVNF_Mem_Server,AMS ) ) + BR ) / Min( ( ( ACS * FirstVNF_CPU_Server ) / ( RRS + FirstVNF_Mem_Server ) ) ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( Min( RRSe ,( ( ( RCSe + MUR ) + ( Max( MUR,MLU ) - ( MUC - RMSe ) ) ) + MLU ) ) / Min( ( CS + ( DS / RRSe ) ) ,( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5757950075041501}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( RRS - ( MRS - ( BR + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / Min( MUR ,( MUC - MUC ) ) ) * ( MLU / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9203187250996016, "obj2": 0.061028792935719424}, {"determining": "Min( Min( RRS ,Const ) ,( ( ( FirstVNF_CPU_Server * RRS ) + Min( ARS ,MDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( RRSe / Max( Max( RCSe,MUM ),( ( RMSe / DS ) + MUC ) ) ) ) ) )", "obj1": 0.9282868525896414, "obj2": 0.04655553276975079}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / CS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.0454891453192351}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "Min( ( ARS * ( Max( ( RRS / PN ),( FirstVNF_Mem + PN ) ) + ( Max( CRS,Max( RRS,Const ) ) / RRS ) ) ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05000199166993491}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7622859977666744}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / RRSe ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( CS / CS ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( BR,Min( ( Const * RRS ) ,( FirstVNF_CPU - ( FirstVNF_RAM + DDR ) ) ) ) + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR - ( CRS * CRS ) ) ,( ( PN * DDR ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.9701195219123506, "obj2": 0.02851468211764443}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ARS * ( MDR * RRS ) ) - PN ) )", "choosing": "( ( ( MUM * MUR ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( Max( RCSe,( RMSe / RRSe ) ),( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - ( Max( ACS,ARS ) + ( BR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( RCSe,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( ACS - ( Max( ( ( FirstVNF_Mem / MRS ) - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( ( RCSe / MLU ) / ( MUC + MUR ) ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( MLU + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + MRS ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * Max( RRSe,CS ) ) * MUM ) + Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ( ( MDR + MRS ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) + BR ) / FirstVNF_Mem ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,Const ) ) )", "choosing": "( Min( Max( RCSe,DS ) ,CS ) + ( ( RCSe - RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.1971989439426186}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( Max( Max( MDR,Const ),( ARS * ( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,( MUR / CS ) ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6653386454183267, "obj2": 0.28468352198593994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.8326693227091634, "obj2": 0.11189602319035721}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.26676923229646693}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( ( Max( ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ),FirstVNF_RAM ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Max( DS,( ( ( DS - CS ) + RMSe ) * CS ) ) + MUR ) / RCSe ) )", "obj1": 0.4063745019920319, "obj2": 0.499165831577939}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.23690861130413704}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) )", "choosing": "( ( MUR * ( RRSe / ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.770580595354687}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.3844621513944223, "obj2": 0.5206373420489915}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( MDR ,Max( Min( ( PN / ( ( ( Const - BR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) - CRS ) ) ,FirstVNF_RAM_Server ),CRS ) ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( Max( DS,RMSe ) / Min( DS ,RMSe ) ),Min( DS ,CS ) ),( ( DS + RMSe ) - ( Max( Max( ( RCSe - DS ),MUM ),DS ) / MUR ) ) ) * ( RMSe - CS ) )", "obj1": 0.9701195219123506, "obj2": 0.02851468211764443}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( CRS + PN ) / ( ( ( ( CRS / ( RRS / AMS ) ) + BR ) / Min( AMS ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( ( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) / ( MUM * RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5407912488737797}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,Max( ( ( Max( Max( ( RCSe * RMSe ),CS ),( CS + ( DS + RCSe ) ) ) - ( DS * ( ( MLU - RMSe ) + ( MUR + RRSe ) ) ) ) / MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6892430278884463, "obj2": 0.2806409990348404}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,Min( MRS ,FirstVNF_CPU ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8645418326693227, "obj2": 0.08613487903512022}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Min( ACS ,( FirstVNF_RAM_Server - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( MLU,( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6872509960159362, "obj2": 0.28218276590559466}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.8725099601593626, "obj2": 0.07340924925916656}, {"determining": "( Min( Max( FirstVNF_CPU_Server,( ( Const - ( ( Max( MRS,FirstVNF_RAM ) * MRS ) - FirstVNF_RAM ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ) ) ) ,( MDR - ( FirstVNF_Mem - DDR ) ) ) + Max( FirstVNF_CPU_Server,ACS ) )", "choosing": "( ( MUM * ( Min( Min( DS ,( MUM - DS ) ) ,( RRSe + MUC ) ) - MUR ) ) * ( Min( MUM ,Min( Min( ( MLU / ( MUM / ( CS / CS ) ) ) ,( MUR + MUR ) ) ,RMSe ) ) - DS ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( RRS - ( MRS - ( BR + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / Min( MUR ,( MUC - MUC ) ) ) * ( MLU / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9203187250996016, "obj2": 0.061028792935719424}, {"determining": "Min( Min( RRS ,Const ) ,( ( ( FirstVNF_CPU_Server * RRS ) + Min( ARS ,MDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( RRSe / Max( Max( RCSe,MUM ),( ( RMSe / DS ) + MUC ) ) ) ) ) )", "obj1": 0.9282868525896414, "obj2": 0.04655553276975079}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / CS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.0454891453192351}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "Min( ( ARS * ( Max( ( RRS / PN ),( FirstVNF_Mem + PN ) ) + ( Max( CRS,Max( RRS,Const ) ) / RRS ) ) ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05000199166993491}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7622859977666744}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ( FirstVNF_Mem / BR ) ) ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( MUR / Min( RCSe ,( RCSe - MUM ) ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.003245786067853532}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( CS / CS ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / RRSe ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( BR,Min( ( Const * RRS ) ,( FirstVNF_CPU - ( FirstVNF_RAM + DDR ) ) ) ) + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR - ( CRS * CRS ) ) ,( ( PN * DDR ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.9701195219123506, "obj2": 0.02851468211764443}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ARS * ( MDR * RRS ) ) - PN ) )", "choosing": "( ( ( MUM * MUR ) / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( Max( RCSe,( RMSe / RRSe ) ),( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - ( Max( ACS,ARS ) + ( BR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * Max( RCSe,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( ACS - ( Max( ( ( FirstVNF_Mem / MRS ) - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( RMSe + MUM ) ) ,( ( ( RCSe / MLU ) / ( MUC + MUR ) ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( Max( AMS,Min( Max( CRS,( ACS + FirstVNF_RAM_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS / MUM ) ,( Max( Max( ( MLU / MUM ),RMSe ),Min( Min( MLU ,( Max( ( MUC - DS ),( MLU + RRSe ) ) / RMSe ) ) ,( Max( MLU,( CS - ( RMSe * CS ) ) ) + MUC ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Max( Const,MRS ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - ( ( FirstVNF_Mem / MRS ) * Max( ACS,( RRS + ACS ) ) ) ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( ( ( MUM - MUC ) * ( RCSe + CS ) ) + Max( ( MLU / MLU ),( ( RCSe / MLU ) / ( MUC + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * ( Max( ( ( ARS / PN ) / ( BR - ( MDR / AMS ) ) ),FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM ) ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - Min( ( FirstVNF_Mem_Server / Max( MRS,( MRS / FirstVNF_RAM_Server ) ) ) ,( CRS * ( ARS - RRS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RRSe ) + ( ( MLU - RCSe ) - RMSe ) ) + RMSe ) - ( ( Min( MUR ,Min( RRSe ,( MUC - RRSe ) ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( Max( Max( MDR,Const ),( ARS * ( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,( MUR / CS ) ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6653386454183267, "obj2": 0.28468352198593994}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.26676923229646693}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.23690861130413704}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( ( Max( ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ),FirstVNF_RAM ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Max( DS,( ( ( DS - CS ) + RMSe ) * CS ) ) + MUR ) / RCSe ) )", "obj1": 0.4063745019920319, "obj2": 0.499165831577939}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.8326693227091634, "obj2": 0.11189602319035721}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) )", "choosing": "( ( MUR * ( RRSe / ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.770580595354687}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.3844621513944223, "obj2": 0.5206373420489915}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( MDR ,Max( Min( ( PN / ( ( ( Const - BR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) - CRS ) ) ,FirstVNF_RAM_Server ),CRS ) ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( Max( DS,RMSe ) / Min( DS ,RMSe ) ),Min( DS ,CS ) ),( ( DS + RMSe ) - ( Max( Max( ( RCSe - DS ),MUM ),DS ) / MUR ) ) ) * ( RMSe - CS ) )", "obj1": 0.9701195219123506, "obj2": 0.02851468211764443}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.8326693227091634, "obj2": 0.11189602319035721}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "( ( CRS + PN ) / ( ( ( ( CRS / ( RRS / AMS ) ) + BR ) / Min( AMS ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( ( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) / ( MUM * RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5407912488737797}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( ( MDR * RRS ) + ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,Max( ( ( Max( Max( ( RCSe * RMSe ),CS ),( CS + ( DS + RCSe ) ) ) - ( DS * ( ( MLU - RMSe ) + ( MUR + RRSe ) ) ) ) / MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6892430278884463, "obj2": 0.2806409990348404}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * Max( ( MUC - MUM ),( CS + MUC ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6232573680984026}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,Min( MRS ,FirstVNF_CPU ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8645418326693227, "obj2": 0.08613487903512022}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "( Min( ACS ,( FirstVNF_RAM_Server - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( MLU,( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6872509960159362, "obj2": 0.28218276590559466}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.8725099601593626, "obj2": 0.07340924925916656}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Min( ( ( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) - ( RCSe + MUR ) ) ,( RRSe / ( ( CS - CS ) + MUM ) ) )", "obj1": 0.7888446215139442, "obj2": 0.1609119043091225}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.23961275543200777}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( RRS - ( MRS - ( BR + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / Min( MUR ,( MUC - MUC ) ) ) * ( MLU / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9203187250996016, "obj2": 0.061028792935719424}, {"determining": "Min( Min( RRS ,Const ) ,( ( ( FirstVNF_CPU_Server * RRS ) + Min( ARS ,MDR ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( RRSe / Max( Max( RCSe,MUM ),( ( RMSe / DS ) + MUC ) ) ) ) ) )", "obj1": 0.9282868525896414, "obj2": 0.04655553276975079}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / CS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.0454891453192351}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,( BR - ARS ) ) )", "choosing": "( ( ( RMSe - RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9143426294820717, "obj2": 0.061312949601980575}, {"determining": "Min( ( ARS * ( Max( ( RRS / PN ),( FirstVNF_Mem + PN ) ) + ( Max( CRS,Max( RRS,Const ) ) / RRS ) ) ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05000199166993491}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7622859977666744}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ( FirstVNF_Mem / BR ) ) ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( MUR / Min( RCSe ,( RCSe - MUM ) ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.003245786067853532}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( MUR / RRSe ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,DS ) - ( CS * ( RRSe * ( CS / CS ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04875264191439514}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( BR,Min( ( Const * RRS ) ,( FirstVNF_CPU - ( FirstVNF_RAM + DDR ) ) ) ) + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR - ( CRS * CRS ) ) ,( ( PN * DDR ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.9701195219123506, "obj2": 0.02851468211764443}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( ( Max( ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ),FirstVNF_RAM ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Max( DS,( ( ( DS - CS ) + RMSe ) * CS ) ) + MUR ) / RCSe ) )", "obj1": 0.4063745019920319, "obj2": 0.499165831577939}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.8326693227091634, "obj2": 0.11189602319035721}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) )", "choosing": "( ( MUR * ( RRSe / ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.770580595354687}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.3844621513944223, "obj2": 0.5206373420489915}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( Min( MDR ,Max( Min( ( PN / ( ( ( Const - BR ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) - CRS ) ) ,FirstVNF_RAM_Server ),CRS ) ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( Max( DS,RMSe ) / Min( DS ,RMSe ) ),Min( DS ,CS ) ),( ( DS + RMSe ) - ( Max( Max( ( RCSe - DS ),MUM ),DS ) / MUR ) ) ) * ( RMSe - CS ) )", "obj1": 0.9701195219123506, "obj2": 0.02851468211764443}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.8326693227091634, "obj2": 0.11189602319035721}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( CRS + PN ) / ( ( ( ( CRS / ( RRS / AMS ) ) + BR ) / Min( AMS ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( ( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) / ( MUM * RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5407912488737797}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( BR,MRS ) ) + Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( MLU + RMSe ) / RCSe ) )", "obj1": 0.37649402390438247, "obj2": 0.5305717333619491}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,Min( MRS ,FirstVNF_CPU ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8645418326693227, "obj2": 0.08613487903512022}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.8725099601593626, "obj2": 0.07340924925916656}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Min( ( ( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) - ( RCSe + MUR ) ) ,( RRSe / ( ( CS - CS ) + MUM ) ) )", "obj1": 0.7888446215139442, "obj2": 0.1609119043091225}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.36254980079681276, "obj2": 0.5405868892724409}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( Min( AMS ,CRS ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RRSe - CS ) + ( MUM * ( RRSe - CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5353313075375359}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7622859977666744}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + CRS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( ( ( MUM - RCSe ) + ( RRSe - ( ( MLU / RRSe ) + Max( CS,RRSe ) ) ) ) / DS ) ) ,MLU ) )", "obj1": 0.3665338645418327, "obj2": 0.5363394655717109}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7848605577689243, "obj2": 0.16284654082138744}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ( FirstVNF_Mem / BR ) ) ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( MUR / Min( RCSe ,( RCSe - MUM ) ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.003245786067853532}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( BR,Min( ( Const * RRS ) ,( FirstVNF_CPU - ( FirstVNF_RAM + DDR ) ) ) ) + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR - ( CRS * CRS ) ) ,( ( PN * DDR ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.9701195219123506, "obj2": 0.02851468211764443}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ),MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,Max( ( MUM + MUC ),Max( ( ( DS * MUR ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( Min( Max( CS,( MLU / MLU ) ) ,MLU ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,Max( RCSe,Max( RRSe,DS ) ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( Max( CRS,Const ) + ( ( FirstVNF_CPU_Server * RRS ) / ACS ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( MUM + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( DS * Min( RMSe ,Min( ( RCSe / DS ) ,Max( ( DS * MUC ),( MUR * ( Min( RCSe ,MUM ) * Min( DS ,RMSe ) ) ) ) ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( CRS * ( PN + CRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( MUM / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( CRS * ( FirstVNF_Mem_Server * Min( CRS ,( FirstVNF_RAM_Server + PN ) ) ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( ( CRS * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( ( RCSe - RCSe ) / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.23613286235748318}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) + ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( ( MUM - MUM ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) ),MUC ),( Min( MLU ,RMSe ) * DS ) )", "obj1": 0.8107569721115537, "obj2": 0.13944155100558828}, {"determining": "( ( ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( DS ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.8286852589641435, "obj2": 0.10249093437081912}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( CRS + PN ) / ( ( ( ( CRS / ( RRS / AMS ) ) + BR ) / Min( AMS ,FirstVNF_Mem ) ) + Const ) )", "choosing": "( ( Max( RRSe,( ( RMSe * RCSe ) + Min( ( Max( DS,MUM ) / MUR ) ,( Min( MUC ,DS ) * RMSe ) ) ) ) - MUM ) / ( MUM * RRSe ) )", "obj1": 0.350597609561753, "obj2": 0.5407912488737797}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) )", "choosing": "( ( MUR * ( RRSe / ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.770580595354687}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( MUR / RRSe ) * Min( MUM ,MLU ) )", "obj1": 0.796812749003984, "obj2": 0.15197584429983713}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,Min( MRS ,FirstVNF_CPU ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8645418326693227, "obj2": 0.08613487903512022}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.8725099601593626, "obj2": 0.07340924925916656}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7888446215139442, "obj2": 0.15376596530854603}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7848605577689243, "obj2": 0.16284654082138744}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7622859977666744}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ( FirstVNF_Mem / BR ) ) ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( MUR / Min( RCSe ,( RCSe - MUM ) ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.003245786067853532}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ),MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,Max( ( MUM + MUC ),Max( ( ( DS * MUR ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( Min( Max( CS,( MLU / MLU ) ) ,MLU ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,Max( RCSe,Max( RRSe,DS ) ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( Max( CRS,Const ) + ( ( FirstVNF_CPU_Server * RRS ) / ACS ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( MUM + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( DS * Min( RMSe ,Min( ( RCSe / DS ) ,Max( ( DS * MUC ),( MUR * ( Min( RCSe ,MUM ) * Min( DS ,RMSe ) ) ) ) ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( CRS * ( PN + CRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( MUM / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( CRS * ( FirstVNF_Mem_Server * Min( CRS ,( FirstVNF_RAM_Server + PN ) ) ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( ( CRS * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( ( RCSe - RCSe ) / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.23613286235748318}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "( ( PN - Const ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe + MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.03640920667771193}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) )", "choosing": "( ( MUR * ( RRSe / ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.770580595354687}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,CRS ) ) )", "choosing": "( Min( Min( RCSe ,( MLU + RMSe ) ) ,( MUM - RCSe ) ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7615381778618998}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,Min( MRS ,FirstVNF_CPU ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8645418326693227, "obj2": 0.08613487903512022}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.33665338645418325, "obj2": 0.5465373902956467}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7622859977666744}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ( FirstVNF_Mem / BR ) ) ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( MUR / Min( RCSe ,( RCSe - MUM ) ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.003245786067853532}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ),MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,Max( ( MUM + MUC ),Max( ( ( DS * MUR ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( Min( Max( CS,( MLU / MLU ) ) ,MLU ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,Max( RCSe,Max( RRSe,DS ) ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( Max( CRS,Const ) + ( ( FirstVNF_CPU_Server * RRS ) / ACS ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( MUM + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( DS * Min( RMSe ,Min( ( RCSe / DS ) ,Max( ( DS * MUC ),( MUR * ( Min( RCSe ,MUM ) * Min( DS ,RMSe ) ) ) ) ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( CRS * ( PN + CRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( MUM / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( CRS * ( FirstVNF_Mem_Server * Min( CRS ,( FirstVNF_RAM_Server + PN ) ) ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( ( CRS * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( ( RCSe - RCSe ) / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + CRS ) / Min( Max( FirstVNF_RAM,( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) ) ,( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * Min( RMSe ,Min( ( RCSe / DS ) ,Max( ( DS * MUC ),( MUR * ( Min( RCSe ,MUM ) * Min( DS ,RMSe ) ) ) ) ) ) ) / ( MLU / ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.23613286235748318}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ( Max( FirstVNF_CPU,RRS ) / RRS ) - FirstVNF_Mem ) ,( ACS - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( RCSe,MUM ),( ( ( RMSe + MUM ) - Max( DS,MUC ) ) + MUC ) ) * DS ) * ( RMSe + MUM ) ) ,( ( RRSe / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.786436376856946}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,Min( MRS ,FirstVNF_CPU ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8645418326693227, "obj2": 0.08613487903512022}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Max( ( ARS + FirstVNF_Mem ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( MUC ,MUM ) ),MUR ) + ( CS * ( ( MUR / ( ( MUM / DS ) - MUR ) ) * ( MUR / CS ) ) ) ) - MLU ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( Min( RRS ,PN ) + ( Min( MRS ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / ( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) / ( DS + MUC ) ) ) * Min( MUM ,( MUR - ( ( ( ( MUR / ( RRSe * RCSe ) ) + MUM ) + RMSe ) * ( RRSe - DS ) ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ( FirstVNF_Mem / BR ) ) ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( MUR / Min( RCSe ,( RCSe - MUM ) ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.003245786067853532}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ),MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,Max( ( MUM + MUC ),Max( ( ( DS * MUR ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( Min( Max( CS,( MLU / MLU ) ) ,MLU ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,Max( RCSe,Max( RRSe,DS ) ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( Max( CRS,Const ) + ( ( FirstVNF_CPU_Server * RRS ) / ACS ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( MUM + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( DS * Min( RMSe ,Min( ( RCSe / DS ) ,Max( ( DS * MUC ),( MUR * ( Min( RCSe ,MUM ) * Min( DS ,RMSe ) ) ) ) ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( CRS * ( PN + CRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( MUM / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( CRS * ( FirstVNF_Mem_Server * Min( CRS ,( FirstVNF_RAM_Server + PN ) ) ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Min( CRS ,( ( CRS * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Max( Min( ( MUR / ( ( RCSe - RCSe ) / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.23613286235748318}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ( Max( FirstVNF_CPU,RRS ) / RRS ) - FirstVNF_Mem ) ,( ACS - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( RCSe,MUM ),( ( ( RMSe + MUM ) - Max( DS,MUC ) ) + MUC ) ) * DS ) * ( RMSe + MUM ) ) ,( ( RRSe / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.786436376856946}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,Min( MRS ,FirstVNF_CPU ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8645418326693227, "obj2": 0.08613487903512022}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( CS + ( MLU * ( RMSe - CS ) ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7491228522693073}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ( FirstVNF_Mem / BR ) ) ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( MUR / Min( RCSe ,( RCSe - MUM ) ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.003245786067853532}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ),MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,Max( ( MUM + MUC ),Max( ( ( DS * MUR ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( Min( Max( CS,( MLU / MLU ) ) ,MLU ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,Max( RCSe,Max( RRSe,DS ) ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( Max( CRS,Const ) + ( ( FirstVNF_CPU_Server * RRS ) / ACS ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( DDR + ( ( FirstVNF_RAM - ( ( ACS / CRS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( MUM + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / BR ) ) + ( ( BR + ( ( ( ( ( DDR + MRS ) / PN ) - CRS ) * RRS ) / CRS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) * ( Min( Min( ( RMSe + MUM ) ,RRSe ) ,MUC ) / MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.21434164212029835}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( ( RRSe - MUR ) - Max( MUM,RMSe ) ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.162971267206116}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( RMSe / MUR ) * CS ) ) + MUR ) )", "obj1": 0.6533864541832669, "obj2": 0.30329855556632834}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ( Max( FirstVNF_CPU,RRS ) / RRS ) - FirstVNF_Mem ) ,( ACS - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( RCSe,MUM ),( ( ( RMSe + MUM ) - Max( DS,MUC ) ) + MUC ) ) * DS ) * ( RMSe + MUM ) ) ,( ( RRSe / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.786436376856946}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,Min( MRS ,FirstVNF_CPU ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8645418326693227, "obj2": 0.08613487903512022}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( CS + ( MLU * ( RMSe - CS ) ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7491228522693073}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "( ( CRS - BR ) + ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - MUC ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.007113536109105686}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * Min( FirstVNF_RAM_Server ,BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( ( RRSe + CS ) ,( MUC * MUC ) ) + MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0037738672493888782}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ( FirstVNF_Mem / BR ) ) ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( MUR / Min( RCSe ,( RCSe - MUM ) ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.003245786067853532}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ),MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,Const ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( RCSe ,RRSe ) ,Max( ( MUM + MUC ),Max( ( ( DS * MUR ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( Min( Max( CS,( MLU / MLU ) ) ,MLU ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,Max( RCSe,Max( RRSe,DS ) ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( ( PN - Min( Max( Max( ( Min( RRS ,Const ) * MDR ),( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + MLU ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16292362210094266}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( Max( MLU,RRSe ) * MUC ) * ( MLU / RCSe ) )", "obj1": 0.7250996015936255, "obj2": 0.17955751926590535}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "( ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( RMSe / MUR ) * CS ) ) + MUR ) )", "obj1": 0.6533864541832669, "obj2": 0.30329855556632834}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( CS + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7604382037309327}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( CRS + PN ) / ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,( Max( DS,RMSe ) / ( MUM * RRSe ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.59031617784062}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,Min( MRS ,FirstVNF_CPU ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8645418326693227, "obj2": 0.08613487903512022}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + DDR ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Max( Max( RCSe,MUM ),( DS + MUC ) ) * ( ( Min( RCSe ,( MUR - Max( RCSe,Max( ( CS * DS ),DS ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.590424978950167}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RCSe * RRSe ) / RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.014961289432307972}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( CS + ( MLU * ( RMSe - CS ) ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16733067729083664, "obj2": 0.7491228522693073}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - ( MDR / PN ) ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - RCSe ) / ( ( RRSe - MUR ) - ( ( RMSe - RCSe ) / MLU ) ) )", "obj1": 0.8565737051792829, "obj2": 0.09045339948309258}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "( CRS + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server / Min( ( BR / ( CRS * CRS ) ) ,( ( DDR * PN ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),( DS + MUM ) ) ) * ( RRSe + Max( ( CS * ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.00978937937561644}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ) * Min( Max( FirstVNF_CPU_Server,MDR ) ,( Const / ACS ) ) ) * ( ( ( ACS + ARS ) + Min( BR ,MRS ) ) - Min( Min( CRS ,BR ) ,( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUR + Min( RMSe ,RRSe ) )", "obj1": 0.8605577689243028, "obj2": 0.08887653599876871}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RRSe / Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) * Max( ( MUM * MUM ),RRSe ) )", "obj1": 0.850597609561753, "obj2": 0.09765505396117924}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ( FirstVNF_Mem / BR ) ) ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( MUR / Min( RCSe ,( RCSe - MUM ) ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.003245786067853532}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ),MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( DS,( MUM + RCSe ) ) ) ,RMSe ),CS ),( ( Min( ( Min( MUM ,RMSe ) / ( RMSe - MLU ) ) ,MLU ) * RCSe ) - MLU ) ) / ( ( CS - ( MUR / Max( ( ( MUR * MUM ) + RRSe ),Max( ( RRSe - MUC ),MLU ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( ( PN - Min( Max( Max( ( Min( RRS ,Const ) * MDR ),( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + MLU ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16292362210094266}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( Max( MLU,RRSe ) * MUC ) * ( MLU / RCSe ) )", "obj1": 0.7250996015936255, "obj2": 0.17955751926590535}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "( ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( RMSe / MUR ) * CS ) ) + MUR ) )", "obj1": 0.6533864541832669, "obj2": 0.30329855556632834}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( ( ARS + ACS ) ,( FirstVNF_CPU - ( Max( ( PN - ARS ),ARS ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7899818805691418}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( CS + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7604382037309327}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7473084439354437}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( Min( BR ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) + ( MDR - ( Max( DDR,FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( MUC - Max( MLU,MUC ) ),( DS + MUC ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / Max( ( Min( MUC ,MUR ) / DS ),CS ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.002898780994828659}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * ( Max( ( RCSe / ( ( Max( DS,MLU ) * Min( Min( MUM ,CS ) ,Min( MLU ,RMSe ) ) ) + MUM ) ),MUR ) + ( ( MUC * MUM ) + RCSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.026081859980662953}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( ( ( RRS + DDR ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( RCSe * RRSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6294820717131474, "obj2": 0.33555175345623106}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( FirstVNF_CPU_Server,( MRS - ( ( FirstVNF_RAM + DDR ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( RCSe + RRSe ) + ( MUC * CS ) ) ),MUR ),( Max( DS,DS ) + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - Max( RMSe,( CS / RMSe ) ) ) * ( MUM * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM * DS ) / MUC ) * ( Min( DS ,MUM ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / RRSe ) / ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RCSe ) ) ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( DS,( MUM + RCSe ) ) ) ,RMSe ),CS ),( ( Min( ( Min( MUM ,RMSe ) / ( RMSe - MLU ) ) ,MLU ) * RCSe ) - MLU ) ) / ( ( CS - ( MUR / Max( ( ( MUR * MUM ) + RRSe ),Max( ( RRSe - MUC ),MLU ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "( ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( RMSe / MUR ) * CS ) ) + MUR ) )", "obj1": 0.6533864541832669, "obj2": 0.30329855556632834}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( Max( MLU,RRSe ) * MUC ) * ( MLU / RCSe ) )", "obj1": 0.7250996015936255, "obj2": 0.17955751926590535}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + MDR )", "choosing": "( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( MLU / ( Min( DS ,( MUM + DS ) ) * ( MLU / RCSe ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31159648700298337}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( ( BR / RRS ) + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( CS + MUM ) ) ,( ( RRSe / MUR ) / ( Min( MUC ,( Min( MUR ,RCSe ) - MUC ) ) + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7889544886277889}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( ( PN - Min( Max( Max( ( Min( RRS ,Const ) * MDR ),( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + MLU ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16292362210094266}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( CS + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7604382037309327}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.6095617529880478, "obj2": 0.33408611074973626}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( FirstVNF_Mem_Server * MDR ),MDR ) )", "choosing": "( ( MLU / RCSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,MUM ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.17882959235620993}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.6095617529880478, "obj2": 0.33408611074973626}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7473084439354437}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / AMS ) ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.02544824494687562}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( Min( BR ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) + ( MDR - ( Max( DDR,FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( MUC - Max( MLU,MUC ) ),( DS + MUC ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / Max( ( Min( MUC ,MUR ) / DS ),CS ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.002898780994828659}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * RRS ) + ( ( ( MDR * RRS ) + ( ( ( DDR - PN ) + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUM ) - RCSe ) * Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ( CRS * ( DDR + FirstVNF_RAM ) ) - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( Max( ( RCSe * MUR ),Min( DS ,MUC ) ) - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( RRSe * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Const ) - RRS ) ,( ( FirstVNF_CPU_Server + ( ( ( ( Max( MDR,ACS ) * ARS ) / RRS ) + ( DDR + CRS ) ) - ( ( ( FirstVNF_CPU_Server / Const ) - RRS ) - BR ) ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( DS + MUC ) ) ) * Min( Max( ( Min( ( ( CS / DS ) / CS ) ,( ( ( RCSe * MUC ) - RRSe ) / RMSe ) ) - ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) ),MUM ) ,( ( ( CS / DS ) / CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / RRSe ) / ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RCSe ) ) ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.6195219123505976, "obj2": 0.29681166552412963}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16549852279969415}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( ( BR / RRS ) + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( Min( ( ( MUC * DS ) * ( CS + MUM ) ) ,( ( RRSe / MUR ) / ( Min( MUC ,( Min( MUR ,RCSe ) - MUC ) ) + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( MLU / RMSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7889544886277889}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.6095617529880478, "obj2": 0.33408611074973626}, {"determining": "( ( ( RRS + ( MDR - FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,DDR ) * Max( FirstVNF_CPU,( CRS * RRS ) ) ) )", "choosing": "( ( Min( MUM ,Max( RCSe,Max( RRSe,DS ) ) ) - Min( DS ,RRSe ) ) * ( RCSe + ( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.3438810242216594}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( CS + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7604382037309327}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( PN - Min( Max( Max( ( Min( RRS ,Const ) * MDR ),( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + MLU ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16292362210094266}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "( ( ( DDR + ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server * RRS ) / ACS ) + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) / FirstVNF_RAM_Server ) ) * BR ) + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( MDR,( Const + FirstVNF_RAM ) ) ) / CRS ) ) )", "choosing": "( ( Min( Max( Max( ( ( RCSe / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) ,Max( RCSe,MUM ) ) / MUC ) * ( RRSe / Max( ( DS - MUM ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.33871345884778714}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7473084439354437}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / AMS ) ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.02544824494687562}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU_Server + ACS ) + ( ( FirstVNF_Mem_Server - Max( ( ( FirstVNF_CPU_Server * RRS ) + MDR ),( Const + FirstVNF_RAM ) ) ) / CRS ) ) ) + ( BR + FirstVNF_Mem ) )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUM ) ) ) * ( ( Max( Max( ( ( ( DS + MUC ) / ( MUM * DS ) ) + MUC ),RRSe ),( MUR / CS ) ) / RRSe ) * ( ( Min( Min( DS ,( MUM + DS ) ) ,RRSe ) * MLU ) / MUM ) ) )", "obj1": 0.601593625498008, "obj2": 0.33833307057525236}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.6095617529880478, "obj2": 0.33408611074973626}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( Min( BR ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) + ( MDR - ( Max( DDR,FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( MUC - Max( MLU,MUC ) ),( DS + MUC ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / Max( ( Min( MUC ,MUR ) / DS ),CS ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.002898780994828659}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( DS,( MUM + RCSe ) ) ) ,RMSe ),CS ),( ( Min( ( Min( MUM ,RMSe ) / ( RMSe - MLU ) ) ,MLU ) * RCSe ) - MLU ) ) / ( ( CS - ( MUR / Max( ( ( MUR * MUM ) + RRSe ),Max( ( RRSe - MUC ),MLU ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( MLU + MUC ) ) ) * Min( Max( ( ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) - Min( ( ( CS / DS ) / Max( ( MUC / CS ),CS ) ) ,( Max( Min( MUM ,MUR ),MUR ) / RMSe ) ) ),MUM ) ,( MUM * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Const ) - RRS ) ,( ( FirstVNF_CPU_Server + ( ( ( ( Max( MDR,ACS ) * ARS ) / RRS ) + ( DDR + CRS ) ) - ( ( ( FirstVNF_CPU_Server / Const ) - RRS ) - BR ) ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( DS + MUC ) ) ) * Min( Max( ( Min( ( ( CS / DS ) / CS ) ,( ( ( RCSe * MUC ) - RRSe ) / RMSe ) ) - ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) ),MUM ) ,( ( ( CS / DS ) / CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.6195219123505976, "obj2": 0.29681166552412963}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16549852279969415}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "Max( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7749696328798014}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( CS + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7604382037309327}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( PN - Min( Max( Max( ( Min( RRS ,Const ) * MDR ),( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + MLU ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16292362210094266}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUC ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6241861258102801}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / AMS ) ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.02544824494687562}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / RRSe ) / ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RCSe ) ) ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( DS,( MUM + RCSe ) ) ) ,RMSe ),CS ),( ( Min( ( Min( MUM ,RMSe ) / ( RMSe - MLU ) ) ,MLU ) * RCSe ) - MLU ) ) / ( ( CS - ( MUR / Max( ( ( MUR * MUM ) + RRSe ),Max( ( RRSe - MUC ),MLU ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( RRS * ( ( DDR - ( ( MRS + DDR ) / Max( FirstVNF_Mem,BR ) ) ) * ( Const / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( Const / BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( ( ( RMSe * DS ) * Min( ( ( MUC * RRSe ) - MUC ) ,RRSe ) ) - CS ) ) * ( ( Min( RRSe ,( MUR * RRSe ) ) - ( ( CS + MLU ) / Max( MUC,DS ) ) ) + ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( RRS * ( ( DDR - ( ( MRS + DDR ) / Max( FirstVNF_Mem,BR ) ) ) * ( Const / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( Const / BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( ( ( RMSe * DS ) * Min( ( ( MUC * RRSe ) - MUC ) ,RRSe ) ) - CS ) ) * ( ( Min( RRSe ,( MUR * RRSe ) ) - ( ( CS + MLU ) / Max( MUC,DS ) ) ) + ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( RRS * ( ( DDR - ( ( MRS + DDR ) / Max( FirstVNF_Mem,BR ) ) ) * ( Const / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( Const / BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( ( ( RMSe * DS ) * Min( ( ( MUC * RRSe ) - MUC ) ,RRSe ) ) - CS ) ) * ( ( Min( RRSe ,( MUR * RRSe ) ) - ( ( CS + MLU ) / Max( MUC,DS ) ) ) + ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( Max( Const,FirstVNF_RAM ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem / Min( PN ,( ( CRS - DDR ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( MLU + MUC ) ) ) * Min( Max( ( ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) - Min( ( ( CS / DS ) / Max( ( MUC / CS ),CS ) ) ,( Max( Min( MUM ,MUR ),MUR ) / RMSe ) ) ),MUM ) ,( MUM * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.6195219123505976, "obj2": 0.29681166552412963}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.45114108498040895}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16549852279969415}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "Max( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7749696328798014}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( CS + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7604382037309327}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "Min( ( MDR + FirstVNF_CPU_Server ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / RCSe ) * ( MLU / RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6014396291114891}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2689243027888446, "obj2": 0.6184512798159211}, {"determining": "( ( ( PN - Min( Max( Max( ( Min( RRS ,Const ) * MDR ),( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + MLU ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16292362210094266}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / AMS ) ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.02544824494687562}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Const ) - RRS ) ,( ( FirstVNF_CPU_Server + ( ( ( ( Max( MDR,ACS ) * ARS ) / RRS ) + ( DDR + CRS ) ) - ( ( ( FirstVNF_CPU_Server / Const ) - RRS ) - BR ) ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( DS + MUC ) ) ) * Min( Max( ( Min( ( ( CS / DS ) / CS ) ,( ( ( RCSe * MUC ) - RRSe ) / RMSe ) ) - ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) ),MUM ) ,( ( ( CS / DS ) / CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / RRSe ) / ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RCSe ) ) ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( DS,( MUM + RCSe ) ) ) ,RMSe ),CS ),( ( Min( ( Min( MUM ,RMSe ) / ( RMSe - MLU ) ) ,MLU ) * RCSe ) - MLU ) ) / ( ( CS - ( MUR / Max( ( ( MUR * MUM ) + RRSe ),Max( ( RRSe - MUC ),MLU ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - Max( ( RCSe * MUR ),Min( DS ,MUC ) ) ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( RRS * ( ( DDR - ( ( MRS + DDR ) / Max( FirstVNF_Mem,BR ) ) ) * ( Const / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( Const / BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( ( ( RMSe * DS ) * Min( ( ( MUC * RRSe ) - MUC ) ,RRSe ) ) - CS ) ) * ( ( Min( RRSe ,( MUR * RRSe ) ) - ( ( CS + MLU ) / Max( MUC,DS ) ) ) + ( MUC - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Min( ( RRSe / ( ( MLU - RCSe ) / ( ( Min( ( MUR / MUR ) ,( RMSe / CS ) ) + MLU ) + RCSe ) ) ) ,MUM ) - Max( DS,MUM ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RRSe ) ) ) ) ) / MLU ) ) / ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_RAM ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem / Min( PN ,( ( CRS - DDR ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( ARS * ARS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RRSe / RRSe ) - Max( DS,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.799346007972583}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "Max( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7749696328798014}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( CS + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7604382037309327}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( ( ( FirstVNF_CPU_Server / MDR ) / RRS ) * ( ( ( FirstVNF_CPU_Server * ( ( ACS / Max( DDR,FirstVNF_CPU ) ) - BR ) ) - FirstVNF_RAM ) + CRS ) ) + ( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC - ( CS + DS ) ) * Min( RMSe ,Max( RCSe,RRSe ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5962485814974403}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( ( ( PN - Min( Max( Max( ( Min( RRS ,Const ) * MDR ),( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + MLU ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16292362210094266}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16549852279969415}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / AMS ) ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.02544824494687562}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( MLU + MUC ) ) ) * Min( Max( ( ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) - Min( ( ( CS / DS ) / Max( ( MUC / CS ),CS ) ) ,( Max( Min( MUM ,MUR ),MUR ) / RMSe ) ) ),MUM ) ,( MUM * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Const ) - RRS ) ,( ( FirstVNF_CPU_Server + ( ( ( ( Max( MDR,ACS ) * ARS ) / RRS ) + ( DDR + CRS ) ) - ( ( ( FirstVNF_CPU_Server / Const ) - RRS ) - BR ) ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( DS + MUC ) ) ) * Min( Max( ( Min( ( ( CS / DS ) / CS ) ,( ( ( RCSe * MUC ) - RRSe ) / RMSe ) ) - ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) ),MUM ) ,( ( ( CS / DS ) / CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / RRSe ) / ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RCSe ) ) ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( DS,( MUM + RCSe ) ) ) ,RMSe ),CS ),( ( Min( ( Min( MUM ,RMSe ) / ( RMSe - MLU ) ) ,MLU ) * RCSe ) - MLU ) ) / ( ( CS - ( MUR / Max( ( ( MUR * MUM ) + RRSe ),Max( ( RRSe - MUC ),MLU ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( BR - Min( ( RRS * Const ) ,PN ) ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( ( DS - CS ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - ( DS / RCSe ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ARS ) ,( FirstVNF_CPU - ACS ) ) + RRS )", "choosing": "( ( RRSe * Max( Max( RCSe,MUM ),( MUC + Max( Max( RCSe,MUM ),( ( ( MUC + MUM ) - Max( DS,MUC ) ) + MUC ) ) ) ) ) * ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( DS * ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( Max( Min( CRS ,( CRS / RRS ) ),Const ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS + FirstVNF_RAM ) - ( DDR + MRS ) ) ) ,( BR + BR ) ),DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) * ( ( ( ( Min( Max( CS,( RCSe * MUC ) ) ,MUR ) / RRSe ) - RCSe ) * ( Max( ( ( Max( MUR,MUC ) / MLU ) * DS ),( ( Min( MUC ,MUM ) * Max( MLU,RCSe ) ) + MUM ) ) - MUR ) ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7815511264302064}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( MUR - ( ( RRSe + ( DS - RCSe ) ) * MUR ) ) * ( Max( MUC,MUM ) + Max( ( RRSe / ( RCSe + MUM ) ),( ( MUM * ( MUC / ( DS * RCSe ) ) ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RRSe ) ) ) ) ) / MLU ) ) / ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS / FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,( ( CRS * FirstVNF_Mem ) + ( PN * FirstVNF_RAM_Server ) ) ),DDR ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( MUC * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7815511264302064}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( ( MDR * ( ( FirstVNF_RAM + Const ) - ( ACS / FirstVNF_Mem_Server ) ) ) / ( Const + ACS ) )", "choosing": "( Min( MUR ,DS ) / ( ( ( CS - MUM ) + ( MLU + RCSe ) ) + MUM ) )", "obj1": 0.5278884462151394, "obj2": 0.41614611421198106}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - ( Max( ( ACS * CRS ),Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( Max( ( RCSe - MLU ),RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7599483178498729}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU * ( FirstVNF_CPU * AMS ) ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( Max( RRSe,MLU ) * MUM ) ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.42798878505339494}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( MRS - RRS ) ,( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( DS - MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5059760956175299, "obj2": 0.4193566871432344}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( ( ( PN - Min( Max( Max( ( Min( RRS ,Const ) * MDR ),( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + MLU ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16292362210094266}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16549852279969415}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( DDR - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "( ( ( ( FirstVNF_CPU_Server / MDR ) / RRS ) * ( ( ( FirstVNF_CPU_Server * ( ( ACS / Max( DDR,FirstVNF_CPU ) ) - BR ) ) - FirstVNF_RAM ) + CRS ) ) + ( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC - ( CS + DS ) ) * Min( RMSe ,Max( RCSe,RRSe ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5962485814974403}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( ( FirstVNF_RAM * Min( Max( ( ( ( AMS - CRS ) + PN ) * MDR ),ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( DS / ( MLU - DS ) ) ) ,( ( Min( ( MUR - MUM ) ,Max( RMSe,RMSe ) ) + Max( RRSe,RMSe ) ) - RCSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6446862145912041}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( ( MDR * DDR ) - PN ) )", "choosing": "( ( MUM * DS ) + ( RMSe / RRSe ) )", "obj1": 0.5039840637450199, "obj2": 0.42028625844920137}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / AMS ) ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.02544824494687562}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( Max( ( MDR + MDR ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * MUM )", "obj1": 0.2788844621513944, "obj2": 0.5981257142825828}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( PN * AMS ) ,Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - ( Min( Max( DDR,ACS ) ,MRS ) - ( PN - ACS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( ( MUM + MUC ) / ( CS / MUM ) ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( Max( Const,FirstVNF_RAM ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem / Min( PN ,( ( CRS - DDR ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( MLU + MUC ) ) ) * Min( Max( ( ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) - Min( ( ( CS / DS ) / Max( ( MUC / CS ),CS ) ) ,( Max( Min( MUM ,MUR ),MUR ) / RMSe ) ) ),MUM ) ,( MUM * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Const ) - RRS ) ,( ( FirstVNF_CPU_Server + ( ( ( ( Max( MDR,ACS ) * ARS ) / RRS ) + ( DDR + CRS ) ) - ( ( ( FirstVNF_CPU_Server / Const ) - RRS ) - BR ) ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( DS + MUC ) ) ) * Min( Max( ( Min( ( ( CS / DS ) / CS ) ,( ( ( RCSe * MUC ) - RRSe ) / RMSe ) ) - ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) ),MUM ) ,( ( ( CS / DS ) / CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / RRSe ) / ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RCSe ) ) ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( DS,( MUM + RCSe ) ) ) ,RMSe ),CS ),( ( Min( ( Min( MUM ,RMSe ) / ( RMSe - MLU ) ) ,MLU ) * RCSe ) - MLU ) ) / ( ( CS - ( MUR / Max( ( ( MUR * MUM ) + RRSe ),Max( ( RRSe - MUC ),MLU ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - ( CRS * CRS ) ) - PN ) + FirstVNF_Mem_Server ) - PN ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - RMSe ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "28": [{"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( MLU + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( MUR - ( ( RRSe + ( DS - RCSe ) ) * MUR ) ) * ( Max( MUC,MUM ) + Max( ( RRSe / ( RCSe + MUM ) ),( ( MUM * ( MUC / ( DS * RCSe ) ) ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( DS * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7714996065867364}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / MDR ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.48406374501992033, "obj2": 0.37423899726954335}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( Max( Max( Min( DDR ,FirstVNF_RAM_Server ),( ( Const - ( ( ( MRS / Const ) * ACS ) - FirstVNF_Mem_Server ) ) * Min( ACS ,FirstVNF_CPU ) ) ),( ( ( FirstVNF_CPU * ( ACS - BR ) ) * Max( BR,AMS ) ) * BR ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( RRSe + ( DS - RCSe ) ) * MUR ) ) * ( Max( MUC,( Max( ( MUC / Min( MUM ,( CS - MUR ) ) ),RCSe ) + MUC ) ) + Max( ( RRSe / ( RCSe + MUM ) ),( ( MUM * ( MUC / ( DS * RCSe ) ) ) - RMSe ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6995749297004019}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( CRS * ( ARS - RRS ) ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( CS / CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21460456668425135}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - ( Max( ( ACS * CRS ),Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( Max( ( RCSe - MLU ),RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7599483178498729}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.2162324220664221}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( ( ( PN - Min( Max( Max( ( Min( RRS ,Const ) * MDR ),( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + MLU ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.16292362210094266}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16549852279969415}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( DDR - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "( ( ( ( FirstVNF_CPU_Server / MDR ) / RRS ) * ( ( ( FirstVNF_CPU_Server * ( ( ACS / Max( DDR,FirstVNF_CPU ) ) - BR ) ) - FirstVNF_RAM ) + CRS ) ) + ( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC - ( CS + DS ) ) * Min( RMSe ,Max( RCSe,RRSe ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5962485814974403}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( ( FirstVNF_RAM * Min( Max( ( ( ( AMS - CRS ) + PN ) * MDR ),ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( DS / ( MLU - DS ) ) ) ,( ( Min( ( MUR - MUM ) ,Max( RMSe,RMSe ) ) + Max( RRSe,RMSe ) ) - RCSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6446862145912041}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / AMS ) ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.02544824494687562}, {"determining": "( Max( ( MDR + MDR ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * MUM )", "obj1": 0.2788844621513944, "obj2": 0.5981257142825828}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( ( FirstVNF_CPU / ( ( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) ) - DDR ) ) - RRS ) / Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,Min( RCSe ,Max( RCSe,MUR ) ) )", "obj1": 0.9920318725099602, "obj2": 0.003303362238252479}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( PN * AMS ) ,Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - ( Min( Max( DDR,ACS ) ,MRS ) - ( PN - ACS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( ( MUM + MUC ) / ( CS / MUM ) ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RRSe ) ) ) ) ) / MLU ) ) / ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_RAM ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem / Min( PN ,( ( CRS - DDR ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( MLU + MUC ) ) ) * Min( Max( ( ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) - Min( ( ( CS / DS ) / Max( ( MUC / CS ),CS ) ) ,( Max( Min( MUM ,MUR ),MUR ) / RMSe ) ) ),MUM ) ,( MUM * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Const ) - RRS ) ,( ( FirstVNF_CPU_Server + ( ( ( ( Max( MDR,ACS ) * ARS ) / RRS ) + ( DDR + CRS ) ) - ( ( ( FirstVNF_CPU_Server / Const ) - RRS ) - BR ) ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( DS + MUC ) ) ) * Min( Max( ( Min( ( ( CS / DS ) / CS ) ,( ( ( RCSe * MUC ) - RRSe ) / RMSe ) ) - ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) ),MUM ) ,( ( ( CS / DS ) / CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / RRSe ) / ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RCSe ) ) ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( DS,( MUM + RCSe ) ) ) ,RMSe ),CS ),( ( Min( ( Min( MUM ,RMSe ) / ( RMSe - MLU ) ) ,MLU ) * RCSe ) - MLU ) ) / ( ( CS - ( MUR / Max( ( ( MUR * MUM ) + RRSe ),Max( ( RRSe - MUC ),MLU ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( RRS + ( ( AMS * MRS ) - ARS ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( FirstVNF_Mem / ( CRS - FirstVNF_RAM_Server ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - Max( MUR,( RRSe * ( MUR * CS ) ) ) ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( MLU + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( DS * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7714996065867364}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / MDR ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.48406374501992033, "obj2": 0.37423899726954335}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( Max( Max( Min( DDR ,FirstVNF_RAM_Server ),( ( Const - ( ( ( MRS / Const ) * ACS ) - FirstVNF_Mem_Server ) ) * Min( ACS ,FirstVNF_CPU ) ) ),( ( ( FirstVNF_CPU * ( ACS - BR ) ) * Max( BR,AMS ) ) * BR ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( RRSe + ( DS - RCSe ) ) * MUR ) ) * ( Max( MUC,( Max( ( MUC / Min( MUM ,( CS - MUR ) ) ),RCSe ) + MUC ) ) + Max( ( RRSe / ( RCSe + MUM ) ),( ( MUM * ( MUC / ( DS * RCSe ) ) ) - RMSe ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6995749297004019}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( CRS * ( ARS - RRS ) ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( CS / CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21460456668425135}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - ( Max( ( ACS * CRS ),Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( Max( ( RCSe - MLU ),RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7599483178498729}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "( ( ( PN - Min( Max( Min( CRS ,( CRS * ( ARS - RRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.2188229287347336}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.2162324220664221}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( DDR - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "( ( ( ( FirstVNF_CPU_Server / MDR ) / RRS ) * ( ( ( FirstVNF_CPU_Server * ( ( ACS / Max( DDR,FirstVNF_CPU ) ) - BR ) ) - FirstVNF_RAM ) + CRS ) ) + ( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC - ( CS + DS ) ) * Min( RMSe ,Max( RCSe,RRSe ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5962485814974403}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( ( FirstVNF_RAM * Min( Max( ( ( ( AMS - CRS ) + PN ) * MDR ),ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( DS / ( MLU - DS ) ) ) ,( ( Min( ( MUR - MUM ) ,Max( RMSe,RMSe ) ) + Max( RRSe,RMSe ) ) - RCSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6446862145912041}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / AMS ) ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.02544824494687562}, {"determining": "( Max( ( MDR + MDR ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * MUM )", "obj1": 0.2788844621513944, "obj2": 0.5981257142825828}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( ( FirstVNF_CPU / ( ( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) ) - DDR ) ) - RRS ) / Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,Min( RCSe ,Max( RCSe,MUR ) ) )", "obj1": 0.9920318725099602, "obj2": 0.003303362238252479}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( PN * AMS ) ,Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - ( Min( Max( DDR,ACS ) ,MRS ) - ( PN - ACS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( ( MUM + MUC ) / ( CS / MUM ) ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( MUR - ( ( RRSe + ( DS - RCSe ) ) * MUR ) ) * ( Max( MUC,MUM ) + Max( ( RRSe / ( RCSe + MUM ) ),( ( MUM * ( MUC / ( DS * RCSe ) ) ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RRSe ) ) ) ) ) / MLU ) ) / ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_RAM ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem / Min( PN ,( ( CRS - DDR ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( MLU + MUC ) ) ) * Min( Max( ( ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) - Min( ( ( CS / DS ) / Max( ( MUC / CS ),CS ) ) ,( Max( Min( MUM ,MUR ),MUR ) / RMSe ) ) ),MUM ) ,( MUM * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Const ) - RRS ) ,( ( FirstVNF_CPU_Server + ( ( ( ( Max( MDR,ACS ) * ARS ) / RRS ) + ( DDR + CRS ) ) - ( ( ( FirstVNF_CPU_Server / Const ) - RRS ) - BR ) ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( DS + MUC ) ) ) * Min( Max( ( Min( ( ( CS / DS ) / CS ) ,( ( ( RCSe * MUC ) - RRSe ) / RMSe ) ) - ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) ),MUM ) ,( ( ( CS / DS ) / CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / RRSe ) / ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RCSe ) ) ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( DS,( MUM + RCSe ) ) ) ,RMSe ),CS ),( ( Min( ( Min( MUM ,RMSe ) / ( RMSe - MLU ) ) ,MLU ) * RCSe ) - MLU ) ) / ( ( CS - ( MUR / Max( ( ( MUR * MUM ) + RRSe ),Max( ( RRSe - MUC ),MLU ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU / ( AMS - DDR ) ) ) / Max( ( Min( MDR ,( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) - RRS ) - FirstVNF_Mem ) * Min( PN ,FirstVNF_RAM ) ) ) - BR ),MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * RCSe ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "30": [{"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( FirstVNF_Mem / ( CRS - FirstVNF_RAM_Server ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - Max( MUR,( RRSe * ( MUR * CS ) ) ) ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( DS * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7714996065867364}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / MDR ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.48406374501992033, "obj2": 0.37423899726954335}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( Max( Max( Min( DDR ,FirstVNF_RAM_Server ),( ( Const - ( ( ( MRS / Const ) * ACS ) - FirstVNF_Mem_Server ) ) * Min( ACS ,FirstVNF_CPU ) ) ),( ( ( FirstVNF_CPU * ( ACS - BR ) ) * Max( BR,AMS ) ) * BR ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - ( ( RRSe + ( DS - RCSe ) ) * MUR ) ) * ( Max( MUC,( Max( ( MUC / Min( MUM ,( CS - MUR ) ) ),RCSe ) + MUC ) ) + Max( ( RRSe / ( RCSe + MUM ) ),( ( MUM * ( MUC / ( DS * RCSe ) ) ) - RMSe ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6995749297004019}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( CRS * ( ARS - RRS ) ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( CS / CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21460456668425135}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - ( Max( ( ACS * CRS ),Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( Max( ( RCSe - MLU ),RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7599483178498729}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "( ( ( PN - Min( Max( Min( CRS ,( CRS * ( ARS - RRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.2188229287347336}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.2162324220664221}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( ( DDR - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( ( FirstVNF_RAM * Min( Max( ( ( ( AMS - CRS ) + PN ) * MDR ),ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( DS / ( MLU - DS ) ) ) ,( ( Min( ( MUR - MUM ) ,Max( RMSe,RMSe ) ) + Max( RRSe,RMSe ) ) - RCSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6446862145912041}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / AMS ) ) * Const ) ) )", "choosing": "( ( Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.02544824494687562}, {"determining": "( Max( ( MDR + MRS ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + MDR )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,( ( DS / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.28286852589641437, "obj2": 0.5927723900890864}, {"determining": "( Max( ( MDR + MDR ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * MUM )", "obj1": 0.2788844621513944, "obj2": 0.5981257142825828}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( ( FirstVNF_CPU_Server - Max( CRS,Const ) ) - ( Max( DDR,DDR ) / Const ) ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / Max( ( RMSe / MUC ),( RRSe * Min( MUM ,MLU ) ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.06419318429519189}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( MDR ,RRS ) - Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Const ) ) ) * ( MRS / ( MDR + ( Max( AMS,ACS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) ) - ( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ( Min( MDR ,RRS ) + ( BR + DDR ) ) ) ) + MRS ) ) ) + Max( MRS,Const ) )", "choosing": "( Max( Min( MUR ,DS ),DS ) * MLU )", "obj1": 0.9581673306772909, "obj2": 0.02366381664627348}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( ( ( ( FirstVNF_CPU_Server / MDR ) / RRS ) * ( ( ( FirstVNF_CPU_Server * ( ( ACS / Max( DDR,FirstVNF_CPU ) ) - BR ) ) - FirstVNF_RAM ) + CRS ) ) + ( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC - ( CS + DS ) ) * Min( RMSe ,Max( RCSe,RRSe ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5962485814974403}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( PN - ARS ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( DS - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9920318725099602, "obj2": 0.0030237142979793615}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( PN * AMS ) ,Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - ( Min( Max( DDR,ACS ) ,MRS ) - ( PN - ACS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( ( MUM + MUC ) / ( CS / MUM ) ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( MLU + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( MUR - ( ( RRSe + ( DS - RCSe ) ) * MUR ) ) * ( Max( MUC,MUM ) + Max( ( RRSe / ( RCSe + MUM ) ),( ( MUM * ( MUC / ( DS * RCSe ) ) ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RRSe ) ) ) ) ) / MLU ) ) / ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_RAM ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem / Min( PN ,( ( CRS - DDR ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( MLU + MUC ) ) ) * Min( Max( ( ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) - Min( ( ( CS / DS ) / Max( ( MUC / CS ),CS ) ) ,( Max( Min( MUM ,MUR ),MUR ) / RMSe ) ) ),MUM ) ,( MUM * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Const ) - RRS ) ,( ( FirstVNF_CPU_Server + ( ( ( ( Max( MDR,ACS ) * ARS ) / RRS ) + ( DDR + CRS ) ) - ( ( ( FirstVNF_CPU_Server / Const ) - RRS ) - BR ) ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Min( RCSe ,Min( DS ,RCSe ) ),( DS + MUC ) ) ) * Min( Max( ( Min( ( ( CS / DS ) / CS ) ,( ( ( RCSe * MUC ) - RRSe ) / RMSe ) ) - ( ( MUR / ( Min( RRSe ,MUR ) / MLU ) ) - MUM ) ),MUM ) ,( ( ( CS / DS ) / CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) * Min( ( MRS / FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / RRSe ) / ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RCSe ) ) ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "31": [{"determining": "( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( Max( ( FirstVNF_Mem / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,CS ) - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( DS * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7714996065867364}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / MDR ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.48406374501992033, "obj2": 0.37423899726954335}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( Max( Min( CRS ,( CRS / RRS ) ),BR ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS + FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,( ( CRS * FirstVNF_Mem ) + ( PN * FirstVNF_RAM_Server ) ) ),DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) * ( ( ( ( ( CS - Max( CS,( RCSe * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.20916334661354583, "obj2": 0.6902525067313962}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( CRS * ( ARS - RRS ) ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( CS / CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21460456668425135}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - ( Max( ( ACS * CRS ),Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( Max( ( RCSe - MLU ),RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7599483178498729}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS / FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,Min( ( MRS / PN ) ,RRS ) ),DDR ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( MUC * RRSe ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.19123505976095617, "obj2": 0.7238744229423686}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( ( PN - Min( Max( Min( CRS ,( CRS * ( ARS - RRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.2188229287347336}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( ( BR + BR ) - ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( MUR + MUM ) - ( RMSe * DS ) ) * MUM ) ,Max( DS,( ( MLU - MUR ) + DS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.029270003037608513}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.2162324220664221}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.950199203187251, "obj2": 0.023421788670937707}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.62747357295282}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( DDR - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "( Max( ( MDR + ( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + ( MDR + MRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) + MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5757304969267805}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( ( FirstVNF_RAM * Min( Max( ( ( ( AMS - CRS ) + PN ) * MDR ),ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( DS / ( MLU - DS ) ) ) ,( ( Min( ( MUR - MUM ) ,Max( RMSe,RMSe ) ) + Max( RRSe,RMSe ) ) - RCSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6446862145912041}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( Max( ( MDR + MRS ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + MDR )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,( ( DS / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.28286852589641437, "obj2": 0.5927723900890864}, {"determining": "( Max( ( MDR + MDR ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * MUM )", "obj1": 0.2788844621513944, "obj2": 0.5981257142825828}, {"determining": "( Max( ( MDR + MRS ),( AMS - CRS ) ) + Min( PN ,MRS ) )", "choosing": "( ( RRSe - Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) * ( RMSe + CS ) )", "obj1": 0.28884462151394424, "obj2": 0.582725979337275}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9063745019920318, "obj2": 0.06092863199216824}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "( ( ( ( FirstVNF_CPU_Server / MDR ) / RRS ) * ( ( ( FirstVNF_CPU_Server * ( ( ACS / Max( DDR,FirstVNF_CPU ) ) - BR ) ) - FirstVNF_RAM ) + CRS ) ) + ( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC - ( CS + DS ) ) * Min( RMSe ,Max( RCSe,RRSe ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5962485814974403}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( PN - ARS ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( DS - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9920318725099602, "obj2": 0.0030237142979793615}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( PN * AMS ) ,Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - ( Min( Max( DDR,ACS ) ,MRS ) - ( PN - ACS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( ( MUM + MUC ) / ( CS / MUM ) ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( FirstVNF_Mem / ( CRS - FirstVNF_RAM_Server ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - Max( MUR,( RRSe * ( MUR * CS ) ) ) ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( MLU + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( MUR - ( ( RRSe + ( DS - RCSe ) ) * MUR ) ) * ( Max( MUC,MUM ) + Max( ( RRSe / ( RCSe + MUM ) ),( ( MUM * ( MUC / ( DS * RCSe ) ) ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - MUR ) + ( ( RMSe - Min( DS ,( ( RRSe + RCSe ) / Min( ( MUM - CS ) ,( MUM / RRSe ) ) ) ) ) / MLU ) ) / ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "32": [{"determining": "( ( FirstVNF_CPU_Server - ( ( ( ARS / ARS ) / Max( FirstVNF_RAM,( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ) + Min( FirstVNF_RAM ,( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - RMSe ) * ( ( DS - ( ( ( MUR + RRSe ) / Min( ( RRSe / Min( MLU ,RMSe ) ) ,( Min( MLU ,RMSe ) * ( MUC * CS ) ) ) ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( Max( ( FirstVNF_Mem / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,CS ) - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( DS * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7714996065867364}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / MDR ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.48406374501992033, "obj2": 0.37423899726954335}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( Max( Min( CRS ,( CRS / RRS ) ),BR ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS + FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,( ( CRS * FirstVNF_Mem ) + ( PN * FirstVNF_RAM_Server ) ) ),DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) * ( ( ( ( ( CS - Max( CS,( RCSe * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.20916334661354583, "obj2": 0.6902525067313962}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( CRS * ( ARS - RRS ) ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( CS / CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21460456668425135}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - ( Max( ( ACS * CRS ),Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( Max( ( RCSe - MLU ),RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7599483178498729}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( Min( Min( FirstVNF_RAM ,ARS ) ,DDR ) / ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) )", "choosing": "( Min( CS ,MUR ) / ( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) )", "obj1": 0.9442231075697212, "obj2": 0.022413369558298212}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( ( PN - Min( Max( Min( CRS ,( CRS * ( ARS - RRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.2188229287347336}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS / FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,Min( ( MRS / PN ) ,RRS ) ),DDR ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( MUC * RRSe ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.19123505976095617, "obj2": 0.7238744229423686}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.2162324220664221}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( Max( Max( FirstVNF_Mem_Server,( ( Const - ( FirstVNF_RAM - ( ( CRS / Const ) * RRS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ),( Max( FirstVNF_RAM,RRS ) * ( Max( ( FirstVNF_RAM * MDR ),Min( MRS ,( ( RRS / FirstVNF_RAM_Server ) + ( MDR * DDR ) ) ) ) * Max( FirstVNF_RAM,DDR ) ) ) ) + ( FirstVNF_CPU / Max( PN,CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( ( RCSe / MLU ) * CS ) * ( ( MLU / RCSe ) * ( Max( Max( ( RRSe * ( RMSe - DS ) ),( RMSe - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6253975115357647}, {"determining": "( ( DDR - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Max( ( MDR + ( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + ( MDR + MRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) + MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5757304969267805}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( ( FirstVNF_RAM * Min( Max( ( ( ( AMS - CRS ) + PN ) * MDR ),ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( DS / ( MLU - DS ) ) ) ,( ( Min( ( MUR - MUM ) ,Max( RMSe,RMSe ) ) + Max( RRSe,RMSe ) ) - RCSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6446862145912041}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Max( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_Mem ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( MUC ,MUM ) ),MUR ) + ( CS * ( ( MUR / ( ( MUR + RRSe ) - MUR ) ) * ( MUR / CS ) ) ) ) - MLU ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1892430278884462, "obj2": 0.7263894150137027}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( Max( ( MDR + MRS ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + MDR )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,( ( DS / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.28286852589641437, "obj2": 0.5927723900890864}, {"determining": "( Max( ( MDR + MDR ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * MUM )", "obj1": 0.2788844621513944, "obj2": 0.5981257142825828}, {"determining": "( Max( ( MDR + MRS ),( AMS - CRS ) ) + Min( PN ,MRS ) )", "choosing": "( ( RRSe - Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) * ( RMSe + CS ) )", "obj1": 0.28884462151394424, "obj2": 0.582725979337275}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9063745019920318, "obj2": 0.06092863199216824}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "( ( ( ( FirstVNF_CPU_Server / MDR ) / RRS ) * ( ( ( FirstVNF_CPU_Server * ( ( ACS / Max( DDR,FirstVNF_CPU ) ) - BR ) ) - FirstVNF_RAM ) + CRS ) ) + ( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC - ( CS + DS ) ) * Min( RMSe ,Max( RCSe,RRSe ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5962485814974403}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( PN - ARS ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( DS - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9920318725099602, "obj2": 0.0030237142979793615}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( ARS / FirstVNF_RAM_Server ) + ( MRS - ( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,RMSe ) ) / ( Min( CS ,( RMSe / Min( Max( RRSe,( RCSe * CS ) ) ,RMSe ) ) ) / MLU ) ) * ( ( Max( RMSe,MUM ) * ( ( ( DS * CS ) - ( RMSe * RMSe ) ) / ( DS / RRSe ) ) ) - RRSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( FirstVNF_Mem / ( CRS - FirstVNF_RAM_Server ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - Max( MUR,( RRSe * ( MUR * CS ) ) ) ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( MLU + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( MUR - ( ( RRSe + ( DS - RCSe ) ) * MUR ) ) * ( Max( MUC,MUM ) + Max( ( RRSe / ( RCSe + MUM ) ),( ( MUM * ( MUC / ( DS * RCSe ) ) ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "33": [{"determining": "( ( ( ( ( ( AMS + CRS ) + FirstVNF_RAM ) * MRS ) - ARS ) - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( Max( CS,RMSe ) ,RCSe ),( ( MUC + Max( Min( MUC ,MUM ),DS ) ) / ( MUC + ( ( RMSe / MUC ) - MUM ) ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( ARS / ARS ) / Max( FirstVNF_RAM,( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ) + Min( FirstVNF_RAM ,( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - RMSe ) * ( ( DS - ( ( ( MUR + RRSe ) / Min( ( RRSe / Min( MLU ,RMSe ) ) ,( Min( MLU ,RMSe ) * ( MUC * CS ) ) ) ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( DS * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7714996065867364}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / MDR ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.48406374501992033, "obj2": 0.37423899726954335}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( Max( Min( CRS ,( CRS / RRS ) ),BR ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS + FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,( ( CRS * FirstVNF_Mem ) + ( PN * FirstVNF_RAM_Server ) ) ),DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) * ( ( ( ( ( CS - Max( CS,( RCSe * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.20916334661354583, "obj2": 0.6902525067313962}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( CRS * ( ARS - RRS ) ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( CS / CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21460456668425135}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - ( Max( ( ACS * CRS ),Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( Max( ( RCSe - MLU ),RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7599483178498729}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( Min( Min( FirstVNF_RAM ,ARS ) ,DDR ) / ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) )", "choosing": "( Min( CS ,MUR ) / ( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) )", "obj1": 0.9442231075697212, "obj2": 0.022413369558298212}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( ( PN - Min( Max( Min( CRS ,( CRS * ( ARS - RRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.2188229287347336}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS / FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,Min( ( MRS / PN ) ,RRS ) ),DDR ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( MUC * RRSe ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.19123505976095617, "obj2": 0.7238744229423686}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.2162324220664221}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) / ( AMS + PN ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( MUR * ( DS / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7374744264872787}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( DDR - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Max( ( MDR + ( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + ( MDR + MRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) + MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5757304969267805}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7460416475641707}, {"determining": "( ( FirstVNF_RAM * Min( Max( ( ( ( AMS - CRS ) + PN ) * MDR ),ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( DS / ( MLU - DS ) ) ) ,( ( Min( ( MUR - MUM ) ,Max( RMSe,RMSe ) ) + Max( RRSe,RMSe ) ) - RCSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6446862145912041}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - MUR ) )", "obj1": 0.17131474103585656, "obj2": 0.7450649848458968}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Max( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_Mem ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( MUC ,MUM ) ),MUR ) + ( CS * ( ( MUR / ( ( MUR + RRSe ) - MUR ) ) * ( MUR / CS ) ) ) ) - MLU ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1892430278884462, "obj2": 0.7263894150137027}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( Max( ( MDR + MRS ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + MDR )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,( ( DS / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.28286852589641437, "obj2": 0.5927723900890864}, {"determining": "( Max( ( MDR + MDR ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * MUM )", "obj1": 0.2788844621513944, "obj2": 0.5981257142825828}, {"determining": "( Max( ( MDR + MRS ),( AMS - CRS ) ) + Min( PN ,MRS ) )", "choosing": "( ( RRSe - Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) * ( RMSe + CS ) )", "obj1": 0.28884462151394424, "obj2": 0.582725979337275}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9063745019920318, "obj2": 0.06092863199216824}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( Max( Max( FirstVNF_Mem_Server,( ( Const - ( FirstVNF_RAM - ( ( CRS / Const ) * RRS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ),( Max( FirstVNF_RAM,RRS ) * ( Max( ( FirstVNF_RAM * MDR ),Min( MRS ,( ( RRS / FirstVNF_RAM_Server ) + ( MDR * DDR ) ) ) ) * Max( FirstVNF_RAM,DDR ) ) ) ) + ( FirstVNF_CPU / Max( PN,CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( ( RCSe / MLU ) * CS ) * ( ( MLU / RCSe ) * ( Max( Max( ( RRSe * ( RMSe - DS ) ),( RMSe - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6253975115357647}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "( ( ( ( FirstVNF_CPU_Server / MDR ) / RRS ) * ( ( ( FirstVNF_CPU_Server * ( ( ACS / Max( DDR,FirstVNF_CPU ) ) - BR ) ) - FirstVNF_RAM ) + CRS ) ) + ( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC - ( CS + DS ) ) * Min( RMSe ,Max( RCSe,RRSe ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5962485814974403}, {"determining": "( Max( Max( FirstVNF_Mem_Server,( ( Const - ( ( ( CRS / Const ) * DDR ) - FirstVNF_RAM ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ),( Max( FirstVNF_RAM,RRS ) * ( Max( ARS,Min( MRS ,( ( RRS / FirstVNF_RAM_Server ) + ( MDR * DDR ) ) ) ) * Max( FirstVNF_RAM,DDR ) ) ) ) + ( FirstVNF_CPU / ( CRS / DDR ) ) )", "choosing": "( ( ( ( MUR * DS ) + ( DS + ( RMSe * ( Min( MUR ,RMSe ) - ( Max( MUC,CS ) + RCSe ) ) ) ) ) - Max( ( MUC * RCSe ),MLU ) ) * ( ( ( RCSe / MLU ) * CS ) / ( ( Max( Max( RCSe,( MLU - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) * ( MLU / RCSe ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6253975115357647}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( ( CS + ( MLU * CS ) ) * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7546501353218321}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( ( PN - ARS ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( DS - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9920318725099602, "obj2": 0.0030237142979793615}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( ARS / FirstVNF_RAM_Server ) + ( MRS - ( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,RMSe ) ) / ( Min( CS ,( RMSe / Min( Max( RRSe,( RCSe * CS ) ) ,RMSe ) ) ) / MLU ) ) * ( ( Max( RMSe,MUM ) * ( ( ( DS * CS ) - ( RMSe * RMSe ) ) / ( DS / RRSe ) ) ) - RRSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( Max( ( FirstVNF_Mem / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,CS ) - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( FirstVNF_Mem / ( CRS - FirstVNF_RAM_Server ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - Max( MUR,( RRSe * ( MUR * CS ) ) ) ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "34": [{"determining": "( ( ( FirstVNF_CPU / ( AMS - DDR ) ) - RRS ) / Min( ( ( ( CRS / Const ) * MDR ) - FirstVNF_RAM ) ,MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( ( MUM + RCSe ),CS ) ) ,MUM ),CS ),( Min( Min( Min( ( MLU / MUM ) ,( MUR + MUR ) ) ,RMSe ) ,Min( MLU ,( Min( CS ,CS ) - ( RMSe / MLU ) ) ) ) * ( ( MUM + ( ( RMSe * RMSe ) - RRSe ) ) / RCSe ) ) ) / ( ( CS + ( MUR / Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( AMS + CRS ) + FirstVNF_RAM ) * MRS ) - ARS ) - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( Max( CS,RMSe ) ,RCSe ),( ( MUC + Max( Min( MUC ,MUM ),DS ) ) / ( MUC + ( ( RMSe / MUC ) - MUM ) ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( DS * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7714996065867364}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / MDR ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.48406374501992033, "obj2": 0.37423899726954335}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( Max( Min( CRS ,( CRS / RRS ) ),BR ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS + FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,( ( CRS * FirstVNF_Mem ) + ( PN * FirstVNF_RAM_Server ) ) ),DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) * ( ( ( ( ( CS - Max( CS,( RCSe * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.20916334661354583, "obj2": 0.6902525067313962}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ARS * Const ) + Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS * MUC ) / RCSe ) * Min( ( Min( ( ( MUM + Min( MUM ,DS ) ) - ( RMSe + CS ) ) ,RRSe ) - ( DS / Max( MLU,DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7368511227113808}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.34462151394422313, "obj2": 0.5391716372973989}, {"determining": "( Max( Max( FirstVNF_Mem_Server,( ( RRS + DDR ) * BR ) ),( ( ( FirstVNF_CPU * ( BR - ACS ) ) * Max( BR,AMS ) ) + BR ) ) + Max( ( ( BR * FirstVNF_RAM ) * CRS ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / DS ) - ( ( DS + Max( Max( ( MUM / ( RRSe + MUR ) ),RRSe ),( Max( Min( MUM ,RRSe ),MUR ) / ( ( MLU + RMSe ) / ( MUM + DS ) ) ) ) ) / ( MUR / ( MUM + DS ) ) ) ) * ( Max( MUC,MUM ) + Max( ( RRSe / ( ( ( MUM + ( RMSe / RMSe ) ) / Max( RMSe,( MUR - MUR ) ) ) / ( CS / RMSe ) ) ),( ( RMSe / MLU ) / RCSe ) ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7692168721015672}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( CRS * ( ARS - RRS ) ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( CS / CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21460456668425135}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( Min( Min( FirstVNF_RAM ,ARS ) ,DDR ) / ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) )", "choosing": "( Min( CS ,MUR ) / ( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) )", "obj1": 0.9442231075697212, "obj2": 0.022413369558298212}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( ( PN - Min( Max( Min( CRS ,( CRS * ( ARS - RRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.2188229287347336}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "( ( ( ARS * Min( Max( ( ( ( RRS - PN ) + PN ) * MDR ),ACS ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_RAM / BR ) ,Max( DDR,MDR ) ) - Min( ( Const * MDR ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( Min( ( ( ( MLU - RRSe ) / Min( ( CS - MUC ) ,RRSe ) ) - CS ) ,MUC ),( Max( Min( MUM ,( ( DS * MUC ) / RCSe ) ),MUM ) * RRSe ) ) + ( RCSe * RRSe ) ) * ( ( ( Max( DS,( DS * ( MUR / MUC ) ) ) - MUC ) + MUR ) * RRSe ) )", "obj1": 0.38247011952191234, "obj2": 0.5058885193451856}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS / FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,Min( ( MRS / PN ) ,RRS ) ),DDR ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( MUC * RRSe ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.19123505976095617, "obj2": 0.7238744229423686}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.2162324220664221}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( DDR - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "( Max( ( MDR + ( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + ( MDR + MRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) + MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5757304969267805}, {"determining": "( ( ARS * Min( Max( ( ( ( RRS - PN ) + FirstVNF_Mem_Server ) * MDR ),ACS ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( DS / Max( MLU,DS ) ) ) * Min( ( Min( ( ( MUM + Min( MUM ,DS ) ) - ( RMSe + CS ) ) ,RRSe ) - ( DS / Max( MLU,DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5948121684559701}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( Max( ( MDR + MRS ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + MDR )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,( ( DS / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.28286852589641437, "obj2": 0.5927723900890864}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Max( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_Mem ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( MUC ,MUM ) ),MUR ) + ( CS * ( ( MUR / ( ( MUR + RRSe ) - MUR ) ) * ( MUR / CS ) ) ) ) - MLU ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1892430278884462, "obj2": 0.7263894150137027}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( ( RRS - PN ) + PN ) * MDR ) + ( Min( ( FirstVNF_RAM / BR ) ,Max( DDR,MDR ) ) - Min( ( Const * MDR ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( Min( MUM ,MUC ),( MUM + Min( MUM ,DS ) ) ) + ( RCSe * RRSe ) ) * ( ( ( Max( DS,( DS * ( MUR / MUC ) ) ) - MUC ) + MUR ) * RRSe ) )", "obj1": 0.3844621513944223, "obj2": 0.49954324127714006}, {"determining": "( Max( ( MDR + MRS ),( AMS - CRS ) ) + Min( PN ,MRS ) )", "choosing": "( ( RRSe - Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) * ( RMSe + CS ) )", "obj1": 0.28884462151394424, "obj2": 0.582725979337275}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9063745019920318, "obj2": 0.06092863199216824}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( Max( Max( FirstVNF_Mem_Server,( ( Const - ( FirstVNF_RAM - ( ( CRS / Const ) * RRS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ),( Max( FirstVNF_RAM,RRS ) * ( Max( ( FirstVNF_RAM * MDR ),Min( MRS ,( ( RRS / FirstVNF_RAM_Server ) + ( MDR * DDR ) ) ) ) * Max( FirstVNF_RAM,DDR ) ) ) ) + ( FirstVNF_CPU / Max( PN,CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( ( RCSe / MLU ) * CS ) * ( ( MLU / RCSe ) * ( Max( Max( ( RRSe * ( RMSe - DS ) ),( RMSe - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6253975115357647}, {"determining": "( ( FirstVNF_RAM * Min( Max( ( ( ( AMS - CRS ) + PN ) * MDR ),ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( DS / ( MLU - DS ) ) ) ,( ( Min( ( MUR - MUM ) ,Max( RMSe,RMSe ) ) + Max( RRSe,RMSe ) ) - RCSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6446862145912041}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Max( ( ( CRS / Min( ( FirstVNF_CPU - MDR ) ,( ARS * FirstVNF_Mem ) ) ) * MRS ),DDR ) + Min( FirstVNF_RAM_Server ,Max( ( ARS / Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server / MDR ) ),MDR ) ),PN ) ) )", "choosing": "( ( ( ( MUR * DS ) + ( DS + ( RMSe * ( Min( MUR ,RMSe ) - ( Max( MUC,CS ) + RCSe ) ) ) ) ) - Max( ( MUC * RCSe ),MLU ) ) * ( ( ( RCSe / MLU ) * CS ) / ( ( Max( Max( RCSe,( MLU - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) * ( MLU / RCSe ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6438619971932437}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "( Max( Max( FirstVNF_Mem_Server,( ( Const - ( ( ( CRS / Const ) * DDR ) - FirstVNF_RAM ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ),( Max( FirstVNF_RAM,RRS ) * ( Max( ARS,Min( MRS ,( ( RRS / FirstVNF_RAM_Server ) + ( MDR * DDR ) ) ) ) * Max( FirstVNF_RAM,DDR ) ) ) ) + ( FirstVNF_CPU / ( CRS / DDR ) ) )", "choosing": "( ( ( ( MUR * DS ) + ( DS + ( RMSe * ( Min( MUR ,RMSe ) - ( Max( MUC,CS ) + RCSe ) ) ) ) ) - Max( ( MUC * RCSe ),MLU ) ) * ( ( ( RCSe / MLU ) * CS ) / ( ( Max( Max( RCSe,( MLU - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) * ( MLU / RCSe ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6253975115357647}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( PN - ARS ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( DS - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9920318725099602, "obj2": 0.0030237142979793615}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( ARS / FirstVNF_RAM_Server ) + ( MRS - ( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,RMSe ) ) / ( Min( CS ,( RMSe / Min( Max( RRSe,( RCSe * CS ) ) ,RMSe ) ) ) / MLU ) ) * ( ( Max( RMSe,MUM ) * ( ( ( DS * CS ) - ( RMSe * RMSe ) ) / ( DS / RRSe ) ) ) - RRSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( ARS / ARS ) / Max( FirstVNF_RAM,( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ) + Min( FirstVNF_RAM ,( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - RMSe ) * ( ( DS - ( ( ( MUR + RRSe ) / Min( ( RRSe / Min( MLU ,RMSe ) ) ,( Min( MLU ,RMSe ) * ( MUC * CS ) ) ) ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( Max( ( FirstVNF_Mem / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,CS ) - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_CPU,BR ) / ( Const - ACS ) ),( ( ARS - FirstVNF_RAM_Server ) - Min( ACS ,AMS ) ) ) * Min( Min( MRS ,FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( FirstVNF_Mem / ( CRS - FirstVNF_RAM_Server ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - Max( MUR,( RRSe * ( MUR * CS ) ) ) ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Max( ( CRS / ( BR - DDR ) ),ACS ) + DDR ) + FirstVNF_CPU ) ,BR ) - ( ( ( FirstVNF_CPU + Const ) / ARS ) + Min( Min( BR ,FirstVNF_RAM_Server ) ,MDR ) ) ) + ( MDR - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - RRSe ),( MUM * RMSe ) ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}], "35": [{"determining": "( ( Max( Const,( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) ) + BR ) / Min( Max( ( CRS - FirstVNF_RAM_Server ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( DS + RRSe ) - MUM ) * Min( ( RCSe / ( ( ( DS + RRSe ) - MUM ) + RMSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / ( AMS - DDR ) ) - RRS ) / Min( ( ( ( CRS / Const ) * MDR ) - FirstVNF_RAM ) ,MDR ) )", "choosing": "Min( ( MUM - ( RCSe + MUR ) ) ,( Max( Max( Min( ( RCSe + Max( ( MUM + RCSe ),CS ) ) ,MUM ),CS ),( Min( Min( Min( ( MLU / MUM ) ,( MUR + MUR ) ) ,RMSe ) ,Min( MLU ,( Min( CS ,CS ) - ( RMSe / MLU ) ) ) ) * ( ( MUM + ( ( RMSe * RMSe ) - RRSe ) ) / RCSe ) ) ) / ( ( CS + ( MUR / Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( DS * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.12749003984063745, "obj2": 0.7714996065867364}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Min( MDR ,( ( ( ACS / ( ACS - ( DDR / ( RRS / MRS ) ) ) ) / MRS ) - PN ) ) )", "choosing": "( ( ( RRSe / Max( Max( ( RMSe * MUM ),Max( Max( ( RCSe * RRSe ),Min( MLU ,CS ) ),RCSe ) ),( DS + MUC ) ) ) * ( ( MUM / ( ( RRSe - Min( RRSe ,MLU ) ) / ( RRSe - MLU ) ) ) / RCSe ) ) * ( MLU / RCSe ) )", "obj1": 0.6135458167330677, "obj2": 0.29015993296390435}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / MDR ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,Max( ( ( MUR * MUM ) + RRSe ),( MUR - RMSe ) ) ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.48406374501992033, "obj2": 0.37423899726954335}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / MLU ),DS ) ,( Max( MUR,( MLU * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.23651182463545575}, {"determining": "Min( Min( RRS ,PN ) ,Min( MDR ,( ( ( FirstVNF_RAM_Server * PN ) / MDR ) + ( Min( Const ,MRS ) - AMS ) ) ) )", "choosing": "( ( CS * Min( MUR ,( Min( MUR ,( MUR / Max( RMSe,DS ) ) ) / Max( RMSe,DS ) ) ) ) - Min( RCSe ,( RCSe - MUM ) ) )", "obj1": 0.7848605577689243, "obj2": 0.10181320966141892}, {"determining": "( ( BR - MDR ) - Min( CRS ,( ( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * Min( CRS ,( CRS - AMS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - CS ) ) + RMSe ) - ( ( Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( MUR + RCSe ) ) / ( RRSe / ( CS - DS ) ) ) ),MUM ) - Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) / MLU ) )", "obj1": 0.8306772908366534, "obj2": 0.08175672821976677}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.5398406374501992, "obj2": 0.36731526493348104}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,MDR ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( RMSe - CS ) * ( Max( DS,( ( Max( ( ( RMSe / MUR ) / MUR ),Max( DS,DS ) ) * MUM ) * CS ) ) + MUR ) )", "obj1": 0.44223107569721115, "obj2": 0.45003233780274643}, {"determining": "( Max( Min( CRS ,( CRS / RRS ) ),BR ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS + FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,( ( CRS * FirstVNF_Mem ) + ( PN * FirstVNF_RAM_Server ) ) ),DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) * ( ( ( ( ( CS - Max( CS,( RCSe * MUC ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.20916334661354583, "obj2": 0.6902525067313962}, {"determining": "( ( ( Const - MDR ) + CRS ) / Min( Max( ( CRS - DDR ),( FirstVNF_Mem * Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( DS * Min( ( MUM / RCSe ) ,Min( Max( ( DS * MUC ),( MUR * MUR ) ) ,( RCSe / DS ) ) ) ) / ( MUM * RRSe ) )", "obj1": 0.5876494023904383, "obj2": 0.31402514214825994}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( AMS + PN ) ),Max( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR * ( RRSe / RMSe ) ) + ( ( DS * MUM ) * CS ) )", "obj1": 0.42231075697211157, "obj2": 0.4680372352706992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ACS ) ) ) / Const ) ) + Min( ( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) ,MDR ) )", "choosing": "( ( DS - MUC ) * ( Max( DS,( ( ( DS + MUC ) + RMSe ) * CS ) ) + MUR ) )", "obj1": 0.5597609561752988, "obj2": 0.3460827545483654}, {"determining": "( ( ARS * Const ) + Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS * MUC ) / RCSe ) * Min( ( Min( ( ( MUM + Min( MUM ,DS ) ) - ( RMSe + CS ) ) ,RRSe ) - ( DS / Max( MLU,DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7368511227113808}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + ( MDR - FirstVNF_CPU_Server ) ) * RRS ) + ( MDR * RRS ) )", "choosing": "( ( ( MUR / RRSe ) / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6583782145033187}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,( ACS - Const ) ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( ( MUM * RMSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.20423364251295786}, {"determining": "( ( ( FirstVNF_CPU * ( BR + ARS ) ) - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.40039840637450197, "obj2": 0.4840597941710835}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( MUR * Min( Min( RCSe ,MUM ) ,Min( DS ,RMSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.3245516567062975}, {"determining": "( ( ARS * Min( Max( ( ( PN + ( RRS - Min( ACS ,Const ) ) ) * MDR ),ACS ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + PN )", "choosing": "( Max( MUM,( ( ( MLU - RRSe ) * Min( ( Max( MLU,DS ) - MUC ) ,RRSe ) ) - CS ) ) * Min( ( Min( ( MUR * RRSe ) ,RRSe ) - ( ( CS + MLU ) / Max( MLU,DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.3386454183266932, "obj2": 0.5263605508341929}, {"determining": "( Max( Max( FirstVNF_Mem_Server,( ( RRS + DDR ) * BR ) ),( ( ( FirstVNF_CPU * ( BR - ACS ) ) * Max( BR,AMS ) ) + BR ) ) + Max( ( ( BR * FirstVNF_RAM ) * CRS ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / DS ) - ( ( DS + Max( Max( ( MUM / ( RRSe + MUR ) ),RRSe ),( Max( Min( MUM ,RRSe ),MUR ) / ( ( MLU + RMSe ) / ( MUM + DS ) ) ) ) ) / ( MUR / ( MUM + DS ) ) ) ) * ( Max( MUC,MUM ) + Max( ( RRSe / ( ( ( MUM + ( RMSe / RMSe ) ) / Max( RMSe,( MUR - MUR ) ) ) / ( CS / RMSe ) ) ),( ( RMSe / MLU ) / RCSe ) ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7692168721015672}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Min( CS ,( ( RCSe - MUM ) * Max( ( ( MUM / RMSe ) + MUM ),( MUC + ( MLU / MUM ) ) ) ) ) ),MUM ) * ( ( MUR / ( RRSe - ( CS * DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( ( ( Max( RCSe,MUR ) / ( MUM * MUM ) ) * Max( RCSe,Max( CS,RMSe ) ) ) + Max( ( DS * ( MLU / DS ) ),DS ) ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.13403030108954564}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( CRS * ( ARS - RRS ) ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( CS / CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6952191235059761, "obj2": 0.21460456668425135}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / ( ARS - RRS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / MUM ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17397672170385448}, {"determining": "( Max( Max( ( Min( FirstVNF_Mem_Server ,DDR ) - FirstVNF_CPU_Server ),ACS ),MDR ) + ( Const - ( ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) - ARS ) ) )", "choosing": "( Min( MUM ,RMSe ) * ( ( ( ( RRSe * MUM ) + ( MUC + ( Max( ( RMSe / CS ),DS ) + MUR ) ) ) * Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) / Max( Max( RRSe,CS ),( ( ( RRSe * MUC ) * MUM ) + Max( DS,MUM ) ) ) ) )", "obj1": 0.9322709163346613, "obj2": 0.03466943953178956}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) - MUR ) / ( ( RRSe - MUR ) - ( ( RMSe - Min( DS ,( MUM + RRSe ) ) ) / MLU ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07811503024224725}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - CRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13858402989303595}, {"determining": "( ( ( ( DDR / PN ) * ( ( PN * Min( FirstVNF_RAM_Server ,MRS ) ) - AMS ) ) * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( Max( Max( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ),( RMSe - ( CS + ( MUM + MUC ) ) ) ),MUM ),( DS + MUC ) ) ) * ( MLU / RCSe ) )", "obj1": 0.9103585657370518, "obj2": 0.03944976833645971}, {"determining": "( Min( Min( FirstVNF_RAM ,ARS ) ,DDR ) / ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) )", "choosing": "( Min( CS ,MUR ) / ( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) )", "obj1": 0.9442231075697212, "obj2": 0.022413369558298212}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUM,( MUM - ( ( MUM - ( CS + MUM ) ) * DS ) ) ) * ( ( MUR / ( MUC - ( CS + DS ) ) ) + ( ( MUM * RMSe ) + ( MUC / ( MUM + Max( ( MUR * ( DS / MLU ) ),DS ) ) ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.1513712976724395}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( ARS ,( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) ) )", "choosing": "( ( DS - CS ) * ( Max( MUM,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.35856573705179284, "obj2": 0.519909208587007}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + Min( CRS ,( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * ( RCSe - MLU ) ) * CS ) ) + MUR ) )", "obj1": 0.3665338645418327, "obj2": 0.5116107876370128}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Const ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( ( FirstVNF_CPU_Server - ( ( BR / ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) / Const ) ) + AMS )", "choosing": "( ( DS - CS ) * ( DS + MUC ) )", "obj1": 0.31274900398406374, "obj2": 0.5557184233881002}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( Max( FirstVNF_Mem,Const ) / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUR * ( DS / MLU ) ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.9641434262948207, "obj2": 0.022076668389394073}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( ( Max( ( ( ACS - DDR ) - ( FirstVNF_CPU_Server - Const ) ),( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( ACS - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) ) + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( ( ( RMSe - RCSe ) / MLU ),RMSe ) )", "obj1": 0.9721115537848606, "obj2": 0.01580006171134765}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Min( RMSe ,RMSe ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS - CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7390438247011952, "obj2": 0.15389822579012558}, {"determining": "( ( ( DDR + ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ARS ) ) ) ) * BR ) + ( FirstVNF_CPU_Server + AMS ) )", "choosing": "( ( Min( MUC ,MUC ) / MUC ) * ( RRSe / ( ( DS * MUM ) * CS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7045887202125747}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( MUR / MUR ) * Min( ( RRSe * MUC ) ,Max( RRSe,MLU ) ) ) ) * Min( MUC ,RRSe ) )", "obj1": 0.27091633466135456, "obj2": 0.6018524348643297}, {"determining": "( Min( MRS ,ACS ) - Max( ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( Max( ARS,FirstVNF_RAM_Server ) ,ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS / RRSe ) * RMSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( MRS - RRS ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( DS - CS ) * ( Max( DS,( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.29880478087649404, "obj2": 0.5716900746211736}, {"determining": "( ( ( PN - Min( Max( Min( CRS ,( CRS * ( ARS - RRS ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.2188229287347336}, {"determining": "Min( ( AMS + ( Min( MDR ,AMS ) / Max( FirstVNF_Mem,Const ) ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( CS + DS ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5610434867167097}, {"determining": "( ( ( ARS * Min( Max( ( ( ( RRS - PN ) + PN ) * MDR ),ACS ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_RAM / BR ) ,Max( DDR,MDR ) ) - Min( ( Const * MDR ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( Min( ( ( ( MLU - RRSe ) / Min( ( CS - MUC ) ,RRSe ) ) - CS ) ,MUC ),( Max( Min( MUM ,( ( DS * MUC ) / RCSe ) ),MUM ) * RRSe ) ) + ( RCSe * RRSe ) ) * ( ( ( Max( DS,( DS * ( MUR / MUC ) ) ) - MUC ) + MUR ) * RRSe ) )", "obj1": 0.38247011952191234, "obj2": 0.5058885193451856}, {"determining": "( Max( Min( CRS ,FirstVNF_RAM_Server ),Const ) + Max( FirstVNF_CPU_Server,( Const - Max( Min( ( Min( ( RRS * PN ) ,( FirstVNF_Mem_Server / ACS ) ) / ( ( ACS / FirstVNF_RAM ) - ( DDR + CRS ) ) ) ,Min( ( MRS / PN ) ,RRS ) ),DDR ) ) ) )", "choosing": "( ( DS / RRSe ) * ( ( ( ( ( MUR - Max( CS,( MUC * RRSe ) ) ) / RRSe ) - RCSe ) * DS ) - RCSe ) )", "obj1": 0.19123505976095617, "obj2": 0.7238744229423686}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.2162324220664221}, {"determining": "( ( ( DDR + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * BR ) + PN )", "choosing": "( ( ( ( MUR * ( RRSe / RMSe ) ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) ) / MUC ) * ( RRSe / Max( ( MUC - MUM ),( CS + MUC ) ) ) )", "obj1": 0.20318725099601595, "obj2": 0.7039824912614147}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( Max( ( RRS - ( ( ACS + RRS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007031791051912425}, {"determining": "( ( FirstVNF_RAM * Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( CS / ( MLU - DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6174549813853016}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,( CRS * ( DDR + FirstVNF_RAM ) ) ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MUM - MUR ) / ( ( RRSe - MUR ) - ( RRSe / MLU ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06956649014786427}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) - Max( MUM,( ( DS / MUM ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.06913907625729483}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) * Max( Max( BR,( ( ARS * Max( ARS,( RRS * FirstVNF_Mem ) ) ) - MRS ) ),Min( BR ,MRS ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUR ) * Min( RRSe ,Max( CS,Max( MUM,( MUM + ( RMSe * MUM ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4329872446356182}, {"determining": "( ( DDR - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( FirstVNF_Mem_Server - Max( BR,ARS ) ) ,( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( ( MUC + MUC ),( RCSe * Max( RCSe,MUC ) ) ),MUM ),( DS + MUC ) ) ) * Min( MUM ,( MUR - MUM ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5463500940057139}, {"determining": "( Max( ( MDR + ( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + ( MDR + MRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) + MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5757304969267805}, {"determining": "( ( ARS * Min( Max( ( ( ( RRS - PN ) + FirstVNF_Mem_Server ) * MDR ),ACS ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - MRS ) ) ) + Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,( DS / Max( MLU,DS ) ) ) * Min( ( Min( ( ( MUM + Min( MUM ,DS ) ) - ( RMSe + CS ) ) ,RRSe ) - ( DS / Max( MLU,DS ) ) ) ,( MUC - RCSe ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5948121684559701}, {"determining": "( Max( ( BR + CRS ),( CRS / FirstVNF_RAM_Server ) ) + Max( ( ARS + FirstVNF_RAM ),Max( BR,MRS ) ) )", "choosing": "( ( DS / ( RCSe / ( CS + MUC ) ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7278010439311713}, {"determining": "Min( ( ( Const * FirstVNF_CPU_Server ) + ( MDR + FirstVNF_CPU_Server ) ) ,( ( DDR - Min( MRS ,FirstVNF_CPU ) ) + AMS ) )", "choosing": "( ( RRSe / Max( Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),MUM ),Max( Max( RCSe,MUM ),Max( MUM,Min( MUR ,DS ) ) ) ) ) * ( MLU / RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6492208125465192}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server )", "choosing": "( ( RRSe / Max( Max( RCSe,MUM ),( DS + MUC ) ) ) * ( ( RRSe / Max( Max( Max( RCSe,MUM ),( DS + MUC ) ),( DS + MUC ) ) ) * ( MLU / RCSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6399613193244104}, {"determining": "( Max( ( MDR + MRS ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + MDR )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + CS ) ) ) * ( Max( RRSe,( ( DS / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.28286852589641437, "obj2": 0.5927723900890864}, {"determining": "( Max( ( MDR + Max( AMS,PN ) ),( Min( PN ,FirstVNF_Mem_Server ) * MRS ) ) + Min( PN ,CRS ) )", "choosing": "( ( RRSe - Max( RCSe,( RMSe + MUC ) ) ) * ( Max( RRSe,( ( RCSe / MUM ) / RCSe ) ) + MLU ) )", "obj1": 0.26294820717131473, "obj2": 0.6190882905297358}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),Max( ( ( FirstVNF_RAM - ( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_Mem ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( MUC ,MUM ) ),MUR ) + ( CS * ( ( MUR / ( ( MUR + RRSe ) - MUR ) ) * ( MUR / CS ) ) ) ) - MLU ) + ( ( RRSe / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.1892430278884462, "obj2": 0.7263894150137027}, {"determining": "( Max( ARS,( FirstVNF_Mem - ( ( MRS - MDR ) / ( ( MRS - MDR ) / Min( FirstVNF_CPU_Server ,Min( BR ,AMS ) ) ) ) ) ) + ( MDR + FirstVNF_CPU ) )", "choosing": "( Min( Min( RCSe ,( DS - ( CS + Max( ( RCSe - DS ),RRSe ) ) ) ) ,Max( ( Max( ( Min( CS ,RCSe ) + CS ),RMSe ) + RMSe ),Max( ( ( DS * MUM ) + ( ( Min( RCSe ,RCSe ) - Min( MUC ,MUM ) ) * ( ( MUM - MUR ) + ( MUC * CS ) ) ) ),RCSe ) ) ) * Max( ( ( Max( CS,( MLU / MLU ) ) - RRSe ) - Max( ( DS / ( ( Max( MLU,MLU ) - ( RRSe * RMSe ) ) * Max( RMSe,RMSe ) ) ),Max( ( MUM / ( ( RRSe / RMSe ) - RCSe ) ),Min( MUC ,CS ) ) ) ),MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.5848498595673653}, {"determining": "( ( ( ( RRS - PN ) + PN ) * MDR ) + ( Min( ( FirstVNF_RAM / BR ) ,Max( DDR,MDR ) ) - Min( ( Const * MDR ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( Min( MUM ,MUC ),( MUM + Min( MUM ,DS ) ) ) + ( RCSe * RRSe ) ) * ( ( ( Max( DS,( DS * ( MUR / MUC ) ) ) - MUC ) + MUR ) * RRSe ) )", "obj1": 0.3844621513944223, "obj2": 0.49954324127714006}, {"determining": "( Max( ( MDR + MRS ),( AMS - CRS ) ) + Min( PN ,MRS ) )", "choosing": "( ( RRSe - Max( Min( MLU ,MUR ),( RMSe + CS ) ) ) * ( RMSe + CS ) )", "obj1": 0.28884462151394424, "obj2": 0.582725979337275}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9063745019920318, "obj2": 0.06092863199216824}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8725099601593626, "obj2": 0.07190001216920486}, {"determining": "Min( Min( RRS ,Const ) ,( MDR / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06789517265902485}, {"determining": "( ( FirstVNF_RAM * Min( Max( ( ( ( AMS - CRS ) + PN ) * MDR ),ACS ) ,( FirstVNF_CPU_Server / ( MRS + FirstVNF_CPU_Server ) ) ) ) + Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + Max( DS,( ( ( DS + MUC ) * CS ) / Min( RRSe ,RRSe ) ) ) ) * Min( ( Min( Max( ( MUM + Min( MUM ,DS ) ),DS ) ,RRSe ) - ( DS / ( MLU - DS ) ) ) ,( ( Min( ( MUR - MUM ) ,Max( RMSe,RMSe ) ) + Max( RRSe,RMSe ) ) - RCSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6446862145912041}, {"determining": "( Min( ( AMS * Max( ( ARS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ,DDR ) / ( MDR + CRS ) )", "choosing": "( ( ( ( MUR * DS ) + ( DS + ( RMSe * ( Min( MUR ,RMSe ) - ( Max( MUC,MUM ) + RCSe ) ) ) ) ) - Max( ( MUC * RCSe ),MLU ) ) * ( ( ( RCSe / MLU ) * CS ) / ( ( Max( Max( RCSe,( MLU - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) * ( MLU / RCSe ) ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6297727396021253}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( ( ( Max( ( MUR / MLU ),MUM ) * RMSe ) + ( Min( MUM ,Min( MUC ,RRSe ) ) - ( RMSe + ( Max( MUM,Min( MUC ,DS ) ) - RMSe ) ) ) ) + RMSe ) - ( ( Min( MUR ,Min( ( MUC - RRSe ) ,RRSe ) ) - Max( Min( ( MUR / ( CS / MLU ) ) ,( ( RMSe + ( RRSe + RCSe ) ) / ( RRSe / ( CS / CS ) ) ) ),MUM ) ) / MLU ) )", "obj1": 0.7250996015936255, "obj2": 0.16255602448621045}, {"determining": "( Max( Max( FirstVNF_Mem_Server,( ( Const - ( FirstVNF_RAM - ( ( CRS / Const ) * RRS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ),( Max( FirstVNF_RAM,RRS ) * ( Max( ( FirstVNF_RAM * MDR ),Min( MRS ,( ( RRS / FirstVNF_RAM_Server ) + ( MDR * DDR ) ) ) ) * Max( FirstVNF_RAM,DDR ) ) ) ) + ( FirstVNF_CPU / Max( PN,CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( ( RCSe / MLU ) * CS ) * ( ( MLU / RCSe ) * ( Max( Max( ( RRSe * ( RMSe - DS ) ),( RMSe - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6253975115357647}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( ( Min( MDR ,AMS ) / Const ) + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( Max( ( MUC + MUC ),( DS + MUC ) ),MUM ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045148047279638314}, {"determining": "( Max( ( ( CRS / Min( ( FirstVNF_CPU - MDR ) ,( ARS * FirstVNF_Mem ) ) ) * MRS ),DDR ) + Min( FirstVNF_RAM_Server ,Max( ( ARS / Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server / MDR ) ),MDR ) ),PN ) ) )", "choosing": "( ( ( ( MUR * DS ) + ( DS + ( RMSe * ( Min( MUR ,RMSe ) - ( Max( MUC,CS ) + RCSe ) ) ) ) ) - Max( ( MUC * RCSe ),MLU ) ) * ( ( ( RCSe / MLU ) * CS ) / ( ( Max( Max( RCSe,( MLU - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) * ( MLU / RCSe ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6438619971932437}, {"determining": "( ( MDR + CRS ) / Min( Min( Max( ( ( FirstVNF_Mem_Server + BR ) / PN ),ACS ) ,ACS ) ,DDR ) )", "choosing": "( ( ( ( MUR * DS ) + ( DS + ( RMSe * ( Min( MUR ,RMSe ) - ( Max( MUC,CS ) + RCSe ) ) ) ) ) - Max( ( MUC * RCSe ),MLU ) ) * ( ( ( RCSe / MLU ) * CS ) / ( ( Max( Max( RCSe,( MLU - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) * ( MLU / RCSe ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6253975115357647}, {"determining": "( ( ( PN - Min( Max( Max( FirstVNF_CPU_Server,( MDR * AMS ) ),( ( AMS + Max( MDR,BR ) ) - Const ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( AMS,Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),DS ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RMSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( MLU * ( MUR - RCSe ) ) + ( ( RMSe * DS ) * ( ( MUM - RMSe ) / MLU ) ) )", "obj1": 0.8764940239043825, "obj2": 0.07109076678372388}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem / Const ) ) + Min( ARS ,MDR ) )", "choosing": "( ( DS - CS ) * ( Max( Max( RRSe,RCSe ),( ( DS * MUM ) * CS ) ) + MUR ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( PN - ARS ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( DS - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9920318725099602, "obj2": 0.0030237142979793615}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6305968586329042}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),( Const / BR ) ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( Min( RMSe ,RMSe ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( ( PN - Min( Max( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - DDR ) ) ),ARS ) ,FirstVNF_Mem_Server ) ) * ( ( DDR / PN ) - ACS ) ) + Max( Min( FirstVNF_CPU_Server ,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU / ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( ( MUR * ( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - RRSe ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) + MLU ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.21840371886185891}, {"determining": "( ( Const - FirstVNF_CPU ) + ( PN / FirstVNF_Mem ) )", "choosing": "( ( Min( Min( MUC ,RCSe ) ,( MUR * ( Min( RMSe ,CS ) - CS ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + MUC ) ) + MUC ) ) ) * ( MLU / RRSe ) )", "obj1": 0.9083665338645418, "obj2": 0.05893767705511456}, {"determining": "Min( ( PN * RRS ) ,Min( MDR ,( ( PN + CRS ) + Min( MDR ,( ( PN + CRS ) + ( Min( Max( DDR,ACS ) ,MRS ) - AMS ) ) ) ) ) )", "choosing": "( ( CS * Min( MUR ,Min( MUM ,( Max( ( CS - MUC ),( DS / DS ) ) - RRSe ) ) ) ) - Min( RCSe ,( Max( ( CS - MUC ),( DS / DS ) ) - MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Min( FirstVNF_RAM ,( ( ARS * ( FirstVNF_RAM_Server / MRS ) ) * ACS ) ) + ( FirstVNF_RAM - ( ( ( ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( ( RCSe / MUM ) - MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( CRS / Min( ( FirstVNF_CPU - MDR ) ,( ARS * FirstVNF_Mem ) ) ) * MRS ),DDR ) + Min( FirstVNF_RAM_Server ,Max( ( ARS / Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server / MDR ) ),MDR ) ),PN ) ) )", "choosing": "( ( ( ( MUR * DS ) + ( DS + ( RMSe * ( Min( MUR ,RMSe ) - ( Max( MUC,CS ) + RCSe ) ) ) ) ) - Max( ( MUC * RCSe ),MLU ) ) * ( ( ( RCSe / MLU ) * CS ) / ( ( Max( Max( RCSe,( MLU - MUR ) ),( DS + ( Min( CS ,DS ) / RCSe ) ) ) / RRSe ) * ( MLU / RCSe ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6438619971932437}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( ARS / FirstVNF_RAM_Server ) + ( MRS - ( ( ( FirstVNF_CPU - PN ) / BR ) + ( ( FirstVNF_Mem + PN ) * ( BR / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,RMSe ) ) / ( Min( CS ,( RMSe / Min( Max( RRSe,( RCSe * CS ) ) ,RMSe ) ) ) / MLU ) ) * ( ( Max( RMSe,MUM ) * ( ( ( DS * CS ) - ( RMSe * RMSe ) ) / ( DS / RRSe ) ) ) - RRSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "Min( ( ( PN / FirstVNF_CPU ) - FirstVNF_RAM_Server ) ,( MDR - FirstVNF_CPU ) )", "choosing": "( ( DS / MUM ) + Min( ( RMSe / MUC ) ,MUM ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_RAM - ( ( ( MDR + ( FirstVNF_RAM / ( PN / FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) * Const ) ) )", "choosing": "( ( Max( Max( MUC,CS ),Max( DS,( RRSe / MLU ) ) ) / MUC ) * Max( RCSe,Max( ( DS - MUM ),( DS + ( RRSe / MLU ) ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034862994335050817}, {"determining": "( Max( ( ( FirstVNF_CPU_Server - Const ) - ( ACS - DDR ) ),( ( RRS * Max( FirstVNF_CPU_Server,RRS ) ) / ( MDR - MRS ) ) ) * Max( ( Max( FirstVNF_RAM_Server,BR ) / ( Const - ACS ) ),( ( FirstVNF_CPU - Const ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( Min( ( RRSe / RCSe ) ,Min( Max( MUC,Min( RRSe ,MLU ) ) ,( ( ( MUM - RMSe ) / ( MUM - RRSe ) ) + DS ) ) ) + RRSe ) ) )", "obj1": 0.8745019920318725, "obj2": 0.07131992034764835}, {"determining": "( ( Min( Max( ( MDR - ( FirstVNF_CPU_Server + ARS ) ),RRS ) ,BR ) * ( ( DDR / PN ) - PN ) ) + Max( Max( FirstVNF_CPU_Server,BR ),AMS ) )", "choosing": "( ( RCSe - MLU ) * Min( Max( ( MLU - ( ( RCSe + ( ( RCSe / DS ) + RCSe ) ) - MUR ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( MUM / ( RCSe * MUM ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.21873615499679974}, {"determining": "( ( ( ( ( ( AMS + CRS ) + FirstVNF_RAM ) * MRS ) - ARS ) - ( AMS / PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( Max( CS,RMSe ) ,RCSe ),( ( MUC + Max( Min( MUC ,MUM ),DS ) ) / ( MUC + ( ( RMSe / MUC ) - MUM ) ) ) ) * ( Max( MUC,MUM ) + ( Max( Max( Min( RCSe ,Max( RCSe,MUR ) ),( MUR / ( RMSe + CS ) ) ),( ( ( DS - DS ) - Max( DS,MUC ) ) + Max( RRSe,RCSe ) ) ) + MUC ) ) ) * ( MLU / ( MUC - ( ( RMSe / MUC ) - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( ARS / ARS ) / Max( FirstVNF_RAM,( FirstVNF_CPU * ( BR + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) / Const ) ) + Min( FirstVNF_RAM ,( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - RMSe ) * ( ( DS - ( ( ( MUR + RRSe ) / Min( ( RRSe / Min( MLU ,RMSe ) ) ,( Min( MLU ,RMSe ) * ( MUC * CS ) ) ) ) * CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_RAM_Server ) - Min( RRS ,FirstVNF_CPU_Server ) ) / Min( Max( ( FirstVNF_Mem / Min( PN ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ),( CRS - DDR ) ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,CS ) - MLU ) * Min( Max( ( MLU / ( ( RCSe + Max( RRSe,Max( MUC,DS ) ) ) - RCSe ) ),Min( RCSe ,Min( RMSe ,CS ) ) ) ,( Max( MUR,( RRSe * ( MUR * CS ) ) ) / Min( Max( ( MLU - ( MUM - MLU ) ),RRSe ) ,( DS - ( ( ( RRSe * MUR ) * ( RCSe - RCSe ) ) * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}