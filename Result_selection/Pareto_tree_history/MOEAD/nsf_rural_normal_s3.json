{"1": [{"determining": "( ( BR + BR ) * ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( ( CS - RCSe ) - Max( RCSe,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.705389473717574}, {"determining": "Max( Min( ARS ,ARS ),Min( FirstVNF_CPU ,( ARS + MDR ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) * ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - Max( MUC,Max( CS,( RCSe / ( MUC * ( CS - MUM ) ) ) ) ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.570584719810771}, {"determining": "( Min( FirstVNF_Mem ,DDR ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( Max( MUR,MUC ) * ( MUM * MLU ) )", "obj1": 0.3844621513944223, "obj2": 0.5713415967549909}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( CS / MUR ) + Min( MUM ,CS ) )", "obj1": 0.2589641434262948, "obj2": 0.7200902496917868}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Max( ACS,ARS ) )", "choosing": "Min( ( DS - MUC ) ,( DS - CS ) )", "obj1": 0.3565737051792829, "obj2": 0.5692471513101613}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + FirstVNF_Mem ) ,( Const / MDR ) )", "choosing": "( ( RCSe + MUR ) + Max( MUR,MUC ) )", "obj1": 0.4721115537848606, "obj2": 0.5381786978451846}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( PN,ARS ) )", "choosing": "( ( MUR / DS ) / ( MUM + MUR ) )", "obj1": 0.19721115537848605, "obj2": 0.7656988081900528}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( Max( MLU,DS ) * ( RRSe - MLU ) )", "obj1": 0.3426294820717131, "obj2": 0.6161839983934195}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * ARS ) )", "choosing": "( ( MUR / MUM ) * ( RMSe * MUM ) )", "obj1": 0.40239043824701193, "obj2": 0.5535599250377935}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,AMS ) / ( ARS - FirstVNF_Mem ) )", "choosing": "( Max( DS,RCSe ) - Max( MLU,MUR ) )", "obj1": 0.4681274900398406, "obj2": 0.5403860451601034}, {"determining": "Max( ( Const - ARS ),( Const * FirstVNF_Mem ) )", "choosing": "Min( ( CS * ( ( DS + RRSe ) - MLU ) ) ,( ( ( Min( ( RRSe + RMSe ) ,( RMSe + MUR ) ) + Max( Max( ( MUC * DS ),DS ),RMSe ) ) + MUM ) / ( ( ( MUM + MUC ) * Min( ( RCSe + RRSe ) ,CS ) ) * CS ) ) )", "obj1": 0.3904382470119522, "obj2": 0.5616346778864125}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + CRS ) )", "choosing": "( ( MUC + MUM ) / Max( RRSe,RCSe ) )", "obj1": 0.3884462151394422, "obj2": 0.6200447604255427}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - ( CS / MLU ) )", "obj1": 0.37649402390438247, "obj2": 0.5733638071973635}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * RRSe ) )", "obj1": 0.9741035856573705, "obj2": 0.032791984475496444}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( FirstVNF_Mem * CRS ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.3665338645418327, "obj2": 0.593837790428519}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( CRS,MRS ) )", "choosing": "( Min( RRSe ,RRSe ) * Max( MLU,RMSe ) )", "obj1": 0.50199203187251, "obj2": 0.4352482691770196}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,( MUR - CS ) )", "obj1": 0.3426294820717131, "obj2": 0.5856396807061358}, {"determining": "( ( RRS + ARS ) - ( Const * Const ) )", "choosing": "( Min( MLU ,RMSe ) * Max( CS,MUR ) )", "obj1": 0.45617529880478086, "obj2": 0.5541879019893777}, {"determining": "Max( ( MRS + MDR ),( BR + MDR ) )", "choosing": "( Max( MUR,MLU ) * ( RRSe + RRSe ) )", "obj1": 0.4302788844621514, "obj2": 0.537468373886936}, {"determining": "( ( BR * Min( FirstVNF_Mem ,Min( CRS ,DDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * MUR ) / ( MUC + Min( MUC ,MUR ) ) )", "obj1": 0.4442231075697211, "obj2": 0.4926622113992036}, {"determining": "Min( Min( MRS ,AMS ) ,( PN * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM - RMSe ) ,( MUR - DS ) )", "obj1": 0.300796812749004, "obj2": 0.666571226785401}, {"determining": "( ( DDR / CRS ) - ( BR + ARS ) )", "choosing": "( ( CS * DS ) - Min( CS ,MUM ) )", "obj1": 0.31274900398406374, "obj2": 0.608422111923985}, {"determining": "Max( Min( ACS ,PN ),( ( FirstVNF_Mem_Server + ARS ) - RRS ) )", "choosing": "Min( ( RRSe / MUC ) ,( MUM + CS ) )", "obj1": 0.5099601593625498, "obj2": 0.46053773332723896}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( FirstVNF_CPU * MDR ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "Min( Max( Max( Const,FirstVNF_Mem_Server ),ARS ) ,( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( CS - ( RRSe + Max( ( MUM * ( CS * ( RMSe / MUM ) ) ),MUC ) ) ) + Min( CS ,MUM ) )", "obj1": 0.30876494023904383, "obj2": 0.6889948042353579}, {"determining": "Min( Min( FirstVNF_RAM ,Const ) ,( FirstVNF_Mem_Server * ( Const - FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * DS ) / ( RRSe * RCSe ) )", "obj1": 0.2729083665338645, "obj2": 0.7055235093703267}, {"determining": "( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) )", "choosing": "Max( ( MUR - CS ),( MLU / DS ) )", "obj1": 0.2350597609561753, "obj2": 0.7251881858523401}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.44223107569721115, "obj2": 0.547426178920431}, {"determining": "Min( ( ARS + PN ) ,Min( BR ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU * DS ) + RRSe ) - ( RCSe + MLU ) )", "obj1": 0.3147410358565737, "obj2": 0.6632683314902311}, {"determining": "Max( ( Max( ( ARS + Max( DDR,Max( Const,FirstVNF_Mem ) ) ),MDR ) + RRS ),( DDR + RRS ) )", "choosing": "( Max( ( RMSe - MUM ),( MUR + MUR ) ) / ( ( ( RMSe - RCSe ) + MUR ) + Min( MUR ,RRSe ) ) )", "obj1": 0.3047808764940239, "obj2": 0.6843824802137145}, {"determining": "( ( Min( MDR ,FirstVNF_CPU_Server ) + Min( Const ,FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_CPU ,ACS ) + Min( ARS ,MRS ) ) )", "choosing": "Min( Min( ( CS + MUM ) ,( RCSe * MUC ) ) ,( Min( MUC ,DS ) + Max( RCSe,RRSe ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5509951496318642}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,PN ) * ( ( MDR - RRS ) / FirstVNF_RAM ) ) ,( ( PN / FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( MUM / ( MUC + Min( MUM ,( ( ( MLU / MLU ) - RMSe ) - ( ( ( MLU - MUR ) + RRSe ) / ( CS / MLU ) ) ) ) ) ) + ( MLU / RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.666753938694035}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( BR / ACS ) ) - ( ( MRS - FirstVNF_RAM ) - ( ARS + DDR ) ) )", "choosing": "( ( ( RRSe * RCSe ) + ( DS + CS ) ) - ( ( MUR + CS ) - ( RRSe + MUC ) ) )", "obj1": 0.4541832669322709, "obj2": 0.4985312863816873}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) * Max( PN,FirstVNF_CPU ) ) ,( Min( PN ,BR ) * ( ACS - FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( RRSe * MUC ),( MLU / MUR ) ),( Max( CS,MLU ) / ( RCSe + MUM ) ) )", "obj1": 0.37649402390438247, "obj2": 0.59391594345624}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( AMS ,( RRS * PN ) ) )", "choosing": "Max( Min( ( CS + RMSe ) ,( RMSe + MUM ) ),( ( MUC - CS ) * Min( CS ,MLU ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5716628683395084}, {"determining": "( ( ( DDR + ACS ) - ARS ) - Min( ( MRS / DDR ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( CS + RMSe ),( RMSe / RRSe ) ) * Max( ( RCSe + MUM ),Max( MUM,MUM ) ) )", "obj1": 0.46215139442231074, "obj2": 0.5404114295930504}, {"determining": "( ( Min( BR ,CRS ) + Max( MDR,ARS ) ) / Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server - DDR ) ) )", "choosing": "( ( RCSe - Max( DS,RRSe ) ) / ( ( MUR / MUR ) * RRSe ) )", "obj1": 0.2948207171314741, "obj2": 0.6845741846065712}, {"determining": "Min( ( FirstVNF_CPU + ARS ) ,( Const - ( BR * ACS ) ) )", "choosing": "( ( ( RCSe - MUR ) + Max( RCSe,MUC ) ) / Max( Min( MUC ,CS ),( DS - CS ) ) )", "obj1": 0.3107569721115538, "obj2": 0.6536860598284683}, {"determining": "( ( ( CRS * AMS ) * ( FirstVNF_CPU_Server / MRS ) ) * ( Min( AMS ,MRS ) * ( DDR + CRS ) ) )", "choosing": "( ( Max( MLU,MUM ) / MLU ) / ( MUM * Max( MUC,MUC ) ) )", "obj1": 0.2908366533864542, "obj2": 0.6344800536672596}, {"determining": "( ( Min( ACS ,PN ) + ( AMS / DDR ) ) / ( ( FirstVNF_CPU_Server / MRS ) - ( ARS - MRS ) ) )", "choosing": "( Max( RMSe,RCSe ) + ( RRSe + ( CS + MLU ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5959636377602365}, {"determining": "Max( ( Min( FirstVNF_Mem ,MDR ) + ( FirstVNF_Mem - DDR ) ),( ( RRS + Const ) - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( MUM + DS ) * ( MUR - MUC ) ) + ( RCSe - MUR ) )", "obj1": 0.2848605577689243, "obj2": 0.6946748047721111}, {"determining": "Max( ( ( FirstVNF_Mem * FirstVNF_RAM ) / ( AMS * FirstVNF_CPU ) ),( ( RRS * ARS ) + ( MDR / AMS ) ) )", "choosing": "( Min( Min( MUC ,MUR ) ,( RMSe / MLU ) ) - ( Min( RRSe ,DS ) / ( RRSe * RMSe ) ) )", "obj1": 0.37250996015936255, "obj2": 0.6324356452149976}, {"determining": "Max( ( FirstVNF_RAM - ( BR / FirstVNF_CPU ) ),( PN - ( ARS - MRS ) ) )", "choosing": "Max( Min( Min( DS ,RRSe ) ,( DS + DS ) ),Max( ( MUR + CS ),( MUR + RCSe ) ) )", "obj1": 0.4820717131474104, "obj2": 0.5322846465393829}, {"determining": "( Max( ( BR / ACS ),( FirstVNF_RAM_Server * MDR ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( CS * RRSe ) / Max( ( RCSe + MUR ),MUC ) )", "obj1": 0.300796812749004, "obj2": 0.6296875064145491}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Const ) + Min( AMS ,FirstVNF_Mem_Server ) ) + ( Max( PN,MRS ) / ( PN * RRS ) ) )", "choosing": "Min( Max( RMSe,( MUC / MUR ) ) ,Max( ( CS + MUC ),RRSe ) )", "obj1": 0.3286852589641434, "obj2": 0.6815988751670371}, {"determining": "( ( ( ARS / MRS ) + ( RRS - AMS ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) - ( PN - ARS ) ) )", "choosing": "( ( Max( RRSe,MLU ) - ( CS / RMSe ) ) * ( ( RMSe - MLU ) / ( RRSe - MUR ) ) )", "obj1": 0.3665338645418327, "obj2": 0.6128039847305258}, {"determining": "Min( Max( Max( FirstVNF_RAM,MDR ),( Const * ARS ) ) ,( Min( MDR ,CRS ) / Max( FirstVNF_CPU_Server,ACS ) ) )", "choosing": "( ( ( MLU + RRSe ) - Max( RRSe,RRSe ) ) + Max( MUR,DS ) )", "obj1": 0.4163346613545817, "obj2": 0.572631836094199}, {"determining": "Max( ( MDR - AMS ),( Const - MDR ) )", "choosing": "( ( ( MUC + DS ) / ( MUC / CS ) ) / ( ( MUC - RRSe ) * ( CS / RMSe ) ) )", "obj1": 0.4043824701195219, "obj2": 0.5677998234192644}, {"determining": "Min( Max( ( DDR * FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ,Min( Min( DDR ,Const ) ,CRS ) )", "choosing": "( ( MUR / ( MUR - RCSe ) ) / ( CS - RCSe ) )", "obj1": 0.4043824701195219, "obj2": 0.5921328046013473}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) )", "choosing": "Min( ( ( Min( DS ,MLU ) / ( DS - CS ) ) + ( MUM - MUC ) ) ,Min( Max( MUM,MUR ) ,Max( Max( ( MLU / CS ),( RRSe * RRSe ) ),MUR ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5999162956509427}, {"determining": "( ( CRS * ( Const + BR ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( MLU / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.30278884462151395, "obj2": 0.6538430683487829}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_Mem_Server * BR ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( FirstVNF_RAM + CRS ) ) )", "choosing": "( ( RCSe + RRSe ) + Min( RCSe ,( MUM / RRSe ) ) )", "obj1": 0.42828685258964144, "obj2": 0.544375396215833}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) - Max( ( AMS - CRS ),FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - DS ) / ( ( RRSe * MLU ) * RMSe ) )", "obj1": 0.4601593625498008, "obj2": 0.512710412122174}, {"determining": "( ( ( ( MDR * MRS ) / ACS ) + Max( MRS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUR ,( Min( CS ,MUR ) - Min( DS ,( RRSe + MUM ) ) ) ) ,( DS + DS ) ),( ( MUM * MLU ) * ( MUC * MUC ) ) )", "obj1": 0.46613545816733065, "obj2": 0.5343430172838944}, {"determining": "( ( Max( FirstVNF_RAM,PN ) + ( CRS + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) + ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM * CS ) * MUM ) + ( RMSe * ( Max( MUC,CS ) * MLU ) ) )", "obj1": 0.3944223107569721, "obj2": 0.5849257071049526}, {"determining": "( ( MRS * ( MRS + FirstVNF_CPU ) ) / ( Max( MDR,ACS ) * BR ) )", "choosing": "( ( RMSe / RRSe ) / ( MUM * ( RMSe / CS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.7219484670262898}, {"determining": "( ( ( Const + AMS ) / Max( PN,FirstVNF_RAM_Server ) ) * ( Min( ACS ,FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Min( RCSe ,MUM ) / ( MUC + RMSe ) ) - ( ( RRSe - CS ) + Max( MUM,RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.6947901986670744}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( Max( ARS,ARS ),BR ) + Min( MDR ,AMS ) ),( ( Const * MRS ) / ( FirstVNF_Mem_Server + PN ) ) ) + Min( Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),( CRS + FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "( Min( DS ,MLU ) - ( Min( RRSe ,MLU ) / ( MUR / DS ) ) )", "obj1": 0.3844621513944223, "obj2": 0.5369986806071408}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( Min( MUC ,MLU ) - MLU ) / ( ( MUM / CS ) + MLU ) ) )", "obj1": 0.5856573705179283, "obj2": 0.41318619676839957}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.3565737051792829, "obj2": 0.6223393798320579}, {"determining": "( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_Mem_Server ) ) ,MDR ) + ( ( Max( DDR,ACS ) / FirstVNF_RAM ) / MDR ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( MUC + ( MUR - MUR ) ) - Min( MUC ,DS ) ) )", "obj1": 0.3047808764940239, "obj2": 0.6582969689858412}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,PN ) + Max( PN,CRS ) ) / Min( Min( RRS ,MDR ) ,( PN + ACS ) ) ) ,( Max( ( FirstVNF_CPU_Server / MRS ),( Const / CRS ) ) + ( PN * ARS ) ) )", "choosing": "Min( ( RRSe / Min( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) ,MUM ) ) ,( RRSe / ( RRSe - RMSe ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6402146348808438}, {"determining": "( ( MRS * PN ) / Min( RRS ,Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS - RRSe ) ) + Min( Max( MUC,CS ) ,RCSe ) )", "obj1": 0.34860557768924305, "obj2": 0.6731621759135646}, {"determining": "( ( CRS - BR ) - ( RRS - FirstVNF_CPU ) )", "choosing": "Max( ( MUM + ( MUM + MUM ) ),( RRSe * ( CS + Min( MUC ,MUC ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.5797536085728172}, {"determining": "( Min( AMS ,MDR ) / ( RRS / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( MLU / MUC ) + ( MUM - RRSe ) ) * ( ( MLU * MUC ) + ( MLU - RRSe ) ) ),( ( ( RRSe * RRSe ) / ( MUR + CS ) ) * ( Max( RCSe,MUM ) * ( DS / CS ) ) ) )", "obj1": 0.36852589641434264, "obj2": 0.6470725959442297}, {"determining": "Max( Min( Max( BR,FirstVNF_CPU ) ,FirstVNF_Mem ),Min( ACS ,( PN - ( DDR / DDR ) ) ) )", "choosing": "( Max( Max( ( MUC - DS ),( RMSe - RCSe ) ),( Max( DS,MUR ) + ( MUR - DS ) ) ) + ( ( ( CS - RRSe ) / ( MUC / MUM ) ) * Max( ( MUC * MUR ),( RRSe - CS ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.5904999623122624}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) + Min( ACS ,MRS ) )", "choosing": "( ( Max( ( MUM / RRSe ),Min( MUC ,RRSe ) ) + ( ( MLU + MUC ) - ( DS + RRSe ) ) ) / ( ( Max( CS,MUM ) + ( DS * DS ) ) + ( ( CS * MUC ) / Min( RRSe ,DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.5575483168995339}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( ( ( MUR + MLU ) / ( MLU - MLU ) ) / ( ( RMSe - CS ) * ( RMSe + DS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.06930449781740769}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,CRS ) * Min( ( AMS / Const ) ,( ( ACS / Max( Max( FirstVNF_Mem_Server,ACS ),FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "( Max( MLU,Min( ( RMSe * ( CS * ( ( ( RRSe / MUC ) * DS ) - MUC ) ) ) ,MUC ) ) + Min( MUM ,MUR ) )", "obj1": 0.4163346613545817, "obj2": 0.5508235482840547}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) + ( BR / ( Min( RRS ,( FirstVNF_CPU - ARS ) ) * MRS ) ) )", "choosing": "( ( DS * ( ( MUM * ( MUM * MUM ) ) / MUM ) ) * ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) - ( ( RRSe / MLU ) - ( Min( MLU ,RRSe ) * DS ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.6107238654002887}, {"determining": "( ( ( ( CRS + FirstVNF_CPU_Server ) - ( DDR * FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,( CRS * CRS ) ) ) * Max( Min( ( ARS + FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ),Max( ( AMS * Const ),( AMS + MDR ) ) ) )", "choosing": "Min( Max( Max( Max( RRSe,MUC ),( MLU * DS ) ),Min( ( MLU + MUC ) ,Max( MLU,CS ) ) ) ,Max( Max( Max( MUR,RMSe ),( MLU * RCSe ) ),( ( MUC + DS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.5858023833315873}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.4701195219123506, "obj2": 0.46151422092064087}, {"determining": "Max( Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / ( CRS + AMS ) ),( Min( DDR ,FirstVNF_Mem ) - ( ARS / MRS ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR - FirstVNF_CPU_Server ) ) + Min( ( BR - FirstVNF_RAM_Server ) ,( DDR - BR ) ) ) )", "choosing": "Max( ( MUC + DS ),Min( CS ,MUC ) )", "obj1": 0.47410358565737054, "obj2": 0.5151540222836212}, {"determining": "( ( ( Min( FirstVNF_RAM ,BR ) + ( FirstVNF_Mem / ACS ) ) + ( ( MRS / MRS ) * ( MRS + FirstVNF_Mem ) ) ) + Max( ( ( Const * FirstVNF_RAM ) / ( MDR + ACS ) ),( ( ARS / DDR ) - ( RRS - ARS ) ) ) )", "choosing": "( Max( Min( Max( DS,MUM ) ,( RMSe * MLU ) ),Min( ( MUC * MUR ) ,( RCSe - CS ) ) ) / ( Min( ( RCSe + RCSe ) ,( RMSe / MUM ) ) - ( Min( CS ,RCSe ) * Max( MLU,MLU ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5944343836663742}, {"determining": "Min( Max( ( ( Const + FirstVNF_RAM_Server ) * Min( PN ,PN ) ),( ( CRS * AMS ) + Max( FirstVNF_Mem,RRS ) ) ) ,Min( Max( Max( PN,AMS ),( FirstVNF_Mem + MRS ) ) ,( Min( FirstVNF_CPU ,DDR ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RCSe ,MLU ) * Min( MUC ,( Min( MLU ,RCSe ) / RCSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.538227323216926}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS * CRS ) + Max( FirstVNF_CPU,BR ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ),Max( Min( ( MRS + MDR ) ,( ACS * FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem - PN ) / ( MDR + DDR ) ) ) )", "choosing": "( ( Min( ( RCSe + MUR ) ,( MLU / RCSe ) ) * Min( ( DS + MUC ) ,Min( MUM ,RRSe ) ) ) / Min( ( Max( CS,CS ) / ( MLU / CS ) ) ,Min( ( RRSe / MUM ) ,Max( RMSe,RMSe ) ) ) )", "obj1": 0.38645418326693226, "obj2": 0.5580751126087952}, {"determining": "( ( Max( ( MDR - MRS ),( BR * ARS ) ) * ( ( AMS / FirstVNF_Mem ) * ( ACS / FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( RRS ,Const ) ) ,( ( CRS * FirstVNF_CPU_Server ) + Max( MRS,DDR ) ) ) )", "choosing": "Max( ( MUR + ( ( MUM + RRSe ) * Max( RCSe,DS ) ) ),( RCSe - Max( MUC,MUC ) ) )", "obj1": 0.44621513944223107, "obj2": 0.5417837280388191}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),( CRS - AMS ) ) - ( ( BR * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) ) ) * ( ( ( DDR - Const ) + Min( RRS ,BR ) ) * Min( ( MDR - MRS ) ,( DDR - FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( ( MUM + MUC ) / Max( DS,CS ) ) ,( Min( RCSe ,RMSe ) - Max( DS,DS ) ) ) ,( ( ( RCSe + MUM ) - ( RMSe * RMSe ) ) / Min( ( MUC / MUR ) ,( RMSe / CS ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.47026367171726563}, {"determining": "Max( ( FirstVNF_Mem * CRS ),( Max( ( FirstVNF_CPU_Server * Max( MRS,( ( RRS - BR ) - BR ) ) ),Min( Const ,FirstVNF_CPU_Server ) ) + ( ( RRS / PN ) * ( FirstVNF_CPU_Server - MRS ) ) ) )", "choosing": "( ( CS + Max( CS,( MUR * MLU ) ) ) * Min( ( DS - ( DS - MLU ) ) ,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Const + MRS ) ,( MDR * FirstVNF_CPU ) ),( Max( PN,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( ( Const * FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server * AMS ) / ( Const / RRS ) ) ) )", "choosing": "Max( Min( MUM ,( ( RMSe * RMSe ) - RRSe ) ),Min( DS ,( ( RCSe + MUM ) / MUC ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4581282637629064}], "2": [{"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( ( ( DDR + ACS ) - ARS ) - Min( Max( ( Const * FirstVNF_Mem ),( FirstVNF_CPU_Server - DDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( CS + RMSe ),( RMSe / RRSe ) ) * Max( DS,RRSe ) )", "obj1": 0.7888446215139442, "obj2": 0.22043705990084797}, {"determining": "( ( DDR - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( RMSe * RMSe ) )", "obj1": 0.8665338645418327, "obj2": 0.11601946759701552}, {"determining": "( ( PN + FirstVNF_CPU ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,MUR ) * Min( MUM ,MUC ) )", "obj1": 0.5856573705179283, "obj2": 0.370309284801761}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.5338645418326693, "obj2": 0.42893485544341764}, {"determining": "( ( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( Min( MUC ,MLU ) - ( MUC + MLU ) ) / ( ( MUM / CS ) + MLU ) ) )", "obj1": 0.6195219123505976, "obj2": 0.29242509278188633}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 0.9183266932270916, "obj2": 0.06026260389170632}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 0.6175298804780877, "obj2": 0.3551429120137536}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) + ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),Min( MUC ,RRSe ) ) + ( ( MLU + MUC ) - ( DS + RRSe ) ) ) / ( ( RMSe - CS ) * ( RMSe + DS ) ) )", "obj1": 0.900398406374502, "obj2": 0.07026479195036582}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( AMS,ARS ) )", "choosing": "( ( MUR / DS ) / ( ( DS * MUM ) / Min( RRSe ,MUM ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7807338535493941}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( MLU - MUC ) )", "obj1": 0.6792828685258964, "obj2": 0.26842514261446687}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( MRS - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / MUC )", "obj1": 0.4103585657370518, "obj2": 0.5070150197298965}, {"determining": "Max( ( Max( FirstVNF_CPU,MDR ) + RRS ),( Min( ARS ,MRS ) + RRS ) )", "choosing": "( Max( ( RMSe - MUM ),( MUR + MLU ) ) / ( Min( MUC ,DS ) + Max( RCSe,RRSe ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6899025697824196}, {"determining": "( ( BR * Max( ( MRS + MDR ),( ( MRS / ( ( PN - ARS ) / FirstVNF_Mem ) ) + MDR ) ) ) * Max( MDR,( FirstVNF_RAM_Server / ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / MUC ) / Min( MUC ,( MUM + MUC ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "Max( ( PN * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - CS )", "obj1": 0.9721115537848606, "obj2": 0.02529540313907527}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( Min( MDR ,FirstVNF_CPU_Server ) + Min( Const ,FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_CPU ,ACS ) + ( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) ) ,( Min( MUC ,DS ) + Max( RCSe,RRSe ) ) )", "obj1": 0.6693227091633466, "obj2": 0.28710788097359}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( MUM - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.50199203187251, "obj2": 0.4297604545148987}, {"determining": "( ( ( ( Min( RRS ,ACS ) - ACS ) - MRS ) / FirstVNF_Mem ) - ( PN * Min( RRS ,Const ) ) )", "choosing": "( ( ( ( CS - MUM ) * CS ) + ( MLU + ( MLU - MUC ) ) ) / ( MUM - ( CS - RCSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6685460453762722}, {"determining": "( ( MRS + FirstVNF_CPU_Server ) - ( Const + ( Min( AMS ,( FirstVNF_RAM - DDR ) ) + PN ) ) )", "choosing": "( ( MUM * ( ( ( RCSe + ( ( ( MUC - DS ) * ( RCSe * CS ) ) - Max( Max( DS,MUC ),MUR ) ) ) + ( MUR + ( RRSe + ( DS * RRSe ) ) ) ) * MUR ) ) - Max( ( RCSe / MUM ),MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) + Min( Max( BR,FirstVNF_CPU ) ,MRS ) )", "choosing": "( ( Max( ( MUM / RRSe ),Min( MUC ,RRSe ) ) + ( ( ( MUC / MUM ) + MUC ) - ( DS + RRSe ) ) ) / ( ( Max( CS,MUM ) + ( DS * DS ) ) + ( ( CS * MUC ) / Min( RRSe ,DS ) ) ) )", "obj1": 0.35856573705179284, "obj2": 0.5502890936562149}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),( CRS - AMS ) ) - ( ( BR * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) ) ) * ( ( ( DDR - Const ) + Min( RRS ,BR ) ) * Min( ( MDR - MRS ) ,( DDR - FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( ( MUM + MUC ) / Max( DS,CS ) ) ,( Min( RCSe ,RMSe ) - Max( DS,DS ) ) ) ,( ( ( RCSe + MUM ) - ( RMSe * RMSe ) ) / Min( ( MUC / MUR ) ,( RMSe / CS ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.45604955999264946}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - Min( DDR ,Const ) )", "choosing": "Min( Min( ( DS - RMSe ) ,( CS / RCSe ) ) ,Min( Max( MUC,( ( MUR / ( MUR - RCSe ) ) / ( CS - RCSe ) ) ) ,Max( MUM,MUR ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5937452855426476}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.9780876494023905, "obj2": 0.024862279852160503}, {"determining": "( ( Max( ( MDR - MRS ),( BR * ARS ) ) * ( ( AMS / FirstVNF_Mem ) * ( ACS / FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( RRS ,Const ) ) ,( ( CRS * FirstVNF_CPU_Server ) + Max( MRS,DDR ) ) ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( RMSe - MLU ) ) ,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( Max( ( Min( Const ,( PN - FirstVNF_Mem_Server ) ) - RRS ),CRS ) * Max( PN,( FirstVNF_Mem_Server + Min( Max( MDR,( FirstVNF_Mem - Const ) ) ,PN ) ) ) )", "choosing": "( ( Max( MUC,( RMSe - Min( MLU ,DS ) ) ) - MUR ) / ( RMSe - RCSe ) )", "obj1": 0.3426294820717131, "obj2": 0.5555408824677032}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "( ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUM / CS ) * ( MLU / DS ) ) ) )", "obj1": 0.21115537848605578, "obj2": 0.7346202358727479}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( FirstVNF_CPU * MDR ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "( ARS * ( Min( AMS ,MRS ) * ( DDR + CRS ) ) )", "choosing": "( ( Max( MLU,MUM ) / MLU ) / ( RRSe + ( CS + MLU ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6476868543086077}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( BR / ACS ) ) - ( ( MRS - FirstVNF_RAM ) - ( ARS + DDR ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5947397582306105}, {"determining": "( ( ( CRS * AMS ) * ( FirstVNF_CPU_Server / MRS ) ) * ( Min( AMS ,MRS ) * ( DDR + CRS ) ) )", "choosing": "( ( Max( MLU,MUM ) / MLU ) / ( MUM * Max( MUC,MUC ) ) )", "obj1": 0.2908366533864542, "obj2": 0.6344800536672596}, {"determining": "( Min( ( MDR * ( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / DDR ) ) + FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) - ( ARS - MDR ) )", "choosing": "( Max( CS,( ( MUC * ( Min( ( RRSe * Max( RRSe,RMSe ) ) ,RCSe ) * ( Max( ( RRSe - MUM ),Max( RMSe,RMSe ) ) - Max( RCSe,MUR ) ) ) ) - Min( MUM ,Max( ( ( MUC - DS ) / DS ),( ( ( DS / MUR ) * ( RCSe / RCSe ) ) + ( DS - MUC ) ) ) ) ) ) / ( ( ( Max( ( ( MUR - RCSe ) / RRSe ),MLU ) / MUC ) * MLU ) - CS ) )", "obj1": 0.199203187250996, "obj2": 0.745848896285398}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "Max( ( FirstVNF_Mem * CRS ),( Max( ( FirstVNF_CPU_Server * Max( MRS,( ( RRS - BR ) - BR ) ) ),Min( Const ,FirstVNF_CPU_Server ) ) + ( ( RRS / PN ) * ( FirstVNF_CPU_Server - MRS ) ) ) )", "choosing": "( ( CS + Max( CS,( MUR * MLU ) ) ) * Min( ( DS - ( DS - MLU ) ) ,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) + ( BR / ( Min( RRS ,( FirstVNF_CPU - ARS ) ) * MRS ) ) )", "choosing": "( ( DS * ( ( MUM * ( MUM * MUM ) ) / MUM ) ) * ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) - ( ( RRSe / MLU ) - ( Min( MLU ,RRSe ) * DS ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.6107238654002887}, {"determining": "Min( ( ( Max( CRS,PN ) + Max( PN,CRS ) ) / Min( Min( RRS ,MDR ) ,( PN + ACS ) ) ) ,( Max( ( FirstVNF_CPU_Server / MRS ),( Const / CRS ) ) + ( PN * ARS ) ) )", "choosing": "Min( ( RRSe / Min( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) ,MUM ) ) ,( RRSe / ( RRSe - RMSe ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6402146348808438}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) * Max( PN,FirstVNF_CPU ) ) ,( Min( PN ,BR ) * ( ACS - FirstVNF_CPU ) ) )", "choosing": "Max( Min( ( CS + RMSe ) ,( RMSe + MUM ) ),( ( MUC - CS ) * Min( CS ,MLU ) ) )", "obj1": 0.47410358565737054, "obj2": 0.4564981436657345}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.4701195219123506, "obj2": 0.46151422092064087}, {"determining": "( ( ( ( CRS + FirstVNF_CPU_Server ) - ( DDR * FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,( CRS * CRS ) ) ) * Max( Min( ( ARS + FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ),Max( ( AMS * Const ),( AMS + MDR ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.4701195219123506, "obj2": 0.46151422092064087}, {"determining": "Max( Min( ACS ,PN ),( RRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "( Min( Min( ( MUR * CS ) ,( CS * MUM ) ) ,( ( RCSe * MLU ) * ( RMSe + RCSe ) ) ) * ( Min( Min( RMSe ,MLU ) ,Max( DS,DS ) ) - ( ( RRSe / MLU ) - ( MUR * DS ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.6107238654002887}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) * Max( PN,FirstVNF_CPU ) ) ,( Min( PN ,BR ) * ( ACS - FirstVNF_CPU ) ) )", "choosing": "Max( Min( ( CS + RMSe ) ,( RMSe + MUM ) ),( ( MUC - CS ) * Min( CS ,MLU ) ) )", "obj1": 0.47410358565737054, "obj2": 0.4564981436657345}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Min( Min( MUR ,Max( ( RRSe / MUC ),Min( ( Max( ( CS - ( MLU + DS ) ),CS ) - ( RCSe + DS ) ) ,( ( Max( Max( DS,MUC ),MLU ) * MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR - DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUR + MUM ) ) / DS ) ),( DS + DS ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * CRS ) ,( ( DDR * ARS ) - ( BR + FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,RMSe ) - RRSe ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Const ) - ( ( ( Max( ACS,Min( RRS ,FirstVNF_CPU_Server ) ) / Max( DDR,FirstVNF_CPU_Server ) ) - BR ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( Min( MUC ,MUC ) / ( RMSe + ( Min( ( ( Max( MLU,CS ) / ( MUM - ( CS + MUC ) ) ) * Max( RCSe,MUM ) ) ,Min( DS ,Min( ( RCSe + Min( RMSe ,RCSe ) ) ,( RMSe * DS ) ) ) ) + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Min( CRS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM * ( ( FirstVNF_CPU + ACS ) / BR ) ) ) * Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + CS ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * Min( Const ,BR ) ) ) / Min( MDR ,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) * Max( DDR,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( MLU - MUC ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ( ( BR + FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),BR ) * ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( Max( ( CS * MUC ),DS ) / ( ( ( DS - CS ) / RMSe ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) + ( MRS * ARS ) )", "choosing": "Min( ( CS * ( ( DS + RRSe ) - MLU ) ) ,( ( ( Min( ( RRSe + RMSe ) ,( RMSe + MUR ) ) + Max( Max( ( MUC * DS ),DS ),RMSe ) ) + MUM ) / ( ( ( MUM + MUC ) * Min( ( RCSe + RRSe ) ,CS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU - ARS ) / ACS ) * Max( DDR,ACS ) ),( ( CRS - AMS ) * ( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe * MLU ) ,Min( RCSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,FirstVNF_RAM_Server ) - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( ( MUC + MUM ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( MUC + MUM ) / Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MLU ,MUM ) - ( CS / MLU ) ) + MUM ) / Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU ) / ( MRS - FirstVNF_CPU ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "Max( Max( RMSe,MUR ),Min( Min( MLU ,MLU ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ( Const / Max( Min( FirstVNF_RAM_Server ,MRS ),RRS ) ) ) / ( MRS - FirstVNF_CPU ) )", "choosing": "( Max( RMSe,MUR ) * Min( Min( MLU ,MLU ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( MDR ,FirstVNF_CPU_Server ) + Min( Const ,FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_CPU ,ACS ) + Min( ARS ,MRS ) ) ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + RRSe ) / ( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( CS + MUM ) ,( RCSe * MUC ) ) ,( Min( MUC ,DS ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / PN ) / ( BR - AMS ) ) * BR )", "choosing": "( Min( ( RRSe + ( ( ( RRSe * RCSe ) + ( DS + CS ) ) - ( ( MUR + CS ) - ( RRSe + MUC ) ) ) ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe * RCSe ) + ( DS + CS ) ) - ( ( MUR + CS ) - ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - Max( ( FirstVNF_RAM - ( BR / FirstVNF_CPU ) ),( PN - ( ARS - MRS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + Max( Min( Min( DS ,RRSe ) ,( DS + DS ) ),Max( ( MUR + CS ),( MUR + RCSe ) ) ) ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( RRS - MRS ) - FirstVNF_RAM_Server ) - ( BR / FirstVNF_CPU ) ),( PN - ( ARS - MRS ) ) )", "choosing": "Max( Min( Min( DS ,RRSe ) ,( DS + DS ) ),Max( ( CS + RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU_Server ,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( RMSe,( MUC / MUR ) ) ,Max( ( CS + MUC ),RRSe ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Max( RMSe,( MUC / MUR ) ) ,Max( ( CS + MUC ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - AMS ),( ( Min( MDR ,CRS ) / Max( FirstVNF_CPU_Server,ACS ) ) - MDR ) )", "choosing": "( ( ( MUC + DS ) / ( ( MLU + RRSe ) - Max( RRSe,RRSe ) ) ) / ( ( MUC - RRSe ) * ( CS / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( Const + BR ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) ) - ( ( Const + ARS ) * PN ) )", "choosing": "Min( Min( ( DS - RMSe ) ,( CS / RCSe ) ) ,Min( MUC ,Max( MUM,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( Const + ARS ) ) )", "choosing": "( Min( Max( MUC,MUR ) ,Max( MUM,MUR ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "Min( Min( ( DS - RMSe ) ,( CS / RCSe ) ) ,Min( Max( MUC,MUR ) ,Max( MUM,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( ( Const + BR ) / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - ( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( MLU / MUM ) ,Max( MUC,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( MLU / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( ( DDR - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( RMSe * RMSe ) )", "obj1": 0.8665338645418327, "obj2": 0.11601946759701552}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Min( ( CRS / ( Min( ARS ,( Max( BR,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( PN + ACS ) ) ) ) / AMS ) ) ,MRS ) )", "choosing": "( Min( CS ,( Min( ( Max( RRSe,RCSe ) * Min( ( ( DS + RRSe ) / Min( RMSe ,MUC ) ) ,RCSe ) ) ,RRSe ) / Min( DS ,DS ) ) ) + ( DS + MUR ) )", "obj1": 0.7888446215139442, "obj2": 0.1969353880656816}, {"determining": "( ( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( Min( MUC ,MLU ) - ( MUC + MLU ) ) / ( ( MUM / CS ) + MLU ) ) )", "obj1": 0.6195219123505976, "obj2": 0.29242509278188633}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 0.8286852589641435, "obj2": 0.1869157071920747}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU + MUM ) ,Min( MUM ,DS ) )", "obj1": 0.5338645418326693, "obj2": 0.41943151071566304}, {"determining": "( Max( DDR,AMS ) - ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( ( DS * MUM ) / Min( RRSe ,MUM ) ) ) / CS )", "obj1": 0.5657370517928287, "obj2": 0.3892223815219409}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) + ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),Min( MUC ,RRSe ) ) + ( ( MLU + MUC ) - ( DS + RRSe ) ) ) / ( ( RMSe - CS ) * ( RMSe + DS ) ) )", "obj1": 0.900398406374502, "obj2": 0.07026479195036582}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 0.6175298804780877, "obj2": 0.3551429120137536}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( AMS,ARS ) )", "choosing": "( ( MUR / DS ) / ( ( DS * MUM ) / Min( RRSe ,MUM ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7807338535493941}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( MLU - MUC ) )", "obj1": 0.6593625498007968, "obj2": 0.278850905245402}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( PN - ARS ) * ( PN - ARS ) )", "choosing": "( ( ( ( MLU + Min( ( MLU * CS ) ,Max( DS,MUR ) ) ) / ( MLU + DS ) ) + DS ) / ( MLU + DS ) )", "obj1": 0.250996015936255, "obj2": 0.6768901936998624}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( MUM - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.50199203187251, "obj2": 0.4297604545148987}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( MRS - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / MUC )", "obj1": 0.4103585657370518, "obj2": 0.5070150197298965}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "Max( ( Const - ARS ),( ( ( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) ) - Max( BR,DDR ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( MLU + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.0433850251680459}, {"determining": "Max( ( Max( FirstVNF_CPU,MDR ) + RRS ),( Min( ARS ,MRS ) + RRS ) )", "choosing": "( Max( ( RMSe - MUM ),( MUR + MLU ) ) / ( Min( MUC ,DS ) + Max( RCSe,RRSe ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6899025697824196}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - AMS )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / ( MLU * CS ) )", "obj1": 0.703187250996016, "obj2": 0.24335072373417088}, {"determining": "( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( DS ,( MUR - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.527450778362679}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( PN + FirstVNF_CPU ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,MUR ) * Min( MUM ,MUC ) )", "obj1": 0.5856573705179283, "obj2": 0.370309284801761}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( DS * DS )", "obj1": 0.9661354581673307, "obj2": 0.029497353208835016}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),( CRS - AMS ) ) - ( ( BR * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) ) ) * ( ( ( DDR - Const ) + Min( RRS ,BR ) ) * Min( ( MDR - MRS ) ,( DDR - FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( ( MUM + MUC ) / Max( DS,CS ) ) ,( Min( RCSe ,RMSe ) - Max( DS,DS ) ) ) ,( ( ( RCSe + MUM ) - ( RMSe * RMSe ) ) / Min( ( MUC / MUR ) ,( RMSe / CS ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.45604955999264946}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.9780876494023905, "obj2": 0.024862279852160503}, {"determining": "Max( ( FirstVNF_Mem * CRS ),( Max( ( FirstVNF_CPU_Server * Max( MRS,( ( RRS - BR ) - BR ) ) ),Min( Const ,FirstVNF_CPU_Server ) ) + ( ( RRS / PN ) * ( FirstVNF_CPU_Server - MRS ) ) ) )", "choosing": "( ( CS + Max( CS,( MUR * MLU ) ) ) * Min( ( DS - ( DS - MLU ) ) ,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( FirstVNF_Mem * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.18127490039840638, "obj2": 0.770785965626158}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.38645418326693226, "obj2": 0.5126000888903153}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 0.9183266932270916, "obj2": 0.06026260389170632}, {"determining": "( ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUM / CS ) * ( MLU / DS ) ) ) )", "obj1": 0.21115537848605578, "obj2": 0.7346202358727479}, {"determining": "( Max( DDR,AMS ) - ( ( ( PN / ( BR + MRS ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) )", "choosing": "( ( DS * MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,MUR ) ) )", "obj1": 0.8286852589641435, "obj2": 0.1869157071920747}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,Min( ( CRS / ( Min( ARS ,( Max( BR,FirstVNF_RAM_Server ) / PN ) ) - AMS ) ) ,MRS ) )", "choosing": "Min( Min( ( DS - MUC ) ,( RMSe + CS ) ) ,Min( MUM ,DS ) )", "obj1": 0.599601593625498, "obj2": 0.3617529276821579}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( FirstVNF_CPU * MDR ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "( ( BR * Max( ( MRS + MDR ),( ( MRS / ( ( PN - ARS ) / FirstVNF_Mem ) ) + MDR ) ) ) * Max( MDR,( FirstVNF_RAM_Server / ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / MUC ) / Min( MUC ,( MUM + MUC ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "( Max( ( Min( Const ,( PN - FirstVNF_Mem_Server ) ) - RRS ),CRS ) * Max( PN,( FirstVNF_Mem_Server + Min( Max( MDR,( FirstVNF_Mem - Const ) ) ,PN ) ) ) )", "choosing": "( ( Max( MUC,( RMSe - Min( MLU ,DS ) ) ) - MUR ) / ( RMSe - RCSe ) )", "obj1": 0.3426294820717131, "obj2": 0.5555408824677032}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( ( BR * ACS ) * Max( ( MRS + MDR ),( BR + MDR ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RMSe - DS ) )", "obj1": 0.3346613545816733, "obj2": 0.5568747273488474}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "Min( ( ( Max( CRS,PN ) + Max( PN,CRS ) ) / Min( Min( RRS ,Const ) ,( PN + ACS ) ) ) ,( FirstVNF_CPU + Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( PN * DDR ) ) ) )", "choosing": "Min( ( RRSe / Min( MUC ,MUM ) ) ,( RRSe / ( RRSe - RMSe ) ) )", "obj1": 0.3147410358565737, "obj2": 0.5876426217610915}, {"determining": "Max( ( ( Max( BR,FirstVNF_CPU ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( MUC / MUM ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( Max( ( MDR - MRS ),( BR * ARS ) ) * ( ( AMS / FirstVNF_Mem ) * ( ACS / FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( RRS ,Const ) ) ,( ( CRS * FirstVNF_CPU_Server ) + Max( MRS,DDR ) ) ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( RMSe - MLU ) ) ,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) + ( BR / ( Min( RRS ,( FirstVNF_CPU - ARS ) ) * MRS ) ) )", "choosing": "( ( DS * ( ( MUM * ( MUM * MUM ) ) / MUM ) ) * ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) - ( ( RRSe / MLU ) - ( Min( MLU ,RRSe ) * DS ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.6107238654002887}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( BR / ACS ) ) - ( ( MRS - FirstVNF_RAM ) - ( ARS + DDR ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5947397582306105}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + DS ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.30278884462151395, "obj2": 0.5921610349044563}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) * Max( PN,FirstVNF_CPU ) ) ,( Min( PN ,BR ) * ( ACS - FirstVNF_CPU ) ) )", "choosing": "Max( Min( ( CS + RMSe ) ,( RMSe + MUM ) ),( ( MUC - CS ) * Min( CS ,MLU ) ) )", "obj1": 0.47410358565737054, "obj2": 0.4564981436657345}, {"determining": "Max( ( PN * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - CS )", "obj1": 0.9721115537848606, "obj2": 0.02529540313907527}, {"determining": "Max( FirstVNF_Mem_Server,( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MLU / CS ),MUC ),MUR ) - ( CS / MLU ) )", "obj1": 0.31274900398406374, "obj2": 0.5876919898060411}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.4701195219123506, "obj2": 0.46151422092064087}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "( ( ( ( CRS + FirstVNF_CPU_Server ) - ( DDR * FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,( CRS * CRS ) ) ) * Max( Min( ( ARS + FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ),Max( ( AMS * Const ),( AMS + MDR ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( CS - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.4701195219123506, "obj2": 0.46151422092064087}, {"determining": "Max( Min( ACS ,PN ),( RRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( ( BR * ACS ) * ( Const / MDR ) )", "choosing": "( ( MUR * MLU ) / ( RMSe - DS ) )", "obj1": 0.3426294820717131, "obj2": 0.5555408824677032}, {"determining": "( ( BR * ACS ) * ( Const / MDR ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "Min( ( ( Max( CRS,PN ) + Max( PN,CRS ) ) / Min( Min( RRS ,Const ) ,( PN + ACS ) ) ) ,( Max( ( FirstVNF_CPU_Server / MRS ),( Const / CRS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,CRS ) ) )", "choosing": "Min( ( RRSe / Min( RRSe ,MUM ) ) ,( Min( MUC ,MUC ) / ( RRSe - RMSe ) ) )", "obj1": 0.300796812749004, "obj2": 0.593150672987337}, {"determining": "( ( FirstVNF_RAM_Server / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + ( BR / CRS ) )", "choosing": "( Min( Min( ( MUR * CS ) ,( CS * MUM ) ) ,( ( RCSe * MLU ) * ( RMSe + RCSe ) ) ) * ( Min( Min( RMSe ,MLU ) ,Max( DS,DS ) ) - ( ( RRSe / MLU ) - ( MUR * DS ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.6107238654002887}, {"determining": "( ( MRS + FirstVNF_CPU_Server ) - ( Const + ( Min( AMS ,( FirstVNF_RAM - DDR ) ) + PN ) ) )", "choosing": "( ( MUM * ( ( ( RCSe + ( ( ( MUC - DS ) * ( RCSe * CS ) ) - Max( Max( DS,MUC ),MUR ) ) ) + ( MUR + ( RRSe + ( DS * RRSe ) ) ) ) * MUR ) ) - Max( ( RCSe / MUM ),MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) * Max( PN,FirstVNF_CPU ) ) ,( Min( PN ,BR ) * ( ACS - FirstVNF_CPU ) ) )", "choosing": "Max( Min( ( CS + RMSe ) ,( RMSe + MUM ) ),( ( MUC - CS ) * Min( CS ,MLU ) ) )", "obj1": 0.47410358565737054, "obj2": 0.4564981436657345}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Min( Min( MUR ,Max( ( RRSe / MUC ),Min( ( Max( ( CS - ( MLU + DS ) ),CS ) - ( RCSe + DS ) ) ,( ( Max( Max( DS,MUC ),MLU ) * MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR - DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUR + MUM ) ) / DS ) ),( DS + DS ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * CRS ) ,( ( DDR * ARS ) - ( BR + FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,RMSe ) - RRSe ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Const ) - ( ( ( Max( ACS,Min( RRS ,FirstVNF_CPU_Server ) ) / Max( DDR,FirstVNF_CPU_Server ) ) - BR ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( Min( MUC ,MUC ) / ( RMSe + ( Min( ( ( Max( MLU,CS ) / ( MUM - ( CS + MUC ) ) ) * Max( RCSe,MUM ) ) ,Min( DS ,Min( ( RCSe + Min( RMSe ,RCSe ) ) ,( RMSe * DS ) ) ) ) + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Min( CRS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM * ( ( FirstVNF_CPU + ACS ) / BR ) ) ) * Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + CS ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * Min( Const ,BR ) ) ) / Min( MDR ,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) * Max( DDR,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( MLU - MUC ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ( ( BR + FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),BR ) * ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( Max( ( CS * MUC ),DS ) / ( ( ( DS - CS ) / RMSe ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) + ( MRS * ARS ) )", "choosing": "Min( ( CS * ( ( DS + RRSe ) - MLU ) ) ,( ( ( Min( ( RRSe + RMSe ) ,( RMSe + MUR ) ) + Max( Max( ( MUC * DS ),DS ),RMSe ) ) + MUM ) / ( ( ( MUM + MUC ) * Min( ( RCSe + RRSe ) ,CS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU - ARS ) / ACS ) * Max( DDR,ACS ) ),( ( CRS - AMS ) * ( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe * MLU ) ,Min( RCSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,FirstVNF_RAM_Server ) - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( ( MUC + MUM ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( MUC + MUM ) / Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MLU ,MUM ) - ( CS / MLU ) ) + MUM ) / Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU ) / ( MRS - FirstVNF_CPU ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "Max( Max( RMSe,MUR ),Min( Min( MLU ,MLU ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.7948207171314741, "obj2": 0.18234055301323546}, {"determining": "( ( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( Min( MUC ,MLU ) - ( MUC + MLU ) ) / ( ( MUM / CS ) + MLU ) ) )", "obj1": 0.6195219123505976, "obj2": 0.29242509278188633}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.7768924302788844, "obj2": 0.2055906381491202}, {"determining": "( Min( Max( Max( CRS,ACS ),( AMS * ACS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 0.6175298804780877, "obj2": 0.3551429120137536}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( AMS,ARS ) )", "choosing": "( ( MUR / DS ) / ( ( DS * MUM ) / Min( RRSe ,MUM ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7807338535493941}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( MLU - MUC ) )", "obj1": 0.6593625498007968, "obj2": 0.278850905245402}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "Max( ( ( Max( BR,FirstVNF_CPU ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( MUC / MUM ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( MUM - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.50199203187251, "obj2": 0.4297604545148987}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( Max( DDR,AMS ) - ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( ( DS * MUM ) / Min( RRSe ,MUM ) ) ) / CS )", "obj1": 0.5657370517928287, "obj2": 0.3892223815219409}, {"determining": "( ( PN - ARS ) * ( PN - ARS ) )", "choosing": "( ( ( ( MLU + Min( ( MLU * CS ) ,Max( DS,MUR ) ) ) / ( MLU + DS ) ) + DS ) / ( MLU + DS ) )", "obj1": 0.250996015936255, "obj2": 0.6768901936998624}, {"determining": "Max( ( Max( FirstVNF_CPU,MDR ) + RRS ),( Min( ARS ,MRS ) + RRS ) )", "choosing": "( Max( ( RMSe - MUM ),( MUR + MLU ) ) / ( Min( MUC ,DS ) + Max( RCSe,RRSe ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6899025697824196}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( FirstVNF_CPU * MDR ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( DS ,( MUR - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.527450778362679}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( MRS - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / MUC )", "obj1": 0.4103585657370518, "obj2": 0.5070150197298965}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - AMS )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / ( MLU * CS ) )", "obj1": 0.703187250996016, "obj2": 0.24335072373417088}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU + MUM ) ,Min( MUM ,DS ) )", "obj1": 0.5338645418326693, "obj2": 0.41943151071566304}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.7948207171314741, "obj2": 0.18234055301323546}, {"determining": "( ( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RRSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.5517928286852589, "obj2": 0.4142490450854097}, {"determining": "( ( PN + FirstVNF_CPU ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,MUR ) * Min( MUM ,MUC ) )", "obj1": 0.5856573705179283, "obj2": 0.370309284801761}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( Max( ( MDR - MRS ),( BR * ARS ) ) * ( ( AMS / FirstVNF_Mem ) * ( ACS / FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( RRS ,Const ) ) ,( ( CRS * FirstVNF_CPU_Server ) + Max( MRS,DDR ) ) ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( RMSe - MLU ) ) ,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( Min( RRS ,( RRS + ARS ) ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6279206235754994}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( FirstVNF_Mem * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.18127490039840638, "obj2": 0.770785965626158}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 0.9183266932270916, "obj2": 0.06026260389170632}, {"determining": "( ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUM / CS ) * ( MLU / DS ) ) ) )", "obj1": 0.21115537848605578, "obj2": 0.7346202358727479}, {"determining": "( ( BR * Max( ( MRS + MDR ),MDR ) ) * ( Const / CRS ) )", "choosing": "( ( ( MUR * RRSe ) / ( RMSe - DS ) ) / ( RMSe - DS ) )", "obj1": 0.33665338645418325, "obj2": 0.5530653433223534}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,Min( ( CRS / ( Min( ARS ,( Max( BR,FirstVNF_RAM_Server ) / PN ) ) - AMS ) ) ,MRS ) )", "choosing": "Min( Min( ( DS - MUC ) ,( RMSe + CS ) ) ,Min( MUM ,DS ) )", "obj1": 0.599601593625498, "obj2": 0.3617529276821579}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( RRSe ,MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.0413235678868107}, {"determining": "Max( ( Const - ARS ),( ( ( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) ) - Max( BR,DDR ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( MLU + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.0433850251680459}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( DS * DS )", "obj1": 0.9661354581673307, "obj2": 0.029497353208835016}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.28286852589641437, "obj2": 0.6139693521126193}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Min( ( CRS / ( Min( ARS ,( Max( BR,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( PN + ACS ) ) ) ) / AMS ) ) ,MRS ) )", "choosing": "( Min( CS ,( Min( ( Max( RRSe,RCSe ) * Min( ( ( DS + RRSe ) / Min( RMSe ,MUC ) ) ,RCSe ) ) ,RRSe ) / Min( DS ,DS ) ) ) + ( DS + MUR ) )", "obj1": 0.7888446215139442, "obj2": 0.1969353880656816}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RRSe + ( ( MLU - MUM ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.01369113540569548}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RCSe / CS ) - MUC ) * DS ) - ( CS / MLU ) ) - ( CS / MLU ) )", "obj1": 0.300796812749004, "obj2": 0.5775769736962981}, {"determining": "( ( BR * Max( ( MRS + MDR ),( ( MRS / ( ( PN - ARS ) / FirstVNF_Mem ) ) + MDR ) ) ) * Max( MDR,( FirstVNF_RAM_Server / ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / MUC ) / Min( MUC ,( MUM + MUC ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( BR / ACS ) ) - ( ( MRS - FirstVNF_RAM ) - ( ARS + DDR ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,( DS * DS ) ) + ( ( RRSe + MLU ) / ( MUM * CS ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5947397582306105}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.38645418326693226, "obj2": 0.5126000888903153}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "( ( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * MUR ) / ( RMSe - DS ) )", "obj1": 0.3944223107569721, "obj2": 0.508596213867928}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.9780876494023905, "obj2": 0.024862279852160503}, {"determining": "Max( ( FirstVNF_Mem * CRS ),( Max( ( FirstVNF_CPU_Server * Max( MRS,( ( RRS - BR ) - BR ) ) ),Min( Const ,FirstVNF_CPU_Server ) ) + ( ( RRS / PN ) * ( FirstVNF_CPU_Server - MRS ) ) ) )", "choosing": "( ( CS + Max( CS,( MUR * MLU ) ) ) * Min( ( DS - ( DS - MLU ) ) ,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.7133079608240763}, {"determining": "( ARS * ( PN - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Min( ( MLU * CS ) ,( Max( MUC,( DS / ( CS * RCSe ) ) ) + Max( MUR,CS ) ) ) ) / ( MLU + DS ) )", "obj1": 0.9940239043824701, "obj2": 0.0022931340554747234}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,Const ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( ( ( BR * ACS ) * ( Const / MDR ) ),( ( RRS / PN ) * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( ( ( MUR * MLU ) / ( RMSe - DS ) ) - MLU ) ) ,DS ) )", "obj1": 0.33266932270916333, "obj2": 0.5605241392277142}, {"determining": "Max( ( ( CRS / BR ) / FirstVNF_CPU_Server ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / CS ) - MUC ) * DS ) - ( CS / MLU ) )", "obj1": 0.29880478087649404, "obj2": 0.582224705105152}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "Max( ( PN * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - CS )", "obj1": 0.9721115537848606, "obj2": 0.02529540313907527}, {"determining": "( ( Const + FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6279206235754994}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "( ( BR * ACS ) * Max( ( MRS + MDR ),( BR + MDR ) ) )", "choosing": "( ( RRSe + RRSe ) / ( RMSe - DS ) )", "obj1": 0.3346613545816733, "obj2": 0.5568747273488474}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "Max( Min( ACS ,PN ),( RRS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS / CS ) ,( RCSe - DS ) )", "obj1": 0.4601593625498008, "obj2": 0.46873607059114436}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Min( Min( MUR ,Max( ( RRSe / MUC ),Min( ( Max( ( CS - ( MLU + DS ) ),CS ) - ( RCSe + DS ) ) ,( ( Max( Max( DS,MUC ),MLU ) * MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR - DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUR + MUM ) ) / DS ) ),( DS + DS ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * CRS ) ,( ( DDR * ARS ) - ( BR + FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,RMSe ) - RRSe ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Const ) - ( ( ( Max( ACS,Min( RRS ,FirstVNF_CPU_Server ) ) / Max( DDR,FirstVNF_CPU_Server ) ) - BR ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( Min( MUC ,MUC ) / ( RMSe + ( Min( ( ( Max( MLU,CS ) / ( MUM - ( CS + MUC ) ) ) * Max( RCSe,MUM ) ) ,Min( DS ,Min( ( RCSe + Min( RMSe ,RCSe ) ) ,( RMSe * DS ) ) ) ) + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Min( CRS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM * ( ( FirstVNF_CPU + ACS ) / BR ) ) ) * Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + CS ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * Min( Const ,BR ) ) ) / Min( MDR ,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) * Max( DDR,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( MLU - MUC ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ( ( BR + FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),BR ) * ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( Max( ( CS * MUC ),DS ) / ( ( ( DS - CS ) / RMSe ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) + ( MRS * ARS ) )", "choosing": "Min( ( CS * ( ( DS + RRSe ) - MLU ) ) ,( ( ( Min( ( RRSe + RMSe ) ,( RMSe + MUR ) ) + Max( Max( ( MUC * DS ),DS ),RMSe ) ) + MUM ) / ( ( ( MUM + MUC ) * Min( ( RCSe + RRSe ) ,CS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU - ARS ) / ACS ) * Max( DDR,ACS ) ),( ( CRS - AMS ) * ( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe * MLU ) ,Min( RCSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,FirstVNF_RAM_Server ) - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( ( MUC + MUM ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( MUC + MUM ) / Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MLU ,MUM ) - ( CS / MLU ) ) + MUM ) / Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU ) / ( MRS - FirstVNF_CPU ) )", "choosing": "( ( MUR - MUC ) / Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "Max( Max( RMSe,MUR ),Min( Min( MLU ,MLU ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "Min( Max( ( PN + Min( FirstVNF_Mem_Server ,RRS ) ),Max( FirstVNF_RAM_Server,( MRS - CRS ) ) ) ,( Max( Max( MDR,FirstVNF_RAM_Server ),( ARS - ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUM ,DS ) ,( ( DS * Min( MUR ,RRSe ) ) - RCSe ) )", "obj1": 0.8286852589641435, "obj2": 0.16297890851324343}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,Max( ( ( CRS / BR ) / FirstVNF_CPU_Server ),( MDR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - CS ) - ( ( ( RCSe / CS ) - MUC ) * DS ) )", "obj1": 0.5756972111553785, "obj2": 0.33671580732692397}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( Max( DDR,AMS ) - ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( ( DS * MUM ) / Min( RRSe ,MUM ) ) ) / CS )", "obj1": 0.5657370517928287, "obj2": 0.3892223815219409}, {"determining": "( ( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( Min( MUC ,MLU ) - ( MUC + MLU ) ) / ( ( MUM / CS ) + MLU ) ) )", "obj1": 0.6195219123505976, "obj2": 0.29242509278188633}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.7768924302788844, "obj2": 0.2055906381491202}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( AMS,ARS ) )", "choosing": "( ( MUR / DS ) / ( ( DS * MUM ) / Min( RRSe ,MUM ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7807338535493941}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( MLU - MUC ) )", "obj1": 0.6593625498007968, "obj2": 0.278850905245402}, {"determining": "( ( Const + MRS ) - ( ( Const + MRS ) / ACS ) )", "choosing": "( ( MUC + MUR ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5936254980079682, "obj2": 0.3122802647444681}, {"determining": "( ( Const + FirstVNF_Mem ) - ( AMS + DDR ) )", "choosing": "( ( Min( MUM ,MUC ) / ( ( MUR + RMSe ) / Min( Max( DS,Min( RMSe ,MUM ) ) ,CS ) ) ) / Min( RRSe ,MUM ) )", "obj1": 0.7350597609561753, "obj2": 0.2393108576009514}, {"determining": "Max( ( ( Max( BR,FirstVNF_CPU ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( MUC / MUM ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( ( MDR * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,PN ) ) ),( ( ( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_RAM_Server + PN ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS * RRSe ) / ( ( MUM - DS ) + Max( MUR,MUR ) ) )", "obj1": 0.50199203187251, "obj2": 0.4297604545148987}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( PN - ARS ) * ( PN - ARS ) )", "choosing": "( ( ( ( MLU + Min( ( MLU * CS ) ,Max( DS,MUR ) ) ) / ( MLU + DS ) ) + DS ) / ( MLU + DS ) )", "obj1": 0.250996015936255, "obj2": 0.6768901936998624}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - AMS )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / ( MLU * CS ) )", "obj1": 0.703187250996016, "obj2": 0.24335072373417088}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU + MUM ) ,Min( MUM ,DS ) )", "obj1": 0.5338645418326693, "obj2": 0.41943151071566304}, {"determining": "( ( ( ( MRS / PN ) / ( BR - AMS ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RRSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.5517928286852589, "obj2": 0.4142490450854097}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "( ( Const + FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6279206235754994}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( FirstVNF_Mem * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.18127490039840638, "obj2": 0.770785965626158}, {"determining": "( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( DS ,( MUR - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.527450778362679}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 0.9183266932270916, "obj2": 0.06026260389170632}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.7948207171314741, "obj2": 0.18234055301323546}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( RRSe ,MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.0413235678868107}, {"determining": "Max( ( Const - ARS ),( ( ( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) ) - Max( BR,DDR ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( MLU + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.0433850251680459}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( DS * DS )", "obj1": 0.9661354581673307, "obj2": 0.029497353208835016}, {"determining": "( Min( ( ( FirstVNF_Mem * MRS ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) ) - CS ) )", "obj1": 0.2788844621513944, "obj2": 0.6116739179108187}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Min( ( CRS / ( Min( ARS ,( Max( BR,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( PN + ACS ) ) ) ) / AMS ) ) ,MRS ) )", "choosing": "( Min( CS ,( Min( ( Max( RRSe,RCSe ) * Min( ( ( DS + RRSe ) / Min( RMSe ,MUC ) ) ,RCSe ) ) ,RRSe ) / Min( DS ,DS ) ) ) + ( DS + MUR ) )", "obj1": 0.7888446215139442, "obj2": 0.1969353880656816}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( PN / ( FirstVNF_Mem_Server + Min( Max( ACS,Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ,PN ) ) ) )", "choosing": "( ( MUR * Max( ( ( ( MUR * CS ) * ( ( Min( MLU ,RCSe ) - CS ) + ( ( RRSe * MLU ) - MUM ) ) ) * ( MUM * ( ( RMSe * Min( CS ,MUR ) ) * ( RMSe + ( RRSe * RMSe ) ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.5025383497904446}, {"determining": "Max( ( Max( FirstVNF_CPU,MDR ) + RRS ),( Min( ARS ,MRS ) + RRS ) )", "choosing": "( Max( ( RMSe - MUM ),( MUR + MLU ) ) / ( Min( MUC ,DS ) + Max( RCSe,RRSe ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6899025697824196}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RRSe + ( ( MLU - MUM ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.01369113540569548}, {"determining": "( ( BR * Max( ( MRS + MDR ),( ( MRS / ( ( PN - ARS ) / FirstVNF_Mem ) ) + MDR ) ) ) * Max( MDR,( FirstVNF_RAM_Server / ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / MUC ) / Min( MUC ,( MUM + MUC ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "( ( AMS - ( PN * ( FirstVNF_RAM - CRS ) ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( RCSe / MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5898067700473599}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,Const ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( ( ( BR * ACS ) * ( Const / MDR ) ),( ( RRS / PN ) * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( ( ( MUR * MLU ) / ( RMSe - DS ) ) - MLU ) ) ,DS ) )", "obj1": 0.33266932270916333, "obj2": 0.5605241392277142}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.38645418326693226, "obj2": 0.5126000888903153}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( AMS / ARS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( ( MUC / MUC ) / ( MUR * RRSe ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5735479438630696}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_RAM - CRS ) + ARS ) * PN ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( PN / ( FirstVNF_Mem_Server + Min( Max( ACS,Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ,PN ) ) ) )", "choosing": "( ( MUR * Max( ( ( ( MUR * CS ) * ( ( Min( MLU ,RCSe ) - CS ) + ( ( RRSe * MLU ) - MUM ) ) ) * ( MUM * ( ( RMSe * Min( CS ,MUR ) ) * ( RMSe + ( RRSe * RMSe ) ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.5025383497904446}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.9780876494023905, "obj2": 0.024862279852160503}, {"determining": "( Max( Min( ( ( ( BR + FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),BR ) * ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( Max( ( CS * MUC ),DS ) / ( ( ( DS - CS ) / RMSe ) + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.7948207171314741, "obj2": 0.18234055301323546}, {"determining": "( ( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * MUR ) / ( RMSe - DS ) )", "obj1": 0.3944223107569721, "obj2": 0.508596213867928}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ARS * ( PN - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Min( ( MLU * CS ) ,( Max( MUC,( DS / ( CS * RCSe ) ) ) + Max( MUR,CS ) ) ) ) / ( MLU + DS ) )", "obj1": 0.9940239043824701, "obj2": 0.0022931340554747234}, {"determining": "( ( AMS - ( ( PN * FirstVNF_CPU ) * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( RRSe / MLU ) )", "obj1": 0.29880478087649404, "obj2": 0.5790352570160303}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "Max( ( PN * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - CS )", "obj1": 0.9721115537848606, "obj2": 0.02529540313907527}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "( Min( RRS ,( RRS + ARS ) ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6279206235754994}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RCSe / CS ) - MUC ) * DS ) - ( CS / MLU ) ) - ( CS / MLU ) )", "obj1": 0.300796812749004, "obj2": 0.5775769736962981}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( Min( ( ( FirstVNF_Mem * Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( ( MUM * CS ) * CS ) ) ,( MUR - CS ) )", "obj1": 0.99800796812749, "obj2": 0.0013277697968712837}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Min( Min( MUR ,Max( ( RRSe / MUC ),Min( ( Max( ( CS - ( MLU + DS ) ),CS ) - ( RCSe + DS ) ) ,( ( Max( Max( DS,MUC ),MLU ) * MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR - DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUR + MUM ) ) / DS ) ),( DS + DS ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * CRS ) ,( ( DDR * ARS ) - ( BR + FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,RMSe ) - RRSe ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Const ) - ( ( ( Max( ACS,Min( RRS ,FirstVNF_CPU_Server ) ) / Max( DDR,FirstVNF_CPU_Server ) ) - BR ) - ( FirstVNF_CPU_Server * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( Min( MUC ,MUC ) / ( RMSe + ( Min( ( ( Max( MLU,CS ) / ( MUM - ( CS + MUC ) ) ) * Max( RCSe,MUM ) ) ,Min( DS ,Min( ( RCSe + Min( RMSe ,RCSe ) ) ,( RMSe * DS ) ) ) ) + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Min( CRS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM * ( ( FirstVNF_CPU + ACS ) / BR ) ) ) * Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + CS ) / ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * Min( Const ,BR ) ) ) / Min( MDR ,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) * Max( DDR,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "( ( MLU - MUC ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ( ( BR + FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),BR ) * ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( Max( ( CS * MUC ),DS ) / ( ( ( DS - CS ) / RMSe ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) + ( MRS * ARS ) )", "choosing": "Min( ( CS * ( ( DS + RRSe ) - MLU ) ) ,( ( ( Min( ( RRSe + RMSe ) ,( RMSe + MUR ) ) + Max( Max( ( MUC * DS ),DS ),RMSe ) ) + MUM ) / ( ( ( MUM + MUC ) * Min( ( RCSe + RRSe ) ,CS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU - ARS ) / ACS ) * Max( DDR,ACS ) ),( ( CRS - AMS ) * ( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe * MLU ) ,Min( RCSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,FirstVNF_RAM_Server ) - AMS ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( ( MUC + MUM ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( BR,DDR ) )", "choosing": "( ( MUC + MUM ) / Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,Max( ( ( CRS / BR ) / FirstVNF_CPU_Server ),( MDR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - CS ) - ( ( ( RCSe / CS ) - MUC ) * DS ) )", "obj1": 0.5756972111553785, "obj2": 0.33671580732692397}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( ( Min( ACS ,CRS ) - BR ) / FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) )", "choosing": "Min( ( DS * ( MUM * MLU ) ) ,Min( ( MLU + RRSe ) ,Min( MUM ,DS ) ) )", "obj1": 0.8406374501992032, "obj2": 0.16061043403387418}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.7768924302788844, "obj2": 0.2055906381491202}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( MLU - MUC ) )", "obj1": 0.6593625498007968, "obj2": 0.278850905245402}, {"determining": "( ( Const + FirstVNF_Mem ) - ( AMS + DDR ) )", "choosing": "( ( Min( MUM ,MUC ) / ( ( MUR + RMSe ) / Min( Max( DS,Min( RMSe ,MUM ) ) ,CS ) ) ) / Min( RRSe ,MUM ) )", "obj1": 0.7350597609561753, "obj2": 0.2393108576009514}, {"determining": "( ( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( Min( MUC ,MLU ) - ( MUC + MLU ) ) / ( ( MUM / CS ) + MLU ) ) )", "obj1": 0.6195219123505976, "obj2": 0.29242509278188633}, {"determining": "Max( ( ( Max( BR,FirstVNF_CPU ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( MUC / MUM ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( PN - ARS ) * ( PN - ARS ) )", "choosing": "( ( ( ( MLU + Min( ( MLU * CS ) ,Max( DS,MUR ) ) ) / ( MLU + DS ) ) + DS ) / ( MLU + DS ) )", "obj1": 0.250996015936255, "obj2": 0.6768901936998624}, {"determining": "( ( FirstVNF_RAM / FirstVNF_RAM ) - Max( AMS,ARS ) )", "choosing": "( ( MUR / DS ) / ( ( DS * MUM ) / Min( RRSe ,MUM ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7807338535493941}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - AMS )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / ( MLU * CS ) )", "obj1": 0.703187250996016, "obj2": 0.24335072373417088}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( ( Const + MRS ) - ( ( Const + MRS ) / ACS ) )", "choosing": "( ( MUC + MUR ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5936254980079682, "obj2": 0.3122802647444681}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6279206235754994}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.7948207171314741, "obj2": 0.18234055301323546}, {"determining": "Min( ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( CRS + ( DDR * FirstVNF_CPU ) ) ,MRS ) )", "choosing": "Min( ( ( DS - MUC ) * ( Max( MUR,RRSe ) + CS ) ) ,( ( MUR + DS ) * RRSe ) )", "obj1": 0.601593625498008, "obj2": 0.30563143906754886}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( RRSe ,MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.0413235678868107}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( DS * DS )", "obj1": 0.9661354581673307, "obj2": 0.029497353208835016}, {"determining": "( Min( ( ( FirstVNF_Mem * MRS ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) ) - CS ) )", "obj1": 0.2788844621513944, "obj2": 0.6116739179108187}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Min( ( CRS / ( Min( ARS ,( Max( BR,FirstVNF_RAM_Server ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( PN + ACS ) ) ) ) / AMS ) ) ,MRS ) )", "choosing": "( Min( CS ,( Min( ( Max( RRSe,RCSe ) * Min( ( ( DS + RRSe ) / Min( RMSe ,MUC ) ) ,RCSe ) ) ,RRSe ) / Min( DS ,DS ) ) ) + ( DS + MUR ) )", "obj1": 0.7888446215139442, "obj2": 0.1969353880656816}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( PN / ( FirstVNF_Mem_Server + Min( Max( ACS,Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ,PN ) ) ) )", "choosing": "( ( MUR * Max( ( ( ( MUR * CS ) * ( ( Min( MLU ,RCSe ) - CS ) + ( ( RRSe * MLU ) - MUM ) ) ) * ( MUM * ( ( RMSe * Min( CS ,MUR ) ) * ( RMSe + ( RRSe * RMSe ) ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.5025383497904446}, {"determining": "Max( ( Const - ARS ),( ( ( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) ) - Max( BR,DDR ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( MLU + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.0433850251680459}, {"determining": "Max( ( Max( FirstVNF_CPU,MDR ) + RRS ),( Min( ARS ,MRS ) + RRS ) )", "choosing": "( Max( ( RMSe - MUM ),( MUR + MLU ) ) / ( Min( MUC ,DS ) + Max( RCSe,RRSe ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6899025697824196}, {"determining": "( ( BR * Max( ( MRS + MDR ),( ( MRS / ( ( PN - ARS ) / FirstVNF_Mem ) ) + MDR ) ) ) * Max( MDR,( FirstVNF_RAM_Server / ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / MUC ) / Min( MUC ,( MUM + MUC ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( DS ,( MUR - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.527450778362679}, {"determining": "( ( AMS - ( PN * ( FirstVNF_RAM - CRS ) ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( RCSe / MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5898067700473599}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "Min( Max( ( PN + Min( FirstVNF_Mem_Server ,RRS ) ),Max( FirstVNF_RAM_Server,( MRS - CRS ) ) ) ,( Max( Max( MDR,FirstVNF_RAM_Server ),( ARS - ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUM ,DS ) ,( ( DS * Min( MUR ,RRSe ) ) - RCSe ) )", "obj1": 0.8286852589641435, "obj2": 0.16297890851324343}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RRSe + ( ( MLU - MUM ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.01369113540569548}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,Const ) / Max( PN,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,BR ) / ( ARS / AMS ) ) ),Max( ( ( BR * ACS ) * ( Const / MDR ) ),( ( RRS / PN ) * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( DS,DS ) - RCSe ) * Min( ( DS - ( ( ( MUR * MLU ) / ( RMSe - DS ) ) - MLU ) ) ,DS ) )", "obj1": 0.33266932270916333, "obj2": 0.5605241392277142}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.38645418326693226, "obj2": 0.5126000888903153}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( AMS / ARS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( ( MUC / MUC ) / ( MUR * RRSe ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5735479438630696}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( Max( Max( FirstVNF_RAM_Server,MDR ),( ARS - MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + MUC ) ,Min( MUM ,DS ) )", "obj1": 0.8286852589641435, "obj2": 0.16297890851324343}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( FirstVNF_Mem * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.18127490039840638, "obj2": 0.770785965626158}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( PN / ( FirstVNF_Mem_Server + Min( Max( ACS,Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ,PN ) ) ) )", "choosing": "( ( MUR * Max( ( ( ( MUR * CS ) * ( ( Min( MLU ,RCSe ) - CS ) + ( ( RRSe * MLU ) - MUM ) ) ) * ( MUM * ( ( RMSe * Min( CS ,MUR ) ) * ( RMSe + ( RRSe * RMSe ) ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.5025383497904446}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.9780876494023905, "obj2": 0.024862279852160503}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ( ( ( ( ( MRS / Const ) * FirstVNF_RAM ) + MDR ) / DDR ) - FirstVNF_CPU ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - Max( ( MUR / MUM ),RMSe ) ) - MUM ) / ( MUM + RRSe ) )", "obj1": 0.7948207171314741, "obj2": 0.18234055301323546}, {"determining": "( ( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * MUR ) / ( RMSe - DS ) )", "obj1": 0.3944223107569721, "obj2": 0.508596213867928}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - PN )", "choosing": "( ( ( RRSe - CS ) - ( CS / MLU ) ) - ( CS / MLU ) )", "obj1": 0.350597609561753, "obj2": 0.5355165236321595}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( AMS - ( ( PN * FirstVNF_CPU ) * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( RRSe / MLU ) )", "obj1": 0.29880478087649404, "obj2": 0.5790352570160303}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 0.9183266932270916, "obj2": 0.06026260389170632}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) / Max( ( ( PN / CRS ) - ( ( ARS * ( AMS / ARS ) ) + ( MDR + Min( MDR ,MRS ) ) ) ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( ( ( ( Max( CS,CS ) + Max( ( MUM + Min( DS ,Max( CS,MLU ) ) ),RMSe ) ) - ( Max( CS,( RMSe * ( RRSe / ( CS - MUM ) ) ) ) * RMSe ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MLU ,MUC ) ) - MUR ) + ( MLU * ( Min( MUC ,RCSe ) + MUC ) ) ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "Max( ( PN * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - CS )", "obj1": 0.9721115537848606, "obj2": 0.02529540313907527}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( RMSe * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "( ( Const + FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6279206235754994}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RCSe / CS ) - MUC ) * DS ) - ( CS / MLU ) ) - ( CS / MLU ) )", "obj1": 0.300796812749004, "obj2": 0.5775769736962981}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) / ( ( ( MUM / RRSe ) * Min( DS ,CS ) ) / ( ( MUC + MLU ) * ( MLU / DS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7636797250746937}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( ( ( FirstVNF_RAM - CRS ) + ARS ) * PN ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( ( AMS - ( AMS - ( PN * FirstVNF_CPU ) ) ) - Max( BR,DDR ) )", "choosing": "( CS - ( CS / MLU ) )", "obj1": 0.99800796812749, "obj2": 0.0011642450468954738}, {"determining": "( ARS * ( PN - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Min( ( MLU * CS ) ,( Max( MUC,( DS / ( CS * RCSe ) ) ) + Max( MUR,CS ) ) ) ) / ( MLU + DS ) )", "obj1": 0.9940239043824701, "obj2": 0.0022931340554747234}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - MDR ) - Min( ( ( FirstVNF_RAM_Server - ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ,MDR ) )", "choosing": "( Max( RRSe,Min( ( ( Max( MUM,( MLU + Min( MUM ,RRSe ) ) ) * MUC ) + ( ( MUC - Max( ( MLU - RCSe ),RRSe ) ) + MLU ) ) ,( DS * Min( CS ,RRSe ) ) ) ) / ( Min( MUM ,MLU ) * ( MLU / MUM ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0032377282353378296}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Min( Min( MUR ,Max( ( RRSe / MUC ),Min( ( Max( ( CS - ( MLU + DS ) ),CS ) - ( RCSe + DS ) ) ,( ( Max( Max( DS,MUC ),MLU ) * MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR - DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUR + MUM ) ) / DS ) ),( DS + DS ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * CRS ) ,( ( DDR * ARS ) - ( BR + FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,RMSe ) - RRSe ) ,( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,Max( ( ( CRS / BR ) / FirstVNF_CPU_Server ),( MDR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - CS ) - ( ( ( RCSe / CS ) - MUC ) * DS ) )", "obj1": 0.5756972111553785, "obj2": 0.33671580732692397}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( ( Min( ACS ,CRS ) - BR ) / FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) )", "choosing": "Min( ( DS * ( MUM * MLU ) ) ,Min( ( MLU + RRSe ) ,Min( MUM ,DS ) ) )", "obj1": 0.8406374501992032, "obj2": 0.16061043403387418}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( Max( Max( FirstVNF_RAM_Server,MDR ),( ARS - MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + MUC ) ,Min( MUM ,DS ) )", "obj1": 0.8247011952191236, "obj2": 0.16951458534207273}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( MLU - MUC ) )", "obj1": 0.6593625498007968, "obj2": 0.278850905245402}, {"determining": "( ( Const + FirstVNF_Mem ) - ( AMS + DDR ) )", "choosing": "( ( Min( MUM ,MUC ) / ( ( MUR + RMSe ) / Min( Max( DS,Min( RMSe ,MUM ) ) ,CS ) ) ) / Min( RRSe ,MUM ) )", "obj1": 0.7350597609561753, "obj2": 0.2393108576009514}, {"determining": "( ( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( Min( MUC ,MLU ) - ( MUC + MLU ) ) / ( ( MUM / CS ) + MLU ) ) )", "obj1": 0.6195219123505976, "obj2": 0.29242509278188633}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - AMS )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / ( MLU * CS ) )", "obj1": 0.703187250996016, "obj2": 0.24335072373417088}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( ( Const + MRS ) - ( ( Const + MRS ) / ACS ) )", "choosing": "( ( MUC + MUR ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5936254980079682, "obj2": 0.3122802647444681}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ARS * ( FirstVNF_Mem / ( ARS * ( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( Min( ( MLU * CS ) ,( DS * MUC ) ) + MUM ) / ( DS + DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7599620391117123}, {"determining": "Min( ( Min( ACS ,Const ) + ( FirstVNF_Mem / MRS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( DS * MUC ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.626505107621192}, {"determining": "( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( DS ,( MUR - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.527450778362679}, {"determining": "Min( ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( CRS + ( DDR * FirstVNF_CPU ) ) ,MRS ) )", "choosing": "Min( ( ( DS - MUC ) * ( Max( MUR,RRSe ) + CS ) ) ,( ( MUR + DS ) * RRSe ) )", "obj1": 0.601593625498008, "obj2": 0.30563143906754886}, {"determining": "( ( AMS - ( PN * ( FirstVNF_RAM - CRS ) ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( RCSe / MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5898067700473599}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( PN / ( FirstVNF_Mem_Server + Min( Max( ACS,Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ,PN ) ) ) )", "choosing": "( ( MUR * Max( ( ( ( MUR * CS ) * ( ( Min( MLU ,RCSe ) - CS ) + ( ( RRSe * MLU ) - MUM ) ) ) * ( MUM * ( ( RMSe * Min( CS ,MUR ) ) * ( RMSe + ( RRSe * RMSe ) ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.5025383497904446}, {"determining": "( ( BR * Max( ( MRS + MDR ),( ( MRS / ( ( PN - ARS ) / FirstVNF_Mem ) ) + MDR ) ) ) * Max( MDR,( FirstVNF_RAM_Server / ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / MUC ) / Min( MUC ,( MUM + MUC ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( RRSe ,MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.0413235678868107}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.029647446970019975}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( Max( FirstVNF_CPU,MRS ) - ( MDR / ARS ) ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.3286852589641434, "obj2": 0.5599963283646836}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.38645418326693226, "obj2": 0.5126000888903153}, {"determining": "( Min( ( ( FirstVNF_Mem * MRS ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) ) - CS ) )", "obj1": 0.2788844621513944, "obj2": 0.6116739179108187}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( PN / ( FirstVNF_Mem_Server + Min( Max( ACS,Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ,PN ) ) ) )", "choosing": "( ( MUR * Max( ( ( ( MUR * CS ) * ( ( Min( MLU ,RCSe ) - CS ) + ( ( RRSe * MLU ) - MUM ) ) ) * ( MUM * ( ( RMSe * Min( CS ,MUR ) ) * ( RMSe + ( RRSe * RMSe ) ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.5025383497904446}, {"determining": "( ( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * MUR ) / ( RMSe - DS ) )", "obj1": 0.3944223107569721, "obj2": 0.508596213867928}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( BR / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe / ( MUR + ( MUC - ( Max( Min( MUR ,RCSe ),MLU ) + ( ( RMSe + RCSe ) - MUM ) ) ) ) ) * Min( MUR ,Max( Min( MUR ,MUM ),RRSe ) ) ) ,Min( MUR ,RCSe ) )", "obj1": 0.9223107569721115, "obj2": 0.05724205309280241}, {"determining": "Max( ( ( Max( BR,FirstVNF_CPU ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( MUC / MUM ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( AMS / AMS ) - ( ACS / ( ( Max( FirstVNF_Mem_Server,DDR ) * ( BR / PN ) ) + RRS ) ) )", "choosing": "( ( Max( Min( Max( ( MUC / Min( MLU ,CS ) ),( RRSe * ( RMSe + MUM ) ) ) ,CS ),MUC ) - CS ) - ( MLU - MUC ) )", "obj1": 0.9840637450199203, "obj2": 0.016852646179113202}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.9780876494023905, "obj2": 0.024862279852160503}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 0.9183266932270916, "obj2": 0.06026260389170632}, {"determining": "Max( Min( ARS ,ARS ),Min( FirstVNF_CPU ,( ARS + MDR ) ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RRSe + ( ( MLU - MUM ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.01369113540569548}, {"determining": "Max( ( Const - ARS ),( ( ( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) ) - Max( BR,DDR ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( MLU + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.0433850251680459}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( Max( Max( FirstVNF_RAM_Server,MDR ),( ARS - MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + MUC ) ,Min( MUM ,DS ) )", "obj1": 0.8286852589641435, "obj2": 0.16297890851324343}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( DS * DS )", "obj1": 0.9661354581673307, "obj2": 0.029497353208835016}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Max( ( PN * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - CS )", "obj1": 0.9721115537848606, "obj2": 0.02529540313907527}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.9302788844621513, "obj2": 0.04607605208138225}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "Min( ( BR + Min( ( FirstVNF_RAM_Server - ( MRS * PN ) ) ,ARS ) ) ,( FirstVNF_Mem_Server - ( ( ( Const - CRS ) - ( RRS - ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,( Min( ( RCSe - MUC ) ,( Min( CS ,MLU ) - MUC ) ) * ( MLU - ( Max( CS,( RCSe - MUM ) ) + RCSe ) ) ) ) - MUC ) )", "obj1": 0.9302788844621513, "obj2": 0.04607605208138225}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "( ( AMS - ( AMS - ( PN * FirstVNF_CPU ) ) ) - Max( BR,DDR ) )", "choosing": "( CS - ( CS / MLU ) )", "obj1": 0.99800796812749, "obj2": 0.0011642450468954738}, {"determining": "( ARS * ( PN - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Min( ( MLU * CS ) ,( Max( MUC,( DS / ( CS * RCSe ) ) ) + Max( MUR,CS ) ) ) ) / ( MLU + DS ) )", "obj1": 0.9940239043824701, "obj2": 0.0022931340554747234}, {"determining": "Min( Max( ( PN + Min( FirstVNF_Mem_Server ,RRS ) ),Max( FirstVNF_RAM_Server,( MRS - CRS ) ) ) ,( Max( Max( MDR,FirstVNF_RAM_Server ),( ARS - ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUM ,DS ) ,( ( DS * Min( MUR ,RRSe ) ) - RCSe ) )", "obj1": 0.8286852589641435, "obj2": 0.16297890851324343}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( RMSe * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) / Max( ( ( PN / CRS ) - ( ( ARS * ( AMS / ARS ) ) + ( MDR + Min( MDR ,MRS ) ) ) ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( ( ( ( Max( CS,CS ) + Max( ( MUM + Min( DS ,Max( CS,MLU ) ) ),RMSe ) ) - ( Max( CS,( RMSe * ( RRSe / ( CS - MUM ) ) ) ) * RMSe ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MLU ,MUC ) ) - MUR ) + ( MLU * ( Min( MUC ,RCSe ) + MUC ) ) ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) - PN ) )", "choosing": "( ( Max( RCSe,MUR ) + CS ) * Min( MLU ,Max( MUC,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - Max( ( ACS * FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( ( ( ARS + FirstVNF_Mem ) * ( FirstVNF_Mem - MRS ) ) - Min( Max( FirstVNF_Mem,CRS ) ,Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Max( MUC,CS ) - ( MLU - DS ) ) * ( ( MUM - Min( CS ,MUC ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * PN ) + ( CRS - DDR ) ) * Min( ( ACS + BR ) ,( MDR + MDR ) ) ) - ( ( Min( ACS ,MDR ) + Min( CRS ,ARS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "( ( Max( Max( MLU,RRSe ),( RRSe * MLU ) ) + MUR ) + ( MUC * ( Max( RRSe,RCSe ) / ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,DDR ) - ( ACS / ( AMS * ( RRS + RRS ) ) ) )", "choosing": "Min( ( ( ( MUM / DS ) + Max( MUC,MUM ) ) * ( ( RRSe - RRSe ) - ( MUC * CS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,Max( RCSe,RCSe ) ) / ( ( RCSe - MUR ) * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( RRS + PN ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,( MRS - Const ) ) )", "choosing": "( ( RRSe - ( ( RCSe - CS ) / Min( RMSe ,RCSe ) ) ) - ( ( ( DS / MUM ) / ( MUC + MUR ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) / ( DS * DS ) ) * Max( ( MUR + CS ),( MUC / MUR ) ) ) + ( ( Min( MUR ,RRSe ) / ( MLU - CS ) ) + ( ( MUC * MUR ) + ( RRSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( ( Min( ACS ,CRS ) - BR ) / FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) )", "choosing": "Min( ( DS * ( MUM * MLU ) ) ,Min( ( MLU + RRSe ) ,Min( MUM ,DS ) ) )", "obj1": 0.8406374501992032, "obj2": 0.16061043403387418}, {"determining": "( ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( AMS * ( ( FirstVNF_CPU_Server - AMS ) * MRS ) ) ) - ( ARS * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * BR ) ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 0.5597609561752988, "obj2": 0.37685430827743943}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,Max( ( ( CRS / BR ) / FirstVNF_CPU_Server ),( MDR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - CS ) - ( ( ( RCSe / CS ) - MUC ) * DS ) )", "obj1": 0.5756972111553785, "obj2": 0.33671580732692397}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( Max( Max( FirstVNF_RAM_Server,MDR ),( ARS - MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + MUC ) ,Min( MUM ,DS ) )", "obj1": 0.8247011952191236, "obj2": 0.16951458534207273}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( FirstVNF_Mem - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( RRS * PN ) ) * PN ) ) ) - Min( CRS ,MDR ) )", "choosing": "( ( Min( MUM ,MLU ) * ( MLU / RMSe ) ) / MLU )", "obj1": 0.7370517928286853, "obj2": 0.2374152469423923}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - AMS )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / ( MLU * CS ) )", "obj1": 0.703187250996016, "obj2": 0.24335072373417088}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( MLU - MUC ) )", "obj1": 0.6593625498007968, "obj2": 0.278850905245402}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( ( ( FirstVNF_RAM * Min( DDR ,FirstVNF_RAM_Server ) ) + ( DDR - MRS ) ) / ( ( ( BR + FirstVNF_Mem_Server ) / ( ACS - ARS ) ) + ( ( PN + ARS ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR - MUM ) / ( ( Min( MUC ,MLU ) - ( MUC + MLU ) ) / ( ( MUM / CS ) + MLU ) ) )", "obj1": 0.6195219123505976, "obj2": 0.29242509278188633}, {"determining": "( ( Const + MRS ) - ( ( Const + MRS ) / ACS ) )", "choosing": "( ( MUC + MUR ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5936254980079682, "obj2": 0.3122802647444681}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ( AMS - ( ( AMS - ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( ( RRSe - CS ) - ( CS / MLU ) ) )", "obj1": 0.6454183266932271, "obj2": 0.2891777055905933}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ARS * ( FirstVNF_Mem / ( ARS * ( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( Min( ( MLU * CS ) ,( DS * MUC ) ) + MUM ) / ( DS + DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7599620391117123}, {"determining": "Min( ( Min( ACS ,Const ) + ( FirstVNF_Mem / MRS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( DS * MUC ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.626505107621192}, {"determining": "( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * DDR ) )", "choosing": "Min( DS ,( MUR - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.527450778362679}, {"determining": "Min( ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) ,Min( ( CRS + ( DDR * FirstVNF_CPU ) ) ,MRS ) )", "choosing": "Min( ( ( DS - MUC ) * ( Max( MUR,RRSe ) + CS ) ) ,( ( MUR + DS ) * RRSe ) )", "obj1": 0.601593625498008, "obj2": 0.30563143906754886}, {"determining": "( ( AMS - ( PN * ( FirstVNF_RAM - CRS ) ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( RCSe / MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5898067700473599}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( PN / ( FirstVNF_Mem_Server + Min( Max( ACS,Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ,PN ) ) ) )", "choosing": "( ( MUR * Max( ( ( ( MUR * CS ) * ( ( Min( MLU ,RCSe ) - CS ) + ( ( RRSe * MLU ) - MUM ) ) ) * ( MUM * ( ( RMSe * Min( CS ,MUR ) ) * ( RMSe + ( RRSe * RMSe ) ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.5025383497904446}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "( ( BR * Max( ( MRS + MDR ),( ( MRS / ( ( PN - ARS ) / FirstVNF_Mem ) ) + MDR ) ) ) * Max( MDR,( FirstVNF_RAM_Server / ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / MUC ) / Min( MUC ,( MUM + MUC ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( RRSe ,MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.0413235678868107}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( Max( FirstVNF_CPU,MRS ) - ( MDR / ARS ) ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.3286852589641434, "obj2": 0.5599963283646836}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.38645418326693226, "obj2": 0.5126000888903153}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) * ( PN / ( FirstVNF_Mem_Server + Min( Max( ACS,Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ,PN ) ) ) )", "choosing": "( ( MUR * Max( ( ( ( MUR * CS ) * ( ( Min( MLU ,RCSe ) - CS ) + ( ( RRSe * MLU ) - MUM ) ) ) * ( MUM * ( ( RMSe * Min( CS ,MUR ) ) * ( RMSe + ( RRSe * RMSe ) ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.5025383497904446}, {"determining": "( ( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * MUR ) / ( RMSe - DS ) )", "obj1": 0.3944223107569721, "obj2": 0.508596213867928}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( BR / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe / ( MUR + ( MUC - ( Max( Min( MUR ,RCSe ),MLU ) + ( ( RMSe + RCSe ) - MUM ) ) ) ) ) * Min( MUR ,Max( Min( MUR ,MUM ),RRSe ) ) ) ,Min( MUR ,RCSe ) )", "obj1": 0.9223107569721115, "obj2": 0.05724205309280241}, {"determining": "Max( ( ( Max( BR,FirstVNF_CPU ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( MUC / MUM ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( AMS / AMS ) - ( ACS / ( ( Max( FirstVNF_Mem_Server,DDR ) * ( BR / PN ) ) + RRS ) ) )", "choosing": "( ( Max( Min( Max( ( MUC / Min( MLU ,CS ) ),( RRSe * ( RMSe + MUM ) ) ) ,CS ),MUC ) - CS ) - ( MLU - MUC ) )", "obj1": 0.9840637450199203, "obj2": 0.016852646179113202}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.9780876494023905, "obj2": 0.024862279852160503}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 0.9183266932270916, "obj2": 0.06026260389170632}, {"determining": "Max( Min( ARS ,ARS ),Min( FirstVNF_CPU ,( ARS + MDR ) ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.029647446970019975}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RRSe + ( ( MLU - MUM ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.01369113540569548}, {"determining": "Min( Max( ( PN + Min( FirstVNF_Mem_Server ,RRS ) ),Max( FirstVNF_RAM_Server,( MRS - CRS ) ) ) ,( Max( Max( MDR,FirstVNF_RAM_Server ),( ARS - ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUM ,DS ) ,( ( DS * Min( MUR ,RRSe ) ) - RCSe ) )", "obj1": 0.8286852589641435, "obj2": 0.16297890851324343}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( DS * DS )", "obj1": 0.9661354581673307, "obj2": 0.029497353208835016}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Max( ( PN * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - CS )", "obj1": 0.9721115537848606, "obj2": 0.02529540313907527}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "( ( Const + FirstVNF_Mem ) - ( AMS + DDR ) )", "choosing": "( ( Min( MUM ,MUC ) / ( ( MUR + RMSe ) / Min( Max( DS,Min( RMSe ,MUM ) ) ,CS ) ) ) / Min( RRSe ,MUM ) )", "obj1": 0.7350597609561753, "obj2": 0.2393108576009514}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "Max( ( Const - ARS ),( ( ( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) ) - Max( BR,DDR ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( MLU + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.0433850251680459}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.029647446970019975}, {"determining": "Min( ( BR + Min( ( FirstVNF_RAM_Server - ( MRS * PN ) ) ,ARS ) ) ,( FirstVNF_Mem_Server - ( ( ( Const - CRS ) - ( RRS - ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,( Min( ( RCSe - MUC ) ,( Min( CS ,MLU ) - MUC ) ) * ( MLU - ( Max( CS,( RCSe - MUM ) ) + RCSe ) ) ) ) - MUC ) )", "obj1": 0.9302788844621513, "obj2": 0.04607605208138225}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( BR * Max( ( MRS + MDR ),( BR + MDR ) ) ) * ( Const / CRS ) )", "choosing": "( ( MUR * RRSe ) / ( RMSe - DS ) )", "obj1": 0.3784860557768924, "obj2": 0.5252937684533083}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.9302788844621513, "obj2": 0.04607605208138225}, {"determining": "( ( AMS - ( AMS - ( PN * FirstVNF_CPU ) ) ) - Max( BR,DDR ) )", "choosing": "( CS - ( CS / MLU ) )", "obj1": 0.99800796812749, "obj2": 0.0011642450468954738}, {"determining": "( ARS * ( PN - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Min( ( MLU * CS ) ,( Max( MUC,( DS / ( CS * RCSe ) ) ) + Max( MUR,CS ) ) ) ) / ( MLU + DS ) )", "obj1": 0.9940239043824701, "obj2": 0.0022931340554747234}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.9322709163346613, "obj2": 0.043954533601807746}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( Max( Max( FirstVNF_RAM_Server,MDR ),( ARS - MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + MUC ) ,Min( MUM ,DS ) )", "obj1": 0.8286852589641435, "obj2": 0.16297890851324343}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) / Max( ( ( PN / CRS ) - ( ( ARS * ( AMS / ARS ) ) + ( MDR + Min( MDR ,MRS ) ) ) ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( ( ( ( Max( CS,CS ) + Max( ( MUM + Min( DS ,Max( CS,MLU ) ) ),RMSe ) ) - ( Max( CS,( RMSe * ( RRSe / ( CS - MUM ) ) ) ) * RMSe ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MLU ,MUC ) ) - MUR ) + ( MLU * ( Min( MUC ,RCSe ) + MUC ) ) ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( RMSe * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( ( Min( ACS ,CRS ) - BR ) / FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) )", "choosing": "Min( ( DS * ( MUM * MLU ) ) ,Min( ( MLU + RRSe ) ,Min( MUM ,DS ) ) )", "obj1": 0.8406374501992032, "obj2": 0.16061043403387418}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Min( FirstVNF_RAM ,FirstVNF_Mem ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) ) ) / ACS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( Max( MUR,( RCSe - CS ) ),( ( MLU / MUR ) * MUM ) ) ) ) + ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 0.8247011952191236, "obj2": 0.16128985917019087}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( FirstVNF_Mem - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( RRS * PN ) ) * PN ) ) ) - Min( CRS ,MDR ) )", "choosing": "( ( Min( MUM ,MLU ) * ( MLU / RMSe ) ) / MLU )", "obj1": 0.7370517928286853, "obj2": 0.2374152469423923}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - AMS )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / ( MLU * CS ) )", "obj1": 0.703187250996016, "obj2": 0.24335072373417088}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ARS * ( FirstVNF_Mem / ( ARS * ( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( Min( ( MLU * CS ) ,( DS * MUC ) ) + MUM ) / ( DS + DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7599620391117123}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( RRSe ,MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.0413235678868107}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( Max( FirstVNF_CPU,MRS ) - ( MDR / ARS ) ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.3286852589641434, "obj2": 0.5599963283646836}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( BR / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe / ( MUR + ( MUC - ( Max( Min( MUR ,RCSe ),MLU ) + ( ( RMSe + RCSe ) - MUM ) ) ) ) ) * Min( MUR ,Max( Min( MUR ,MUM ),RRSe ) ) ) ,Min( MUR ,RCSe ) )", "obj1": 0.9223107569721115, "obj2": 0.05724205309280241}, {"determining": "Max( ( ( Max( BR,FirstVNF_CPU ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( MUC / MUM ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( AMS / AMS ) - ( ACS / ( ( Max( FirstVNF_Mem_Server,DDR ) * ( BR / PN ) ) + RRS ) ) )", "choosing": "( ( Max( Min( Max( ( MUC / Min( MLU ,CS ) ),( RRSe * ( RMSe + MUM ) ) ) ,CS ),MUC ) - CS ) - ( MLU - MUC ) )", "obj1": 0.9840637450199203, "obj2": 0.016852646179113202}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.9780876494023905, "obj2": 0.024862279852160503}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 0.9183266932270916, "obj2": 0.06026260389170632}, {"determining": "Min( ( Min( ACS ,Const ) + ( FirstVNF_Mem / MRS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( DS * MUC ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.626505107621192}, {"determining": "Max( Min( ARS ,ARS ),Min( FirstVNF_CPU ,( ARS + MDR ) ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.029647446970019975}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( RRSe - CS ) - ( CS / MLU ) )", "obj1": 0.31673306772908366, "obj2": 0.5618916002891544}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RRSe + ( ( MLU - MUM ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.01369113540569548}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( DS * DS )", "obj1": 0.9661354581673307, "obj2": 0.029497353208835016}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Max( ( PN * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - CS )", "obj1": 0.9721115537848606, "obj2": 0.02529540313907527}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "( ( Const + FirstVNF_Mem ) - ( AMS + DDR ) )", "choosing": "( ( Min( MUM ,MUC ) / ( ( MUR + RMSe ) / Min( Max( DS,Min( RMSe ,MUM ) ) ,CS ) ) ) / Min( RRSe ,MUM ) )", "obj1": 0.7350597609561753, "obj2": 0.2393108576009514}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "Max( ( Const - ARS ),( ( ( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) ) - Max( BR,DDR ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( MLU + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.0433850251680459}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.029647446970019975}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.9302788844621513, "obj2": 0.04607605208138225}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( ( BR + Min( ( FirstVNF_RAM_Server - ( MRS * PN ) ) ,ARS ) ) ,( FirstVNF_Mem_Server - ( ( ( Const - CRS ) - ( RRS - ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,( Min( ( RCSe - MUC ) ,( Min( CS ,MLU ) - MUC ) ) * ( MLU - ( Max( CS,( RCSe - MUM ) ) + RCSe ) ) ) ) - MUC ) )", "obj1": 0.9302788844621513, "obj2": 0.04607605208138225}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ARS * ( PN - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Min( ( MLU * CS ) ,( Max( MUC,( DS / ( CS * RCSe ) ) ) + Max( MUR,CS ) ) ) ) / ( MLU + DS ) )", "obj1": 0.9940239043824701, "obj2": 0.0022931340554747234}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( RMSe * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.9322709163346613, "obj2": 0.043954533601807746}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) / Max( ( ( PN / CRS ) - ( ( ARS * ( AMS / ARS ) ) + ( MDR + Min( MDR ,MRS ) ) ) ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( ( ( ( Max( CS,CS ) + Max( ( MUM + Min( DS ,Max( CS,MLU ) ) ),RMSe ) ) - ( Max( CS,( RMSe * ( RRSe / ( CS - MUM ) ) ) ) * RMSe ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MLU ,MUC ) ) - MUR ) + ( MLU * ( Min( MUC ,RCSe ) + MUC ) ) ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.9322709163346613, "obj2": 0.043954533601807746}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) ) - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + RRSe ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,CRS ) ,CRS ) - ACS ) + Const ) ,Max( Max( FirstVNF_RAM_Server,MDR ),Min( ( AMS * MRS ) ,FirstVNF_CPU_Server ) ) ) ,Min( MRS ,ARS ) )", "choosing": "Min( ( ( CS - DS ) * ( CS + RRSe ) ) ,Max( MUC,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,CRS ) ,CRS ) - ACS ) + Const ) ,Max( Max( FirstVNF_RAM_Server,MDR ),Min( ( AMS * MRS ) ,( ( RRS / FirstVNF_RAM ) / FirstVNF_RAM ) ) ) ) ,Min( MRS ,ARS ) )", "choosing": "Min( ( ( CS - Min( ( Min( ( ( MUR - MUC ) + MUR ) ,RCSe ) * ( DS * RMSe ) ) ,MLU ) ) * ( CS + RRSe ) ) ,Max( MUC,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + RRSe ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ( ARS + PN ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "Min( ( RRSe + ( ( RCSe + ( MLU * CS ) ) + RRSe ) ) ,Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( ( Min( ACS ,CRS ) - BR ) / FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) )", "choosing": "Min( ( DS * ( MUM * MLU ) ) ,Min( ( MLU + RRSe ) ,Min( MUM ,DS ) ) )", "obj1": 0.8406374501992032, "obj2": 0.16061043403387418}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Min( FirstVNF_RAM ,FirstVNF_Mem ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) ) ) / ACS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( Max( MUR,( RCSe - CS ) ),( ( MLU / MUR ) * MUM ) ) ) ) + ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 0.8247011952191236, "obj2": 0.16128985917019087}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( FirstVNF_Mem - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( RRS * PN ) ) * PN ) ) ) - Min( CRS ,MDR ) )", "choosing": "( ( Min( MUM ,MLU ) * ( MLU / RMSe ) ) / MLU )", "obj1": 0.7370517928286853, "obj2": 0.2374152469423923}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - AMS )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / ( MLU * CS ) )", "obj1": 0.703187250996016, "obj2": 0.24335072373417088}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ARS * ( FirstVNF_Mem / ( ARS * ( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( Min( ( MLU * CS ) ,( DS * MUC ) ) + MUM ) / ( DS + DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7599620391117123}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( DS / Min( RRSe ,MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.0413235678868107}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( ( AMS / AMS ) - ( ACS / ( ( Max( FirstVNF_Mem_Server,DDR ) * ( BR / PN ) ) + RRS ) ) )", "choosing": "( ( Max( Min( Max( ( MUC / Min( MLU ,CS ) ),( RRSe * ( RMSe + MUM ) ) ) ,CS ),MUC ) - CS ) - ( MLU - MUC ) )", "obj1": 0.9840637450199203, "obj2": 0.016852646179113202}, {"determining": "Max( ( ( Max( BR,FirstVNF_CPU ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( MUC / MUM ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),Min( DS ,RCSe ) )", "obj1": 0.9780876494023905, "obj2": 0.024862279852160503}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "Max( ( ( Max( BR,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 0.9183266932270916, "obj2": 0.06026260389170632}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "Max( Min( ARS ,ARS ),Min( FirstVNF_CPU ,( ARS + MDR ) ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),( MLU * ( Max( RMSe,MUR ) * CS ) ) ) ) - MUC ) )", "obj1": 0.9880478087649402, "obj2": 0.012836693290624413}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( BR / FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe * MLU ) ,Min( RCSe ,MUR ) )", "obj1": 0.9243027888446215, "obj2": 0.05691736531988013}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( DS * DS )", "obj1": 0.9661354581673307, "obj2": 0.029497353208835016}, {"determining": "Max( ( PN * ( ( MDR - RRS ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MUM ) - CS )", "obj1": 0.9721115537848606, "obj2": 0.02529540313907527}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "( ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( FirstVNF_CPU_Server - ( CRS * RRS ) ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) + MUM ) / RRSe ) / Min( MUC ,MUR ) )", "obj1": 0.950199203187251, "obj2": 0.033389708638775085}, {"determining": "( ( Const + FirstVNF_Mem ) - ( AMS + DDR ) )", "choosing": "( ( Min( MUM ,MUC ) / ( ( MUR + RMSe ) / Min( Max( DS,Min( RMSe ,MUM ) ) ,CS ) ) ) / Min( RRSe ,MUM ) )", "obj1": 0.7350597609561753, "obj2": 0.2393108576009514}, {"determining": "Max( ( Const - ARS ),( ( ( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) ) - Max( BR,DDR ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( MLU + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.0433850251680459}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - FirstVNF_RAM ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),( RMSe + RCSe ) ) ) - MUC ) )", "obj1": 0.9302788844621513, "obj2": 0.04607605208138225}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.029647446970019975}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "( ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( FirstVNF_CPU_Server - ( CRS * RRS ) ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) + MUM ) / RRSe ) / Min( MUC ,MUR ) )", "obj1": 0.950199203187251, "obj2": 0.033389708638775085}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ARS * ( PN - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Min( ( MLU * CS ) ,( Max( MUC,( DS / ( CS * RCSe ) ) ) + Max( MUR,CS ) ) ) ) / ( MLU + DS ) )", "obj1": 0.9940239043824701, "obj2": 0.0022931340554747234}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.9302788844621513, "obj2": 0.04607605208138225}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.029647446970019975}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( BR / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe / ( MUR + ( MUC - ( Max( Min( MUR ,RCSe ),MLU ) + ( ( RMSe + RCSe ) - MUM ) ) ) ) ) * Min( MUR ,Max( Min( MUR ,MUM ),RRSe ) ) ) ,Min( MUR ,RCSe ) )", "obj1": 0.9223107569721115, "obj2": 0.05724205309280241}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) / Max( ( ( PN / CRS ) - ( ( ARS * ( AMS / ARS ) ) + ( MDR + Min( MDR ,MRS ) ) ) ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( ( ( ( Max( CS,CS ) + Max( ( MUM + Min( DS ,Max( CS,MLU ) ) ),RMSe ) ) - ( Max( CS,( RMSe * ( RRSe / ( CS - MUM ) ) ) ) * RMSe ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MLU ,MUC ) ) - MUR ) + ( MLU * ( Min( MUC ,RCSe ) + MUC ) ) ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.9322709163346613, "obj2": 0.043954533601807746}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( RMSe * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9203187250996016, "obj2": 0.05802426238161755}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.9322709163346613, "obj2": 0.043954533601807746}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) ) - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + RRSe ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,CRS ) ,CRS ) - ACS ) + Const ) ,Max( Max( FirstVNF_RAM_Server,MDR ),Min( ( AMS * MRS ) ,FirstVNF_CPU_Server ) ) ) ,Min( MRS ,ARS ) )", "choosing": "Min( ( ( CS - DS ) * ( CS + RRSe ) ) ,Max( MUC,DS ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( ( Min( ACS ,CRS ) - BR ) / FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) )", "choosing": "Min( ( DS * ( MUM * MLU ) ) ,Min( ( MLU + RRSe ) ,Min( MUM ,DS ) ) )", "obj1": 0.8406374501992032, "obj2": 0.16061043403387418}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Min( FirstVNF_RAM ,FirstVNF_Mem ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) ) ) / ACS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( Max( MUR,( RCSe - CS ) ),( ( MLU / MUR ) * MUM ) ) ) ) + ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 0.8247011952191236, "obj2": 0.16128985917019087}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( FirstVNF_Mem - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( RRS * PN ) ) * PN ) ) ) - Min( CRS ,MDR ) )", "choosing": "( ( Min( MUM ,MLU ) * ( MLU / RMSe ) ) / MLU )", "obj1": 0.7370517928286853, "obj2": 0.2374152469423923}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( Max( ( BR / ACS ),( BR + FirstVNF_RAM_Server ) ) - AMS )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / ( MLU * CS ) )", "obj1": 0.703187250996016, "obj2": 0.24335072373417088}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ARS * ( FirstVNF_Mem / ( ARS * ( FirstVNF_Mem / MRS ) ) ) )", "choosing": "( ( Min( ( MLU * CS ) ,( DS * MUC ) ) + MUM ) / ( DS + DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7599620391117123}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "Max( ( ( Max( BR,FirstVNF_CPU ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM - ARS ) ) ),( ( ( RRS / PN ) + ( RRS / FirstVNF_Mem ) ) - ( ( BR + ARS ) / ( MRS * BR ) ) ) )", "choosing": "( Max( ( ( MUC * MLU ) / ( DS - RMSe ) ),( ( DS - RCSe ) - Max( RCSe,DS ) ) ) - ( MUC / MUM ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( FirstVNF_CPU_Server - ( CRS * RRS ) ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) + MUM ) / RRSe ) / Min( MUC ,MUR ) )", "obj1": 0.950199203187251, "obj2": 0.033389708638775085}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),( MLU * ( Max( RMSe,MUR ) * CS ) ) ) ) - MUC ) )", "obj1": 0.9880478087649402, "obj2": 0.012836693290624413}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "Min( Min( Max( ACS,ARS ) ,Max( ( Const - ARS ),Min( ( AMS * ( BR - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( FirstVNF_CPU - DDR ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "Max( Min( ARS ,ARS ),Min( FirstVNF_CPU ,( ARS + MDR ) ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( DS * MLU ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.16135458167330677, "obj2": 0.7713118597798089}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.0188334414193284}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "( ( Const + FirstVNF_Mem ) - ( AMS + DDR ) )", "choosing": "( ( Min( MUM ,MUC ) / ( ( MUR + RMSe ) / Min( Max( DS,Min( RMSe ,MUM ) ) ,CS ) ) ) / Min( RRSe ,MUM ) )", "obj1": 0.7350597609561753, "obj2": 0.2393108576009514}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * ( ARS + ( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RMSe * MUR ) ,RRSe ) + ( RCSe - ( CS + CS ) ) ) * Min( RMSe ,MUC ) )", "obj1": 0.7250996015936255, "obj2": 0.2412361737386405}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( FirstVNF_CPU_Server - ( CRS * RRS ) ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) + MUM ) / RRSe ) / Min( MUC ,MUR ) )", "obj1": 0.950199203187251, "obj2": 0.033389708638775085}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( Min( ( MRS / FirstVNF_Mem ) ,Max( RRS,( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),RRS ) / Max( ARS,AMS ) ) ) ) ,Min( BR ,RRS ) )", "choosing": "Min( Max( RMSe,( MLU - ( Min( Max( Min( ( CS - MUM ) ,MUC ),RRSe ) ,( ( DS - ( MUM * RCSe ) ) / RMSe ) ) / ( Min( MLU ,CS ) - DS ) ) ) ) ,Min( MUM ,RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.0188334414193284}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9601593625498008, "obj2": 0.017994743444672907}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ARS * ( PN - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + Min( ( MLU * CS ) ,( Max( MUC,( DS / ( CS * RCSe ) ) ) + Max( MUR,CS ) ) ) ) / ( MLU + DS ) )", "obj1": 0.9940239043824701, "obj2": 0.0022931340554747234}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) ) - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + RRSe ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,CRS ) ,CRS ) - ACS ) + Const ) ,Max( Max( FirstVNF_RAM_Server,MDR ),Min( ( AMS * MRS ) ,FirstVNF_CPU_Server ) ) ) ,Min( MRS ,ARS ) )", "choosing": "Min( ( ( CS - DS ) * ( CS + RRSe ) ) ,Max( MUC,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - Max( Max( MRS,CRS ),ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * RCSe ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( ARS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( ( CS + RCSe ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( PN - ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( ( MUM * MUC ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.6892430278884463, "obj2": 0.21631181373441788}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( ( MDR - RRS ) - Min( FirstVNF_CPU ,( FirstVNF_Mem * CRS ) ) )", "choosing": "( Max( RRSe,CS ) / ( RCSe * Min( DS ,RCSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7413788445803996}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ( ( Max( AMS,CRS ) * Max( FirstVNF_RAM,BR ) ) * ( ( RRS + ACS ) * ( PN + ARS ) ) ) + Max( ( ( ACS + DDR ) - ( ACS - ARS ) ),Max( ( FirstVNF_CPU * ACS ),( RRS / AMS ) ) ) )", "choosing": "Max( Max( Max( ( DS + RMSe ),Max( MLU,CS ) ),( ( MUM / RRSe ) + Max( RRSe,RCSe ) ) ),Max( ( ( MUR / DS ) - ( MUC * RMSe ) ),Min( Min( DS ,MUC ) ,( MLU * RMSe ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7502815197390754}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_Mem_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( ( MLU * RCSe ) - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.040716031770687756}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),( MLU * ( Max( RMSe,MUR ) * CS ) ) ) ) - MUC ) )", "obj1": 0.9880478087649402, "obj2": 0.012836693290624413}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ) ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9302788844621513, "obj2": 0.03201508306031417}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Min( CS ,( ( MLU + DS ) / CS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.025379519892002104}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "Min( ( PN - ( Min( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( ( ( MUM * MUC ) * MLU ) - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.952191235059761, "obj2": 0.020975985836899406}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MLU - DS ) * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9482071713147411, "obj2": 0.02428224284433331}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "Min( Min( Max( ACS,ARS ) ,Max( ( Const - ARS ),Min( ( AMS * ( BR - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( FirstVNF_CPU - DDR ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / AMS ) ,BR ) / ACS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) ) - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + RRSe ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,CRS ) ,CRS ) - ACS ) + Const ) ,Max( Max( FirstVNF_RAM_Server,MDR ),Min( ( AMS * MRS ) ,FirstVNF_CPU_Server ) ) ) ,Min( MRS ,ARS ) )", "choosing": "Min( ( ( CS - DS ) * ( CS + RRSe ) ) ,Max( MUC,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - Max( Max( MRS,CRS ),ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * RCSe ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + ( Min( MUC ,Max( Max( MUR,( RCSe * CS ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( Max( ( RMSe - RRSe ),MUC ),( Min( MLU ,RMSe ) + ( CS + CS ) ) ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( PN - ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( ( MUM * MUC ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.6892430278884463, "obj2": 0.21631181373441788}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( AMS,FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( DS * ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7398572018208378}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_Mem_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( ( MLU * RCSe ) - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.040716031770687756}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ) ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9302788844621513, "obj2": 0.03201508306031417}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.952191235059761, "obj2": 0.020940801317056734}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( ( ( ( Max( Max( MLU,MUC ),MUM ) * DS ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( CRS * CRS ) ) - FirstVNF_Mem_Server ) * Min( MDR ,MDR ) )", "choosing": "( ( RMSe * MUM ) * ( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( CRS - FirstVNF_CPU_Server ) ,PN ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ARS + ACS ) )", "choosing": "Max( ( MLU * ( RCSe + MUC ) ),( ( ( RCSe - RMSe ) + MLU ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) ) - FirstVNF_Mem_Server ) ,( Const - ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,( RRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + RRSe ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( RRS,BR ) * MRS ) / PN ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - ( CRS * AMS ) ) )", "choosing": "( ( RRSe / MLU ) / Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,CRS ) ,CRS ) - ACS ) + Const ) ,Max( Max( FirstVNF_RAM_Server,MDR ),Min( ( AMS * MRS ) ,FirstVNF_CPU_Server ) ) ) ,Min( MRS ,ARS ) )", "choosing": "Min( ( ( CS - DS ) * ( CS + RRSe ) ) ,Max( MUC,DS ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + ( Min( MUC ,Max( Max( MUR,( RCSe * CS ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( Max( ( RMSe - RRSe ),MUC ),( Min( MLU ,RMSe ) + ( CS + CS ) ) ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( AMS,FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( DS * ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7398572018208378}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ( ACS * ( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ) + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( RMSe * RMSe ),( MUC - RRSe ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + RMSe ) ) ) ) - Max( Max( MUC,RCSe ),( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.7310756972111554, "obj2": 0.20637739822512452}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( PN - ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( ( MUM * MUC ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.6892430278884463, "obj2": 0.21631181373441788}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( ARS * ( FirstVNF_Mem / MRS ) ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( Min( ( MLU * CS ) ,( MLU * CS ) ) + MUM ) / ( MLU + DS ) )", "obj1": 0.23705179282868527, "obj2": 0.7019051545032362}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( PN - ( ( DDR * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( ( MUC - RCSe ) - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.6673306772908366, "obj2": 0.226646170877235}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_Mem_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( ( MLU * RCSe ) - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.040716031770687756}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( ( ( ( Max( Max( MLU,MUC ),MUM ) * DS ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + PN ) / ( MDR - ACS ) ) ,( Max( CRS,RRS ) - ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Max( Max( RRSe,RRSe ),( MUC / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( AMS,FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( DS * ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7398572018208378}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ( ACS * ( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ) + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( RMSe * RMSe ),( MUC - RRSe ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + RMSe ) ) ) ) - Max( Max( MUC,RCSe ),( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.7310756972111554, "obj2": 0.20637739822512452}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( PN - ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( ( MUM * MUC ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.6892430278884463, "obj2": 0.21631181373441788}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( PN - ( ( DDR * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( ( MUC - RCSe ) - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.6673306772908366, "obj2": 0.226646170877235}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_Mem_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( ( MLU * RCSe ) - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.040716031770687756}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( BR + MDR ) )", "choosing": "( ( MUR * ( ( DS - ( MUM * ( ( RMSe * Min( MUR ,CS ) ) * MUM ) ) ) - MUR ) ) / ( RRSe - DS ) )", "obj1": 0.2868525896414343, "obj2": 0.6037926385704097}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( ( ( ( Max( Max( MLU,MUC ),MUM ) * DS ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + ( Min( MUC ,Max( Max( MUR,( RCSe * CS ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( Max( ( RMSe - RRSe ),MUC ),( Min( MLU ,RMSe ) + ( CS + CS ) ) ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,( Const / ( BR / Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) )", "choosing": "( ( DS + MUC ) * Min( Min( ( ( MLU - DS ) + ( MUR + MUC ) ) ,( ( Min( ( Min( RCSe ,MUM ) * RMSe ) ,MUR ) + MUC ) * MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MRS ) / Min( MRS ,Const ) ) * Max( ( ACS + BR ),( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( ( MUM + ( RCSe / DS ) ) ,DS ) ,( DS * DS ) ) + Max( ( RRSe + ( DS + CS ) ),( MUM * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ( RRS - MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + RRSe ),( MUM + MLU ) ) / ( Max( RCSe,MUM ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_RAM / ( AMS / Const ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( CS + DS ) ) * ( ( RMSe - MUM ) - ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + AMS ) + MDR ) / ( MRS - PN ) )", "choosing": "( ( MUC + MLU ) * ( Min( MUR ,RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( AMS,FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( DS * ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7398572018208378}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ( ACS * ( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ) + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( RMSe * RMSe ),( MUC - RRSe ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + RMSe ) ) ) ) - Max( Max( MUC,RCSe ),( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.7310756972111554, "obj2": 0.20637739822512452}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( PN - ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( ( MUM * MUC ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.6892430278884463, "obj2": 0.21631181373441788}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.7083981149812459}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( ( PN - ( ( DDR * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( ( MUC - RCSe ) - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.6673306772908366, "obj2": 0.226646170877235}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( ( MRS - ARS ),DDR ) / ( FirstVNF_RAM_Server - ( ( CRS + RRS ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS * Max( ( DS * CS ),( RCSe + MUM ) ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7899975120938366}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_Mem_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( ( MLU * RCSe ) - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.040716031770687756}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( ( Const * FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "( MUR - ( ( ( ( RMSe + RRSe ) - ( ( RRSe - CS ) - ( MLU - MUC ) ) ) + ( ( ( MUM - RRSe ) + RRSe ) + RMSe ) ) + MUM ) )", "obj1": 0.6633466135458167, "obj2": 0.24772711843165202}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + RCSe ) ) ),Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0051574835835557185}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( ( ( ( Max( Max( MLU,MUC ),MUM ) * DS ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + ( Min( MUC ,Max( Max( MUR,( RCSe * CS ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( Max( ( RMSe - RRSe ),MUC ),( Min( MLU ,RMSe ) + ( CS + CS ) ) ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * Min( ACS ,DDR ) ) * ( FirstVNF_Mem_Server / ( ( AMS / DDR ) + Max( Const,( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( MUR * ( ( MUM * ( MLU * RRSe ) ) * MUM ) ) / ( Max( ( ( ( RMSe / MUM ) - RRSe ) / ( RMSe * Min( DS ,( ( RRSe + RMSe ) + ( RRSe - RRSe ) ) ) ) ),( Min( CS ,RRSe ) / MUC ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ( AMS - Max( FirstVNF_Mem_Server,DDR ) ) ,DDR ) ) / AMS ) - ( CRS - AMS ) )", "choosing": "( ( ( RMSe - RMSe ) - DS ) - ( ( ( Min( ( ( ( MUC / RMSe ) / ( CS / RRSe ) ) * ( CS + ( RMSe / DS ) ) ) ,MUC ) - RMSe ) + ( ( Min( DS ,MLU ) + ( MUM / Min( RCSe ,Max( MLU,MLU ) ) ) ) + Min( ( RMSe / CS ) ,( RCSe * DS ) ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( Min( MRS ,FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + ( RMSe / RCSe ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( AMS,FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( DS * ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7398572018208378}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ( ACS * ( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ) + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( RMSe * RMSe ),( MUC - RRSe ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + RMSe ) ) ) ) - Max( Max( MUC,RCSe ),( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.7310756972111554, "obj2": 0.20637739822512452}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( PN - ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( ( MUM * MUC ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.6892430278884463, "obj2": 0.21631181373441788}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "( ( ( PN / CRS ) - ( ( ( AMS / ARS ) * ARS ) + AMS ) ) - ( Max( ( MRS - ARS ),DDR ) / ( FirstVNF_RAM_Server - ( ( CRS + RRS ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( RRSe ,( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + ( MLU * ( Min( MUC ,RCSe ) + MUC ) ) ) ) ) / ( DS * Max( ( DS * CS ),( RCSe + MUM ) ) ) )", "obj1": 0.22111553784860558, "obj2": 0.7011458378025143}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( ( RCSe - ( Min( ( MLU + RRSe ) ,( ( ( MUR - CS ) - MUC ) - Min( ( MUR * RRSe ) ,( DS * MUM ) ) ) ) + MUC ) ) + RMSe ) * ( Max( MUR,( MLU + ( RMSe / DS ) ) ) + RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7775006629358141}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( ( MRS - ARS ),DDR ) / ( FirstVNF_RAM_Server - ( ( CRS + RRS ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS * Max( ( DS * CS ),( RCSe + MUM ) ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7899975120938366}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ( PN - ( ( DDR * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( ( MUC - RCSe ) - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.6673306772908366, "obj2": 0.226646170877235}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_Mem_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( ( MLU * RCSe ) - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.040716031770687756}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( ( ( ( Max( Max( MLU,MUC ),MUM ) * DS ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + ( Min( MUC ,Max( Max( MUR,( RCSe * CS ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( Max( ( RMSe - RRSe ),MUC ),( Min( MLU ,RMSe ) + ( CS + CS ) ) ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) )", "choosing": "( Min( MUM ,MUR ) / ( ( ( MUR + Min( MUC ,Max( CS,( ( RCSe / DS ) * ( CS * CS ) ) ) ) ) - MLU ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / AMS ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Min( RRS ,CRS ) ) ) ) ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( MUC ,Max( MLU,Min( ( MLU / MUR ) ,MUM ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - RRSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem * ( MRS - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( DS - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS - BR ) ,Min( FirstVNF_RAM ,ACS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MDR ) ) ) - Max( ( ( Const + CRS ) - Min( ACS ,FirstVNF_CPU_Server ) ),( ( Const + AMS ) - ( PN - RRS ) ) ) )", "choosing": "( Max( Max( ( MUR * RRSe ),Max( RMSe,MUM ) ),( ( MLU + MUR ) + ( CS - MUR ) ) ) / ( ( ( RMSe - RMSe ) - ( MUC / MLU ) ) * ( ( MLU + MUC ) - ( MUM / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( Const,ARS ),Min( MRS ,FirstVNF_RAM ) ) - MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + RCSe ) ,Max( ( ( DS / ( DS - MLU ) ) + ( DS - RRSe ) ),( ( RCSe * RRSe ) * ( Max( CS,( CS + CS ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( Min( ACS ,RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( ARS + ( ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server - Const ) - ACS ) ) ) )", "choosing": "( ( MUR / ( MUM - Min( ( RMSe * MUM ) ,Min( Min( ( ( MUR - RMSe ) + RRSe ) ,( MUC - RCSe ) ) ,MUM ) ) ) ) / ( Min( ( MUM - Min( MUM ,Min( CS ,( RCSe / RRSe ) ) ) ) ,MUC ) + ( ( MUR * DS ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( Min( MRS ,FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + ( RMSe / RCSe ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + ( RMSe / RCSe ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "Min( ( PN - ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( ( MUM * MUC ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.6892430278884463, "obj2": 0.21631181373441788}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "( ( ( PN / CRS ) - ( ( ( AMS / ARS ) * ARS ) + AMS ) ) - ( Max( ( MRS - ARS ),DDR ) / ( FirstVNF_RAM_Server - ( ( CRS + RRS ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( RRSe ,( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + ( MLU * ( Min( MUC ,RCSe ) + MUC ) ) ) ) ) / ( DS * Max( ( DS * CS ),( RCSe + MUM ) ) ) )", "obj1": 0.22111553784860558, "obj2": 0.7011458378025143}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( ( BR - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUM ,MUR ) ,Max( ( MLU - ( Max( Max( ( MUR * RMSe ),MLU ),DS ) - ( MUR + MUC ) ) ),RCSe ) )", "obj1": 0.7171314741035857, "obj2": 0.19244864767000996}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( BR - ( MRS + ( ( CRS * AMS ) + ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( Min( ( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ,DS ) / Min( RMSe ,Max( MLU,( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.06781418352987273}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( ( MRS - ARS ),DDR ) / ( FirstVNF_RAM_Server - ( ( CRS + RRS ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS * Max( ( DS * CS ),( RCSe + MUM ) ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7899975120938366}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( AMS,FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( DS * ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7398572018208378}, {"determining": "( ( RRS + ( ( MRS * ( Min( DDR ,FirstVNF_Mem ) * MDR ) ) + ACS ) ) - ( ( DDR + Max( MRS,ARS ) ) * ( ( ( ( PN * MDR ) * FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( DS ,Max( DS,( MUM + RCSe ) ) ) ,MUM ) / ( MUM - CS ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ( PN - ( ( DDR * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( ( MUC - RCSe ) - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.6673306772908366, "obj2": 0.226646170877235}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( ( Const + MRS ) - Const )", "choosing": "( Min( ( Max( RCSe,( RMSe / MUC ) ) / RMSe ) ,DS ) / Min( ( Min( ( Max( RCSe,( RMSe / MUC ) ) / RMSe ) ,DS ) / Min( RMSe ,( MLU - ( MUM + ( MUC / RCSe ) ) ) ) ) ,( MLU - ( MUM + ( MUC / RCSe ) ) ) ) )", "obj1": 0.20119521912350596, "obj2": 0.7294115822516413}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( FirstVNF_CPU,( Const / ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( BR / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) / BR ) ) ) / ( BR + DDR ) )", "choosing": "( Min( ( Max( RCSe,( RMSe / DS ) ) / RMSe ) ,DS ) / Min( RMSe ,( MLU - ( MUM + ( MUC / RCSe ) ) ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7360624909410551}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( ( ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( ( BR - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,RRSe ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,( Max( ( Min( DS ,RRSe ) - CS ),CS ) * ( RCSe + DS ) ) )", "obj1": 0.7390438247011952, "obj2": 0.18584699528679938}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "Min( ( ( ( Min( FirstVNF_Mem ,MDR ) + DDR ) - ( ( FirstVNF_RAM_Server - MDR ) / ACS ) ) - ACS ) ,( Max( Min( RRS ,Min( RRS ,Const ) ),AMS ) + ( Min( FirstVNF_Mem_Server ,BR ) + MRS ) ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) / RMSe ) / Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( RRSe + ( Max( RRSe,Min( MUC ,MUC ) ) - RRSe ) ) ) ) ) ,Max( ( ( Max( CS,CS ) * ( RRSe * ( Min( RMSe ,( RCSe / MLU ) ) / CS ) ) ) / Max( ( ( RRSe - Max( Min( DS ,CS ),( RRSe + MUC ) ) ) + CS ),Min( ( MUC - RCSe ) ,( ( MUM + RMSe ) / DS ) ) ) ),RCSe ) )", "obj1": 0.7270916334661355, "obj2": 0.1909828967900502}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( ( BR - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,RRSe ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.7270916334661355, "obj2": 0.1909828967900502}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / RMSe ) ) / DS ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + ( Min( MUC ,Max( Max( MUR,( RCSe * CS ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( Max( ( RMSe - RRSe ),MUC ),( Min( MLU ,RMSe ) + ( CS + CS ) ) ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( Min( Const ,Max( Min( FirstVNF_CPU ,Max( DDR,FirstVNF_Mem ) ),CRS ) ) - Max( Min( FirstVNF_CPU ,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - CRS ) + MRS ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + ( RMSe + RCSe ) ) + Min( RMSe ,( ( RRSe + ( ( RMSe * RRSe ) - DS ) ) / ( ( MUC / ( RRSe * MUR ) ) / RMSe ) ) ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + ( RMSe / RCSe ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.19322709163346613, "obj2": 0.7170539083221752}, {"determining": "( ( ( PN / CRS ) - ( ( ( AMS / ARS ) * ARS ) + AMS ) ) - ( Max( ( MRS - ARS ),DDR ) / ( FirstVNF_RAM_Server - ( ( CRS + RRS ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( RRSe ,( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + ( MLU * ( Min( MUC ,RCSe ) + MUC ) ) ) ) ) / ( DS * Max( ( DS * CS ),( RCSe + MUM ) ) ) )", "obj1": 0.22111553784860558, "obj2": 0.7011458378025143}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( BR - ( MRS + ( ( CRS * AMS ) + ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( Min( ( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ,DS ) / Min( RMSe ,Max( MLU,( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.06781418352987273}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( ( MRS - ARS ),DDR ) / ( FirstVNF_RAM_Server - ( ( CRS + RRS ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS * Max( ( DS * CS ),( RCSe + MUM ) ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7899975120938366}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( ( RRS + ( ( MRS * ( Min( DDR ,FirstVNF_Mem ) * MDR ) ) + ACS ) ) - ( ( DDR + Max( MRS,ARS ) ) * ( ( ( ( PN * MDR ) * FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( DS ,Max( DS,( MUM + RCSe ) ) ) ,MUM ) / ( MUM - CS ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + MLU ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.21115537848605578, "obj2": 0.7110144173662205}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / RMSe ) ) / DS ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( Min( MRS ,FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + ( RMSe / RCSe ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + ( Min( MUC ,Max( Max( MUR,( RCSe * CS ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( Max( ( RMSe - RRSe ),MUC ),( Min( MLU ,RMSe ) + ( CS + CS ) ) ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ARS / ARS ) ) )", "choosing": "Min( Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),FirstVNF_Mem_Server ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( ( MLU * ( Max( ( MUM + MLU ),MUR ) * CS ) ) + ( RCSe - RRSe ) ),( ( RRSe * RRSe ) * ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) / PN ) ) / FirstVNF_CPU_Server ) ,Min( ( MDR - Max( FirstVNF_RAM,CRS ) ) ,MDR ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,BR ) ) - Min( FirstVNF_CPU ,Max( ARS,FirstVNF_Mem ) ) )", "choosing": "( CS / Min( RMSe ,( ( RRSe + ( ( RMSe * RRSe ) - DS ) ) * ( DS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( Min( FirstVNF_CPU ,Max( DDR,FirstVNF_Mem ) ),CRS ) ) - Max( Min( FirstVNF_CPU ,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - CRS ) + MRS ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + ( RMSe + RCSe ) ) + Min( RMSe ,( ( RRSe + ( ( RMSe * RRSe ) - DS ) ) / ( ( MUC / ( RRSe * MUR ) ) / RMSe ) ) ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.19322709163346613, "obj2": 0.7170539083221752}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( BR - ( MRS + ( ( CRS * AMS ) + ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( Min( ( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ,DS ) / Min( RMSe ,Max( MLU,( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.06781418352987273}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.17330677290836655, "obj2": 0.735521465521644}, {"determining": "( Min( ( BR / RRS ) ,BR ) - BR )", "choosing": "( ( RMSe - MUR ) / Min( ( ( ( RMSe - MUR ) - MUR ) - MUR ) ,RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5544255858520791}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Max( ( Min( DS ,CS ) - CS ),CS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / RMSe ) ) / DS ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( Min( MRS ,FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + ( RMSe / RCSe ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + ( RMSe / RCSe ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + ( Min( MUC ,Max( Max( MUR,( RCSe * CS ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( Max( ( RMSe - RRSe ),MUC ),( Min( MLU ,RMSe ) + ( CS + CS ) ) ) ) ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - AMS ) - ( ( ( Max( AMS,Min( BR ,Max( MDR,BR ) ) ) + FirstVNF_RAM_Server ) * BR ) * ARS ) )", "choosing": "( ( ( ( MUR + Min( Max( CS,Min( ( MLU / MUR ) ,MUM ) ) ,( ( ( DS * DS ) - MUM ) + ( Min( DS ,MLU ) / Max( MUM,RCSe ) ) ) ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ( Const * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( ( RMSe + RCSe ) + Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) ) + Min( RMSe ,( ( RRSe + ( ( RMSe * RRSe ) - DS ) ) * ( DS / RMSe ) ) ) ) ) / ( Min( MUM ,( MUM / DS ) ) / ( DS * ( ( ( ( MUR * MUR ) * RMSe ) * MUM ) - ( RCSe + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,BR ) ) - Min( FirstVNF_CPU ,Max( ARS,FirstVNF_Mem ) ) )", "choosing": "( CS / Min( RMSe ,( ( RRSe + ( ( RMSe * RRSe ) - DS ) ) * ( DS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( BR - ( MRS + ( ( CRS * AMS ) + ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( Min( ( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ,DS ) / Min( RMSe ,Max( MLU,( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.06781418352987273}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.17330677290836655, "obj2": 0.735521465521644}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Max( ( Min( DS ,CS ) - CS ),CS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / RMSe ) ) / DS ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( Min( Const ,Max( Min( FirstVNF_CPU ,Max( DDR,FirstVNF_Mem ) ),CRS ) ) - Max( Min( FirstVNF_CPU ,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - CRS ) + MRS ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + ( RMSe + RCSe ) ) + Min( RMSe ,( ( RRSe + ( ( RMSe * RRSe ) - DS ) ) / ( ( MUC / ( RRSe * MUR ) ) / RMSe ) ) ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + ( RMSe / RCSe ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + ( RMSe / RCSe ) ) ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( MUR ,RMSe ) / ( Max( ( DS * CS ),Max( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ),Max( MLU,MUM ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ( Const * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( MUM - ( ( ( RMSe + RCSe ) + Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) ) + Min( RMSe ,( ( RRSe + ( ( RMSe * RRSe ) - DS ) ) * ( DS / RMSe ) ) ) ) ) / ( Min( MUM ,( MUM / DS ) ) / ( DS * ( ( ( ( MUR * MUR ) * RMSe ) * MUM ) - ( RCSe + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( ( ACS - FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,MUR ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8406374501992032, "obj2": 0.08960630251406482}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( BR - ( MRS + ( ( CRS * AMS ) + ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( Min( ( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ,DS ) / Min( RMSe ,Max( MLU,( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.06781418352987273}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( AMS - MDR ) ,( Min( ( AMS - MDR ) ,( MDR * ACS ) ) * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Min( DS ,DS ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.20916334661354583, "obj2": 0.7036563951573372}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.17330677290836655, "obj2": 0.735521465521644}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( Max( Max( Min( ( ARS / FirstVNF_Mem ) ,FirstVNF_CPU ),CRS ),Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( CRS + MRS ) ,ARS ),ARS ) ) * ( PN * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( CS / ( Min( MUM ,( MLU * Min( RRSe ,RCSe ) ) ) / ( DS * ( ( ( ( RMSe - RCSe ) * RMSe ) * MUM ) - ( RCSe + MUM ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.7123523784310773}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * ( FirstVNF_Mem / MRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( Min( ( FirstVNF_Mem_Server / RRS ) ,Max( ( BR + Min( MDR ,( RRS / MRS ) ) ),ACS ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( ( RMSe * CS ) ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6156936368988428}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Max( ( Min( DS ,CS ) - CS ),CS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Const / ACS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( ( MUM * MUC ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / RMSe ) ) / DS ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}], "23": [{"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( RRSe + MUC ) + ( ( MUC + MLU ) / ( RRSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( MUR ,RMSe ) / ( Max( ( DS * CS ),Max( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ),Max( MLU,MUM ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) - ( ( ( Max( DDR,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( ( BR / FirstVNF_Mem ) - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUC ,Max( Max( MUR,( RCSe * RRSe ) ),Max( ( RCSe - RMSe ),MLU ) ) ) + Max( RMSe,RCSe ) ) + MLU ) * MUM ) / ( CS + Max( CS,Min( ( ( ( MUR + RCSe ) * MUR ) - ( MUM / ( Max( MLU,RRSe ) * RRSe ) ) ) ,MUR ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.11548948867711947}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ACS - ARS ) )", "choosing": "Min( ( ( ( ( Min( MUM ,MUR ) + ( ( MUR + Max( MUM,RRSe ) ) * CS ) ) - RCSe ) * MUM ) - RCSe ) ,( MUR - MUC ) )", "obj1": 0.4043824701195219, "obj2": 0.49787585411707563}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( ( ACS - FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,MUR ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8406374501992032, "obj2": 0.08960630251406482}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( BR - ( MRS + ( ( CRS * AMS ) + ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( Min( ( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ,DS ) / Min( RMSe ,Max( MLU,( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.06781418352987273}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( PN / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8545816733067729, "obj2": 0.06921146954015048}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,RMSe ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.683724917300223}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.20916334661354583, "obj2": 0.7036563951573372}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "( Max( Max( Min( ( ARS / FirstVNF_Mem ) ,FirstVNF_CPU ),CRS ),Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( CRS + MRS ) ,ARS ),ARS ) ) * ( PN * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( CS / ( Min( MUM ,( MLU * Min( RRSe ,RCSe ) ) ) / ( DS * ( ( ( ( RMSe - RCSe ) * RMSe ) * MUM ) - ( RCSe + MUM ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.7123523784310773}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.17330677290836655, "obj2": 0.735521465521644}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),( MRS - ARS ) ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7224486011072357}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU_Server,( ( PN * BR ) * FirstVNF_RAM_Server ) ) ) ),RRS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( MUC - RRSe ),( MUC - MLU ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + MUR ) ) ) ) - ( Min( MUC ,CS ) * ( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6066879873577813}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "Min( ( AMS - MDR ) ,Min( FirstVNF_Mem_Server ,Max( BR,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( DS ,RMSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Max( ( Min( DS ,CS ) - CS ),CS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / ( ( RRS / PN ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}], "24": [{"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( CS - CS ) ,( ( CS + MUM ) + ( DS + ( ( CS + RMSe ) / RRSe ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( RRSe + MUC ) + ( ( MUC + MLU ) / ( RRSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( ( PN - ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - ( RCSe + MUC ) ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7808764940239044, "obj2": 0.08838019801494783}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ACS - ARS ) )", "choosing": "Min( ( ( ( ( Min( MUM ,MUR ) + ( ( MUR + Max( MUM,RRSe ) ) * CS ) ) - RCSe ) * MUM ) - RCSe ) ,( MUR - MUC ) )", "obj1": 0.4043824701195219, "obj2": 0.49787585411707563}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( BR - ( MRS + ( ( CRS * AMS ) + ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( Min( ( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ,DS ) / Min( RMSe ,Max( MLU,( ( MLU - ( MLU / MLU ) ) + ( MUM / DS ) ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.06781418352987273}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "( ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( ( Const / FirstVNF_RAM ) * FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( DS * MLU ) ) / Min( MUM ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6649469793115437}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( PN / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8545816733067729, "obj2": 0.06921146954015048}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM,MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + ( ( RMSe + MUM ) * ( MUC + RMSe ) ) ) + Max( MUR,MUC ) ) * Min( ( ( Min( RMSe ,MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( CS / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.9023904382470119, "obj2": 0.06648471642363166}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.20916334661354583, "obj2": 0.7036563951573372}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,RMSe ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.683724917300223}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "( Max( Max( Min( ( ARS / FirstVNF_Mem ) ,FirstVNF_CPU ),CRS ),Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( CRS + MRS ) ,ARS ),ARS ) ) * ( PN * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( CS / ( Min( MUM ,( MLU * Min( RRSe ,RCSe ) ) ) / ( DS * ( ( ( ( RMSe - RCSe ) * RMSe ) * MUM ) - ( RCSe + MUM ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.7123523784310773}, {"determining": "Min( ( PN - ( ( Max( PN,FirstVNF_RAM ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9043824701195219, "obj2": 0.046372746146969346}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ACS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUC ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16533864541832669, "obj2": 0.725484682706756}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),( MRS - ARS ) ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7224486011072357}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU_Server,( ( PN * BR ) * FirstVNF_RAM_Server ) ) ) ),RRS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( MUC - RRSe ),( MUC - MLU ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + MUR ) ) ) ) - ( Min( MUC ,CS ) * ( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6066879873577813}, {"determining": "Min( ( AMS - MDR ) ,Min( FirstVNF_Mem_Server ,Max( BR,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( DS ,RMSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + PN ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Min( ( BR / RRS ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / DDR ) * FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM / ( DS - CS ) ) ,( MUM * RCSe ) ) * MLU ) / ( ( RCSe + DS ) / RCSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Max( ( Min( DS ,CS ) - CS ),CS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,RMSe ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.683724917300223}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}], "25": [{"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( RRSe + MUC ) + Min( MLU ,( ( MUC + MLU ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( CS - CS ) ,( ( CS + MUM ) + ( DS + ( ( CS + RMSe ) / RRSe ) ) ) ) ,Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ACS - ARS ) )", "choosing": "Min( ( ( ( ( Min( MUM ,MUR ) + ( ( MUR + Max( MUM,RRSe ) ) * CS ) ) - RCSe ) * MUM ) - RCSe ) ,( MUR - MUC ) )", "obj1": 0.4043824701195219, "obj2": 0.49787585411707563}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "Min( ( PN - ( ( MDR - ( ACS - FirstVNF_CPU_Server ) ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( ( RMSe * MLU ) * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7888446215139442, "obj2": 0.08715455262533432}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( PN - ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - ( RCSe + MUC ) ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7808764940239044, "obj2": 0.08838019801494783}, {"determining": "Min( ( PN - ( ( Max( PN,( ( BR + DDR ) + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,CS ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8864541832669323, "obj2": 0.0630850018520304}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( RMSe ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6645078729670976}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( PN / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8545816733067729, "obj2": 0.06921146954015048}, {"determining": "Min( ( PN - ( ( Max( PN,FirstVNF_RAM ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9043824701195219, "obj2": 0.046372746146969346}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.20916334661354583, "obj2": 0.7036563951573372}, {"determining": "( ( ( ( Const / ( ( PN / ( RRS - RRS ) ) - AMS ) ) / Const ) / FirstVNF_CPU_Server ) - ( Max( ( ( FirstVNF_RAM_Server + BR ) + AMS ),( MDR * PN ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( RMSe * MLU ),( ( ( RRSe / MLU ) + CS ) + MUR ) ) / RMSe ) * ( ( ( MUM / Min( ( ( MUC / MUC ) + MUR ) ,CS ) ) * RRSe ) * Max( ( MUC / ( DS / MUC ) ),( ( ( CS / MUR ) + MUM ) * MUR ) ) ) ) / Min( ( RMSe + ( CS - RCSe ) ) ,( MLU + RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6799492472215439}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "( Max( Max( Min( ( ARS / FirstVNF_Mem ) ,FirstVNF_CPU ),CRS ),Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( CRS + MRS ) ,ARS ),ARS ) ) * ( PN * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( CS / ( Min( MUM ,( MLU * Min( RRSe ,RCSe ) ) ) / ( DS * ( ( ( ( RMSe - RCSe ) * RMSe ) * MUM ) - ( RCSe + MUM ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.7123523784310773}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ACS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUC ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16533864541832669, "obj2": 0.725484682706756}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),( MRS - ARS ) ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7224486011072357}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( ( Min( ( AMS + ACS ) ,DDR ) - RRS ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) )", "choosing": "Min( Max( RCSe,( MLU - ( Min( ( MUC + ( CS - DS ) ) ,Max( ( Min( RRSe ,RMSe ) - CS ),RMSe ) ) + RMSe ) ) ) ,Min( MUR ,RMSe ) )", "obj1": 0.9402390438247012, "obj2": 0.02845775845150183}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU_Server,( ( PN * BR ) * FirstVNF_RAM_Server ) ) ) ),RRS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( MUC - RRSe ),( MUC - MLU ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + MUR ) ) ) ) - ( Min( MUC ,CS ) * ( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6066879873577813}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( AMS - MDR ) ,Min( FirstVNF_Mem_Server ,Max( BR,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( DS ,RMSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( ( AMS - BR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,( ( DS - MUR ) - RCSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Max( ( Min( DS ,CS ) - CS ),CS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}], "26": [{"determining": "( Max( RRS,( FirstVNF_RAM_Server - ( ( Max( ARS,Min( ACS ,ARS ) ) + FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) - ( ( AMS / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - ( ( Max( ARS,Min( ACS ,ARS ) ) + FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( Max( MUC,( ( MUC - MUC ) - ( DS + DS ) ) ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( Max( AMS,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( RRSe + MUC ) + Min( MLU ,( ( MUC + MLU ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ACS - ARS ) )", "choosing": "Min( ( ( ( ( Min( MUM ,MUR ) + ( ( MUR + Max( MUM,RRSe ) ) * CS ) ) - RCSe ) * MUM ) - RCSe ) ,( MUR - MUC ) )", "obj1": 0.4043824701195219, "obj2": 0.49787585411707563}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "Min( ( PN - ( ( MDR - ( ACS - FirstVNF_CPU_Server ) ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( ( RMSe * MLU ) * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7888446215139442, "obj2": 0.08715455262533432}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( PN - ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - ( RCSe + MUC ) ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7808764940239044, "obj2": 0.08838019801494783}, {"determining": "Min( ( PN - ( ( Max( PN,( ( BR + DDR ) + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,CS ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8864541832669323, "obj2": 0.0630850018520304}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( RMSe ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6645078729670976}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( PN / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8545816733067729, "obj2": 0.06921146954015048}, {"determining": "Min( ( PN - ( ( Max( PN,FirstVNF_RAM ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9043824701195219, "obj2": 0.046372746146969346}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.20916334661354583, "obj2": 0.7036563951573372}, {"determining": "( ( ( MDR - RRS ) / AMS ) - ( ( CRS * ( Max( ( Max( ARS,Max( ARS,FirstVNF_CPU_Server ) ) + CRS ),FirstVNF_RAM ) - AMS ) ) * FirstVNF_Mem ) )", "choosing": "( RMSe / Min( DS ,( Max( ( ( DS * ( DS + ( CS / MUC ) ) ) - ( CS + MUM ) ),MLU ) + ( DS + ( CS / MUC ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7582218384387257}, {"determining": "( ( ( ( Const / ( ( PN / ( RRS - RRS ) ) - AMS ) ) / Const ) / FirstVNF_CPU_Server ) - ( Max( ( ( FirstVNF_RAM_Server + BR ) + AMS ),( MDR * PN ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( RMSe * MLU ),( ( ( RRSe / MLU ) + CS ) + MUR ) ) / RMSe ) * ( ( ( MUM / Min( ( ( MUC / MUC ) + MUR ) ,CS ) ) * RRSe ) * Max( ( MUC / ( DS / MUC ) ),( ( ( CS / MUR ) + MUM ) * MUR ) ) ) ) / Min( ( RMSe + ( CS - RCSe ) ) ,( MLU + RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6799492472215439}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "( Max( Max( Min( ( ARS / FirstVNF_Mem ) ,FirstVNF_CPU ),CRS ),Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( CRS + MRS ) ,ARS ),ARS ) ) * ( PN * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( CS / ( Min( MUM ,( MLU * Min( RRSe ,RCSe ) ) ) / ( DS * ( ( ( ( RMSe - RCSe ) * RMSe ) * MUM ) - ( RCSe + MUM ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.7123523784310773}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ACS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUC ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16533864541832669, "obj2": 0.725484682706756}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),( MRS - ARS ) ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7224486011072357}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( ( Min( ( AMS + ACS ) ,DDR ) - RRS ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) )", "choosing": "Min( Max( RCSe,( MLU - ( Min( ( MUC + ( CS - DS ) ) ,Max( ( Min( RRSe ,RMSe ) - CS ),RMSe ) ) + RMSe ) ) ) ,Min( MUR ,RMSe ) )", "obj1": 0.9402390438247012, "obj2": 0.02845775845150183}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU_Server,( ( PN * BR ) * FirstVNF_RAM_Server ) ) ) ),RRS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( MUC - RRSe ),( MUC - MLU ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + MUR ) ) ) ) - ( Min( MUC ,CS ) * ( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6066879873577813}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( FirstVNF_RAM ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( RCSe - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16135458167330677, "obj2": 0.7491204220326857}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( AMS * PN ) ,ACS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,Min( MLU ,CS ) ) ) - ( ( ( MUC - RRSe ) * Max( MUC,Min( MLU ,CS ) ) ) - RCSe ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16135458167330677, "obj2": 0.7491204220326857}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( AMS - MDR ) ,Min( FirstVNF_Mem_Server ,Max( BR,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( DS ,RMSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( ( AMS - BR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,( ( DS - MUR ) - RCSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ACS ) + ( Max( RRS,( Min( ( PN + RRS ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const ) )", "choosing": "Min( ( Min( MLU ,( DS + RRSe ) ) * CS ) ,( ( ( ( RRSe + RMSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + Max( ( ( MUM - ( DS / RRSe ) ) + RRSe ),RMSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}], "27": [{"determining": "( ( ( ( FirstVNF_Mem - ARS ) + Min( ACS ,( ( MDR / DDR ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ACS ,ARS ),RRS ) ) * ( PN * ARS ) ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( CS / ( ( RCSe * ( DS + DS ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( FirstVNF_RAM_Server - ( ( Max( ARS,Min( ACS ,ARS ) ) + FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) - ( ( AMS / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - ( ( Max( ARS,Min( ACS ,ARS ) ) + FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( Max( MUC,( ( MUC - MUC ) - ( DS + DS ) ) ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ACS - ARS ) )", "choosing": "Min( ( ( ( ( Min( MUM ,MUR ) + ( ( MUR + Max( MUM,RRSe ) ) * CS ) ) - RCSe ) * MUM ) - RCSe ) ,( MUR - MUC ) )", "obj1": 0.4043824701195219, "obj2": 0.49787585411707563}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "Min( ( PN - ( ( MDR - ( ACS - FirstVNF_CPU_Server ) ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( ( RMSe * MLU ) * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7888446215139442, "obj2": 0.08715455262533432}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( PN - ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - ( RCSe + MUC ) ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7808764940239044, "obj2": 0.08838019801494783}, {"determining": "Min( ( PN - ( ( Max( PN,( ( BR + DDR ) + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,CS ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8864541832669323, "obj2": 0.0630850018520304}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( RMSe ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6645078729670976}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * Max( Min( ACS ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Min( CS ,MLU ) ) - RCSe ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.14741035856573706, "obj2": 0.7484303780126155}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( PN / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8545816733067729, "obj2": 0.06921146954015048}, {"determining": "Min( ( PN - ( ( Max( PN,FirstVNF_RAM ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9043824701195219, "obj2": 0.046372746146969346}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.20916334661354583, "obj2": 0.7036563951573372}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( ( ( ( Const / ( ( PN / ( RRS - RRS ) ) - AMS ) ) / Const ) / FirstVNF_CPU_Server ) - ( Max( ( ( FirstVNF_RAM_Server + BR ) + AMS ),( MDR * PN ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( RMSe * MLU ),( ( ( RRSe / MLU ) + CS ) + MUR ) ) / RMSe ) * ( ( ( MUM / Min( ( ( MUC / MUC ) + MUR ) ,CS ) ) * RRSe ) * Max( ( MUC / ( DS / MUC ) ),( ( ( CS / MUR ) + MUM ) * MUR ) ) ) ) / Min( ( RMSe + ( CS - RCSe ) ) ,( MLU + RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6799492472215439}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ACS ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,Min( MLU ,CS ) ) ) - RCSe ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.19322709163346613, "obj2": 0.7106792583627998}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ACS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUC ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16533864541832669, "obj2": 0.725484682706756}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( FirstVNF_CPU_Server + ( Min( CRS ,Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),( Min( ARS ,ACS ) - BR ) ) ) - FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( Max( Const,ARS ) + FirstVNF_Mem_Server ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),PN ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( MLU * ( ( MUC / RMSe ) + DS ) ) * ( MLU + Min( ( RCSe / MUC ) ,CS ) ) ) / RCSe ) - ( RCSe + RRSe ) ) ,MLU ) / CS )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),( MRS - ARS ) ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7224486011072357}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( ( Min( ( AMS + ACS ) ,DDR ) - RRS ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) )", "choosing": "Min( Max( RCSe,( MLU - ( Min( ( MUC + ( CS - DS ) ) ,Max( ( Min( RRSe ,RMSe ) - CS ),RMSe ) ) + RMSe ) ) ) ,Min( MUR ,RMSe ) )", "obj1": 0.9402390438247012, "obj2": 0.02845775845150183}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU_Server,( ( PN * BR ) * FirstVNF_RAM_Server ) ) ) ),RRS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( MUC - RRSe ),( MUC - MLU ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + MUR ) ) ) ) - ( Min( MUC ,CS ) * ( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6066879873577813}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( RMSe,CS ) ) - RCSe ) - ( RRSe / RRSe ) ) ,MLU ) )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( AMS - MDR ) ,Min( FirstVNF_Mem_Server ,Max( BR,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( DS ,RMSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( ( AMS - BR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,( ( DS - MUR ) - RCSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( AMS / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - ( ( Max( ARS,Min( ACS ,ARS ) ) + FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,Min( MLU ,CS ) ) ) - RCSe ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.9960159362549801, "obj2": 0.0014223253485329715}], "28": [{"determining": "( Max( RRS,FirstVNF_Mem ) - ( ( Max( Min( ACS ,( ACS * MDR ) ),ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,( ACS * MDR ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUM / ( MUC + DS ) ) - ( MUC / RRSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - ARS ) + Min( ACS ,( ( MDR / DDR ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ACS ,ARS ),RRS ) ) * ( PN * ARS ) ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( CS / ( ( RCSe * ( DS + DS ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ACS - ARS ) )", "choosing": "Min( ( ( ( ( Min( MUM ,MUR ) + ( ( MUR + Max( MUM,RRSe ) ) * CS ) ) - RCSe ) * MUM ) - RCSe ) ,( MUR - MUC ) )", "obj1": 0.4043824701195219, "obj2": 0.49787585411707563}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( PN - ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - ( RCSe + MUC ) ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7808764940239044, "obj2": 0.08838019801494783}, {"determining": "Min( ( PN - ( ( Max( PN,( ( BR + DDR ) + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,CS ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8864541832669323, "obj2": 0.0630850018520304}, {"determining": "( ( ( MRS - ( Min( RRS ,ACS ) * ACS ) ) / FirstVNF_Mem ) - Min( MDR ,( ( ARS * ( FirstVNF_Mem_Server / ( MRS + ( MDR - Min( FirstVNF_Mem ,PN ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM - MUR ) ,( RMSe + RMSe ) ) * ( Max( ( RRSe - Max( ( RCSe * CS ),RRSe ) ),MLU ) / DS ) )", "obj1": 0.8386454183266933, "obj2": 0.07401308152311807}, {"determining": "Min( ( PN - ( ( MDR - ( ACS - FirstVNF_CPU_Server ) ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( ( RMSe * MLU ) * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7888446215139442, "obj2": 0.08715455262533432}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( RMSe ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6645078729670976}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * Max( Min( ACS ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Min( CS ,MLU ) ) - RCSe ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.14741035856573706, "obj2": 0.7484303780126155}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( PN / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8545816733067729, "obj2": 0.06921146954015048}, {"determining": "Min( ( PN - ( ( Max( PN,FirstVNF_RAM ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9043824701195219, "obj2": 0.046372746146969346}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.20916334661354583, "obj2": 0.7036563951573372}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( FirstVNF_RAM_Server ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + ( ( MUC + MLU ) - ( RRSe / DS ) ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16334661354581673, "obj2": 0.7365172185805471}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( ( ( ( Const / ( ( PN / ( RRS - RRS ) ) - AMS ) ) / Const ) / FirstVNF_CPU_Server ) - ( Max( ( ( FirstVNF_RAM_Server + BR ) + AMS ),( MDR * PN ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( RMSe * MLU ),( ( ( RRSe / MLU ) + CS ) + MUR ) ) / RMSe ) * ( ( ( MUM / Min( ( ( MUC / MUC ) + MUR ) ,CS ) ) * RRSe ) * Max( ( MUC / ( DS / MUC ) ),( ( ( CS / MUR ) + MUM ) * MUR ) ) ) ) / Min( ( RMSe + ( CS - RCSe ) ) ,( MLU + RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6799492472215439}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ACS ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,Min( MLU ,CS ) ) ) - RCSe ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.19322709163346613, "obj2": 0.7106792583627998}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ACS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUC ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16533864541832669, "obj2": 0.725484682706756}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( FirstVNF_CPU_Server + ( Min( CRS ,Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),( Min( ARS ,ACS ) - BR ) ) ) - FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( Max( Const,ARS ) + FirstVNF_Mem_Server ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),PN ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( MLU * ( ( MUC / RMSe ) + DS ) ) * ( MLU + Min( ( RCSe / MUC ) ,CS ) ) ) / RCSe ) - ( RCSe + RRSe ) ) ,MLU ) / CS )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),( MRS - ARS ) ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7224486011072357}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( ( Min( ( AMS + ACS ) ,DDR ) - RRS ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) )", "choosing": "Min( Max( RCSe,( MLU - ( Min( ( MUC + ( CS - DS ) ) ,Max( ( Min( RRSe ,RMSe ) - CS ),RMSe ) ) + RMSe ) ) ) ,Min( MUR ,RMSe ) )", "obj1": 0.9402390438247012, "obj2": 0.02845775845150183}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU_Server,( ( PN * BR ) * FirstVNF_RAM_Server ) ) ) ),RRS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( MUC - RRSe ),( MUC - MLU ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + MUR ) ) ) ) - ( Min( MUC ,CS ) * ( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6066879873577813}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( RMSe,CS ) ) - RCSe ) - ( RRSe / RRSe ) ) ,MLU ) )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.713269169252803}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( AMS - MDR ) ,Min( FirstVNF_Mem_Server ,Max( BR,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( DS ,RMSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( ( AMS - BR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,( ( DS - MUR ) - RCSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.1454183266932271, "obj2": 0.7684637466162928}], "29": [{"determining": "( ( ( ( FirstVNF_Mem - ARS ) + Min( AMS ,( MRS + CRS ) ) ) / ( PN - ( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem - MDR ) ),RRS ) * FirstVNF_RAM ) * ( PN * ARS ) ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( CS / Min( ( ( MUM / ( MUC + DS ) ) - ( DS / RRSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( ( Max( Min( ACS ,( ACS * MDR ) ),ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,( ACS * MDR ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUM / ( MUC + DS ) ) - ( MUC / RRSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ACS - ARS ) )", "choosing": "Min( ( ( ( ( Min( MUM ,MUR ) + ( ( MUR + Max( MUM,RRSe ) ) * CS ) ) - RCSe ) * MUM ) - RCSe ) ,( MUR - MUC ) )", "obj1": 0.4043824701195219, "obj2": 0.49787585411707563}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( PN - ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - ( RCSe + MUC ) ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7808764940239044, "obj2": 0.08838019801494783}, {"determining": "Min( ( PN - ( ( Max( PN,( ( BR + DDR ) + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,CS ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8864541832669323, "obj2": 0.0630850018520304}, {"determining": "( ( ( MRS - ( Min( RRS ,ACS ) * ACS ) ) / FirstVNF_Mem ) - Min( MDR ,( ( ARS * ( FirstVNF_Mem_Server / ( MRS + ( MDR - Min( FirstVNF_Mem ,PN ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM - MUR ) ,( RMSe + RMSe ) ) * ( Max( ( RRSe - Max( ( RCSe * CS ),RRSe ) ),MLU ) / DS ) )", "obj1": 0.8386454183266933, "obj2": 0.07401308152311807}, {"determining": "Min( ( PN - ( ( MDR - ( ACS - FirstVNF_CPU_Server ) ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( ( RMSe * MLU ) * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7888446215139442, "obj2": 0.08715455262533432}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( RMSe ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6645078729670976}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( PN / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8545816733067729, "obj2": 0.06921146954015048}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.20916334661354583, "obj2": 0.7036563951573372}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( ( AMS * FirstVNF_Mem_Server ) - ( ( ACS * FirstVNF_CPU ) / BR ) ) )", "choosing": "( MLU / Min( ( ( Min( RCSe ,Max( MUC,RRSe ) ) - MUM ) * MLU ) ,Min( MUR ,CS ) ) )", "obj1": 0.18725099601593626, "obj2": 0.7097771793247503}, {"determining": "Min( ( PN - ( ( Max( PN,FirstVNF_RAM ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9043824701195219, "obj2": 0.046372746146969346}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * Max( Min( ACS ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Min( CS ,MLU ) ) - RCSe ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.14741035856573706, "obj2": 0.7484303780126155}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( Max( MUC,( MLU / Max( RCSe,RRSe ) ) ) * ( RRSe * ( Min( MUC ,MLU ) / RMSe ) ) ) - CS ) - ( RRSe / DS ) ) ,( CS - MUC ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7346596643351928}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( AMS / FirstVNF_RAM ) / ( ( ( BR + RRS ) * ( PN - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( CS / Min( ( ( ( Max( MUC,( MLU / Max( RCSe,MLU ) ) ) * Max( MUC,( ( MUC - MUC ) - ( DS + DS ) ) ) ) - CS ) - ( RRSe / DS ) ) ,( CS - MUC ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7539121692180344}, {"determining": "( ( ( ( Const / ( ( PN / ( RRS - RRS ) ) - AMS ) ) / Const ) / FirstVNF_CPU_Server ) - ( Max( ( ( FirstVNF_RAM_Server + BR ) + AMS ),( MDR * PN ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( RMSe * MLU ),( ( ( RRSe / MLU ) + CS ) + MUR ) ) / RMSe ) * ( ( ( MUM / Min( ( ( MUC / MUC ) + MUR ) ,CS ) ) * RRSe ) * Max( ( MUC / ( DS / MUC ) ),( ( ( CS / MUR ) + MUM ) * MUR ) ) ) ) / Min( ( RMSe + ( CS - RCSe ) ) ,( MLU + RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6799492472215439}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( FirstVNF_CPU_Server + ( Min( CRS ,Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),( Min( ARS ,ACS ) - BR ) ) ) - FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( Max( Const,ARS ) + FirstVNF_Mem_Server ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),PN ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( MLU * ( ( MUC / RMSe ) + DS ) ) * ( MLU + Min( ( RCSe / MUC ) ,CS ) ) ) / RCSe ) - ( RCSe + RRSe ) ) ,MLU ) / CS )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ACS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUC ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16533864541832669, "obj2": 0.725484682706756}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),( MRS - ARS ) ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7224486011072357}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( ( Min( ( AMS + ACS ) ,DDR ) - RRS ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) )", "choosing": "Min( Max( RCSe,( MLU - ( Min( ( MUC + ( CS - DS ) ) ,Max( ( Min( RRSe ,RMSe ) - CS ),RMSe ) ) + RMSe ) ) ) ,Min( MUR ,RMSe ) )", "obj1": 0.9402390438247012, "obj2": 0.02845775845150183}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU_Server,( ( PN * BR ) * FirstVNF_RAM_Server ) ) ) ),RRS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( MUC - RRSe ),( MUC - MLU ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + MUR ) ) ) ) - ( Min( MUC ,CS ) * ( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6066879873577813}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( RMSe,CS ) ) - RCSe ) - ( RRSe / RRSe ) ) ,MLU ) )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( AMS - MDR ) ,Min( FirstVNF_Mem_Server ,Max( BR,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( DS ,RMSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ( ARS + PN ) - ( Max( PN,( FirstVNF_CPU + DDR ) ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( RRSe + ( ( RCSe + ( MLU * ( ( MUM + MLU ) * MUR ) ) ) + RRSe ) ) ,Min( MUC ,DS ) )", "obj1": 0.9840637450199203, "obj2": 0.007148201160301568}, {"determining": "Min( ( AMS - BR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,( ( DS - MUR ) - RCSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( ( MRS + Const ) - ( MRS + ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( ( Max( ( Min( MDR ,Const ) * ARS ),Min( ( MDR - FirstVNF_CPU ) ,Const ) ) - BR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.99800796812749, "obj2": 0.0006120327618384716}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "Min( ( Min( ( FirstVNF_RAM * ARS ) ,PN ) - DDR ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,Min( RRSe ,( MUC * DS ) ) ) ,Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MUM * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ( ARS + PN ) - ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( RRSe + ( ( Max( ( CS - ( MLU + DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ) ,Min( MUC ,DS ) )", "obj1": 0.9960159362549801, "obj2": 0.0015360869673048886}], "30": [{"determining": "( ( ( ( FirstVNF_Mem - ARS ) + Min( AMS ,( MRS + CRS ) ) ) / ( PN - ( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem - MDR ) ),RRS ) * FirstVNF_RAM ) * ( PN * ARS ) ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / RRSe ) / ( ( RCSe * ( DS + DS ) ) - Max( Min( ( Min( ( MUR - ( RMSe / CS ) ) ,RRSe ) - ( CS + RCSe ) ) ,MUC ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - ARS ) + Min( AMS ,( MRS + CRS ) ) ) / ( PN - ( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem - MDR ) ),RRS ) * FirstVNF_RAM ) * ( PN * ARS ) ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( CS / Min( ( ( MUM / ( MUC + DS ) ) - ( DS / RRSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ACS - ARS ) )", "choosing": "Min( ( ( ( ( Min( MUM ,MUR ) + ( ( MUR + Max( MUM,RRSe ) ) * CS ) ) - RCSe ) * MUM ) - RCSe ) ,( MUR - MUC ) )", "obj1": 0.4043824701195219, "obj2": 0.49787585411707563}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( PN - ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - ( RCSe + MUC ) ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7808764940239044, "obj2": 0.08838019801494783}, {"determining": "Min( ( PN - ( ( Max( PN,( ( BR + DDR ) + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,CS ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8864541832669323, "obj2": 0.0630850018520304}, {"determining": "( ( ( MRS - ( Min( RRS ,ACS ) * ACS ) ) / FirstVNF_Mem ) - Min( MDR ,( ( ARS * ( FirstVNF_Mem_Server / ( MRS + ( MDR - Min( FirstVNF_Mem ,PN ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM - MUR ) ,( RMSe + RMSe ) ) * ( Max( ( RRSe - Max( ( RCSe * CS ),RRSe ) ),MLU ) / DS ) )", "obj1": 0.8386454183266933, "obj2": 0.07401308152311807}, {"determining": "Min( ( PN - ( ( MDR - ( ACS - FirstVNF_CPU_Server ) ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( ( RMSe * MLU ) * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7888446215139442, "obj2": 0.08715455262533432}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( RMSe ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6645078729670976}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( PN / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8545816733067729, "obj2": 0.06921146954015048}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( Min( AMS ,PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - Max( BR,( ( FirstVNF_Mem_Server + AMS ) * MRS ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC + RRSe ) * Max( MUC,Min( MLU ,( DS / MUR ) ) ) ) - RCSe ) - ( RRSe / Min( DS ,MLU ) ) ) ,MLU ) )", "obj1": 0.20717131474103587, "obj2": 0.7028974390012119}, {"determining": "Min( ( PN - ( ( Max( PN,FirstVNF_RAM ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9043824701195219, "obj2": 0.046372746146969346}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * Max( Min( ACS ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Min( CS ,MLU ) ) - RCSe ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.14741035856573706, "obj2": 0.7484303780126155}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( Max( MUC,( MLU / Max( RCSe,RRSe ) ) ) * ( RRSe * ( Min( MUC ,MLU ) / RMSe ) ) ) - CS ) - ( RRSe / DS ) ) ,( CS - MUC ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7346596643351928}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( AMS / FirstVNF_RAM ) / ( ( ( BR + RRS ) * ( PN - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( CS / Min( ( ( ( Max( MUC,( MLU / Max( RCSe,MLU ) ) ) * Max( MUC,( ( MUC - MUC ) - ( DS + DS ) ) ) ) - CS ) - ( RRSe / DS ) ) ,( CS - MUC ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7539121692180344}, {"determining": "( ( ( ( Const / ( ( PN / ( RRS - RRS ) ) - AMS ) ) / Const ) / FirstVNF_CPU_Server ) - ( Max( ( ( FirstVNF_RAM_Server + BR ) + AMS ),( MDR * PN ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( RMSe * MLU ),( ( ( RRSe / MLU ) + CS ) + MUR ) ) / RMSe ) * ( ( ( MUM / Min( ( ( MUC / MUC ) + MUR ) ,CS ) ) * RRSe ) * Max( ( MUC / ( DS / MUC ) ),( ( ( CS / MUR ) + MUM ) * MUR ) ) ) ) / Min( ( RMSe + ( CS - RCSe ) ) ,( MLU + RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6799492472215439}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( FirstVNF_CPU_Server + ( Min( CRS ,Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),( Min( ARS ,ACS ) - BR ) ) ) - FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( Max( Const,ARS ) + FirstVNF_Mem_Server ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),PN ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( MLU * ( ( MUC / RMSe ) + DS ) ) * ( MLU + Min( ( RCSe / MUC ) ,CS ) ) ) / RCSe ) - ( RCSe + RRSe ) ) ,MLU ) / CS )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( Min( AMS ,PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - Max( BR,( ( FirstVNF_Mem_Server + AMS ) * MRS ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC + RRSe ) * Max( MUC,Min( MLU ,( DS / MUR ) ) ) ) - RCSe ) - ( RRSe / Min( DS ,MLU ) ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.7097771793247503}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ACS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUC ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16533864541832669, "obj2": 0.725484682706756}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),( MRS - ARS ) ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7224486011072357}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( ( Min( ( AMS + ACS ) ,DDR ) - RRS ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) )", "choosing": "Min( Max( RCSe,( MLU - ( Min( ( MUC + ( CS - DS ) ) ,Max( ( Min( RRSe ,RMSe ) - CS ),RMSe ) ) + RMSe ) ) ) ,Min( MUR ,RMSe ) )", "obj1": 0.9402390438247012, "obj2": 0.02845775845150183}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( ( ARS + PN ) - ( FirstVNF_Mem + ( Max( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ),Max( MRS,PN ) ) - Max( FirstVNF_Mem_Server,AMS ) ) ) ) )", "choosing": "Min( ( RRSe + ( RRSe + ( Max( ( CS - ( MLU + DS ) ),CS ) * ( RCSe + RCSe ) ) ) ) ,( ( ( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) - ( Max( ( ( ( MLU * CS ) - RRSe ) / MUC ),MUC ) + RCSe ) ) * RCSe ) )", "obj1": 0.6553784860557769, "obj2": 0.24261061938564873}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU_Server,( ( PN * BR ) * FirstVNF_RAM_Server ) ) ) ),RRS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( MUC - RRSe ),( MUC - MLU ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + MUR ) ) ) ) - ( Min( MUC ,CS ) * ( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6066879873577813}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( RMSe,CS ) ) - RCSe ) - ( RRSe / RRSe ) ) ,MLU ) )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( ( AMS * FirstVNF_Mem_Server ) - ( ( ACS * FirstVNF_CPU ) / BR ) ) )", "choosing": "( MLU / Min( ( ( Min( RCSe ,Max( MUC,RRSe ) ) - MUM ) * MLU ) ,Min( MUR ,CS ) ) )", "obj1": 0.18725099601593626, "obj2": 0.7097771793247503}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( AMS - MDR ) ,Min( FirstVNF_Mem_Server ,Max( BR,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( DS ,RMSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ( ARS + PN ) - ( Max( PN,( FirstVNF_CPU + DDR ) ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( RRSe + ( ( RCSe + ( MLU * ( ( MUM + MLU ) * MUR ) ) ) + RRSe ) ) ,Min( MUC ,DS ) )", "obj1": 0.9840637450199203, "obj2": 0.007148201160301568}, {"determining": "Min( ( AMS - BR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,( ( DS - MUR ) - RCSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( Max( RRS,( ( MRS * ( DDR * MDR ) ) + ACS ) ) - ( ( DDR + Max( MRS,ARS ) ) * ( FirstVNF_RAM_Server - ( ( ( PN * MDR ) * FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( RRSe - MUC ) * ( MLU + Min( ( RCSe / MUC ) ,CS ) ) ) / RCSe ) - ( RRSe / RRSe ) ) ,MLU ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( ( MRS + Const ) - ( MRS + ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( ( Max( ( Min( MDR ,Const ) * ARS ),Min( ( MDR - FirstVNF_CPU ) ,Const ) ) - BR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.99800796812749, "obj2": 0.0006120327618384716}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}], "31": [{"determining": "( ( ( ( FirstVNF_Mem - ARS ) + Min( AMS ,( MRS + CRS ) ) ) / ( PN - ( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem - MDR ) ),RRS ) * FirstVNF_RAM ) * ( PN * ARS ) ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / RRSe ) / ( ( RCSe * ( DS + DS ) ) - Max( Min( ( Min( ( MUR - ( RMSe / CS ) ) ,RRSe ) - ( CS + RCSe ) ) ,MUC ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - ARS ) + Min( AMS ,( MRS + CRS ) ) ) / ( PN - ( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem - MDR ) ),RRS ) * FirstVNF_RAM ) * ( PN * ARS ) ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / RRSe ) / ( ( RCSe * ( DS + DS ) ) - Max( Min( ( Min( ( MUR - ( RMSe / CS ) ) ,RRSe ) - ( CS + RCSe ) ) ,MUC ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / Max( Max( Const,FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( ( MUR - CS ),( ( RMSe / MUM ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.809912357652625}, {"determining": "( Min( ( BR / RRS ) ,BR ) - ( Min( ( BR / RRS ) ,BR ) / ACS ) )", "choosing": "( ( CS * ( ( ( MLU / MUR ) * MUM ) + MUR ) ) / Min( ( RMSe - ( ( ( MLU / MUR ) * MUM ) + MUR ) ) ,RMSe ) )", "obj1": 0.5597609561752988, "obj2": 0.26050560691803576}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( AMS * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - CS ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.7569721115537849, "obj2": 0.12795408836124048}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( DS + CS ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.5338645418326693, "obj2": 0.34673719515862583}, {"determining": "Min( ( PN - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.6533864541832669, "obj2": 0.24966369477152403}, {"determining": "Min( ( ARS + FirstVNF_RAM_Server ) ,( ( ( ( Max( ( MRS + FirstVNF_Mem ),CRS ) - CRS ) + ARS ) * PN ) - MDR ) )", "choosing": "( ( ( Max( MUM,MUR ) - ( CS / CS ) ) - Max( DS,RCSe ) ) * ( DS / DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1801394429992153}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) - Max( BR,DDR ) )", "choosing": "( ( ( CS / MLU ) - CS ) - ( CS / MLU ) )", "obj1": 0.7410358565737052, "obj2": 0.17168852719376923}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ACS - ARS ) )", "choosing": "Min( ( ( ( ( Min( MUM ,MUR ) + ( ( MUR + Max( MUM,RRSe ) ) * CS ) ) - RCSe ) * MUM ) - RCSe ) ,( MUR - MUC ) )", "obj1": 0.4043824701195219, "obj2": 0.49787585411707563}, {"determining": "( ( Min( PN ,RRS ) + FirstVNF_CPU_Server ) - ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( Min( RRSe ,( ( MLU + MUM ) * Min( RMSe ,RRSe ) ) ),MUC ) ) )", "obj1": 0.350597609561753, "obj2": 0.5003721553277055}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( BR + DDR ) ) / Const ) )", "choosing": "Min( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7111553784860558, "obj2": 0.17944345107371262}, {"determining": "( Max( RRS,AMS ) - ( ( AMS * DDR ) + DDR ) )", "choosing": "( ( ( MUR + MUC ) - MUC ) / Min( RRSe ,MUM ) )", "obj1": 0.448207171314741, "obj2": 0.4428507038341725}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( ( MLU * CS ) ,( ( ( ( ( RMSe + RRSe ) - ( ( Max( CS,MUR ) - MUR ) - MUR ) ) + ( ( ( MUM - RRSe ) + ( CS * RRSe ) ) + RMSe ) ) + MUM ) / ( RRSe * CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.431439014724063}, {"determining": "Min( ( PN - ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - ( RCSe + MUC ) ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7808764940239044, "obj2": 0.08838019801494783}, {"determining": "Min( ( PN - ( ( Max( PN,( ( BR + DDR ) + DDR ) ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,CS ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8864541832669323, "obj2": 0.0630850018520304}, {"determining": "( ( ( MRS - ( Min( RRS ,ACS ) * ACS ) ) / FirstVNF_Mem ) - Min( MDR ,( ( ARS * ( FirstVNF_Mem_Server / ( MRS + ( MDR - Min( FirstVNF_Mem ,PN ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM - MUR ) ,( RMSe + RMSe ) ) * ( Max( ( RRSe - Max( ( RCSe * CS ),RRSe ) ),MLU ) / DS ) )", "obj1": 0.8386454183266933, "obj2": 0.07401308152311807}, {"determining": "Min( ( PN - ( ( MDR - ( ACS - FirstVNF_CPU_Server ) ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( ( RMSe * MLU ) * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.7888446215139442, "obj2": 0.08715455262533432}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( ( Const - ( FirstVNF_RAM / ARS ) ) / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( MLU,MUM ) ) - MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.23357474982641996}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ARS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( MUC + MLU ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.13346613545816732, "obj2": 0.7705339549271885}, {"determining": "( ( MDR - ( Max( FirstVNF_CPU_Server,RRS ) - ACS ) ) - ( ( Min( FirstVNF_RAM ,( ( Const / Const ) - FirstVNF_CPU ) ) * RRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( DS + DS ) ,RCSe ) - MUM ) / RRSe ) / Min( MUM ,RRSe ) )", "obj1": 0.48804780876494025, "obj2": 0.40697360540712896}, {"determining": "( Max( ( BR / ACS ),( PN - ( ARS - MRS ) ) ) - Max( ( FirstVNF_CPU_Server * BR ),( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( Min( MUR ,MLU ) + RRSe ) / Max( MUC,( MUR + RCSe ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4703765200073933}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( Const - ( CRS / ARS ) ) )", "choosing": "Min( Max( CS,Max( DS,RCSe ) ) ,( Min( RRSe ,Max( ( ( MLU + RCSe ) + MLU ),MUM ) ) - MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.3777662464754636}, {"determining": "Min( ( AMS - MDR ) ,( MDR * ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,Min( RMSe ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6645078729670976}, {"determining": "( Min( FirstVNF_CPU ,RRS ) - Min( FirstVNF_CPU ,( Min( ( ( MDR - ( Const - PN ) ) / ( CRS + FirstVNF_RAM_Server ) ) ,ARS ) * Min( ACS ,Max( ( PN * Min( ( ARS + AMS ) ,Const ) ),( ( ACS - BR ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) )", "choosing": "( Min( CS ,Min( ( MUC * ( DS + MUR ) ) ,Min( MUM ,( MLU - ( ( MLU * ( CS / MLU ) ) + DS ) ) ) ) ) / ( CS - Max( ( ( Min( MUM ,MUR ) * DS ) * RMSe ),( DS - ( RMSe + Max( ( MUC - RRSe ),( MUM + RRSe ) ) ) ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4744367408648905}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( PN / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.8545816733067729, "obj2": 0.06921146954015048}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( Min( AMS ,PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - Max( BR,( ( FirstVNF_Mem_Server + AMS ) * MRS ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC + RRSe ) * Max( MUC,Min( MLU ,( DS / MUR ) ) ) ) - RCSe ) - ( RRSe / Min( DS ,MLU ) ) ) ,MLU ) )", "obj1": 0.20717131474103587, "obj2": 0.7028974390012119}, {"determining": "Min( ( PN - ( ( Max( PN,FirstVNF_RAM ) * DDR ) - RRS ) ) ,( ( ( FirstVNF_RAM_Server / ( MDR - ( ACS - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUR ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9043824701195219, "obj2": 0.046372746146969346}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( ( CRS - ( Min( ( FirstVNF_Mem / Min( MRS ,AMS ) ) ,( PN / ACS ) ) - AMS ) ) / MRS ) )", "choosing": "( ( RRSe - CS ) - ( MUR + Max( MUR,MUC ) ) )", "obj1": 0.28884462151394424, "obj2": 0.586213024194744}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * Max( Min( ACS ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Min( CS ,MLU ) ) - RCSe ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.14741035856573706, "obj2": 0.7484303780126155}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( Max( MUC,( MLU / Max( RCSe,RRSe ) ) ) * ( RRSe * ( Min( MUC ,MLU ) / RMSe ) ) ) - CS ) - ( RRSe / DS ) ) ,( CS - MUC ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7346596643351928}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) + ( BR * DDR ) )", "choosing": "Min( ( ( ( Min( MUC ,MUM ) / ( MUR * CS ) ) - MUR ) - ( MUM * CS ) ) ,( MUR - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5696415836675883}, {"determining": "( ACS - Max( Max( ACS,RRS ),RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / CS ) + ( RMSe - MUR ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.6013071406757079}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( AMS / FirstVNF_RAM ) / ( ( ( BR + RRS ) * ( PN - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( CS / Min( ( ( ( Max( MUC,( MLU / Max( RCSe,MLU ) ) ) * Max( MUC,( ( MUC - MUC ) - ( DS + DS ) ) ) ) - CS ) - ( RRSe / DS ) ) ,( CS - MUC ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7539121692180344}, {"determining": "( ( ( ( Const / ( ( PN / ( RRS - RRS ) ) - AMS ) ) / Const ) / FirstVNF_CPU_Server ) - ( Max( ( ( FirstVNF_RAM_Server + BR ) + AMS ),( MDR * PN ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( RMSe * MLU ),( ( ( RRSe / MLU ) + CS ) + MUR ) ) / RMSe ) * ( ( ( MUM / Min( ( ( MUC / MUC ) + MUR ) ,CS ) ) * RRSe ) * Max( ( MUC / ( DS / MUC ) ),( ( ( CS / MUR ) + MUM ) * MUR ) ) ) ) / Min( ( RMSe + ( CS - RCSe ) ) ,( MLU + RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6799492472215439}, {"determining": "( ( Max( Const,MRS ) + Max( AMS,ARS ) ) * ( PN / ARS ) )", "choosing": "( ( MLU + ( ( RCSe + ( MUM * ( RCSe / RRSe ) ) ) / ( ( DS - RRSe ) / MUR ) ) ) / ( MLU + RMSe ) )", "obj1": 0.24302788844621515, "obj2": 0.6509572452480485}, {"determining": "Min( ( ( ( Max( ARS,MRS ) - BR ) + FirstVNF_CPU ) / FirstVNF_Mem ) ,( ( FirstVNF_CPU_Server - ( BR - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( Const / ARS ) ) ) ) - Min( BR ,Max( ( ( ( ( MRS - ARS ) + DDR ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ),( BR / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( MUM ,Min( ( ( MUR * ( CS / MUM ) ) - CS ) ,( Max( MUM,RCSe ) - ( MLU * DS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.554345436632839}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) - MUC )", "obj1": 0.49203187250996017, "obj2": 0.3920556895773126}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( ( FirstVNF_CPU_Server + ( Min( CRS ,Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),( Min( ARS ,ACS ) - BR ) ) ) - FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( Max( Const,ARS ) + FirstVNF_Mem_Server ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),PN ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( MLU * ( ( MUC / RMSe ) + DS ) ) * ( MLU + Min( ( RCSe / MUC ) ,CS ) ) ) / RCSe ) - ( RCSe + RRSe ) ) ,MLU ) / CS )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( Min( AMS ,PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - Max( BR,( ( FirstVNF_Mem_Server + AMS ) * MRS ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC + RRSe ) * Max( MUC,Min( MLU ,( DS / MUR ) ) ) ) - RCSe ) - ( RRSe / Min( DS ,MLU ) ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.7097771793247503}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6302234224725655}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,Min( ACS ,ACS ) ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUC ) ) ) - CS ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.16533864541832669, "obj2": 0.725484682706756}, {"determining": "Min( ( ACS - FirstVNF_Mem_Server ) ,( PN + ( Max( Max( MRS,CRS ),ARS ) * MRS ) ) )", "choosing": "Min( Max( CS,( ( MLU * ( Max( RMSe,MUR ) * CS ) ) + ( RCSe - RRSe ) ) ) ,( Min( RRSe ,Max( ( MUM + MLU ),MUM ) ) - MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.38508893459026944}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "( Max( Max( ( RRS - MRS ),Max( FirstVNF_RAM_Server,ARS ) ),( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / DDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( CS / Min( ( MUR + RCSe ) ,Min( CS ,( MLU * ( ( DS * MUR ) - ( ( Min( MUM ,RCSe ) / RMSe ) / Min( MUC ,( RMSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5541050383884412}, {"determining": "( ( Const + MRS ) - ( Min( ( BR / RRS ) ,( Const + MRS ) ) / ACS ) )", "choosing": "( ( CS * ( MUC + MUR ) ) / Min( ( RMSe - MUR ) ,RMSe ) )", "obj1": 0.5119521912350598, "obj2": 0.38412526493602467}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,( ACS - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) )", "obj1": 0.2689243027888446, "obj2": 0.6064715354788981}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( ( DDR * MDR ) - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( MUC + MLU ) - ( RRSe / DS ) ) ,MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6868274085849451}, {"determining": "( ( ( ( MRS / ( PN / DDR ) ) + ( ( MDR / CRS ) * RRS ) ) * FirstVNF_RAM ) - ( ( ( MRS - ARS ) + DDR ) / ( FirstVNF_RAM_Server - ( ( Max( Min( ACS ,ARS ),( MRS - ARS ) ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ,( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / MUM ) ) ) - CS ) - ( RRSe / DS ) ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7224486011072357}, {"determining": "( ( ( DDR / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( ARS + ARS ) ) ) + Max( Max( PN,MRS ),AMS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.5318725099601593, "obj2": 0.35084745487971064}, {"determining": "( Max( RRS,( ( ( DDR * MDR ) * MRS ) - ACS ) ) - ( ( ( MRS - ARS ) + DDR ) / ( ( Max( Min( ACS ,ARS ),ARS ) * FirstVNF_RAM ) * ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS / Min( ( ( ( ( ( MUC - RRSe ) * Max( MUC,( MLU / RCSe ) ) ) - CS ) - ( RRSe / DS ) ) - ( RRSe / DS ) ) ,MLU ) )", "obj1": 0.18127490039840638, "obj2": 0.7194309351393875}, {"determining": "Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( Min( Min( Max( ( PN - ( DDR * FirstVNF_Mem ) ),RRS ) ,FirstVNF_Mem ) ,( ( Min( ( AMS + ACS ) ,DDR ) - RRS ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) ) - Min( Min( ( DDR * ARS ) ,FirstVNF_CPU ) ,MRS ) ) )", "choosing": "Min( Max( RCSe,( MLU - ( Min( ( MUC + ( CS - DS ) ) ,Max( ( Min( RRSe ,RMSe ) - CS ),RMSe ) ) + RMSe ) ) ) ,Min( MUR ,RMSe ) )", "obj1": 0.9402390438247012, "obj2": 0.02845775845150183}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( ( ARS + PN ) - ( FirstVNF_Mem + ( Max( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ),Max( MRS,PN ) ) - Max( FirstVNF_Mem_Server,AMS ) ) ) ) )", "choosing": "Min( ( RRSe + ( RRSe + ( Max( ( CS - ( MLU + DS ) ),CS ) * ( RCSe + RCSe ) ) ) ) ,( ( ( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) - ( Max( ( ( ( MLU * CS ) - RRSe ) / MUC ),MUC ) + RCSe ) ) * RCSe ) )", "obj1": 0.6553784860557769, "obj2": 0.24261061938564873}, {"determining": "( Max( DDR,BR ) - ( Max( DDR,BR ) - ( ( ( PN / ( MRS + Max( MDR,BR ) ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,BR ) ) ) )", "choosing": "( ( DS + MUM ) / ( RRSe * Min( Min( ( ( DS + MUM ) / ( RRSe * Min( Min( RRSe ,RCSe ) ,( MUM * RCSe ) ) ) ) ,RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06998620550641442}, {"determining": "( ( BR * FirstVNF_Mem_Server ) / Max( ( ( PN / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - ( ( ( AMS / DDR ) * ARS ) + AMS ) ),Max( ARS,CRS ) ) )", "choosing": "( ( ( ( Min( Min( MLU ,RMSe ) ,( MUM / DS ) ) * RMSe ) - ( Max( CS,CS ) + Max( ( MUM + MUC ),RMSe ) ) ) * Min( ( ( ( RMSe * MUR ) + Max( RCSe,MLU ) ) / ( ( ( Min( DS ,MUM ) / Min( MUC ,MUC ) ) - MUR ) + MUM ) ) ,Min( CS ,Min( ( RMSe / MUR ) ,MUC ) ) ) ) / CS )", "obj1": 0.25697211155378485, "obj2": 0.6242742647555201}, {"determining": "( ( ( DDR / FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( PN,Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU_Server,( ( PN * BR ) * FirstVNF_RAM_Server ) ) ) ),RRS ) )", "choosing": "( Min( ( ( MUM / MUM ) + RRSe ) ,RCSe ) / ( ( MLU / ( ( Min( Max( ( MUC - RRSe ),( MUC - MLU ) ) ,MUC ) * ( MUC * ( Min( DS ,RMSe ) - ( CS + MUR ) ) ) ) - ( Min( MUC ,CS ) * ( MUC + MUC ) ) ) ) - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6066879873577813}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_RAM_Server / ( ACS - RRS ) ) ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.9282868525896414, "obj2": 0.030449425401396515}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( ( AMS * PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Max( Min( ( Const / PN ) ,ARS ),ARS ) ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC - RRSe ) * Max( RMSe,CS ) ) - RCSe ) - ( RRSe / RRSe ) ) ,MLU ) )", "obj1": 0.34063745019920316, "obj2": 0.5272291705919055}, {"determining": "Min( ( Min( ACS ,Const ) + ( BR / ACS ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( ( Max( Max( RMSe,RMSe ),( MUR * MLU ) ) / RCSe ) - CS ) * ( CS / ( Min( RMSe ,DS ) + RRSe ) ) ) - CS ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6197266264090563}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Max( Max( MUR,MLU ),MLU ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - MUC ) * RCSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04030705455715478}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.950199203187251, "obj2": 0.02007288010227478}, {"determining": "( Max( Max( ( ( MRS / ARS ) * ( Const * Const ) ),( FirstVNF_CPU - PN ) ),RRS ) - PN )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}, {"determining": "( ( AMS - ( PN * FirstVNF_CPU ) ) - ( ( AMS / ( ( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ) / CRS ) / Max( FirstVNF_RAM,Min( DDR ,( Max( CRS,DDR ) * PN ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( DS,( MUR / Max( ( RMSe / RRSe ),MUC ) ) ) - CS ) - ( CS / MLU ) )", "obj1": 0.33665338645418325, "obj2": 0.5357482255530527}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) )", "obj1": 0.9143426294820717, "obj2": 0.038760227056972574}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( Min( DDR ,Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.033673163984138464}, {"determining": "Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + MUM ) ,Min( ( MUC / Max( ( Max( MLU,Max( MLU,MUC ) ) * MUR ),CS ) ) ,( ( Min( MLU ,Max( DS,( MUM - MUM ) ) ) - MUC ) * RMSe ) ) ) ,Max( ( MLU - ( Min( CS ,( ( MLU + DS ) / CS ) ) - Max( ( RMSe - MUM ),MLU ) ) ),RCSe ) )", "obj1": 0.9760956175298805, "obj2": 0.00994551135023966}, {"determining": "( ARS * Min( Const ,( ( ( ( ACS / ( Max( DDR,FirstVNF_CPU ) * ( BR * Const ) ) ) / ( Max( BR,BR ) * ( FirstVNF_RAM_Server + Max( AMS,ARS ) ) ) ) - FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( ( ( MUC - MUC ) + ( RRSe + MUR ) ) * CS ) / ( CS * MUC ) )", "obj1": 0.24701195219123506, "obj2": 0.6468371196808361}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem - ARS ) + Min( Min( AMS ,PN ) ,ACS ) ) / ( FirstVNF_RAM_Server - Max( BR,( ( FirstVNF_Mem_Server + AMS ) * MRS ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( MUC + RRSe ) * Max( MUC,Min( MLU ,( DS / MUR ) ) ) ) - RCSe ) - ( RRSe / Min( DS ,MLU ) ) ) ,MLU ) )", "obj1": 0.18725099601593626, "obj2": 0.7097771793247503}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "Max( ( MRS + MDR ),( ( ( FirstVNF_RAM / MDR ) / MDR ) + MDR ) )", "choosing": "( ( MUR * Max( ( Max( ( DS + MLU ),RRSe ) * Max( MLU,( ( ( MUC / MLU ) + ( RRSe * MLU ) ) - ( ( MUR + CS ) / MUR ) ) ) ),MUR ) ) / ( RMSe - DS ) )", "obj1": 0.3386454183266932, "obj2": 0.5352600119968306}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( MUR + RMSe ) / Min( ( RMSe - ( MUC - ( ( MUC / ( ( RMSe * RMSe ) + DS ) ) + DS ) ) ) ,RMSe ) )", "obj1": 0.30876494023904383, "obj2": 0.5656926465761057}, {"determining": "Min( Min( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) ,( Const / ACS ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MLU ),MLU ) - Max( ( ( DS * DS ) / MUR ),Max( RRSe,DS ) ) ) + RRSe ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( PN - ( Min( DDR ,Max( Max( ( FirstVNF_CPU_Server - ACS ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( Min( MUR ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),( ( MLU - DS ) / ( MLU * RCSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "Max( ( PN * FirstVNF_CPU ),( MDR - ( ( MDR - RRS ) - Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,CS ) / ( RCSe * Min( MLU ,MUM ) ) ) - ( CS / MLU ) )", "obj1": 0.26095617529880477, "obj2": 0.6202746416443714}, {"determining": "( Min( RRS ,Max( ( FirstVNF_RAM - ( ACS / Min( ( AMS * Const ) ,( PN - CRS ) ) ) ),FirstVNF_Mem ) ) + ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR - CS ) ,( Max( MUR,MLU ) * RRSe ) )", "obj1": 0.3346613545816733, "obj2": 0.5469662208449207}, {"determining": "Min( ( PN - ( Min( DDR ,Max( ( FirstVNF_CPU_Server - Max( ( MRS - ACS ),Min( FirstVNF_RAM_Server ,ARS ) ) ),FirstVNF_Mem_Server ) ) - RRS ) ) ,( ACS + ACS ) )", "choosing": "Min( ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * RCSe ) / ( MLU - DS ) ) ) ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU - DS ) / ( MLU * RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( ( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) ) - RRS ) ) / CRS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Max( ( Min( DS ,CS ) - Min( MUC ,DS ) ),CS ) * ( RCSe + DS ) ) + RRSe ) ,Min( MUC ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.012031555132121882}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( Max( MUR,MLU ) + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9641434262948207, "obj2": 0.013850182432463297}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( Const / ( ( FirstVNF_RAM_Server / Max( Const,FirstVNF_RAM_Server ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( ( MLU - DS ) / ( ( MUM * MUC ) * MLU ) ) ),( DS + RCSe ) ) ),RCSe ) )", "obj1": 0.9681274900398407, "obj2": 0.013133354333071957}, {"determining": "Min( ( AMS - MDR ) ,( ARS - ( DDR * DDR ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( MLU ,( MUC - Min( RMSe ,RCSe ) ) ) ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6855057902874621}, {"determining": "Min( ( ( ( ACS / PN ) - ( Max( Max( PN,( FirstVNF_CPU + DDR ) ),DDR ) - ( ACS / ( ( FirstVNF_Mem_Server + ACS ) - PN ) ) ) ) / DDR ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( ( MUC / RRSe ),( Min( Min( Max( RCSe,RMSe ) ,( MUR * MLU ) ) ,( ( RRSe * MUR ) / ( RMSe / RRSe ) ) ) - CS ) ) * ( RCSe + DS ) ) + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9860557768924303, "obj2": 0.005636047090856938}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ( CRS - PN ) - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016311989020636478}, {"determining": "Min( Min( ( ( CRS * FirstVNF_RAM ) - ( Min( PN ,( CRS / ARS ) ) - MRS ) ) ,MRS ) ,( FirstVNF_Mem / ( Const * ( DDR - CRS ) ) ) )", "choosing": "Min( ( MUR * ( MLU + ( RCSe + ( MUR + RCSe ) ) ) ) ,Max( ( ( RMSe - RRSe ) - ( Max( Min( RMSe ,MUM ),MLU ) - Min( CS ,( ( MLU * MLU ) / Max( ( MUC - MUR ),Max( RRSe,MLU ) ) ) ) ) ),( ( CS - DS ) / Min( Max( MLU,( ( Min( MUM ,RCSe ) * ( MLU - MLU ) ) + RCSe ) ) ,MUR ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03605264142812554}, {"determining": "( ( PN - ( ( Max( Const,( FirstVNF_CPU - FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) - RRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( ARS - ACS ) + CRS ) ) )", "choosing": "( Max( ( MLU + ( Min( Min( Min( MUR ,RRSe ) ,( ( MUR - RCSe ) + RMSe ) ) ,MUM ) - ( ( MLU * ( MUR + RMSe ) ) * DS ) ) ),RCSe ) / ( RMSe - ( ( ( RMSe / MLU ) - ( ( MUM / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00472752543116657}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( Const * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MLU ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9561752988047809, "obj2": 0.01758670474381805}, {"determining": "Min( ( AMS - MDR ) ,Min( FirstVNF_Mem_Server ,Max( BR,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,Min( DS ,RMSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ( ARS + PN ) - ( Max( PN,( FirstVNF_CPU + DDR ) ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( RRSe + ( ( RCSe + ( MLU * ( ( MUM + MLU ) * MUR ) ) ) + RRSe ) ) ,Min( MUC ,DS ) )", "obj1": 0.9840637450199203, "obj2": 0.007148201160301568}, {"determining": "Min( ( AMS - BR ) ,( MDR * ACS ) )", "choosing": "( Min( DS ,DS ) * ( ( MUR - MUM ) - Max( DS,( ( DS - MUR ) - RCSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6837518859865341}, {"determining": "Min( ( PN - ( ( Max( PN,( BR + DDR ) ) * DDR ) - RRS ) ) ,( ( ( BR + DDR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) / Const ) )", "choosing": "Min( ( RRSe + ( ( ( MUR + MLU ) * RMSe ) - Max( Min( ( ( MUC + ( RCSe + MUC ) ) * ( Max( RRSe,DS ) - CS ) ) ,( RMSe * MUR ) ),( ( Max( RRSe,MUC ) - MUM ) + RRSe ) ) ) ) ,Max( ( ( MUR * ( RRSe * ( RMSe / ( RMSe * MLU ) ) ) ) / Max( Min( ( MUC - RCSe ) ,( Max( Max( RMSe,MUR ),( MUC / CS ) ) / DS ) ),( DS + CS ) ) ),RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022068330715787525}, {"determining": "( ( CRS * ( ( ( ( BR + RRS ) / MDR ) / ( PN - Const ) ) / FirstVNF_CPU ) ) * ( ( Const - RRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUM ,MUM ) - Max( RMSe,MUM ) ) - Min( ( Min( CS ,RRSe ) / MUM ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( ( PN - ( ( Max( Const,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) - Const ) ) * ( ( FirstVNF_Mem / ( RRS * RRS ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS * RMSe ) / ( RMSe - ( ( ( Max( MLU,MUM ) * ( MLU * ( Max( MUR,DS ) * MUM ) ) ) - ( ( DS / MUM ) / MUC ) ) / ( Min( ( ( MUM * CS ) / MLU ) ,( ( ( DS / RRSe ) + ( MUM / DS ) ) + Min( MLU ,Max( DS,RCSe ) ) ) ) / DS ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.023562440757499373}, {"determining": "( Max( RRS,( ( MRS * ( DDR * MDR ) ) + ACS ) ) - ( ( DDR + Max( MRS,ARS ) ) * ( FirstVNF_RAM_Server - ( ( ( PN * MDR ) * FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( CS / Min( ( ( ( ( RRSe - MUC ) * ( MLU + Min( ( RCSe / MUC ) ,CS ) ) ) / RCSe ) - ( RRSe / RRSe ) ) ,MLU ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( PN - ( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) - RRS ) ) * ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) - Min( RRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU - ( Max( Max( MUR,MLU ),MLU ) - Min( CS ,( ( MLU - DS ) / ( ( MUM * CS ) * MLU ) ) ) ) ),RCSe ) / ( RMSe - ( ( ( MLU / RMSe ) - ( ( CS / RCSe ) / RCSe ) ) * RCSe ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015183230444928296}, {"determining": "( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( BR / ( ( Max( BR,RRS ) * ( PN / ARS ) ) / ACS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( CS / ( ( RCSe + MLU ) + MUM ) ) / Min( MUR ,CS ) )", "obj1": 0.9920318725099602, "obj2": 0.003068203307326871}, {"determining": "Min( Min( ( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,CRS ) - ( CRS - PN ) ) + Const ) ,Max( ( Const - ARS ),Min( ( ( ( MDR * FirstVNF_CPU_Server ) - BR ) * AMS ) ,( ( RRS / PN ) / FirstVNF_RAM ) ) ) ) ,( PN - ( Min( DDR ,Max( ( ARS - ACS ),FirstVNF_Mem_Server ) ) - RRS ) ) )", "choosing": "Min( Min( ( ( ( Max( Max( RCSe,MUC ),MUM ) * DS ) - CS ) + RRSe ) ,MUM ) ,Max( ( MLU - ( Max( ( RMSe - MUM ),MLU ) - Min( CS ,( ( MLU + DS ) / CS ) ) ) ),RCSe ) )", "obj1": 0.9621513944223108, "obj2": 0.014819414220590634}, {"determining": "( ( MRS + Const ) - ( MRS + ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( ( Max( ( Min( MDR ,Const ) * ARS ),Min( ( MDR - FirstVNF_CPU ) ,Const ) ) - BR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( MLU + Min( MUM ,Max( ( ( MLU * MLU ) * RCSe ),MUR ) ) ) ) - ( ( RRSe * DS ) - ( ( Max( RRSe,( ( DS / MUM ) * DS ) ) * ( Max( MUC,RRSe ) + Min( ( Min( RCSe ,CS ) * Max( MUR,CS ) ) ,Min( RCSe ,( RRSe + RRSe ) ) ) ) ) * ( ( Min( ( RMSe + RCSe ) ,RCSe ) / CS ) * RRSe ) ) ) )", "obj1": 0.99800796812749, "obj2": 0.0006120327618384716}, {"determining": "Min( ( PN - ( ( Max( PN,( FirstVNF_CPU + DDR ) ) * DDR ) - RRS ) ) ,( ( Max( Const,FirstVNF_RAM_Server ) * DDR ) - RRS ) )", "choosing": "Min( Min( MUR ,Max( ( MUM / MUC ),Min( ( Max( ( Min( DS ,CS ) - CS ),CS ) * ( RCSe + DS ) ) ,Max( ( MUM / MUM ),RRSe ) ) ) ) ,Max( ( ( MUR * DS ) / Max( Min( ( MUC - RCSe ) ,( Min( Max( RMSe,MUR ) ,( MUC / CS ) ) / DS ) ),( DS + ( ( MUM * MUC ) * MLU ) ) ) ),RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.012364162601731276}, {"determining": "( ACS - Max( ACS,RRS ) )", "choosing": "( ( RRSe - CS ) - ( MLU - ( ( RRSe / Min( MLU ,MUC ) ) + ( RMSe - MUR ) ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6440132231631447}]}