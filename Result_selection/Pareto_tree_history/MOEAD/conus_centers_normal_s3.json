{"1": [{"determining": "Max( ( DDR - RRS ),( FirstVNF_Mem * MDR ) )", "choosing": "Max( Max( MLU,( ( Max( MLU,( RMSe - ( MUR * ( DS * CS ) ) ) ) + MUM ) / MUM ) ),( MLU / MUC ) )", "obj1": 0.3333333333333333, "obj2": 0.5864421441667573}, {"determining": "( Max( ACS,DDR ) / Max( Const,MDR ) )", "choosing": "( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 0.3416666666666667, "obj2": 0.6054008252349539}, {"determining": "( ( BR / PN ) + Min( RRS ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,DS ) )", "obj1": 0.5041666666666667, "obj2": 0.4627756951691995}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 0.6270833333333333, "obj2": 0.3509471011393343}, {"determining": "( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) )", "choosing": "( Min( ( ( MLU - RRSe ) + MUC ) ,MUR ) - Max( CS,RRSe ) )", "obj1": 0.4395833333333333, "obj2": 0.5058832903016336}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "Max( ( BR + PN ),Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "Max( ( MUR / CS ),( RRSe * RCSe ) )", "obj1": 0.4270833333333333, "obj2": 0.5041265161650874}, {"determining": "( Min( ARS ,FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "Max( ( CS / MUC ),( MUR / MUM ) )", "obj1": 0.3375, "obj2": 0.6371875138027783}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Max( RMSe,MLU ) / ( MUC + MUM ) )", "obj1": 0.32708333333333334, "obj2": 0.6142812874738417}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),( ACS - FirstVNF_CPU ) )", "choosing": "Min( ( RMSe / MLU ) ,( DS * MUM ) )", "obj1": 0.5, "obj2": 0.44744897044088505}, {"determining": "Max( Max( FirstVNF_RAM,MRS ),( FirstVNF_RAM * CRS ) )", "choosing": "( ( RCSe + RMSe ) / ( DS / CS ) )", "obj1": 0.2520833333333333, "obj2": 0.72545343308152}, {"determining": "Max( ( ( BR / ( MDR + CRS ) ) + PN ),( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "Max( ( RRSe / MUM ),( MUR - ( RRSe + ( ( RCSe / Max( CS,Min( CS ,MUM ) ) ) * MUC ) ) ) )", "obj1": 0.34791666666666665, "obj2": 0.6070788156719028}, {"determining": "( ( PN + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( ( MLU + CS ),Min( RRSe ,MUC ) )", "obj1": 0.40625, "obj2": 0.6360691041229175}, {"determining": "( Max( FirstVNF_CPU,ARS ) / ( MRS * ( FirstVNF_RAM_Server / Min( Max( FirstVNF_CPU_Server,( FirstVNF_RAM - ( PN / FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RCSe,RRSe ) / ( RCSe / Max( MUR,RMSe ) ) )", "obj1": 0.26875, "obj2": 0.7074878650731998}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + Min( ARS ,DDR ) )", "choosing": "Max( ( MUC / MUM ),Max( RMSe,MUR ) )", "obj1": 0.3541666666666667, "obj2": 0.597548048357235}, {"determining": "( ( MDR / FirstVNF_Mem ) * Min( CRS ,AMS ) )", "choosing": "Max( ( RCSe * RCSe ),( MUR - CS ) )", "obj1": 0.4375, "obj2": 0.508658898550195}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) + ( CRS + DDR ) )", "choosing": "( ( MUC * RRSe ) / Min( MLU ,DS ) )", "obj1": 0.26458333333333334, "obj2": 0.6869733740505921}, {"determining": "Max( ( CRS + ( FirstVNF_Mem_Server - Const ) ),( FirstVNF_CPU_Server * PN ) )", "choosing": "Max( Min( MLU ,DS ),( ( Max( MUR,RRSe ) + Max( RMSe,( MLU * CS ) ) ) + Max( ( MUM * ( ( ( Min( MUC ,CS ) - Max( RMSe,MUM ) ) - MUC ) + ( CS + RCSe ) ) ),MUC ) ) )", "obj1": 0.41875, "obj2": 0.5224590234543528}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) - ( RRS / FirstVNF_Mem ) )", "choosing": "Max( Min( CS ,MLU ),( CS + RRSe ) )", "obj1": 0.42916666666666664, "obj2": 0.5426309819277175}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "( Min( CS ,RCSe ) / ( CS + MUC ) )", "obj1": 0.3770833333333333, "obj2": 0.5471774836865361}, {"determining": "( ( AMS / ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / MUM ),( MUM - DS ) )", "obj1": 0.36875, "obj2": 0.5730809277332902}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM ) * ( PN / CRS ) )", "choosing": "( ( CS - RMSe ) * ( CS - RMSe ) )", "obj1": 0.33541666666666664, "obj2": 0.6552426408681774}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) )", "choosing": "( Min( RMSe ,DS ) / ( MUM - RCSe ) )", "obj1": 0.3645833333333333, "obj2": 0.5683270441890566}, {"determining": "Max( ( AMS * MDR ),Min( CRS ,CRS ) )", "choosing": "( ( CS / RCSe ) / ( CS / MLU ) )", "obj1": 0.37083333333333335, "obj2": 0.6316262353591938}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( ( MDR - Max( PN,FirstVNF_Mem_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS - RCSe ),( Min( Max( ( RRSe * DS ),RMSe ) ,Min( ( MUR / DS ) ,DS ) ) * RRSe ) )", "obj1": 0.375, "obj2": 0.5845955121096426}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 0.48541666666666666, "obj2": 0.4610983465290468}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - BR ) / Min( BR ,ARS ) )", "choosing": "( Max( ( CS * MLU ),RRSe ) * ( ( MUC / MUC ) * ( ( Min( MUC ,RMSe ) - MUR ) * MUR ) ) )", "obj1": 0.3229166666666667, "obj2": 0.6863114418756414}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM ) * ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MLU ) - Min( RCSe ,MUC ) )", "obj1": 0.3125, "obj2": 0.6315114298864041}, {"determining": "Max( ( FirstVNF_Mem / MDR ),( ARS * ARS ) )", "choosing": "( ( MUR * RCSe ) - Min( RCSe ,MUC ) )", "obj1": 0.42291666666666666, "obj2": 0.527361469220936}, {"determining": "Min( ( FirstVNF_CPU_Server - MRS ) ,( AMS + MRS ) )", "choosing": "( Max( MLU,MUC ) - ( DS - DS ) )", "obj1": 0.31666666666666665, "obj2": 0.6308168434659883}, {"determining": "Max( ( MDR - FirstVNF_RAM ),Max( MDR,DDR ) )", "choosing": "Min( Min( RRSe ,RRSe ) ,Min( RMSe ,CS ) )", "obj1": 0.43333333333333335, "obj2": 0.5510990142385245}, {"determining": "( ( ( DDR + PN ) / ARS ) / ( DDR * Const ) )", "choosing": "( ( ( RMSe * DS ) + ( RMSe + CS ) ) - ( ( RRSe * DS ) + ( MUC * MLU ) ) )", "obj1": 0.3458333333333333, "obj2": 0.6549198075791979}, {"determining": "( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - RRSe ) )", "obj1": 0.34791666666666665, "obj2": 0.6594643787048627}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS / MRS ),( FirstVNF_Mem * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / MLU ) * ( RCSe * MUM ) ) + Max( ( DS / RCSe ),Max( MUM,MUC ) ) )", "obj1": 0.37916666666666665, "obj2": 0.58468690073067}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) * ( MDR - MDR ) ) / Max( ( ARS / MRS ),Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR - MUM ) + DS ) + ( RMSe / MUC ) )", "obj1": 0.41875, "obj2": 0.5530827254285047}, {"determining": "( ( AMS / AMS ) + ( AMS + CRS ) )", "choosing": "Max( ( MUM - Min( RCSe ,MLU ) ),( RRSe * CS ) )", "obj1": 0.41875, "obj2": 0.5545977235739518}, {"determining": "( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) )", "choosing": "( Max( ( MUR * MLU ),Min( MLU ,MLU ) ) - ( ( RRSe - MUM ) / ( RMSe * MUR ) ) )", "obj1": 0.4270833333333333, "obj2": 0.5554171064365789}, {"determining": "( ( ( ARS - ACS ) * CRS ) / Min( AMS ,( DDR + MDR ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,CS ) / Min( MUC ,( MUM * MLU ) ) )", "obj1": 0.3416666666666667, "obj2": 0.6149745284581424}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( RRS ,CRS ) ) )", "choosing": "Max( ( MLU * RRSe ),( DS + RRSe ) )", "obj1": 0.47291666666666665, "obj2": 0.47696740446110947}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MUR ) / ( MLU + MUC ) )", "obj1": 0.34791666666666665, "obj2": 0.6344453192397405}, {"determining": "Min( Min( ARS ,MRS ) ,( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RCSe ,MUM ) * Min( CS ,RCSe ) ) * Max( ( MLU + RMSe ),Max( MUR,MUC ) ) )", "obj1": 0.425, "obj2": 0.5217059876363239}, {"determining": "( ( ( FirstVNF_CPU * AMS ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / Min( MRS ,( Min( Const ,FirstVNF_RAM ) + ( AMS * DDR ) ) ) )", "choosing": "Min( Min( MUC ,( MUR / RMSe ) ) ,( DS / MUM ) )", "obj1": 0.5104166666666666, "obj2": 0.44859320187022367}, {"determining": "Min( ( ( Const * BR ) * Max( BR,DDR ) ) ,Min( ( BR + CRS ) ,( DDR + Const ) ) )", "choosing": "( Min( ( RMSe - MUC ) ,( RCSe - MUM ) ) * ( ( MUM + RRSe ) * ( CS / CS ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6514491127155375}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),( Min( MUR ,RCSe ) * ( RCSe + RCSe ) ) )", "obj1": 0.24375, "obj2": 0.712891710378266}, {"determining": "( ( ( PN + PN ) / ( FirstVNF_RAM * BR ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RCSe + Min( CS ,RRSe ) ) - Max( ( MUM * RRSe ),Min( MUM ,CS ) ) )", "obj1": 0.4, "obj2": 0.5649983074763206}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( RRS ,Const ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RCSe,MLU ) ,( RMSe / CS ) ) / Max( ( CS - RRSe ),( MUM - MLU ) ) )", "obj1": 0.34791666666666665, "obj2": 0.582920549887349}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( Max( AMS,FirstVNF_CPU ) ,( BR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM / RCSe ) * ( CS + ( DS + MLU ) ) ) / ( MUR - ( MLU + MUC ) ) )", "obj1": 0.3104166666666667, "obj2": 0.6344452861369629}, {"determining": "Max( ( ( PN / CRS ) + ( RRS - ACS ) ),Max( ( FirstVNF_CPU - FirstVNF_RAM_Server ),Min( CRS ,RRS ) ) )", "choosing": "( Max( ( RCSe * MUC ),( MUR / CS ) ) + ( ( CS * MLU ) - ( MUR - RRSe ) ) )", "obj1": 0.4, "obj2": 0.5504418835313735}, {"determining": "( ( CRS * BR ) * ( FirstVNF_CPU / CRS ) )", "choosing": "( ( MLU + MUM ) + Min( DS ,MUR ) )", "obj1": 0.45, "obj2": 0.499686612268313}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_RAM * BR ) ) ,( Max( MDR,FirstVNF_RAM_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 0.36041666666666666, "obj2": 0.5715785085367914}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( ARS - AMS ) ) )", "choosing": "( ( MUM - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.30625, "obj2": 0.6704857318801163}, {"determining": "( Min( Max( ARS,ACS ) ,Min( AMS ,Const ) ) / Min( Max( CRS,ARS ) ,( PN / AMS ) ) )", "choosing": "( ( Max( RMSe,RMSe ) * ( MUM / MUM ) ) / ( Min( RMSe ,MUM ) - ( MUR + DS ) ) )", "obj1": 0.46875, "obj2": 0.49034372037752705}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,MDR ),Min( CRS ,FirstVNF_CPU ) ) ,( ( CRS - DDR ) + ( ACS / BR ) ) )", "choosing": "( ( ( MLU * DS ) / Max( RCSe,DS ) ) / Max( ( RMSe * MUR ),( DS - RMSe ) ) )", "obj1": 0.44166666666666665, "obj2": 0.5091524914959941}, {"determining": "( Max( ( ACS + FirstVNF_RAM ),( DDR + DDR ) ) - ( Const - RRS ) )", "choosing": "( Min( ( MLU + MUM ) ,( DS / MLU ) ) / ( MUM / ( MUM / ( DS / MUM ) ) ) )", "obj1": 0.39375, "obj2": 0.5450575617014621}, {"determining": "( Max( ( FirstVNF_CPU_Server * RRS ),( FirstVNF_RAM_Server - PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,( MUM * MLU ) ) )", "obj1": 0.4395833333333333, "obj2": 0.4835844075158573}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.3770833333333333, "obj2": 0.5692176774637796}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( DDR / FirstVNF_RAM ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * Max( MUC,( DS + CS ) ) )", "obj1": 0.5, "obj2": 0.4391999989639286}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) - ( ( ( DDR / ( BR - ACS ) ) * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / ( ( DS / MUC ) * MUC ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5780694797756765}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,PN ) * Min( BR ,RRS ) )", "choosing": "Max( ( ( RMSe * MUM ) + MLU ),( RRSe / MLU ) )", "obj1": 0.40208333333333335, "obj2": 0.5632540120004546}, {"determining": "Max( ( MRS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( ( MLU + CS ) - Min( MUC ,CS ) )", "obj1": 0.34375, "obj2": 0.6229815372501967}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ACS ) * ( Const + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( MLU ,Max( MUC,CS ) ) / DS ) / ( CS - DS ) )", "obj1": 0.9291666666666667, "obj2": 0.0656738576790449}, {"determining": "Max( ( BR * ( FirstVNF_CPU + ( FirstVNF_Mem / PN ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * MRS ) )", "choosing": "( ( MUR - ( MUM / ( RCSe * RCSe ) ) ) + ( MLU + RMSe ) )", "obj1": 0.39791666666666664, "obj2": 0.5680728075396173}, {"determining": "Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ( BR + FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) )", "choosing": "( ( Min( Max( MUM,MLU ) ,( CS / DS ) ) - ( ( MUC + CS ) * ( MUR * RMSe ) ) ) + ( ( ( CS * MUR ) + ( MUR + RCSe ) ) * ( ( RMSe + MUC ) + Min( CS ,RCSe ) ) ) )", "obj1": 0.7583333333333333, "obj2": 0.23585040263555368}, {"determining": "( ( CRS / Min( BR ,PN ) ) * Max( Min( Max( BR,FirstVNF_RAM ) ,( ACS - CRS ) ),( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,MUR ) * Max( Max( MUR,RCSe ),MUC ) )", "obj1": 0.44166666666666665, "obj2": 0.4991395622456769}, {"determining": "Max( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( CRS - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) + ( Max( RRS,CRS ) - ( MDR * ACS ) ) ),Min( ( Min( MDR ,FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,MDR ) ) ,Max( ( FirstVNF_Mem_Server + PN ),Min( FirstVNF_CPU ,Const ) ) ) )", "choosing": "( ( CS - RMSe ) + Min( MUC ,Min( ( Max( MUC,MUC ) * ( ( MUC / Min( CS ,CS ) ) + MUC ) ) ,MUM ) ) )", "obj1": 0.33541666666666664, "obj2": 0.6796604557154303}, {"determining": "Max( Max( ARS,RRS ),( FirstVNF_CPU_Server / CRS ) )", "choosing": "Min( Min( Min( MUM ,Min( MUR ,MLU ) ) ,CS ) ,( ( ( MUM * CS ) * ( CS * DS ) ) * MUC ) )", "obj1": 0.5125, "obj2": 0.4476470929229364}, {"determining": "( ( Max( ( ACS + FirstVNF_CPU ),( FirstVNF_Mem_Server / RRS ) ) / ( ( ACS / BR ) + ( ACS - ARS ) ) ) / ( ( Min( FirstVNF_RAM ,ACS ) / ( ACS + PN ) ) + ( ( MRS * FirstVNF_CPU ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe * MUM ) ,( MUC * RRSe ) )", "obj1": 0.42916666666666664, "obj2": 0.5119762387510474}, {"determining": "( Max( Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server / DDR ) ),Min( Max( MRS,MDR ) ,( PN + FirstVNF_CPU_Server ) ) ) + ( Min( ( ARS * BR ) ,( PN - BR ) ) - ( Max( Const,FirstVNF_RAM ) - ( AMS + ACS ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) + Min( RRSe ,CS ) ) * ( ( MUC - RRSe ) * Min( RRSe ,MUC ) ) ) / ( ( Max( MUR,MUR ) - ( MLU - RMSe ) ) * Max( Max( DS,MUM ),( DS - MUC ) ) ) )", "obj1": 0.36041666666666666, "obj2": 0.5890235898483108}, {"determining": "Min( ( ( FirstVNF_Mem * ( AMS - CRS ) ) * ARS ) ,( ARS * ( BR + ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( Min( ( Max( MUR,RRSe ) * ( Min( ( MUR - MUR ) ,DS ) - ( RRSe - DS ) ) ) ,Max( ( CS / Max( ( Min( CS ,( MUR * RMSe ) ) / Max( Min( MUC ,MLU ),RMSe ) ),( RMSe - MUM ) ) ),RMSe ) ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 0.34375, "obj2": 0.6520716234272063}, {"determining": "Max( ( ( ( PN / AMS ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Max( ACS,RRS ) ) ),( Max( Min( MRS ,Const ),( ACS + BR ) ) - Max( ( MDR + MDR ),( CRS - RRS ) ) ) )", "choosing": "( Max( RCSe,MUR ) + ( MUM * RMSe ) )", "obj1": 0.42291666666666666, "obj2": 0.5018951084190271}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server + DDR ) / ( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + ACS ) + Min( Const ,( RRS + MRS ) ) ) ),( Max( Max( Const,ACS ),Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) / ( Const / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) + ( ( ( MLU * RRSe ) + ( CS * ( ( ( ( CS + CS ) / DS ) - RMSe ) / MUR ) ) ) + ( Max( MUR,RRSe ) + ( MUM / RRSe ) ) ) )", "obj1": 0.45, "obj2": 0.5212018860273061}, {"determining": "( ( Max( Min( DDR ,ARS ),Min( AMS ,RRS ) ) + Max( ( RRS - FirstVNF_CPU ),( MDR + MRS ) ) ) * Max( Max( Max( RRS,ARS ),( RRS / ARS ) ),( ( MDR / ACS ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( DS ,MLU ) - Max( Max( CS,DS ),( ( RCSe * MUM ) + ( RRSe / MUC ) ) ) )", "obj1": 0.40625, "obj2": 0.5280438955713963}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( Min( BR ,CRS ) / Max( MDR,BR ) )", "choosing": "Min( ( ( ( CS / Min( RRSe ,MUC ) ) / RMSe ) * DS ) ,( CS * ( Min( CS ,RCSe ) - RCSe ) ) )", "obj1": 0.43333333333333335, "obj2": 0.5350213566458875}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 0.3125, "obj2": 0.6291928402222066}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( FirstVNF_Mem + Const ) ,Min( ARS ,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Min( ARS ,MDR ) ) ),Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * BR ) ),( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( RCSe,( ( CS + MUM ) - Min( MUC ,MUC ) ) ),Min( ( DS / MLU ) ,RMSe ) )", "obj1": 0.4041666666666667, "obj2": 0.5886957845846786}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( DS - RRSe ) )", "obj1": 0.2875, "obj2": 0.6511940383896782}, {"determining": "( ( BR + FirstVNF_CPU_Server ) * Max( ( Max( CRS,FirstVNF_Mem_Server ) * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( CS * DS ) + ( ( ( ( ( MUM * MLU ) - CS ) + ( Min( ( DS + ( MUM / RMSe ) ) ,MUM ) - RCSe ) ) + ( MUC * MUM ) ) + ( MUR - RRSe ) ) )", "obj1": 0.43333333333333335, "obj2": 0.523688912759189}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( DDR + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( RRSe ,RMSe ) ) ) ,Max( ( ( CS + RRSe ) + ( MUC * CS ) ),( Max( RMSe,MUM ) * ( RCSe - RCSe ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6621508180569373}], "2": [{"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),( Min( MUR ,RCSe ) * ( RCSe + RCSe ) ) )", "obj1": 0.24375, "obj2": 0.712891710378266}, {"determining": "Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ( BR + FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) )", "choosing": "( ( Min( Max( MUM,MLU ) ,( CS / DS ) ) - ( ( MUC + CS ) * ( MUR * RMSe ) ) ) + ( ( ( CS * MUR ) + ( MUR + RCSe ) ) * ( ( RMSe + MUC ) + Min( CS ,RCSe ) ) ) )", "obj1": 0.7583333333333333, "obj2": 0.23585040263555368}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( FirstVNF_Mem - Max( ( ARS - CRS ),FirstVNF_RAM ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( ( RRSe - Max( MLU,RCSe ) ) + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.9083333333333333, "obj2": 0.07183910575766453}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ACS ) * ( Const + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * BR ) ) )", "choosing": "( ( Min( MLU ,Max( ( RRSe / MLU ),CS ) ) / DS ) / ( CS - DS ) )", "obj1": 0.9291666666666667, "obj2": 0.06559827164234046}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 0.2625, "obj2": 0.6397331300428916}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( Min( Const ,BR ) + ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * RRSe ) / Min( RRSe ,DS ) )", "obj1": 0.2520833333333333, "obj2": 0.7029138904507441}, {"determining": "( ( Const + FirstVNF_Mem_Server ) + ( MRS - ACS ) )", "choosing": "( ( RMSe / MUM ) - Max( CS,RRSe ) )", "obj1": 0.32708333333333334, "obj2": 0.5828916725113076}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 0.48541666666666666, "obj2": 0.4610983465290468}, {"determining": "( ( ( ( BR + FirstVNF_CPU_Server ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( ( MUR - RRSe ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.30416666666666664, "obj2": 0.6193732901752859}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( BR / PN ) + Min( Max( ( DDR - RRS ),( ( RRS / ( DDR / FirstVNF_RAM_Server ) ) * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( Max( MLU,( RMSe - ( MUR * ( DS * Max( MUM,CS ) ) ) ) ) + MUM ) ,DS ) )", "obj1": 0.5583333333333333, "obj2": 0.3898630478503351}, {"determining": "( Min( Min( ARS ,MRS ) ,( FirstVNF_CPU_Server * MRS ) ) / ( ( AMS / RRS ) / ( MRS / ACS ) ) )", "choosing": "Min( ( ( Min( RCSe ,MUM ) * Min( CS ,RCSe ) ) * Max( ( MLU + RMSe ),Max( MUR,MUC ) ) ) ,( DS / MUM ) )", "obj1": 0.5395833333333333, "obj2": 0.39291435113060563}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "( ( AMS / ( Max( ( DDR + Max( DDR,FirstVNF_Mem_Server ) ),Const ) / ( FirstVNF_Mem_Server - CRS ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / ( MLU * ( RRSe / ( Min( ( MLU + RMSe ) ,RMSe ) - ( Min( RRSe ,MUC ) - CS ) ) ) ) ) - DS ) )", "obj1": 0.3145833333333333, "obj2": 0.588683627035826}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,AMS )", "choosing": "( ( ( RCSe * MUM ) + ( RRSe / MUC ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 0.3125, "obj2": 0.6129680806170709}, {"determining": "( Max( ACS,DDR ) / Max( ( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) ),MDR ) )", "choosing": "( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / CS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4471477633502439}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + ARS ),( ( MRS + CRS ) * ( ARS - AMS ) ) )", "choosing": "( Max( RMSe,RMSe ) * Min( DS ,MUC ) )", "obj1": 0.5, "obj2": 0.4352012428351951}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( ( MDR - Max( PN,FirstVNF_Mem_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS - RCSe ),( Min( Max( ( RRSe * DS ),RMSe ) ,Min( ( MUR / DS ) ,DS ) ) * RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.4205711934107218}, {"determining": "( ( ( FirstVNF_CPU * AMS ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / Min( MRS ,( Min( Const ,FirstVNF_RAM ) + ( AMS * DDR ) ) ) )", "choosing": "Min( Min( MUC ,( MUR / RMSe ) ) ,( DS / MUM ) )", "obj1": 0.5083333333333333, "obj2": 0.4295706537680772}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - RRSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / MRS ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( Max( ( DS / RCSe ),Max( MUM,MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,Max( ( RRS / MRS ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / MLU ) * ( RCSe * MUM ) ) + Max( ( DS / RCSe ),Max( MUM,MUC ) ) ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * ( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Const ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / ( MLU + Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( RRS ,CRS ) ) ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * Max( ( MLU * RRSe ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( MRS / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( Min( RCSe ,MUM ) * Min( CS ,RCSe ) ) * Max( ( MLU + RMSe ),Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( ( PN + PN ) / ( FirstVNF_RAM * BR ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) )", "choosing": "Min( Min( ( ( MUM * RRSe ) - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RCSe + Min( CS ,RRSe ) ) - Max( ( MUM * Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server + MDR ) ,( BR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) * RRSe ) / ( MUR - ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM / CS ) * RRSe ) / ( MUR - ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_RAM * BR ) ) ,( ( RRS - ACS ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * MUC ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,( ( ( FirstVNF_RAM_Server - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( Min( MUR ,MUM ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / ( ( RCSe * ( CS / RRSe ) ) + ( MUM - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( ( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) ) + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( RMSe - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server / DDR ) ),Min( Max( MRS,MDR ) ,( PN + FirstVNF_CPU_Server ) ) ) + ( Min( ( ARS * BR ) ,( PN - BR ) ) - ( ( ACS + FirstVNF_Mem_Server ) / Const ) ) )", "choosing": "( DS / ( ( Max( MUR,MUR ) - ( MLU - RMSe ) ) * Max( Max( DS,MUM ),( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( ARS + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( RRSe * Min( MUM ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( Min( BR ,CRS ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) + Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) ) )", "choosing": "( ( MLU * MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - ( ( RMSe + RMSe ) + ( CS - MUR ) ) ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,( MDR / Max( FirstVNF_CPU_Server,Const ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) / ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,MUM ) + ( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( MRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - ( Max( MUR,MUM ) + ( MLU - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * FirstVNF_CPU_Server )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,MUM ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( ( Max( RRSe,RRSe ) / ( DS - RRSe ) ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / FirstVNF_Mem_Server )", "choosing": "( ( Max( RMSe,RMSe ) / ( DS * Min( CS ,Max( MUM,DS ) ) ) ) * ( CS - ( DS * Min( CS ,Max( MUM,DS ) ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.7266611715849999}, {"determining": "Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ( BR + FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) )", "choosing": "( ( Min( Max( MUM,MLU ) ,( CS / DS ) ) - ( ( MUC + CS ) * ( MUR * RMSe ) ) ) + ( ( ( CS * MUR ) + ( MUR + RCSe ) ) * ( ( RMSe + MUC ) + Min( CS ,RCSe ) ) ) )", "obj1": 0.7583333333333333, "obj2": 0.23585040263555368}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( BR ,( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,Min( RMSe ,RMSe ) )", "obj1": 0.90625, "obj2": 0.0748218171285925}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ACS ) * ( Const + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * BR ) ) )", "choosing": "( ( Min( MLU ,Max( ( RRSe / MLU ),CS ) ) / DS ) / ( CS - DS ) )", "obj1": 0.9291666666666667, "obj2": 0.06559827164234046}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 0.48541666666666666, "obj2": 0.4610983465290468}, {"determining": "( ( AMS / ( Max( AMS,MDR ) / CRS ) ) + Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - MRS ) / ARS ) ),Max( PN,( MRS * FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Min( MUR ,Max( RCSe,RMSe ) ),RRSe ),( Min( MUR ,Min( MUM ,Min( MUC ,( MLU - Min( RMSe ,RMSe ) ) ) ) ) - DS ) )", "obj1": 0.2604166666666667, "obj2": 0.675553002582074}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.33125, "obj2": 0.5619612421340223}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 0.2625, "obj2": 0.6397331300428916}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / Min( BR ,CRS ) )", "choosing": "Min( Min( CS ,DS ) ,Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( CS + RCSe ) ) ),MUC ) )", "obj1": 0.5583333333333333, "obj2": 0.3800974650859693}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "Max( Min( FirstVNF_CPU_Server ,ACS ),( FirstVNF_CPU_Server * Const ) )", "choosing": "Max( Min( MLU ,DS ),( RCSe + MUR ) )", "obj1": 0.41875, "obj2": 0.507365405563576}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( AMS / ( Max( ( DDR + Max( DDR,FirstVNF_Mem_Server ) ),Const ) / ( FirstVNF_Mem_Server - CRS ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / ( MLU * ( RRSe / ( Min( ( MLU + RMSe ) ,RMSe ) - ( Min( RRSe ,MUC ) - CS ) ) ) ) ) - DS ) )", "obj1": 0.3145833333333333, "obj2": 0.588683627035826}, {"determining": "( ( Const + FirstVNF_Mem_Server ) + ( MRS - ACS ) )", "choosing": "( ( RMSe / MUM ) - Max( CS,RRSe ) )", "obj1": 0.32708333333333334, "obj2": 0.5828916725113076}, {"determining": "( Min( Const ,BR ) + ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * RRSe ) / Min( RRSe ,DS ) )", "obj1": 0.2520833333333333, "obj2": 0.7029138904507441}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,AMS )", "choosing": "( ( ( RCSe * MUM ) + ( RRSe / MUC ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 0.3125, "obj2": 0.6129680806170709}, {"determining": "( Max( ACS,DDR ) / Max( ( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) ),MDR ) )", "choosing": "( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / CS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4471477633502439}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( MLU / CS ) - DS ) )", "obj1": 0.2791666666666667, "obj2": 0.633951789002583}, {"determining": "( ( FirstVNF_Mem - Max( ( ARS - CRS ),FirstVNF_RAM ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( ( RRSe - Max( MLU,RCSe ) ) + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.9083333333333333, "obj2": 0.07183910575766453}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( ( ( BR + FirstVNF_CPU_Server ) * ( ( AMS / FirstVNF_CPU ) * AMS ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( ( MUR - RRSe ),RRSe ) / ( DS - RRSe ) )", "obj1": 0.30416666666666664, "obj2": 0.6193732901752859}, {"determining": "( ( ( PN / CRS ) / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( MUM - DS ) )", "obj1": 0.2875, "obj2": 0.6268178012738929}, {"determining": "( ( ( FirstVNF_CPU * AMS ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / Min( MRS ,( Min( Const ,FirstVNF_RAM ) + ( AMS * DDR ) ) ) )", "choosing": "Min( Min( MUC ,( MUR / RMSe ) ) ,( DS / MUM ) )", "obj1": 0.5083333333333333, "obj2": 0.4295706537680772}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + ARS ),( ( MRS + CRS ) * ( ARS - AMS ) ) )", "choosing": "( Max( RMSe,RMSe ) * Min( DS ,MUC ) )", "obj1": 0.5, "obj2": 0.4352012428351951}, {"determining": "( ( AMS / ( MDR / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),RRSe )", "obj1": 0.29583333333333334, "obj2": 0.6236031712591429}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),( Min( MUR ,RCSe ) * ( RCSe + RCSe ) ) )", "obj1": 0.24375, "obj2": 0.712891710378266}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( ( MDR - Max( PN,FirstVNF_Mem_Server ) ) + FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS - RCSe ),( Min( Max( ( RRSe * DS ),RMSe ) ,Min( ( MUR / DS ) ,DS ) ) * RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.4205711934107218}, {"determining": "Min( ( ( ( FirstVNF_Mem * MRS ) / DDR ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( MUC - ( DS - RMSe ) ) )", "obj1": 0.5166666666666667, "obj2": 0.41907058499836697}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Max( MRS,Min( CRS ,CRS ) ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RCSe,MLU ) ,( RMSe / CS ) ) / Max( ( ( DS + RRSe ) - RRSe ),( MUM - MLU ) ) )", "obj1": 0.24791666666666667, "obj2": 0.7060484085167509}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.5020833333333333, "obj2": 0.43431000395954894}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - RRSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / MRS ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( Max( ( DS / RCSe ),Max( MUM,MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,Max( ( RRS / MRS ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / MLU ) * ( RCSe * MUM ) ) + Max( ( DS / RCSe ),Max( MUM,MUC ) ) ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * ( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Const ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / ( MLU + Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( RRS ,CRS ) ) ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * Max( ( MLU * RRSe ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( MRS / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( Min( RCSe ,MUM ) * Min( CS ,RCSe ) ) * Max( ( MLU + RMSe ),Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( ( PN + PN ) / ( FirstVNF_RAM * BR ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) )", "choosing": "Min( Min( ( ( MUM * RRSe ) - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RCSe + Min( CS ,RRSe ) ) - Max( ( MUM * Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server + MDR ) ,( BR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) * RRSe ) / ( MUR - ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM / CS ) * RRSe ) / ( MUR - ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_RAM * BR ) ) ,( ( RRS - ACS ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * MUC ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,( ( ( FirstVNF_RAM_Server - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( Min( MUR ,MUM ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - BR ) + Min( FirstVNF_Mem_Server ,CRS ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,Const ) ) ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( MUM * MUR ) ) + ( Min( MUR ,MUM ) - ( RMSe / RMSe ) ) ) + ( ( ( MUR * MLU ) / Min( MUR ,MLU ) ) / ( ( RCSe * ( CS / RRSe ) ) + ( MUM - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( ( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) ) + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( RMSe - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server / DDR ) ),Min( Max( MRS,MDR ) ,( PN + FirstVNF_CPU_Server ) ) ) + ( Min( ( ARS * BR ) ,( PN - BR ) ) - ( ( ACS + FirstVNF_Mem_Server ) / Const ) ) )", "choosing": "( DS / ( ( Max( MUR,MUR ) - ( MLU - RMSe ) ) * Max( Max( DS,MUM ),( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( ARS + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( RRSe * Min( MUM ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( Min( BR ,CRS ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) + Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) ) )", "choosing": "( ( MLU * MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - ( ( RMSe + RMSe ) + ( CS - MUR ) ) ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,( MDR / Max( FirstVNF_CPU_Server,Const ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ( BR + FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) )", "choosing": "( ( Min( Max( MUM,MLU ) ,( CS / DS ) ) - ( ( MUC + CS ) * ( MUR * RMSe ) ) ) + ( ( ( CS * MUR ) + ( MUR + RCSe ) ) * ( ( RMSe + MUC ) + Min( CS ,RCSe ) ) ) )", "obj1": 0.7583333333333333, "obj2": 0.23585040263555368}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe + MUR ) ) * ( RCSe + MUR ) )", "obj1": 0.88125, "obj2": 0.09759398883387485}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ACS ) * ( Const + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * BR ) ) )", "choosing": "( ( Min( MLU ,Max( ( RRSe / MLU ),CS ) ) / DS ) / ( CS - DS ) )", "obj1": 0.9291666666666667, "obj2": 0.06559827164234046}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 0.48541666666666666, "obj2": 0.4610983465290468}, {"determining": "( ( AMS / ( Max( AMS,MDR ) / CRS ) ) + Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - MRS ) / ARS ) ),Max( PN,( MRS * FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Min( MUR ,Max( RCSe,RMSe ) ),RRSe ),( Min( MUR ,Min( MUM ,Min( MUC ,( MLU - Min( RMSe ,RMSe ) ) ) ) ) - DS ) )", "obj1": 0.2604166666666667, "obj2": 0.675553002582074}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( Min( MDR ,FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( MUC * ( DS / CS ) ) / MLU ) - ( Min( RRSe ,MUC ) - MLU ) )", "obj1": 0.3729166666666667, "obj2": 0.530613181413371}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 0.2625, "obj2": 0.6397331300428916}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.33125, "obj2": 0.5619612421340223}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / Min( BR ,CRS ) )", "choosing": "Min( Min( CS ,DS ) ,Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( CS + RCSe ) ) ),MUC ) )", "obj1": 0.5583333333333333, "obj2": 0.3800974650859693}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * BR ) ) ,( Max( MDR,FirstVNF_RAM_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * Min( DS ,MUC ) ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6984531186068321}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( BR ,( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,Min( RMSe ,RMSe ) )", "obj1": 0.90625, "obj2": 0.0748218171285925}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( FirstVNF_Mem / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU / CS ) / CS ),( MUM - DS ) )", "obj1": 0.325, "obj2": 0.5696328847137426}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( Max( ACS,DDR ) / Max( ( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) ),MDR ) )", "choosing": "( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / CS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4471477633502439}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( AMS / ACS ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( DS - DS ) )", "obj1": 0.30416666666666664, "obj2": 0.602379551798208}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "Max( MRS,( FirstVNF_Mem_Server - MDR ) )", "choosing": "( ( ( ( ( MLU / RCSe ) - MUC ) + ( RCSe * ( ( Min( MUR ,Max( CS,DS ) ) + MUR ) / CS ) ) ) * RRSe ) / ( CS / Min( Min( ( DS + RRSe ) ,( MLU / MLU ) ) ,DS ) ) )", "obj1": 0.5125, "obj2": 0.4167131280396102}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( AMS / ( Max( ( DDR + Max( DDR,FirstVNF_Mem_Server ) ),Const ) / ( FirstVNF_Mem_Server - CRS ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / ( MLU * ( RRSe / ( Min( ( MLU + RMSe ) ,RMSe ) - ( Min( RRSe ,MUC ) - CS ) ) ) ) ) - DS ) )", "obj1": 0.3145833333333333, "obj2": 0.588683627035826}, {"determining": "( ( ( PN / CRS ) / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( MUM - DS ) )", "obj1": 0.2875, "obj2": 0.6268178012738929}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( ( Max( ( Max( ( ARS * ( PN + ( ARS * AMS ) ) ),BR ) * ARS ),( CRS * ACS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - ( ( RCSe * RCSe ) + MUC ) ) ) * ( MUR + DS ) ) ) / Max( ( MLU / CS ),( MUM - DS ) ) )", "obj1": 0.50625, "obj2": 0.4256567417415507}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) * FirstVNF_Mem ) / Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( ( ( MUC * ( Min( ( MUR - CS ) ,CS ) / RRSe ) ) / MLU ) - ( RMSe - MLU ) )", "obj1": 0.29583333333333334, "obj2": 0.6209303849969816}, {"determining": "( ( AMS / ( PN / CRS ) ) + Max( ( AMS / ( PN / CRS ) ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),Max( ( MLU / CS ),( MUM - DS ) ) )", "obj1": 0.3145833333333333, "obj2": 0.588683627035826}, {"determining": "( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( MLU / CS ) - DS ) )", "obj1": 0.2791666666666667, "obj2": 0.633951789002583}, {"determining": "( ( FirstVNF_Mem - Max( ( ARS - CRS ),FirstVNF_RAM ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( ( RRSe - Max( MLU,RCSe ) ) + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.9083333333333333, "obj2": 0.07183910575766453}, {"determining": "Max( ( ( FirstVNF_RAM * ( DDR + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( Min( CS ,( MUC * MUR ) ),RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.4979166666666667, "obj2": 0.4359465088009644}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),( Min( MUR ,RCSe ) * ( RCSe + RCSe ) ) )", "obj1": 0.24375, "obj2": 0.712891710378266}, {"determining": "( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( Max( PN,PN ),PN ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - MUM ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RMSe + MLU ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.29791666666666666, "obj2": 0.6124924213611518}, {"determining": "( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( DDR + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) ) )", "choosing": "Max( ( Max( RMSe,MUM ) / CS ),( ( MLU / CS ) - DS ) )", "obj1": 0.3, "obj2": 0.6072938272121063}, {"determining": "( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( MLU / CS ) - RMSe ) )", "obj1": 0.2791666666666667, "obj2": 0.633951789002583}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.5020833333333333, "obj2": 0.43431000395954894}, {"determining": "( ( FirstVNF_Mem - Max( ( ARS - CRS ),FirstVNF_RAM ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( ( RRSe - Max( MLU,RCSe ) ) + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.9083333333333333, "obj2": 0.07183910575766453}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + ARS ),( ( MRS + CRS ) * ( ARS - AMS ) ) )", "choosing": "( Max( RMSe,RMSe ) * Min( DS ,MUC ) )", "obj1": 0.5, "obj2": 0.4352012428351951}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),CS ) )", "obj1": 0.5020833333333333, "obj2": 0.43431000395954894}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - RRSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / MRS ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( Max( ( DS / RCSe ),Max( MUM,MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,Max( ( RRS / MRS ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / MLU ) * ( RCSe * MUM ) ) + Max( ( DS / RCSe ),Max( MUM,MUC ) ) ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * ( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Const ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / ( MLU + Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( RRS ,CRS ) ) ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * Max( ( MLU * RRSe ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( MRS / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( Min( RCSe ,MUM ) * Min( CS ,RCSe ) ) * Max( ( MLU + RMSe ),Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( ( PN + PN ) / ( FirstVNF_RAM * BR ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) )", "choosing": "Min( Min( ( ( MUM * RRSe ) - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RCSe + Min( CS ,RRSe ) ) - Max( ( MUM * Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server + MDR ) ,( BR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) * RRSe ) / ( MUR - ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM / CS ) * RRSe ) / ( MUR - ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_RAM * BR ) ) ,( ( RRS - ACS ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * MUC ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,( ( ( FirstVNF_RAM_Server - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server * DDR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( Min( MUR ,MUM ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ( BR + FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) )", "choosing": "( ( Min( Max( MUM,MLU ) ,( CS / DS ) ) - ( ( MUC + CS ) * ( MUR * RMSe ) ) ) + ( ( ( CS * MUR ) + ( MUR + RCSe ) ) * ( ( RMSe + MUC ) + Min( CS ,RCSe ) ) ) )", "obj1": 0.7583333333333333, "obj2": 0.23585040263555368}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe + MUR ) ) * ( RCSe + MUR ) )", "obj1": 0.88125, "obj2": 0.09759398883387485}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 0.48541666666666666, "obj2": 0.4610983465290468}, {"determining": "( ( AMS / ( Max( AMS,MDR ) / CRS ) ) + Max( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - MRS ) / ARS ) ),Max( PN,( MRS * FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Min( MUR ,Max( RCSe,RMSe ) ),RRSe ),( Min( MUR ,Min( MUM ,Min( MUC ,( MLU - Min( RMSe ,RMSe ) ) ) ) ) - DS ) )", "obj1": 0.2604166666666667, "obj2": 0.675553002582074}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ACS ) * ( Const + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_RAM_Server,Const ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * BR ) ) )", "choosing": "( ( Min( MLU ,Max( ( RRSe / MLU ),CS ) ) / DS ) / ( CS - DS ) )", "obj1": 0.9291666666666667, "obj2": 0.06559827164234046}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 0.2625, "obj2": 0.6397331300428916}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( CRS + ( ARS * FirstVNF_Mem_Server ) ) ),MDR ) ) )", "choosing": "( Min( Min( Max( Min( RCSe ,( ( CS / MUC ) * CS ) ),CS ) ,Max( CS,Max( CS,MUR ) ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.9541666666666667, "obj2": 0.053197248951235655}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.33125, "obj2": 0.5619612421340223}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / Min( BR ,CRS ) )", "choosing": "Min( Min( CS ,DS ) ,Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( CS + RCSe ) ) ),MUC ) )", "obj1": 0.5583333333333333, "obj2": 0.3800974650859693}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * BR ) ) ,( Max( MDR,FirstVNF_RAM_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * Min( DS ,MUC ) ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6984531186068321}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( BR ,( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,Min( RMSe ,RMSe ) )", "obj1": 0.90625, "obj2": 0.0748218171285925}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( FirstVNF_Mem / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU / CS ) / CS ),( MUM - DS ) )", "obj1": 0.325, "obj2": 0.5696328847137426}, {"determining": "( Min( MDR ,FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( MUC * ( DS / CS ) ) / MLU ) - ( Min( RRSe ,MUC ) - MLU ) )", "obj1": 0.3729166666666667, "obj2": 0.530613181413371}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( Max( ACS,DDR ) / Max( ( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) ),MDR ) )", "choosing": "( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / CS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4471477633502439}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "( ( ( PN / CRS ) / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( MUM - DS ) )", "obj1": 0.2875, "obj2": 0.6268178012738929}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "Max( MRS,( FirstVNF_Mem_Server - MDR ) )", "choosing": "( ( ( ( ( MLU / RCSe ) - MUC ) + ( RCSe * ( ( Min( MUR ,Max( CS,DS ) ) + MUR ) / CS ) ) ) * RRSe ) / ( CS / Min( Min( ( DS + RRSe ) ,( MLU / MLU ) ) ,DS ) ) )", "obj1": 0.5125, "obj2": 0.4167131280396102}, {"determining": "( Min( MDR ,FirstVNF_CPU_Server ) / FirstVNF_RAM_Server )", "choosing": "( ( DS - RCSe ) - ( Min( RRSe ,MUC ) - MLU ) )", "obj1": 0.36875, "obj2": 0.5343504811315224}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "Min( ( Max( ( Max( ( ARS * ( PN + ( ARS * AMS ) ) ),BR ) * ARS ),( CRS * ACS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - ( ( RCSe * RCSe ) + MUC ) ) ) * ( MUR + DS ) ) ) / Max( ( MLU / CS ),( MUM - DS ) ) )", "obj1": 0.50625, "obj2": 0.4256567417415507}, {"determining": "( ( AMS / ( Max( ( DDR + Max( DDR,FirstVNF_Mem_Server ) ),Const ) / ( FirstVNF_Mem_Server - CRS ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / ( MLU * ( RRSe / ( Min( ( MLU + RMSe ) ,RMSe ) - ( Min( RRSe ,MUC ) - CS ) ) ) ) ) - DS ) )", "obj1": 0.3145833333333333, "obj2": 0.588683627035826}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) * FirstVNF_Mem ) / Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( ( ( MUC * ( Min( ( MUR - CS ) ,CS ) / RRSe ) ) / MLU ) - ( RMSe - MLU ) )", "obj1": 0.29583333333333334, "obj2": 0.6209303849969816}, {"determining": "Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( MLU / CS ) ,Max( ( ( CS + RRSe ) + ( MUC * CS ) ),( Max( RMSe,MUM ) * ( RCSe - RCSe ) ) ) )", "obj1": 0.30625, "obj2": 0.5955051170541472}, {"determining": "( ( FirstVNF_Mem - Max( ( ARS - CRS ),FirstVNF_RAM ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( ( RRSe - Max( MLU,RCSe ) ) + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.9083333333333333, "obj2": 0.07183910575766453}, {"determining": "Max( ( ( FirstVNF_RAM * ( DDR + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( Min( CS ,( MUC * MUR ) ),RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.4979166666666667, "obj2": 0.4359465088009644}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),( Min( MUR ,RCSe ) * ( RCSe + RCSe ) ) )", "obj1": 0.24375, "obj2": 0.712891710378266}, {"determining": "( ( AMS / ACS ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( DS - DS ) )", "obj1": 0.30416666666666664, "obj2": 0.602379551798208}, {"determining": "( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( Max( PN,PN ),PN ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - MUM ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RMSe + MLU ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.29791666666666666, "obj2": 0.6124924213611518}, {"determining": "( ( AMS / ( PN / CRS ) ) + Max( ( AMS / ( PN / CRS ) ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),Max( ( MLU / CS ),( MUM - DS ) ) )", "obj1": 0.3145833333333333, "obj2": 0.588683627035826}, {"determining": "( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( DDR + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) ) )", "choosing": "Max( ( Max( RMSe,MUM ) / CS ),( ( MLU / CS ) - DS ) )", "obj1": 0.3, "obj2": 0.6072938272121063}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.5020833333333333, "obj2": 0.43431000395954894}, {"determining": "( ( FirstVNF_Mem - Max( ( ARS - CRS ),FirstVNF_RAM ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( ( RRSe - Max( MLU,RCSe ) ) + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.9083333333333333, "obj2": 0.07183910575766453}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + ARS ),( ( MRS + CRS ) * ( ARS - AMS ) ) )", "choosing": "( Max( RMSe,RMSe ) * Min( DS ,MUC ) )", "obj1": 0.5, "obj2": 0.4352012428351951}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),CS ) )", "obj1": 0.5020833333333333, "obj2": 0.43431000395954894}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - RRSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / MRS ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( Max( ( DS / RCSe ),Max( MUM,MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,Max( ( RRS / MRS ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / MLU ) * ( RCSe * MUM ) ) + Max( ( DS / RCSe ),Max( MUM,MUC ) ) ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * ( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Const ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / ( MLU + Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( RRS ,CRS ) ) ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * Max( ( MLU * RRSe ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( MRS / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( Min( RCSe ,MUM ) * Min( CS ,RCSe ) ) * Max( ( MLU + RMSe ),Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( ( PN + PN ) / ( FirstVNF_RAM * BR ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) ) )", "choosing": "Min( Min( ( ( MUM * RRSe ) - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) / ( ( AMS * Const ) * Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RCSe + Min( CS ,RRSe ) ) - Max( ( MUM * Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server + MDR ) ,( BR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) * RRSe ) / ( MUR - ( MLU + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "Max( ( Max( Min( FirstVNF_CPU ,MDR ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ( BR + FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - AMS ) ) ) )", "choosing": "( ( Min( Max( MUM,MLU ) ,( CS / DS ) ) - ( ( MUC + CS ) * ( MUR * RMSe ) ) ) + ( ( ( CS * MUR ) + ( MUR + RCSe ) ) * ( ( RMSe + MUC ) + Min( CS ,RCSe ) ) ) )", "obj1": 0.7583333333333333, "obj2": 0.23585040263555368}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe + MUR ) ) * ( RCSe + MUR ) )", "obj1": 0.88125, "obj2": 0.09759398883387485}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 0.48541666666666666, "obj2": 0.4610983465290468}, {"determining": "( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + FirstVNF_CPU_Server )", "choosing": "Max( Min( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( RRSe ,RMSe ) ) ) ,Max( ( ( CS + RRSe ) + ( MUC * CS ) ),( Max( RMSe,MUM ) * ( RCSe - RCSe ) ) ) ),( ( MLU / CS ) - DS ) )", "obj1": 0.2604166666666667, "obj2": 0.6592273295883241}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * BR ) ) ,( Max( MDR,FirstVNF_RAM_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * Min( DS ,MUC ) ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6984531186068321}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.33125, "obj2": 0.5619612421340223}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,Max( PN,PN ) ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RMSe + MLU ) ) ) - MUC ) + MUC ) ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.5656921425691176}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( BR ,( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,Min( RMSe ,RMSe ) )", "obj1": 0.90625, "obj2": 0.0748218171285925}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( RMSe - MLU ) * ( RCSe + Max( Min( MLU ,DS ),Max( RRSe,RMSe ) ) ) )", "obj1": 0.95625, "obj2": 0.043938619470823136}, {"determining": "Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( MLU / CS ) ,Max( ( ( CS + RRSe ) + ( MUC * CS ) ),( Max( RMSe,MUM ) * ( RCSe - RCSe ) ) ) )", "obj1": 0.30625, "obj2": 0.5955051170541472}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( Min( MDR ,FirstVNF_CPU_Server ) / Max( MRS,( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( MUC * ( DS / CS ) ) / MLU ) - ( Min( RRSe ,MUC ) - MLU ) )", "obj1": 0.3729166666666667, "obj2": 0.530613181413371}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 0.2625, "obj2": 0.6397331300428916}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( Max( ACS,DDR ) / Max( ( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) ),MDR ) )", "choosing": "( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / CS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4471477633502439}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "Max( MRS,( FirstVNF_Mem_Server - MDR ) )", "choosing": "( ( ( ( ( MLU / RCSe ) - MUC ) + ( RCSe * ( ( Min( MUR ,Max( CS,DS ) ) + MUR ) / CS ) ) ) * RRSe ) / ( CS / Min( Min( ( DS + RRSe ) ,( MLU / MLU ) ) ,DS ) ) )", "obj1": 0.5125, "obj2": 0.4167131280396102}, {"determining": "( ( FirstVNF_Mem - Max( ( ARS - CRS ),FirstVNF_RAM ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( ( RRSe - Max( MLU,RCSe ) ) + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.9083333333333333, "obj2": 0.07183910575766453}, {"determining": "( Min( MDR ,FirstVNF_CPU_Server ) / FirstVNF_RAM_Server )", "choosing": "( ( DS - RCSe ) - ( Min( RRSe ,MUC ) - MLU ) )", "obj1": 0.36875, "obj2": 0.5343504811315224}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( ( Max( ( Max( ( ARS * ( PN + ( ARS * AMS ) ) ),BR ) * ARS ),( CRS * ACS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - ( ( RCSe * RCSe ) + MUC ) ) ) * ( MUR + DS ) ) ) / Max( ( MLU / CS ),( MUM - DS ) ) )", "obj1": 0.50625, "obj2": 0.4256567417415507}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "Max( ( ( FirstVNF_RAM * ( DDR + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( Min( CS ,( MUC * MUR ) ),RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.4979166666666667, "obj2": 0.4359465088009644}, {"determining": "( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) * FirstVNF_Mem ) / Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( ( ( MUC * ( Min( ( MUR - CS ) ,CS ) / RRSe ) ) / MLU ) - ( RMSe - MLU ) )", "obj1": 0.29583333333333334, "obj2": 0.6209303849969816}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),( Min( MUR ,RCSe ) * ( RCSe + RCSe ) ) )", "obj1": 0.24375, "obj2": 0.712891710378266}, {"determining": "( ( ( PN / CRS ) / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( MUM - DS ) )", "obj1": 0.2875, "obj2": 0.6268178012738929}, {"determining": "( ( AMS / ACS ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( DS - DS ) )", "obj1": 0.30416666666666664, "obj2": 0.602379551798208}, {"determining": "( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( Max( PN,PN ),PN ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - MUM ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RMSe + MLU ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.29791666666666666, "obj2": 0.6124924213611518}, {"determining": "( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( DDR + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) ) )", "choosing": "Max( ( Max( RMSe,MUM ) / CS ),( ( MLU / CS ) - DS ) )", "obj1": 0.3, "obj2": 0.6072938272121063}, {"determining": "( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + ( MDR / CRS ) )", "choosing": "Max( ( CS / CS ),( ( MLU / CS ) - DS ) )", "obj1": 0.28958333333333336, "obj2": 0.626267746628828}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.5020833333333333, "obj2": 0.43431000395954894}, {"determining": "( ( FirstVNF_Mem - Max( ( ARS - CRS ),FirstVNF_RAM ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( ( RRSe - Max( MLU,RCSe ) ) + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.9083333333333333, "obj2": 0.07183910575766453}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + ARS ),( ( MRS + CRS ) * ( ARS - AMS ) ) )", "choosing": "( Max( RMSe,RMSe ) * Min( DS ,MUC ) )", "obj1": 0.5, "obj2": 0.4352012428351951}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),CS ) )", "obj1": 0.5020833333333333, "obj2": 0.43431000395954894}, {"determining": "( AMS + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( MUM - DS ) )", "obj1": 0.2875, "obj2": 0.6268178012738929}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - RRSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / MRS ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( Max( ( DS / RCSe ),Max( MUM,MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,Max( ( RRS / MRS ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / MLU ) * ( RCSe * MUM ) ) + Max( ( DS / RCSe ),Max( MUM,MUC ) ) ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * ( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Const ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / ( MLU + Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( RRS ,CRS ) ) ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * Max( ( MLU * RRSe ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( RRS + ( ARS * ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( ( AMS - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( MUM + Min( MUM ,MUC ) ) + MUC ),( DS + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + MUM ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe + MUR ) ) * ( RCSe + MUR ) )", "obj1": 0.88125, "obj2": 0.09759398883387485}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( AMS / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( MLU * ( MLU + MUM ) ) ) ,MUR ) ) ) ,( MLU / ( RCSe / MLU ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0021875701116430162}, {"determining": "( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + FirstVNF_CPU_Server )", "choosing": "Max( Min( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( RRSe ,RMSe ) ) ) ,Max( ( ( CS + RRSe ) + ( MUC * CS ) ),( Max( RMSe,MUM ) * ( RCSe - RCSe ) ) ) ),( ( MLU / CS ) - DS ) )", "obj1": 0.2604166666666667, "obj2": 0.6592273295883241}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * BR ) ) ,( Max( MDR,FirstVNF_RAM_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * Min( DS ,MUC ) ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6984531186068321}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 0.48541666666666666, "obj2": 0.4610983465290468}, {"determining": "Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( DDR + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),MDR )", "choosing": "Min( Max( ( MLU / CS ),RRSe ) ,Max( ( ( CS + RRSe ) + ( MUC * CS ) ),( Max( RMSe,MUM ) * ( RCSe - RCSe ) ) ) )", "obj1": 0.28958333333333336, "obj2": 0.6125744550597555}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.33125, "obj2": 0.5619612421340223}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( ( Const - Max( MDR,( ( ( Const - Max( MDR,FirstVNF_RAM_Server ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.44375, "obj2": 0.47098595495996814}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + Max( ( PN * Max( ( Min( MDR ,( MRS - Const ) ) * Max( CRS,Min( FirstVNF_CPU ,RRS ) ) ),BR ) ),MDR ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RCSe + ( MUR + MLU ) ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.2375, "obj2": 0.7165260091329434}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( RMSe - MLU ) * ( RCSe + Max( Min( MLU ,DS ),Max( RRSe,RMSe ) ) ) )", "obj1": 0.95625, "obj2": 0.043938619470823136}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,Max( PN,PN ) ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RMSe + MLU ) ) ) - MUC ) + MUC ) ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.5656921425691176}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 0.2625, "obj2": 0.6397331300428916}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( Max( ACS,DDR ) / Max( ( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) ),MDR ) )", "choosing": "( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / CS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4471477633502439}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "( ( ( PN / CRS ) / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( MUM - DS ) )", "obj1": 0.2875, "obj2": 0.6268178012738929}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "Max( MRS,( FirstVNF_Mem_Server - MDR ) )", "choosing": "( ( ( ( ( MLU / RCSe ) - MUC ) + ( RCSe * ( ( Min( MUR ,Max( CS,DS ) ) + MUR ) / CS ) ) ) * RRSe ) / ( CS / Min( Min( ( DS + RRSe ) ,( MLU / MLU ) ) ,DS ) ) )", "obj1": 0.5125, "obj2": 0.4167131280396102}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "Min( ( Max( ( Max( ( ARS * ( PN + ( ARS * AMS ) ) ),BR ) * ARS ),( CRS * ACS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - ( ( RCSe * RCSe ) + MUC ) ) ) * ( MUR + DS ) ) ) / Max( ( MLU / CS ),( MUM - DS ) ) )", "obj1": 0.50625, "obj2": 0.4256567417415507}, {"determining": "Max( ( ( FirstVNF_RAM * ( DDR + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( Min( CS ,( MUC * MUR ) ),RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.4979166666666667, "obj2": 0.4359465088009644}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),( Min( MUR ,RCSe ) * ( RCSe + RCSe ) ) )", "obj1": 0.24375, "obj2": 0.712891710378266}, {"determining": "Max( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.5020833333333333, "obj2": 0.43431000395954894}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + ARS ),( ( MRS + CRS ) * ( ARS - AMS ) ) )", "choosing": "( Max( RMSe,RMSe ) * Min( DS ,MUC ) )", "obj1": 0.5, "obj2": 0.4352012428351951}, {"determining": "Max( ( ( FirstVNF_RAM * ( ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( MUR,RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),CS ) )", "obj1": 0.5020833333333333, "obj2": 0.43431000395954894}, {"determining": "( AMS + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( MUM - DS ) )", "obj1": 0.2875, "obj2": 0.6268178012738929}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - RRSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / MRS ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( Max( ( DS / RCSe ),Max( MUM,MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,Max( ( RRS / MRS ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / MLU ) * ( RCSe * MUM ) ) + Max( ( DS / RCSe ),Max( MUM,MUC ) ) ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * ( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Const ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / ( MLU + Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( RRS ,CRS ) ) ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * Max( ( MLU * RRSe ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - Max( ( ACS * ( ( FirstVNF_RAM + FirstVNF_CPU ) + BR ) ),MDR ) )", "choosing": "( Min( Min( ( Max( ( ( MLU - CS ) - RRSe ),( MLU + ( ( MLU * MLU ) - RRSe ) ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_CPU_Server - Max( ( ACS * ( ( AMS - AMS ) + BR ) ),MDR ) ) )", "choosing": "( Min( Max( ( ( MLU - CS ) - RRSe ),( MLU + ( ( MLU * MLU ) - RRSe ) ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( CRS + BR ) / Min( BR ,( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - RMSe ) / ( DS * Min( ( ( Min( MUR ,CS ) + CS ) / MUR ) ,Max( MUM,( ( ( CS / RRSe ) + DS ) + RCSe ) ) ) ) ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ARS * ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( ( AMS - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( MUM + Min( MUM ,MUC ) ) + MUC ),( DS + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + MUM ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( ( MDR - ( MRS - ACS ) ),ARS ) ) ) * ( MDR - ( MRS - ACS ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) )", "obj1": 0.88125, "obj2": 0.06694015752741111}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - ( RMSe + Min( MUM ,MUC ) ) ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.47708333333333336, "obj2": 0.44069416766521546}, {"determining": "( ( AMS / ( PN / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / ( MLU * ( RCSe / ( ( ( MLU / CS ) / ( MLU * MUM ) ) * MUM ) ) ) ) - DS ) )", "obj1": 0.2791666666666667, "obj2": 0.6118903527538553}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( MUC,Min( Max( MUM,RMSe ) ,Min( CS ,( MUC * MUR ) ) ) ) * Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) )", "obj1": 0.7333333333333333, "obj2": 0.2270600396994896}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( ( AMS / Min( BR ,BR ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( RRSe ,RMSe ) ) ) / CS ) - DS ) )", "obj1": 0.2520833333333333, "obj2": 0.6502006187705364}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM ) )", "choosing": "( ( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) - ( MUC + MUM ) )", "obj1": 0.99375, "obj2": 0.010142787132730934}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * BR ) ) ,( Max( MDR,FirstVNF_RAM_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * Min( DS ,MUC ) ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6984531186068321}, {"determining": "( ( ( Const - Max( MDR,( ( ( Const - Max( MDR,FirstVNF_RAM_Server ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.44375, "obj2": 0.47098595495996814}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.33125, "obj2": 0.5619612421340223}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + Max( ( PN * Max( ( Min( MDR ,( MRS - Const ) ) * Max( CRS,Min( FirstVNF_CPU ,RRS ) ) ),BR ) ),MDR ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RCSe + ( MUR + MLU ) ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.2375, "obj2": 0.7165260091329434}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) ) ) - CS ) )", "obj1": 0.91875, "obj2": 0.042437642437792474}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( MUC - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 0.7020833333333333, "obj2": 0.24099560999026604}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "( Min( ( Const + PN ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - Max( ( ACS * Max( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * AMS ),BR ) ),( FirstVNF_Mem_Server - Const ) ) ) )", "choosing": "( Min( Min( ( Max( ( ( RMSe + MUC ) + MUC ),( ( CS - RRSe ) + ( RMSe + Min( MUM ,MUC ) ) ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7270833333333333, "obj2": 0.23775818749293304}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,Max( PN,PN ) ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RMSe + MLU ) ) ) - MUC ) + MUC ) ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.5656921425691176}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 0.2625, "obj2": 0.6397331300428916}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "Max( MRS,( FirstVNF_Mem_Server - MDR ) )", "choosing": "( ( ( ( ( MLU / RCSe ) - MUC ) + ( RCSe * ( ( Min( MUR ,Max( CS,DS ) ) + MUR ) / CS ) ) ) * RRSe ) / ( CS / Min( Min( ( DS + RRSe ) ,( MLU / MLU ) ) ,DS ) ) )", "obj1": 0.5125, "obj2": 0.4167131280396102}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( ( Const - Max( MDR,FirstVNF_RAM_Server ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Min( RRSe ,MUC ) - ( RMSe - MLU ) )", "obj1": 0.5020833333333333, "obj2": 0.4216303875271567}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "Max( ( ( FirstVNF_RAM * ( DDR + BR ) ) / ( MDR - ARS ) ),( ( Const * ARS ) / ( PN * ACS ) ) )", "choosing": "( Max( Min( MUM ,DS ),( MUM - ( Max( Min( CS ,( MUC * MUR ) ),RCSe ) / RMSe ) ) ) * Max( ( MUR + RMSe ),Min( RMSe ,MUC ) ) )", "obj1": 0.4979166666666667, "obj2": 0.4359465088009644}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + ARS ),( ( MRS + CRS ) * ( ARS - AMS ) ) )", "choosing": "( Max( RMSe,RMSe ) * Min( DS ,MUC ) )", "obj1": 0.5, "obj2": 0.4352012428351951}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( AMS / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( MLU * ( MLU + MUM ) ) ) ,MUR ) ) ) ,( MLU / ( RCSe / MLU ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0021875701116430162}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),( Min( MUR ,RCSe ) * ( RCSe + RCSe ) ) )", "obj1": 0.24375, "obj2": 0.712891710378266}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - ARS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,( MUM / Min( RMSe ,RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048776013892134464}, {"determining": "( ( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( Max( MUR,MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9125, "obj2": 0.04698685887735648}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - RRSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / MRS ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( Max( ( DS / RCSe ),Max( MUM,MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,Max( ( RRS / MRS ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / MLU ) * ( RCSe * MUM ) ) + Max( ( DS / RCSe ),Max( MUM,MUC ) ) ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * ( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Const ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / ( MLU + Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( ( ( DDR * ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Max( FirstVNF_RAM_Server,AMS ) ,Min( RRS ,CRS ) ) ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * Max( ( MLU * RRSe ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( Max( ACS,( ( ( PN + FirstVNF_Mem_Server ) - DDR ) - ( RRS + ACS ) ) ) * PN ) * ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( Min( DDR ,DDR ),FirstVNF_CPU ) - FirstVNF_Mem ),ARS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( CS - ( RCSe + MUM ) ) - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + BR ) / Min( BR ,( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - RMSe ) / ( DS * Min( ( ( Min( MUR ,CS ) + CS ) / MUR ) ,Max( MUM,( ( ( CS / RRSe ) + DS ) + RCSe ) ) ) ) ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( ( MDR - ( MRS - ACS ) ),ARS ) ) ) * ( MDR - ( MRS - ACS ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) )", "obj1": 0.88125, "obj2": 0.06694015752741111}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( AMS / ( PN / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / ( MLU * ( RCSe / ( ( ( MLU / CS ) / ( MLU * MUM ) ) * MUM ) ) ) ) - DS ) )", "obj1": 0.2791666666666667, "obj2": 0.6118903527538553}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - ( RMSe + Min( MUM ,MUC ) ) ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.47708333333333336, "obj2": 0.44069416766521546}, {"determining": "( ( ( AMS / Min( BR ,BR ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( RRSe ,RMSe ) ) ) / CS ) - DS ) )", "obj1": 0.2520833333333333, "obj2": 0.6502006187705364}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM ) )", "choosing": "( ( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) - ( MUC + MUM ) )", "obj1": 0.99375, "obj2": 0.010142787132730934}, {"determining": "( ( ( Const - Max( MDR,( ( ( Const - Max( MDR,FirstVNF_RAM_Server ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.44375, "obj2": 0.47098595495996814}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( Const * ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( DDR - ( MDR + Const ) ) ) ) ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( Min( Max( MUC,DS ) ,RCSe ) * MUM ),MUM ) ) )", "obj1": 0.7479166666666667, "obj2": 0.20339730321284347}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.33125, "obj2": 0.5619612421340223}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * BR ) ) ,( Max( MDR,FirstVNF_RAM_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * Min( DS ,MUC ) ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6984531186068321}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( MUC,Min( Max( MUM,RMSe ) ,Min( CS ,( MUC * MUR ) ) ) ) * Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) )", "obj1": 0.7333333333333333, "obj2": 0.2270600396994896}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + Max( ( PN * Max( ( Min( MDR ,( MRS - Const ) ) * Max( CRS,Min( FirstVNF_CPU ,RRS ) ) ),BR ) ),MDR ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RCSe + ( MUR + MLU ) ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.2375, "obj2": 0.7165260091329434}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) ) ) - CS ) )", "obj1": 0.91875, "obj2": 0.042437642437792474}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( MUC - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 0.7020833333333333, "obj2": 0.24099560999026604}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Const + ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( MLU,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5020833333333333, "obj2": 0.4215521841263664}, {"determining": "( Min( ( Const + PN ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - Max( ( ACS * Max( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * AMS ),BR ) ),( FirstVNF_Mem_Server - Const ) ) ) )", "choosing": "( Min( Min( ( Max( ( ( RMSe + MUC ) + MUC ),( ( CS - RRSe ) + ( RMSe + Min( MUM ,MUC ) ) ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7270833333333333, "obj2": 0.23775818749293304}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( Min( RCSe ,RRSe ) + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.48333333333333334, "obj2": 0.4325954821718914}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,Max( PN,PN ) ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RMSe + MLU ) ) ) - MUC ) + MUC ) ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.5656921425691176}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 0.2625, "obj2": 0.6397331300428916}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "Max( MRS,( FirstVNF_Mem_Server - MDR ) )", "choosing": "( ( ( ( ( MLU / RCSe ) - MUC ) + ( RCSe * ( ( Min( MUR ,Max( CS,DS ) ) + MUR ) / CS ) ) ) * RRSe ) / ( CS / Min( Min( ( DS + RRSe ) ,( MLU / MLU ) ) ,DS ) ) )", "obj1": 0.5125, "obj2": 0.4167131280396102}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( Const / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.5833333333333334, "obj2": 0.34926560646084054}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "( Min( MDR ,FirstVNF_CPU_Server ) / ( CRS / ( ( ( ( Max( DDR,FirstVNF_Mem ) + MDR ) + ACS ) + ARS ) / ( Max( DDR,FirstVNF_Mem ) + MDR ) ) ) )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( Min( RRSe ,MUC ) - ( CS / ( DS / RRSe ) ) ) )", "obj1": 0.24583333333333332, "obj2": 0.7024952546966037}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( AMS / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( MLU * ( MLU + MUM ) ) ) ,MUR ) ) ) ,( MLU / ( RCSe / MLU ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0021875701116430162}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Min( Min( ( RRS * Const ) ,( FirstVNF_RAM * MDR ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),( Min( MUR ,RCSe ) * ( RCSe + RCSe ) ) )", "obj1": 0.24375, "obj2": 0.712891710378266}, {"determining": "( ( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( Max( MUR,MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9125, "obj2": 0.04698685887735648}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - ARS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,( MUM / Min( RMSe ,RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048776013892134464}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - ARS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,MUM ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048776013892134464}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( RRS + ( ARS * ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( ( AMS - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( MUM + Min( MUM ,MUC ) ) + MUC ),( DS + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + MUM ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - RRSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / MRS ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( Max( ( DS / RCSe ),Max( MUM,MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,Max( ( RRS / MRS ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe / MLU ) * ( RCSe * MUM ) ) + Max( ( DS / RCSe ),Max( MUM,MUC ) ) ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * ( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( AMS / ( AMS / ( Max( ( Min( ( MDR / MRS ) ,FirstVNF_RAM_Server ) - PN ),BR ) + ( ACS * ACS ) ) ) ) + ( AMS - ( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + Min( MUR ,MUC ) ) - RRSe ) / CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,( ( ( PN + FirstVNF_Mem_Server ) - DDR ) - ( RRS + ACS ) ) ) * PN ) * ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( Min( DDR ,DDR ),FirstVNF_CPU ) - FirstVNF_Mem ),ARS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( CS - ( RCSe + MUM ) ) - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( MDR / CRS ) ) + Max( ( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),RRSe )", "obj1": 0.19791666666666666, "obj2": 0.7390442153966372}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( ( MDR - ( MRS - ACS ) ),ARS ) ) ) * ( MDR - ( MRS - ACS ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) )", "obj1": 0.88125, "obj2": 0.06694015752741111}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) )", "choosing": "Max( ( RMSe + RMSe ),( ( ( MLU / CS ) / DS ) - DS ) )", "obj1": 0.22291666666666668, "obj2": 0.6818924819238971}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( AMS / ( PN / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / ( MLU * ( RCSe / ( ( ( MLU / CS ) / ( MLU * MUM ) ) * MUM ) ) ) ) - DS ) )", "obj1": 0.2791666666666667, "obj2": 0.6118903527538553}, {"determining": "( ( ( AMS / Min( BR ,BR ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( RRSe ,RMSe ) ) ) / CS ) - DS ) )", "obj1": 0.2520833333333333, "obj2": 0.6502006187705364}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - ( RMSe + Min( MUM ,MUC ) ) ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.47708333333333336, "obj2": 0.44069416766521546}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) * ( MDR - FirstVNF_RAM ) )", "choosing": "( ( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) - ( MUC + MUM ) )", "obj1": 0.99375, "obj2": 0.010142787132730934}, {"determining": "( ( ( Const - Max( MDR,( ( ( Const - Max( MDR,FirstVNF_RAM_Server ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.44375, "obj2": 0.47098595495996814}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( Const * ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( DDR - ( MDR + Const ) ) ) ) ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( Min( Max( MUC,DS ) ,RCSe ) * MUM ),MUM ) ) )", "obj1": 0.7479166666666667, "obj2": 0.20339730321284347}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( MUC,Min( Max( MUM,RMSe ) ,Min( CS ,( MUC * MUR ) ) ) ) * Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) )", "obj1": 0.7333333333333333, "obj2": 0.2270600396994896}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) ) ) - CS ) )", "obj1": 0.91875, "obj2": 0.042437642437792474}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( MUC - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 0.7020833333333333, "obj2": 0.24099560999026604}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Const + ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( MLU,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5020833333333333, "obj2": 0.4215521841263664}, {"determining": "( Min( ( Const + PN ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - Max( ( ACS * Max( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * AMS ),BR ) ),( FirstVNF_Mem_Server - Const ) ) ) )", "choosing": "( Min( Min( ( Max( ( ( RMSe + MUC ) + MUC ),( ( CS - RRSe ) + ( RMSe + Min( MUM ,MUC ) ) ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7270833333333333, "obj2": 0.23775818749293304}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( Min( RCSe ,RRSe ) + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.48333333333333334, "obj2": 0.4325954821718914}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,Max( PN,PN ) ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RMSe + MLU ) ) ) - MUC ) + MUC ) ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.5656921425691176}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "Max( ( MRS - FirstVNF_RAM ),( Min( MDR ,CRS ) * ( ( Max( ( DDR - ( ACS - FirstVNF_Mem_Server ) ),PN ) - ( ( ( DDR - MDR ) - Max( Min( PN ,FirstVNF_CPU_Server ),BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) / Min( BR ,( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( Min( MLU ,DS ),( ( Max( MUR,( MUM - MUR ) ) + Max( RMSe,( MLU * CS ) ) ) + Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( ( CS - MLU ) + ( Min( DS ,MUR ) / ( MLU / CS ) ) ) ) ),( MUM + ( MLU / CS ) ) ) ) )", "obj1": 0.6520833333333333, "obj2": 0.29796444997976207}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ACS ) ) + ( MRS + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - RRSe ) / RRSe ) ) - CS ) )", "obj1": 0.3375, "obj2": 0.5507369160797314}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( MLU + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9, "obj2": 0.05434290514191034}, {"determining": "( ( Const - Max( Const,( BR * RRS ) ) ) * Max( ( Max( ACS,( BR - ( RRS + Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) ) ) * PN ),( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUR - ( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ,MLU ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.25416666666666665, "obj2": 0.6299600574207739}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.33125, "obj2": 0.5619612421340223}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "Max( MRS,( FirstVNF_Mem_Server - MDR ) )", "choosing": "( ( ( ( ( MLU / RCSe ) - MUC ) + ( RCSe * ( ( Min( MUR ,Max( CS,DS ) ) + MUR ) / CS ) ) ) * RRSe ) / ( CS / Min( Min( ( DS + RRSe ) ,( MLU / MLU ) ) ,DS ) ) )", "obj1": 0.5125, "obj2": 0.4167131280396102}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( Const / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.5833333333333334, "obj2": 0.34926560646084054}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( AMS / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( MLU * ( MLU + MUM ) ) ) ,MUR ) ) ) ,( MLU / ( RCSe / MLU ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0021875701116430162}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( Max( MUR,MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9125, "obj2": 0.04698685887735648}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( ( DDR / ACS ) - ( MRS - ACS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Min( RMSe ,RRSe ) ,RRSe ) ) ) / MUM ) )", "obj1": 0.9083333333333333, "obj2": 0.05137161248198251}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( RRSe - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - ARS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,MUM ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048776013892134464}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - ARS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,( MUM / Min( RMSe ,RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048776013892134464}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( CRS + BR ) / Min( BR ,( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - RMSe ) / ( DS * Min( ( ( Min( MUR ,CS ) + CS ) / MUR ) ,Max( MUM,( ( ( CS / RRSe ) + DS ) + RCSe ) ) ) ) ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ARS * ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( ( AMS - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( MUM + Min( MUM ,MUC ) ) + MUC ),( DS + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + MUM ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,( ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - RRSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( RRS / MRS ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( Max( ( DS / RCSe ),Max( MUM,MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( AMS - AMS ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + Const ) * ( AMS - DDR ) ) )", "choosing": "( Min( Min( ( Max( ( ( RCSe + ( MLU + MLU ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( AMS / ( Max( ( Min( ( MDR / MRS ) ,FirstVNF_RAM_Server ) - PN ),BR ) + ( ACS * ACS ) ) ) ) + ( AMS - ( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + Min( MUR ,MUC ) ) - RRSe ) / CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( MDR / CRS ) ) + Max( ( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),RRSe )", "obj1": 0.19791666666666666, "obj2": 0.7390442153966372}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( ( MDR - ( MRS - ACS ) ),ARS ) ) ) * ( MDR - ( MRS - ACS ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) )", "obj1": 0.88125, "obj2": 0.06694015752741111}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) )", "choosing": "Max( ( RMSe + RMSe ),( ( ( MLU / CS ) / DS ) - DS ) )", "obj1": 0.22291666666666668, "obj2": 0.6818924819238971}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( AMS / ( PN / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / ( MLU * ( RCSe / ( ( ( MLU / CS ) / ( MLU * MUM ) ) * MUM ) ) ) ) - DS ) )", "obj1": 0.2791666666666667, "obj2": 0.6118903527538553}, {"determining": "( ( ( AMS / Min( BR ,BR ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( RRSe ,RMSe ) ) ) / CS ) - DS ) )", "obj1": 0.2520833333333333, "obj2": 0.6502006187705364}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server * ( ( CRS - ACS ) * ( MDR * ARS ) ) ) )", "choosing": "( Min( RMSe ,( ( Min( RMSe ,( ( MUC - MLU ) + MUM ) ) + RMSe ) * Max( DS,Min( RRSe ,Min( ( ( MLU * MLU ) * ( MUM * MUR ) ) ,MLU ) ) ) ) ) * ( MLU - RRSe ) )", "obj1": 0.98125, "obj2": 0.0081379204226538}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( Const * ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( DDR - ( MDR + Const ) ) ) ) ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( Min( Max( MUC,DS ) ,RCSe ) * MUM ),MUM ) ) )", "obj1": 0.7479166666666667, "obj2": 0.20339730321284347}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( Max( ( AMS / CRS ),MDR ) * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( MLU + MUM ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.4666666666666667, "obj2": 0.4539004555828612}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,( ( MLU + MUM ) - MLU ) ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5, "obj2": 0.41591382912430563}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( MUC,Min( Max( MUM,RMSe ) ,Min( CS ,( MUC * MUR ) ) ) ) * Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) )", "obj1": 0.7333333333333333, "obj2": 0.2270600396994896}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) ) ) - CS ) )", "obj1": 0.91875, "obj2": 0.042437642437792474}, {"determining": "( ( ( Const - Max( MDR,( ( ( Const - Max( MDR,FirstVNF_RAM_Server ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.44375, "obj2": 0.47098595495996814}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( Min( RCSe ,RRSe ) + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.48333333333333334, "obj2": 0.4325954821718914}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ACS ) ) + ( MRS + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - RRSe ) / RRSe ) ) - CS ) )", "obj1": 0.3375, "obj2": 0.5507369160797314}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( MUC - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 0.7020833333333333, "obj2": 0.24099560999026604}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( Min( ( Const + PN ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - Max( ( ACS * Max( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * AMS ),BR ) ),( FirstVNF_Mem_Server - Const ) ) ) )", "choosing": "( Min( Min( ( Max( ( ( RMSe + MUC ) + MUC ),( ( CS - RRSe ) + ( RMSe + Min( MUM ,MUC ) ) ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7270833333333333, "obj2": 0.23775818749293304}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "Max( ( MRS - FirstVNF_RAM ),( Min( MDR ,CRS ) * ( ( Max( ( DDR - ( ACS - FirstVNF_Mem_Server ) ),PN ) - ( ( ( DDR - MDR ) - Max( Min( PN ,FirstVNF_CPU_Server ),BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) / Min( BR ,( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( Min( MLU ,DS ),( ( Max( MUR,( MUM - MUR ) ) + Max( RMSe,( MLU * CS ) ) ) + Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( ( CS - MLU ) + ( Min( DS ,MUR ) / ( MLU / CS ) ) ) ) ),( MUM + ( MLU / CS ) ) ) ) )", "obj1": 0.6520833333333333, "obj2": 0.29796444997976207}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( ( Const - Max( Const,( BR * RRS ) ) ) * Max( ( Max( ACS,( BR - ( RRS + Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) ) ) * PN ),( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUR - ( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ,MLU ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.25416666666666665, "obj2": 0.6299600574207739}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - ( RMSe + Min( MUM ,MUC ) ) ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.47708333333333336, "obj2": 0.44069416766521546}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( Min( MDR ,FirstVNF_CPU_Server ) / ( CRS / ( ( ( Min( ACS ,FirstVNF_Mem_Server ) + ACS ) + ARS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * ( DS / ( ( CS * MLU ) / ( RCSe * DS ) ) ) ) / MLU ) - ( Min( RRSe ,MUC ) - ( CS / ( RRSe - RRSe ) ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5601274872818489}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,Max( PN,PN ) ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RMSe + MLU ) ) ) - MUC ) + MUC ) ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.5656921425691176}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ACS ) ) ) ) * ( ( CRS / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) - ( Max( MUM,MUR ) / RRSe ) )", "obj1": 0.6875, "obj2": 0.26606233034141996}, {"determining": "( ( Const - Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) * ( ( Const - Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) - Max( ( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ),( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) )", "obj1": 0.42916666666666664, "obj2": 0.49272205789766854}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( MLU - RRSe ) + ( MUM / CS ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.8854166666666666, "obj2": 0.06182295732931763}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( MLU + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9, "obj2": 0.05434290514191034}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( Const / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.5833333333333334, "obj2": 0.34926560646084054}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( AMS / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( MLU * ( MLU + MUM ) ) ) ,MUR ) ) ) ,( MLU / ( RCSe / MLU ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0021875701116430162}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( Max( MUR,MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9125, "obj2": 0.04698685887735648}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / ( MUM / Min( RMSe ,RRSe ) ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048711926998637134}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( ( DDR / ACS ) - ( MRS - ACS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Min( RMSe ,RRSe ) ,RRSe ) ) ) / MUM ) )", "obj1": 0.9083333333333333, "obj2": 0.05137161248198251}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( RRSe - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( Max( ACS,( ( ( PN + FirstVNF_Mem_Server ) - DDR ) - ( RRS + ACS ) ) ) * PN ) * ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( Min( DDR ,DDR ),FirstVNF_CPU ) - FirstVNF_Mem ),ARS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( CS - ( RCSe + MUM ) ) - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + BR ) / Min( BR ,( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - RMSe ) / ( DS * Min( ( ( Min( MUR ,CS ) + CS ) / MUR ) ,Max( MUM,( ( ( CS / RRSe ) + DS ) + RCSe ) ) ) ) ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ARS * ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( ( AMS - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( MUM + Min( MUM ,MUC ) ) + MUC ),( DS + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + MUM ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * FirstVNF_CPU ) / Min( ARS ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) - Max( ( Min( MRS ,CRS ) - DDR ),MDR ) ) )", "choosing": "( ( MUC * Max( CS,MUR ) ) + Min( Max( ( ( Min( ( ( RRSe - RRSe ) - RMSe ) ,MUR ) + ( ( Max( MUC,RCSe ) / CS ) / RMSe ) ) / ( ( MUC + MUC ) * MUC ) ),MUM ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ( DDR - MDR ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( Max( CS,MUM ),MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,DS ) / ( MUM - RCSe ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( MDR + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * Max( MUM,( MUM - Min( MLU ,MLU ) ) ) ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - MDR ) / AMS ) / FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUC ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( AMS - AMS ) - ( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( RMSe + ( RMSe * MUR ) ) ,Max( CS,( MLU + MUM ) ) ) ,( DS + MUR ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + Const ) * ( AMS - DDR ) ) )", "choosing": "( Min( Min( ( Max( ( ( RCSe + ( MLU + MLU ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( MDR / CRS ) ) + Max( ( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),RRSe )", "obj1": 0.19791666666666666, "obj2": 0.7390442153966372}, {"determining": "( Max( Const,Const ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( MLU + RCSe ) ) ,MLU ) + ( Min( ( ( MLU + ( ( MLU * MLU ) - RRSe ) ) / RRSe ) ,RCSe ) - ( ( ( CS * RRSe ) - RCSe ) - ( CS / DS ) ) ) )", "obj1": 0.8395833333333333, "obj2": 0.10013878761429257}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) )", "choosing": "Max( ( RMSe + RMSe ),( ( ( MLU / CS ) / DS ) - DS ) )", "obj1": 0.22291666666666668, "obj2": 0.6818924819238971}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( AMS / ( PN / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / ( MLU * ( RCSe / ( ( ( MLU / CS ) / ( MLU * MUM ) ) * MUM ) ) ) ) - DS ) )", "obj1": 0.2791666666666667, "obj2": 0.6118903527538553}, {"determining": "( ( ( AMS / Min( BR ,BR ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( RRSe ,RMSe ) ) ) / CS ) - DS ) )", "obj1": 0.2520833333333333, "obj2": 0.6502006187705364}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( ( MDR - ( MRS - ACS ) ),ARS ) ) ) * ( MDR - ( MRS - ACS ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) )", "obj1": 0.88125, "obj2": 0.06694015752741111}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server * ( ( CRS - ACS ) * ( MDR * ARS ) ) ) )", "choosing": "( Min( RMSe ,( ( Min( RMSe ,( ( MUC - MLU ) + MUM ) ) + RMSe ) * Max( DS,Min( RRSe ,Min( ( ( MLU * MLU ) * ( MUM * MUR ) ) ,MLU ) ) ) ) ) * ( MLU - RRSe ) )", "obj1": 0.98125, "obj2": 0.0081379204226538}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ACS ) ) + ( MRS + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - RRSe ) / RRSe ) ) - CS ) )", "obj1": 0.3375, "obj2": 0.5507369160797314}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( RRS - Max( Const,FirstVNF_CPU ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( MLU + RCSe ) ) / MUC ) * CS ) ),( MUM * MLU ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.2002425806597597}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "Max( ( MRS - FirstVNF_CPU ),Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,( ( MLU / RCSe ) - ( MUM - DS ) ) ) - ( DS - DS ) ) - Min( MUC ,CS ) )", "obj1": 0.30625, "obj2": 0.5598142055435351}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * ( ARS / AMS ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - MUM ) ) )", "obj1": 0.6354166666666666, "obj2": 0.31568988974307766}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) ) ) - CS ) )", "obj1": 0.91875, "obj2": 0.042437642437792474}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),Max( ( FirstVNF_CPU_Server - DDR ),ACS ) ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( ( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) + RCSe ) ) ,MLU ) + Max( ( ( RMSe / MUR ) + MLU ),MLU ) )", "obj1": 0.7166666666666667, "obj2": 0.23162503551548455}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( MUC - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 0.7020833333333333, "obj2": 0.24099560999026604}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "Max( ( MRS - FirstVNF_RAM ),( Min( MDR ,CRS ) * ( ( Max( ( DDR - ( ACS - FirstVNF_Mem_Server ) ),PN ) - ( ( ( DDR - MDR ) - Max( Min( PN ,FirstVNF_CPU_Server ),BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) / Min( BR ,( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( Min( MLU ,DS ),( ( Max( MUR,( MUM - MUR ) ) + Max( RMSe,( MLU * CS ) ) ) + Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( ( CS - MLU ) + ( Min( DS ,MUR ) / ( MLU / CS ) ) ) ) ),( MUM + ( MLU / CS ) ) ) ) )", "obj1": 0.6520833333333333, "obj2": 0.29796444997976207}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( Max( ( AMS / CRS ),MDR ) * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( MLU + MUM ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.4666666666666667, "obj2": 0.4539004555828612}, {"determining": "( FirstVNF_Mem - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RRSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( MUM * MLU ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7375, "obj2": 0.22579677122364225}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU + Const ) * Max( RRS,ARS ) ) ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RMSe + RMSe ),Max( ( Min( RMSe ,RCSe ) + MLU ),RCSe ) )", "obj1": 0.6270833333333333, "obj2": 0.3226512821495868}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( ( Const - ( ( Const - FirstVNF_RAM_Server ) * Max( ( Max( ( DDR + Min( ARS ,FirstVNF_CPU_Server ) ),( ( ACS / BR ) / AMS ) ) - FirstVNF_Mem ),ARS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) - Max( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ),( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.4479166666666667, "obj2": 0.45439223658526023}, {"determining": "( ( Const - Max( Const,( BR * RRS ) ) ) * Max( ( Max( ACS,( BR - ( RRS + Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) ) ) * PN ),( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUR - ( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ,MLU ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.25416666666666665, "obj2": 0.6299600574207739}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ACS ) ) ) ) * ( ( CRS / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) - ( Max( MUM,MUR ) / RRSe ) )", "obj1": 0.6875, "obj2": 0.26606233034141996}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,( ( MLU + MUM ) - MLU ) ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5, "obj2": 0.41591382912430563}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "( ( Const - Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) * ( ( Const - Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) - Max( ( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ),( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) )", "obj1": 0.42916666666666664, "obj2": 0.49272205789766854}, {"determining": "( ( MRS * Max( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ),BR ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Min( ( Max( Min( MUR ,MLU ),( MLU + RCSe ) ) - MLU ) ,( ( MLU + MUM ) - MLU ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.48541666666666666, "obj2": 0.4301214308449227}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( MLU - RRSe ) + ( MUM / CS ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.8854166666666666, "obj2": 0.06182295732931763}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( MLU + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9, "obj2": 0.05434290514191034}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( ( Const - Max( MDR,( ( ( Const - Max( MDR,FirstVNF_RAM_Server ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.44375, "obj2": 0.47098595495996814}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( Const / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.5833333333333334, "obj2": 0.34926560646084054}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - ( RMSe + Min( MUM ,MUC ) ) ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.47708333333333336, "obj2": 0.44069416766521546}, {"determining": "( ( ( Const - Max( MDR,( ( ACS + FirstVNF_CPU_Server ) - Max( ( Min( ARS ,PN ) * ACS ),( DDR + FirstVNF_Mem ) ) ) ) ) * Max( ( ( ACS + ( FirstVNF_CPU - Min( DDR ,FirstVNF_RAM ) ) ) / FirstVNF_Mem ),ARS ) ) * Min( CRS ,ARS ) )", "choosing": "Max( MUR,( ( ( ( RMSe + Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) + Min( Min( MUM ,MUM ) ,Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) ) / RCSe ) - CS ) )", "obj1": 0.9958333333333333, "obj2": 0.002178434937056234}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / FirstVNF_Mem_Server )", "choosing": "( Max( MUC,Min( Max( MUM,RMSe ) ,Min( CS ,( MUC * MUR ) ) ) ) * Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) )", "obj1": 0.7333333333333333, "obj2": 0.2270600396994896}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( PN - FirstVNF_RAM_Server ) / Min( ( PN + ( ACS - FirstVNF_RAM ) ) ,DDR ) ) )", "choosing": "Min( Min( CS ,DS ) ,Max( MLU,( MUR + DS ) ) )", "obj1": 0.5895833333333333, "obj2": 0.34470668464402976}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( Min( RCSe ,RRSe ) + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.48333333333333334, "obj2": 0.4325954821718914}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),MLU ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.4791666666666667, "obj2": 0.4396233758805972}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( Max( MUR,MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9125, "obj2": 0.04698685887735648}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / ( MUM / Min( RMSe ,RRSe ) ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048711926998637134}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( ( DDR / ACS ) - ( MRS - ACS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Min( RMSe ,RRSe ) ,RRSe ) ) ) / MUM ) )", "obj1": 0.9083333333333333, "obj2": 0.05137161248198251}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( RRSe - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( AMS / ( AMS / ( Max( ( Min( ( MDR / MRS ) ,FirstVNF_RAM_Server ) - PN ),BR ) + ( ACS * ACS ) ) ) ) + ( AMS - ( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + Min( MUR ,MUC ) ) - RRSe ) / CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,( ( ( PN + FirstVNF_Mem_Server ) - DDR ) - ( RRS + ACS ) ) ) * PN ) * ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( Min( DDR ,DDR ),FirstVNF_CPU ) - FirstVNF_Mem ),ARS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( CS - ( RCSe + MUM ) ) - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + BR ) / Min( BR ,( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - RMSe ) / ( DS * Min( ( ( Min( MUR ,CS ) + CS ) / MUR ) ,Max( MUM,( ( ( CS / RRSe ) + DS ) + RCSe ) ) ) ) ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ARS * ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( ( AMS - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( MUM + Min( MUM ,MUC ) ) + MUC ),( DS + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + MUM ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( AMS - AMS ) - ( ( Max( ( ARS / MRS ),Max( ACS,( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) - ( FirstVNF_CPU - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - Max( ( PN * Max( ( Min( MDR ,( MRS - Const ) ) * Max( CRS,Min( FirstVNF_CPU ,RRS ) ) ),BR ) ),MDR ) ) )", "choosing": "( Min( Min( ( ( RRSe - MUM ) / ( RMSe * MUR ) ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( RMSe + ( RMSe * MUR ) ) ,Max( CS,( MLU + MUM ) ) ) ,( DS + MUR ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( MDR / CRS ) ) + Max( ( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),RRSe )", "obj1": 0.19791666666666666, "obj2": 0.7390442153966372}, {"determining": "( Max( Const,Const ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( MLU + RCSe ) ) ,MLU ) + ( Min( ( ( MLU + ( ( MLU * MLU ) - RRSe ) ) / RRSe ) ,RCSe ) - ( ( ( CS * RRSe ) - RCSe ) - ( CS / DS ) ) ) )", "obj1": 0.8395833333333333, "obj2": 0.10013878761429257}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) )", "choosing": "Max( ( RMSe + RMSe ),( ( ( MLU / CS ) / DS ) - DS ) )", "obj1": 0.22291666666666668, "obj2": 0.6818924819238971}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.275, "obj2": 0.5901459627808295}, {"determining": "( ( Const - ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( ( DDR + Min( ARS ,FirstVNF_Mem ) ),( ( ACS / BR ) / AMS ) ) - FirstVNF_Mem ),ARS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR - ( ( DS + RCSe ) * ( RCSe / MUC ) ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.2520833333333333, "obj2": 0.6425995653804507}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( ( Const - ( DDR / ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Const ) )", "choosing": "Max( MUR,( Min( MUM ,MUM ) / MUM ) )", "obj1": 0.8770833333333333, "obj2": 0.06897696481208508}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server * ( ( CRS - ACS ) * ( MDR * ARS ) ) ) )", "choosing": "( Min( RMSe ,( ( Min( RMSe ,( ( MUC - MLU ) + MUM ) ) + RMSe ) * Max( DS,Min( RRSe ,Min( ( ( MLU * MLU ) * ( MUM * MUR ) ) ,MLU ) ) ) ) ) * ( MLU - RRSe ) )", "obj1": 0.98125, "obj2": 0.0081379204226538}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( RRS - Max( Const,FirstVNF_CPU ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( MLU + RCSe ) ) / MUC ) * CS ) ),( MUM * MLU ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.2002425806597597}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ACS ) ) + ( MRS + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - RRSe ) / RRSe ) ) - CS ) )", "obj1": 0.3375, "obj2": 0.5507369160797314}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - Max( ( ARS - DDR ),MDR ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( MLU + RCSe ) ) ,MLU ) + Max( ( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ) + MLU ),MLU ) )", "obj1": 0.725, "obj2": 0.2232052985347351}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "Max( ( MRS - FirstVNF_CPU ),Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,( ( MLU / RCSe ) - ( MUM - DS ) ) ) - ( DS - DS ) ) - Min( MUC ,CS ) )", "obj1": 0.30625, "obj2": 0.5598142055435351}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) ) ) - CS ) )", "obj1": 0.91875, "obj2": 0.042437642437792474}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( MUC - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 0.7020833333333333, "obj2": 0.24099560999026604}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( Max( ( AMS / CRS ),MDR ) * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( MLU + MUM ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.4666666666666667, "obj2": 0.4539004555828612}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),Max( ( FirstVNF_CPU_Server - DDR ),ACS ) ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( ( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) + RCSe ) ) ,MLU ) + Max( ( ( RMSe / MUR ) + MLU ),MLU ) )", "obj1": 0.7166666666666667, "obj2": 0.23162503551548455}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( ( Const - ( ( Const - FirstVNF_RAM_Server ) * Max( ( Max( ( DDR + Min( ARS ,FirstVNF_CPU_Server ) ),( ( ACS / BR ) / AMS ) ) - FirstVNF_Mem ),ARS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) - Max( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ),( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.4479166666666667, "obj2": 0.45439223658526023}, {"determining": "( Min( Min( Min( Max( Max( DDR,DDR ),BR ) ,( FirstVNF_Mem_Server * CRS ) ) ,DDR ) ,FirstVNF_RAM_Server ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + ( MUM + DS ) ) - ( ( RRSe - DS ) + ( CS - RRSe ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Min( ( DS * ( RMSe / MUC ) ) ,( Max( ( ( RCSe / MUM ) / MUC ),( CS / MUM ) ) + MUR ) ) )", "obj1": 0.64375, "obj2": 0.30299033304690554}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU + Const ) * Max( RRS,ARS ) ) ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RMSe + RMSe ),Max( ( Min( RMSe ,RCSe ) + MLU ),RCSe ) )", "obj1": 0.6270833333333333, "obj2": 0.3226512821495868}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 0.6291666666666667, "obj2": 0.3139777133944392}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ACS ) ) ) ) * ( ( CRS / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) - ( Max( MUM,MUR ) / RRSe ) )", "obj1": 0.6875, "obj2": 0.26606233034141996}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,( ( MLU + MUM ) - MLU ) ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5, "obj2": 0.41591382912430563}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * RMSe ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.42916666666666664, "obj2": 0.4836952319154912}, {"determining": "( ( MRS * Max( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ),BR ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Min( ( Max( Min( MUR ,MLU ),( MLU + RCSe ) ) - MLU ) ,( ( MLU + MUM ) - MLU ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.48541666666666666, "obj2": 0.4301214308449227}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( MLU - RRSe ) + ( MUM / CS ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.8854166666666666, "obj2": 0.06182295732931763}, {"determining": "( ( Const - Max( Const,( BR * RRS ) ) ) * Max( ( Max( ACS,( BR - ( RRS + Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) ) ) * PN ),( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUR - ( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ,MLU ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.25416666666666665, "obj2": 0.6299600574207739}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( MLU + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9, "obj2": 0.05434290514191034}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( ( Const - Max( MDR,( ( ( Const - Max( MDR,FirstVNF_RAM_Server ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( RMSe * CS ) - ( Max( ( DS * MUC ),MUC ) + ( MUM * ( CS - MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.44375, "obj2": 0.47098595495996814}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( Const / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.5833333333333334, "obj2": 0.34926560646084054}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - ( RMSe + Min( MUM ,MUC ) ) ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.47708333333333336, "obj2": 0.44069416766521546}, {"determining": "( ( ( Const - Max( MDR,( ( ACS + FirstVNF_CPU_Server ) - Max( ( Min( ARS ,PN ) * ACS ),( DDR + FirstVNF_Mem ) ) ) ) ) * Max( ( ( ACS + ( FirstVNF_CPU - Min( DDR ,FirstVNF_RAM ) ) ) / FirstVNF_Mem ),ARS ) ) * Min( CRS ,ARS ) )", "choosing": "Max( MUR,( ( ( ( RMSe + Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) + Min( Min( MUM ,MUM ) ,Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) ) / RCSe ) - CS ) )", "obj1": 0.9958333333333333, "obj2": 0.002178434937056234}, {"determining": "Max( ( MRS - FirstVNF_RAM ),( Min( MDR ,CRS ) * ( ( Max( ( DDR - ( ACS - FirstVNF_Mem_Server ) ),PN ) - ( ( ( DDR - MDR ) - Max( Min( PN ,FirstVNF_CPU_Server ),BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) / Min( BR ,( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( Min( MLU ,DS ),( ( Max( MUR,( MUM - MUR ) ) + Max( RMSe,( MLU * CS ) ) ) + Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( ( CS - MLU ) + ( Min( DS ,MUR ) / ( MLU / CS ) ) ) ) ),( MUM + ( MLU / CS ) ) ) ) )", "obj1": 0.6520833333333333, "obj2": 0.29796444997976207}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( PN - FirstVNF_RAM_Server ) / Min( ( PN + ( ACS - FirstVNF_RAM ) ) ,DDR ) ) )", "choosing": "Min( Min( CS ,DS ) ,Max( MLU,( MUR + DS ) ) )", "obj1": 0.5895833333333333, "obj2": 0.34470668464402976}, {"determining": "( ( ( Const - Max( MDR,( ( Min( CRS ,( BR + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) - Max( ( Min( ARS ,RRS ) * ACS ),( DDR + FirstVNF_Mem ) ) ) ) ) * Max( ( ( ACS + ( FirstVNF_CPU - Min( DDR ,FirstVNF_RAM ) ) ) / FirstVNF_Mem ),ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( Max( CS,CS ) - DS ),( ( ( ( RMSe + Max( ( MUR + MLU ),( Max( CS,CS ) - DS ) ) ) + Min( Min( MUM ,MUM ) ,MLU ) ) / RCSe ) - CS ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( Min( RCSe ,RRSe ) + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.48333333333333334, "obj2": 0.4325954821718914}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( ( MDR - ( MRS - ACS ) ),ARS ) ) ) * ( MDR - ( MRS - ACS ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) )", "obj1": 0.88125, "obj2": 0.06694015752741111}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),MLU ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.4791666666666667, "obj2": 0.4396233758805972}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( Max( MUR,MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9125, "obj2": 0.04698685887735648}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / ( MUM / Min( RMSe ,RRSe ) ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048711926998637134}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( ( DDR / ACS ) - ( MRS - ACS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Min( RMSe ,RRSe ) ,RRSe ) ) ) / MUM ) )", "obj1": 0.9083333333333333, "obj2": 0.05137161248198251}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( RRSe - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( AMS - AMS ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + Const ) * ( AMS - DDR ) ) )", "choosing": "( Min( Min( ( Max( ( ( RCSe + ( MLU + MLU ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( AMS / ( Max( ( Min( ( MDR / MRS ) ,FirstVNF_RAM_Server ) - PN ),BR ) + ( ACS * ACS ) ) ) ) + ( AMS - ( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + Min( MUR ,MUC ) ) - RRSe ) / CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,( ( ( PN + FirstVNF_Mem_Server ) - DDR ) - ( RRS + ACS ) ) ) * PN ) * ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( Min( DDR ,DDR ),FirstVNF_CPU ) - FirstVNF_Mem ),ARS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( CS - ( RCSe + MUM ) ) - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + BR ) / Min( BR ,( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - RMSe ) / ( DS * Min( ( ( Min( MUR ,CS ) + CS ) / MUR ) ,Max( MUM,( ( ( CS / RRSe ) + DS ) + RCSe ) ) ) ) ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ARS * ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( ( AMS - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( MUM + Min( MUM ,MUC ) ) + MUC ),( DS + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + MUM ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RMSe - RRSe ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( DDR - CRS ) )", "choosing": "( ( Min( ( ( ( Min( ( RCSe + MUM ) ,( RRSe + MUR ) ) + RRSe ) / MUM ) - ( Max( ( RRSe + ( RRSe - MUM ) ),RMSe ) - MUC ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( AMS / ( ( ( RRS - FirstVNF_RAM ) / ACS ) / ( FirstVNF_Mem_Server - CRS ) ) ) + ( FirstVNF_Mem * MRS ) )", "choosing": "Max( ( ( RMSe - RMSe ) / CS ),( ( RCSe / ( MLU * ( RCSe * DS ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( ( Max( ( ARS / MRS ),Max( ACS,( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) - ( FirstVNF_CPU - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - Max( ( PN * Max( ( Min( MDR ,( MRS - Const ) ) * Max( CRS,Min( FirstVNF_CPU ,RRS ) ) ),BR ) ),MDR ) ) )", "choosing": "( Min( Min( ( ( RRSe - MUM ) / ( RMSe * MUR ) ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( MDR / CRS ) ) + Max( ( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),RRSe )", "obj1": 0.19791666666666666, "obj2": 0.7390442153966372}, {"determining": "( Max( Const,Const ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( MLU + RCSe ) ) ,MLU ) + ( Min( ( ( MLU + ( ( MLU * MLU ) - RRSe ) ) / RRSe ) ,RCSe ) - ( ( ( CS * RRSe ) - RCSe ) - ( CS / DS ) ) ) )", "obj1": 0.8395833333333333, "obj2": 0.10013878761429257}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( ( Const - ( DDR / ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Const ) )", "choosing": "Max( MUR,( Min( MUM ,MUM ) / MUM ) )", "obj1": 0.8770833333333333, "obj2": 0.06897696481208508}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,Min( ACS ,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - MLU ),MUR ) )", "obj1": 0.2375, "obj2": 0.6750048027955287}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server * ( ( CRS - ACS ) * ( MDR * ARS ) ) ) )", "choosing": "( Min( RMSe ,( ( Min( RMSe ,( ( MUC - MLU ) + MUM ) ) + RMSe ) * Max( DS,Min( RRSe ,Min( ( ( MLU * MLU ) * ( MUM * MUR ) ) ,MLU ) ) ) ) ) * ( MLU - RRSe ) )", "obj1": 0.98125, "obj2": 0.0081379204226538}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( AMS / ( Max( ( DDR + Max( DDR,FirstVNF_Mem_Server ) ),Const ) / ( FirstVNF_Mem_Server - Max( Const,FirstVNF_Mem ) ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / Min( ( RCSe * DS ) ,MUM ) ) - DS ) )", "obj1": 0.22083333333333333, "obj2": 0.6918184176982108}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ACS ) ) + ( MRS + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - RRSe ) / RRSe ) ) - CS ) )", "obj1": 0.3375, "obj2": 0.5507369160797314}, {"determining": "( ( Const - ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( ( DDR + Min( ARS ,FirstVNF_Mem ) ),( ( ACS / BR ) / AMS ) ) - FirstVNF_Mem ),ARS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR - ( ( DS + RCSe ) * ( RCSe / MUC ) ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.2520833333333333, "obj2": 0.6425995653804507}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - Max( ( ARS - DDR ),MDR ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( MLU + RCSe ) ) ,MLU ) + Max( ( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ) + MLU ),MLU ) )", "obj1": 0.725, "obj2": 0.2232052985347351}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "Max( ( MRS - FirstVNF_CPU ),Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,( ( MLU / RCSe ) - ( MUM - DS ) ) ) - ( DS - DS ) ) - Min( MUC ,CS ) )", "obj1": 0.30625, "obj2": 0.5598142055435351}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( RRS - Max( Const,FirstVNF_CPU ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( MLU + RCSe ) ) / MUC ) * CS ) ),( MUM * MLU ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.2002425806597597}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.275, "obj2": 0.5901459627808295}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) ) ) - CS ) )", "obj1": 0.91875, "obj2": 0.042437642437792474}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( MUC - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 0.7020833333333333, "obj2": 0.24099560999026604}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( Max( ( AMS / CRS ),MDR ) * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( MLU + MUM ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.4666666666666667, "obj2": 0.4539004555828612}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),Max( ( FirstVNF_CPU_Server - DDR ),ACS ) ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( ( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) + RCSe ) ) ,MLU ) + Max( ( ( RMSe / MUR ) + MLU ),MLU ) )", "obj1": 0.7166666666666667, "obj2": 0.23162503551548455}, {"determining": "( ( Const - Max( Const,( Max( Const,( FirstVNF_RAM_Server * RRS ) ) * RRS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( ( ( DS * MUM ) * ( MLU * RMSe ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5900600192944864}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem - Max( MDR,FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,DS ) / ( ( MUR / MLU ) + MUC ) )", "obj1": 0.6979166666666666, "obj2": 0.25623300438631946}, {"determining": "( Min( Min( Min( Max( Max( DDR,DDR ),BR ) ,( FirstVNF_Mem_Server * CRS ) ) ,DDR ) ,FirstVNF_RAM_Server ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + ( MUM + DS ) ) - ( ( RRSe - DS ) + ( CS - RRSe ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Min( ( DS * ( RMSe / MUC ) ) ,( Max( ( ( RCSe / MUM ) / MUC ),( CS / MUM ) ) + MUR ) ) )", "obj1": 0.64375, "obj2": 0.30299033304690554}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU + Const ) * Max( RRS,ARS ) ) ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RMSe + RMSe ),Max( ( Min( RMSe ,RCSe ) + MLU ),RCSe ) )", "obj1": 0.6270833333333333, "obj2": 0.3226512821495868}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 0.6291666666666667, "obj2": 0.3139777133944392}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ACS ) ) ) ) * ( ( CRS / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) - ( Max( MUM,MUR ) / RRSe ) )", "obj1": 0.6875, "obj2": 0.26606233034141996}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,( ( MLU + MUM ) - MLU ) ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5, "obj2": 0.41591382912430563}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * RMSe ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.42916666666666664, "obj2": 0.4836952319154912}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) )", "choosing": "Max( ( RMSe + RMSe ),( ( ( MLU / CS ) / DS ) - DS ) )", "obj1": 0.22291666666666668, "obj2": 0.6818924819238971}, {"determining": "( ( MRS * Max( ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ),BR ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Min( ( Max( Min( MUR ,MLU ),( MLU + RCSe ) ) - MLU ) ,( ( MLU + MUM ) - MLU ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.48541666666666666, "obj2": 0.4301214308449227}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( MLU - RRSe ) + ( MUM / CS ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.8854166666666666, "obj2": 0.06182295732931763}, {"determining": "( ( Const - Max( Const,( BR * RRS ) ) ) * Max( ( Max( ACS,( BR - ( RRS + Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) ) ) * PN ),( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUR - ( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ,MLU ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.25416666666666665, "obj2": 0.6299600574207739}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( MLU + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9, "obj2": 0.05434290514191034}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( Min( Const ,( Min( Const ,( BR + FirstVNF_RAM ) ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( RCSe * MUM ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( ( MUM / ( Max( RMSe,RMSe ) / RCSe ) ),( Min( CS ,Min( MUM ,MUM ) ) + RMSe ) ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Max( ( MUM / ( Max( RMSe,RMSe ) / RCSe ) ),( Min( CS ,Min( MUM ,MUM ) ) + RMSe ) ) )", "obj1": 0.4395833333333333, "obj2": 0.45595302484239125}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( ( Const - ( ( Const - FirstVNF_RAM_Server ) * Max( ( Max( ( DDR + Min( ARS ,FirstVNF_CPU_Server ) ),( ( ACS / BR ) / AMS ) ) - FirstVNF_Mem ),ARS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) - Max( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ),( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.4479166666666667, "obj2": 0.45439223658526023}, {"determining": "( Const / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.5833333333333334, "obj2": 0.34926560646084054}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - ( RMSe + Min( MUM ,MUC ) ) ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.47708333333333336, "obj2": 0.44069416766521546}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( Min( PN ,RRS ) / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( MUM * MLU ) ) ,MLU ) + Min( ( ( Max( Min( RRSe ,MUC ),( RCSe - CS ) ) + ( RRSe + ( RMSe / RMSe ) ) ) - ( DS / ( RRSe + RRSe ) ) ) ,MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.19433360219465953}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "Max( ( MRS - FirstVNF_RAM ),( Min( MDR ,CRS ) * ( ( Max( ( DDR - ( ACS - FirstVNF_Mem_Server ) ),PN ) - ( ( ( DDR - MDR ) - Max( Min( PN ,FirstVNF_CPU_Server ),BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) / Min( BR ,( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( Min( MLU ,DS ),( ( Max( MUR,( MUM - MUR ) ) + Max( RMSe,( MLU * CS ) ) ) + Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( ( CS - MLU ) + ( Min( DS ,MUR ) / ( MLU / CS ) ) ) ) ),( MUM + ( MLU / CS ) ) ) ) )", "obj1": 0.6520833333333333, "obj2": 0.29796444997976207}, {"determining": "( ( ( Const - PN ) * ( ( CRS - PN ) * ( AMS - MRS ) ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Const ) )", "choosing": "Max( MUR,( Max( ( ( MUR * MUC ) * Min( CS ,( CS - Min( ( CS * RMSe ) ,Min( MUC ,MUM ) ) ) ) ),( Min( ( MUR * MUC ) ,RRSe ) * ( ( ( RCSe + MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9916666666666667, "obj2": 0.003884043392680879}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( PN - FirstVNF_RAM_Server ) / Min( ( PN + ( ACS - FirstVNF_RAM ) ) ,DDR ) ) )", "choosing": "Min( Min( CS ,DS ) ,Max( MLU,( MUR + DS ) ) )", "obj1": 0.5895833333333333, "obj2": 0.34470668464402976}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * FirstVNF_RAM_Server )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( Min( RCSe ,RRSe ) + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.48333333333333334, "obj2": 0.4325954821718914}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( ( MDR - ( MRS - ACS ) ),ARS ) ) ) * ( MDR - ( MRS - ACS ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) )", "obj1": 0.88125, "obj2": 0.06694015752741111}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),MLU ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.4791666666666667, "obj2": 0.4396233758805972}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "( ( ( Const - Max( MDR,( ( ACS + FirstVNF_CPU_Server ) - Max( ( Min( ARS ,PN ) * ACS ),( DDR + FirstVNF_Mem ) ) ) ) ) * Max( ( ( ACS + ( FirstVNF_CPU - Min( DDR ,FirstVNF_RAM ) ) ) / FirstVNF_Mem ),ARS ) ) * Min( CRS ,ARS ) )", "choosing": "Max( MUR,( ( ( ( RMSe + Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) + Min( Min( MUM ,MUM ) ,Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) ) / RCSe ) - CS ) )", "obj1": 0.9958333333333333, "obj2": 0.002178434937056234}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( ( Const - Max( MDR,( ( Min( CRS ,( BR + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) - Max( ( Min( ARS ,RRS ) * ACS ),( DDR + FirstVNF_Mem ) ) ) ) ) * Max( ( ( ACS + ( FirstVNF_CPU - Min( DDR ,FirstVNF_RAM ) ) ) / FirstVNF_Mem ),ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( Max( CS,CS ) - DS ),( ( ( ( RMSe + Max( ( MUR + MLU ),( Max( CS,CS ) - DS ) ) ) + Min( Min( MUM ,MUM ) ,MLU ) ) / RCSe ) - CS ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( Max( MUR,MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9125, "obj2": 0.04698685887735648}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / ( MUM / Min( RMSe ,RRSe ) ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048711926998637134}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( ( DDR / ACS ) - ( MRS - ACS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Min( RMSe ,RRSe ) ,RRSe ) ) ) / MUM ) )", "obj1": 0.9083333333333333, "obj2": 0.05137161248198251}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( RRSe - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( AMS - AMS ) - ( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( RMSe + ( RMSe * MUR ) ) ,Max( CS,( MLU + MUM ) ) ) ,( DS + MUR ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + Const ) * ( AMS - DDR ) ) )", "choosing": "( Min( Min( ( Max( ( ( RCSe + ( MLU + MLU ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( AMS / ( Max( ( Min( ( MDR / MRS ) ,FirstVNF_RAM_Server ) - PN ),BR ) + ( ACS * ACS ) ) ) ) + ( AMS - ( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + Min( MUR ,MUC ) ) - RRSe ) / CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,( ( ( PN + FirstVNF_Mem_Server ) - DDR ) - ( RRS + ACS ) ) ) * PN ) * ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( Min( DDR ,DDR ),FirstVNF_CPU ) - FirstVNF_Mem ),ARS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( CS - ( RCSe + MUM ) ) - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + BR ) / Min( BR ,( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - RMSe ) / ( DS * Min( ( ( Min( MUR ,CS ) + CS ) / MUR ) ,Max( MUM,( ( ( CS / RRSe ) + DS ) + RCSe ) ) ) ) ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ARS * ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( ( AMS - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( MUM + Min( MUM ,MUC ) ) + MUC ),( DS + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + MUM ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( MDR * Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) ) / ACS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUM / ( Min( MUR ,( MUM - Min( RMSe ,( RCSe * MUR ) ) ) ) * MUM ) ) / Max( Min( ( MUR - MLU ) ,( CS * ( ( RCSe / Min( MUR ,RCSe ) ) * ( MUC * ( RRSe / RRSe ) ) ) ) ),Min( Max( RCSe,( Min( MUM ,CS ) * RCSe ) ) ,MUR ) ) ) ,( MLU / ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU - ( CS * RRSe ) ) / MUC ) / MLU ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * ( ACS / ( ( ( FirstVNF_Mem_Server / CRS ) - Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,DDR ) ) + Const ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) + ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / AMS ) ) - ( CRS - Const ) )", "choosing": "( ( Max( CS,MUM ) + Max( RCSe,MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ACS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( ( ( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) * Max( Max( RRSe,( MLU + DS ) ),RCSe ) ) * MLU ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( Max( DDR,( MDR + Min( Max( FirstVNF_Mem_Server,Min( Const ,AMS ) ) ,ARS ) ) ) - FirstVNF_RAM_Server ) / Max( Max( CRS,BR ),ARS ) ) )", "choosing": "Min( ( CS - MUR ) ,( Min( ( RCSe + RMSe ) ,( Min( MUC ,CS ) - MLU ) ) * Max( RCSe,Max( RRSe,( ( RCSe + MLU ) - ( MLU + RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( ( ( RRS - FirstVNF_RAM ) / ACS ) / ( FirstVNF_Mem_Server - CRS ) ) ) + ( FirstVNF_Mem * MRS ) )", "choosing": "Max( ( ( RMSe - RMSe ) / CS ),( ( RCSe / ( MLU * ( RCSe * DS ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( MDR / CRS ) ) + Max( ( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),RRSe )", "obj1": 0.19791666666666666, "obj2": 0.7390442153966372}, {"determining": "( Max( Const,Const ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( MLU + RCSe ) ) ,MLU ) + ( Min( ( ( MLU + ( ( MLU * MLU ) - RRSe ) ) / RRSe ) ,RCSe ) - ( ( ( CS * RRSe ) - RCSe ) - ( CS / DS ) ) ) )", "obj1": 0.8395833333333333, "obj2": 0.10013878761429257}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( ( Const - ( DDR / ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Const ) )", "choosing": "Max( MUR,( Min( MUM ,MUM ) / MUM ) )", "obj1": 0.8770833333333333, "obj2": 0.06897696481208508}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - Max( ( ARS - DDR ),MDR ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( MLU + RCSe ) ) ,MLU ) + Max( ( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ) + MLU ),MLU ) )", "obj1": 0.725, "obj2": 0.2232052985347351}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( AMS / ( Max( ( DDR + Max( DDR,FirstVNF_Mem_Server ) ),Const ) / ( FirstVNF_Mem_Server - Max( Const,FirstVNF_Mem ) ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / Min( ( RCSe * DS ) ,MUM ) ) - DS ) )", "obj1": 0.22083333333333333, "obj2": 0.6918184176982108}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ACS ) ) + ( MRS + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - RRSe ) / RRSe ) ) - CS ) )", "obj1": 0.3375, "obj2": 0.5507369160797314}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "Max( ( MRS - FirstVNF_CPU ),Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,( ( MLU / RCSe ) - ( MUM - DS ) ) ) - ( DS - DS ) ) - Min( MUC ,CS ) )", "obj1": 0.30625, "obj2": 0.5598142055435351}, {"determining": "( ( CRS / ( RRS + ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( RCSe * MUM ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,( CS * MLU ) ) ) + ( MLU - ( ( CS * MUC ) / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.47708333333333336, "obj2": 0.4230180693805443}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( RRS - Max( Const,FirstVNF_CPU ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( MLU + RCSe ) ) / MUC ) * CS ) ),( MUM * MLU ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.2002425806597597}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.275, "obj2": 0.5901459627808295}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "( ( FirstVNF_RAM * BR ) / ( MRS - ( CRS + ( ( CRS / FirstVNF_RAM_Server ) * ( CRS + ( ( CRS / FirstVNF_RAM_Server ) * ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RCSe / ( ( ( DS * MUR ) - MUR ) - ( MUR * RRSe ) ) ) ) - ( ( ( DS * MUR ) - MUR ) - ( MUR * RRSe ) ) )", "obj1": 0.9645833333333333, "obj2": 0.011444334140742394}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,Min( ACS ,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - MLU ),MUR ) )", "obj1": 0.2375, "obj2": 0.6750048027955287}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) ) ) - CS ) )", "obj1": 0.91875, "obj2": 0.042437642437792474}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + ( MUM + DS ) ) - ( ( RRSe - DS ) + ( RRSe + MLU ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.46875, "obj2": 0.44459687789018393}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6563327118494037}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU + Const ) * Max( RRS,ARS ) ) ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RMSe + RMSe ),Max( ( Min( RMSe ,RCSe ) + MLU ),RCSe ) )", "obj1": 0.6270833333333333, "obj2": 0.3226512821495868}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( CRS / ( ( Const - ( ACS - CRS ) ) + CRS ) ) / MDR ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( MUM / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( ( ( Max( ( RMSe * DS ),( CS / DS ) ) * CS ) - DS ) * MLU ) ) ,MLU ) + ( ( RCSe - ( Min( RMSe ,( ( MUM + ( MUR + RCSe ) ) * ( ( RRSe + RMSe ) / CS ) ) ) - RRSe ) ) + MLU ) )", "obj1": 0.70625, "obj2": 0.22818724228297613}, {"determining": "( ( Const - Max( Const,( Max( Const,( FirstVNF_RAM_Server * RRS ) ) * RRS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( ( ( DS * MUM ) * ( MLU * RMSe ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5900600192944864}, {"determining": "( ( AMS - Max( Max( ( Min( MRS ,CRS ) - DDR ),MDR ),( ( CRS / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( ( ( Max( ( RMSe * DS ),( CS / DS ) ) * CS ) - DS ) * MLU ) ) ,MLU ) + ( ( RCSe - ( Min( RMSe ,( ( MUM + ( MUR + RCSe ) ) * ( RRSe - RRSe ) ) ) - RRSe ) ) + MLU ) )", "obj1": 0.6958333333333333, "obj2": 0.25334787839473666}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( CRS / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ) - Min( Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( CRS / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( ( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) - DS ) * MLU ) ) ,MLU ) + ( ( RCSe - ( Min( RMSe ,( ( MUM + ( MUR + RCSe ) ) * ( ( RRSe + RMSe ) / CS ) ) ) - RRSe ) ) + MLU ) )", "obj1": 0.6291666666666667, "obj2": 0.3054798619858557}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( RRS - ACS ) ) ) ) * ( ( CRS / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) ) )", "choosing": "( ( RCSe + MUM ) - ( Max( MUM,MUR ) / RRSe ) )", "obj1": 0.6875, "obj2": 0.26606233034141996}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,( ( MLU + MUM ) - MLU ) ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5, "obj2": 0.41591382912430563}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( MUC - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 0.7020833333333333, "obj2": 0.24099560999026604}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) )", "choosing": "Max( ( RMSe + RMSe ),( ( ( MLU / CS ) / DS ) - DS ) )", "obj1": 0.22291666666666668, "obj2": 0.6818924819238971}, {"determining": "( ( Const - ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( ( DDR + Min( ARS ,FirstVNF_Mem ) ),( ( ACS / BR ) / AMS ) ) - FirstVNF_Mem ),ARS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR - ( ( DS + RCSe ) * ( RCSe / MUC ) ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.2520833333333333, "obj2": 0.6425995653804507}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( MLU - RRSe ) + ( MUM / CS ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.8854166666666666, "obj2": 0.06182295732931763}, {"determining": "( ( Const - Max( Const,( BR * RRS ) ) ) * Max( ( Max( ACS,( BR - ( RRS + Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) ) ) * PN ),( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUR - ( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ,MLU ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.25416666666666665, "obj2": 0.6299600574207739}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( MLU + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9, "obj2": 0.05434290514191034}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * RMSe ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.42916666666666664, "obj2": 0.4836952319154912}, {"determining": "( Min( Const ,( Min( Const ,( BR + FirstVNF_RAM ) ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( RCSe * MUM ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( ( MUM / ( Max( RMSe,RMSe ) / RCSe ) ),( Min( CS ,Min( MUM ,MUM ) ) + RMSe ) ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Max( ( MUM / ( Max( RMSe,RMSe ) / RCSe ) ),( Min( CS ,Min( MUM ,MUM ) ) + RMSe ) ) )", "obj1": 0.4395833333333333, "obj2": 0.45595302484239125}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Max( ( DDR - FirstVNF_CPU ),RRS ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,DS ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - RCSe ) ),MUM ) ) )", "obj1": 0.6416666666666667, "obj2": 0.29912838909706563}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( Const / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.5833333333333334, "obj2": 0.34926560646084054}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( Min( PN ,RRS ) / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( MUM * MLU ) ) ,MLU ) + Min( ( ( Max( Min( RRSe ,MUC ),( RCSe - CS ) ) + ( RRSe + ( RMSe / RMSe ) ) ) - ( DS / ( RRSe + RRSe ) ) ) ,MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.19433360219465953}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server * ( ( CRS - ACS ) * ( MDR * ARS ) ) ) )", "choosing": "( Min( RMSe ,( ( Min( RMSe ,( ( MUC - MLU ) + MUM ) ) + RMSe ) * Max( DS,Min( RRSe ,Min( ( ( MLU * MLU ) * ( MUM * MUR ) ) ,MLU ) ) ) ) ) * ( MLU - RRSe ) )", "obj1": 0.98125, "obj2": 0.0081379204226538}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( MUM,( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) ) / RRSe ) )", "obj1": 0.5375, "obj2": 0.3918036624391389}, {"determining": "( ( Const - ( ( Const - FirstVNF_RAM_Server ) * Max( ( Max( ( DDR + Min( ARS ,FirstVNF_CPU_Server ) ),( ( ACS / BR ) / AMS ) ) - FirstVNF_Mem ),ARS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) - Max( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ),( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.4479166666666667, "obj2": 0.45439223658526023}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "Max( ( MRS - FirstVNF_RAM ),( Min( MDR ,CRS ) * ( ( Max( ( DDR - ( ACS - FirstVNF_Mem_Server ) ),PN ) - ( ( ( DDR - MDR ) - Max( Min( PN ,FirstVNF_CPU_Server ),BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) / Min( BR ,( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( Min( MLU ,DS ),( ( Max( MUR,( MUM - MUR ) ) + Max( RMSe,( MLU * CS ) ) ) + Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( ( CS - MLU ) + ( Min( DS ,MUR ) / ( MLU / CS ) ) ) ) ),( MUM + ( MLU / CS ) ) ) ) )", "obj1": 0.6520833333333333, "obj2": 0.29796444997976207}, {"determining": "Min( Min( ( PN + ( FirstVNF_RAM_Server - Max( Min( Max( ( PN - FirstVNF_RAM_Server ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ),MDR ) ) ) ,DDR ) ,( FirstVNF_CPU_Server / Const ) )", "choosing": "( Max( MLU,( MUR + DS ) ) - Max( Max( RCSe,( MLU * Max( ( CS / MUM ),MLU ) ) ),Max( Min( ( RCSe + RMSe ) ,( Min( MUC ,CS ) - MLU ) ),MUM ) ) )", "obj1": 0.425, "obj2": 0.49426733586753047}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( PN - FirstVNF_RAM_Server ) / Min( ( PN + ( ACS - FirstVNF_RAM ) ) ,DDR ) ) )", "choosing": "Min( Min( CS ,DS ) ,Max( MLU,( MUR + DS ) ) )", "obj1": 0.5895833333333333, "obj2": 0.34470668464402976}, {"determining": "( ( ( Const - Max( MDR,( ( Min( CRS ,( BR + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) - Max( ( Min( ARS ,RRS ) * ACS ),( DDR + FirstVNF_Mem ) ) ) ) ) * Max( ( ( ACS + ( FirstVNF_CPU - Min( DDR ,FirstVNF_RAM ) ) ) / FirstVNF_Mem ),ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( Max( CS,CS ) - DS ),( ( ( ( RMSe + Max( ( MUR + MLU ),( Max( CS,CS ) - DS ) ) ) + Min( Min( MUM ,MUM ) ,MLU ) ) / RCSe ) - CS ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( Min( MDR ,PN ) * Min( BR ,RRS ) ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - RMSe ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.42083333333333334, "obj2": 0.4944388214494695}, {"determining": "( Min( Min( Min( Max( Max( DDR,DDR ),BR ) ,( FirstVNF_Mem_Server * CRS ) ) ,DDR ) ,FirstVNF_RAM_Server ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + ( MUM + DS ) ) - ( ( RRSe - DS ) + ( CS - RRSe ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Min( ( DS * ( RMSe / MUC ) ) ,( Max( ( ( RCSe / MUM ) / MUC ),( CS / MUM ) ) + MUR ) ) )", "obj1": 0.45625, "obj2": 0.4499482317671792}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,RMSe ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.47499237728102717}, {"determining": "( ( CRS / ( RRS + ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) - MLU ) ,Max( CS,( CS * MLU ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5208333333333334, "obj2": 0.4030741172972473}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( ( MDR - ( MRS - ACS ) ),ARS ) ) ) * ( MDR - ( MRS - ACS ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) )", "obj1": 0.88125, "obj2": 0.06694015752741111}, {"determining": "( ( ( Const - PN ) * ( ( CRS - PN ) * ( AMS - MRS ) ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Const ) )", "choosing": "Max( MUR,( Max( ( ( MUR * MUC ) * Min( CS ,( CS - Min( ( CS * RMSe ) ,Min( MUC ,MUM ) ) ) ) ),( Min( ( MUR * MUC ) ,RRSe ) * ( ( ( RCSe + MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9916666666666667, "obj2": 0.003884043392680879}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( Min( Min( Min( Max( Max( DDR,DDR ),BR ) ,( FirstVNF_Mem_Server * CRS ) ) ,DDR ) ,FirstVNF_RAM_Server ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + ( MUM + DS ) ) - ( ( RRSe - DS ) + ( CS - RRSe ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Min( ( DS * ( RMSe / MUC ) ) ,( Max( ( ( RCSe / MUM ) / MUC ),( CS / MUM ) ) + MUR ) ) )", "obj1": 0.45625, "obj2": 0.4499482317671792}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( ( ( Const - Max( MDR,( ( ACS + FirstVNF_CPU_Server ) - Max( ( Min( ARS ,PN ) * ACS ),( DDR + FirstVNF_Mem ) ) ) ) ) * Max( ( ( ACS + ( FirstVNF_CPU - Min( DDR ,FirstVNF_RAM ) ) ) / FirstVNF_Mem ),ARS ) ) * Min( CRS ,ARS ) )", "choosing": "Max( MUR,( ( ( ( RMSe + Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) + Min( Min( MUM ,MUM ) ,Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) ) / RCSe ) - CS ) )", "obj1": 0.9958333333333333, "obj2": 0.002178434937056234}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( Max( MUR,MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9125, "obj2": 0.04698685887735648}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / ( MUM / Min( RMSe ,RRSe ) ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048711926998637134}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * ( RMSe + MLU ) ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.9854166666666667, "obj2": 0.006440650688269263}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( ( DDR / ACS ) - ( MRS - ACS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Min( RMSe ,RRSe ) ,RRSe ) ) ) / MUM ) )", "obj1": 0.9083333333333333, "obj2": 0.05137161248198251}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.9854166666666667, "obj2": 0.006440650688269263}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( RRSe - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( AMS - AMS ) - ( ( Max( ( ARS / MRS ),Max( ACS,( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) - ( FirstVNF_CPU - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - Max( ( PN * Max( ( Min( MDR ,( MRS - Const ) ) * Max( CRS,Min( FirstVNF_CPU ,RRS ) ) ),BR ) ),MDR ) ) )", "choosing": "( Min( Min( ( ( RRSe - MUM ) / ( RMSe * MUR ) ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( RMSe + ( RMSe * MUR ) ) ,Max( CS,( MLU + MUM ) ) ) ,( DS + MUR ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + Const ) * ( AMS - DDR ) ) )", "choosing": "( Min( Min( ( Max( ( ( RCSe + ( MLU + MLU ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( AMS / ( Max( ( Min( ( MDR / MRS ) ,FirstVNF_RAM_Server ) - PN ),BR ) + ( ACS * ACS ) ) ) ) + ( AMS - ( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + Min( MUR ,MUC ) ) - RRSe ) / CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,( ( ( PN + FirstVNF_Mem_Server ) - DDR ) - ( RRS + ACS ) ) ) * PN ) * ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( Min( DDR ,DDR ),FirstVNF_CPU ) - FirstVNF_Mem ),ARS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( CS - ( RCSe + MUM ) ) - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + BR ) / Min( BR ,( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - RMSe ) / ( DS * Min( ( ( Min( MUR ,CS ) + CS ) / MUR ) ,Max( MUM,( ( ( CS / RRSe ) + DS ) + RCSe ) ) ) ) ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ARS * ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) * ( ( AMS - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( MUM + Min( MUM ,MUC ) ) + MUC ),( DS + RCSe ) ) - MLU ) ,Max( CS,Max( CS,MUR ) ) ) + MUM ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( ( ACS * PN ) - AMS ) )", "choosing": "( ( MUR - ( ( ( RMSe - DS ) - CS ) * CS ) ) + ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( ( DDR - MDR ) - Max( AMS,BR ) ) )", "choosing": "( Min( RMSe ,MUM ) * ( Min( RMSe ,MUM ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - ( Max( ACS,DDR ) / Max( Const,MDR ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * ( ( ( ( MUM + MLU ) * ( MUC - MLU ) ) - ( ( RCSe / MUM ) - ( MLU / DS ) ) ) - ( ( Min( CS ,MUR ) + Max( RMSe,DS ) ) / ( Min( DS ,RMSe ) + Min( RCSe ,MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Min( AMS ,( Max( ACS,( FirstVNF_Mem * ( Max( FirstVNF_CPU_Server,AMS ) / Max( RRS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * ARS ) ) ) ) * Max( ( CRS * ( FirstVNF_Mem + MRS ) ),ARS ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( ( ( Min( MUM ,( DS + CS ) ) + CS ) / ( MUM + Min( CS ,( MUM + MUM ) ) ) ) - ( Min( MUR ,( MUR + MUR ) ) / ( CS / MLU ) ) ) * ( Min( ( Min( CS ,MUM ) / MLU ) ,( MUM / MUR ) ) * MUM ) ) ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( CRS / FirstVNF_Mem_Server ) * ( MRS / FirstVNF_CPU ) ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - ( CS * ( MLU * MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( Max( CRS,BR ) / ( ( Max( DDR,( MDR + Min( RRS ,ARS ) ) ) - FirstVNF_RAM_Server ) / Max( Max( CRS,BR ),ARS ) ) )", "choosing": "Min( Min( ( CS - MUR ) ,( Min( ( RCSe + RMSe ) ,( Min( MUC ,CS ) - MLU ) ) * Max( RCSe,MUM ) ) ) ,( Min( ( RCSe + RMSe ) ,( Min( MUC ,CS ) - MLU ) ) * Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( Max( DDR,( MDR + Min( Max( FirstVNF_Mem_Server,Min( Const ,AMS ) ) ,ARS ) ) ) - FirstVNF_RAM_Server ) / Max( Max( CRS,BR ),ARS ) ) )", "choosing": "Min( ( CS - MUR ) ,( Min( ( RCSe + RMSe ) ,( Min( MUC ,CS ) - MLU ) ) * Max( RCSe,Max( RRSe,( ( RCSe + MLU ) - ( MLU + RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( MDR / CRS ) ) + Max( ( ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),RRSe )", "obj1": 0.19791666666666666, "obj2": 0.7390442153966372}, {"determining": "( Max( Const,Const ) - ( FirstVNF_CPU_Server - Max( ( ARS - DDR ),MDR ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( MLU + RCSe ) ) ,MLU ) + ( Min( ( ( MLU + ( ( MLU * MLU ) - RRSe ) ) / RRSe ) ,RCSe ) - ( ( ( CS * RRSe ) - RCSe ) - ( CS / DS ) ) ) )", "obj1": 0.8395833333333333, "obj2": 0.10013878761429257}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,Min( CRS ,AMS ) ) ) ),DDR ),Max( ( DDR - RRS ),( ( ( MDR / MDR ) + CRS ) * MDR ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7583333333333333, "obj2": 0.18504546817750483}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + ( ( MLU + MUM ) - MLU ) ) / MUM ) )", "obj1": 0.7604166666666666, "obj2": 0.10881912973949551}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( ( Const - ( DDR / ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Const ) )", "choosing": "Max( MUR,( Min( MUM ,MUM ) / MUM ) )", "obj1": 0.8770833333333333, "obj2": 0.06897696481208508}, {"determining": "( FirstVNF_CPU + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / DS ),( MUM - DS ) )", "obj1": 0.20208333333333334, "obj2": 0.7251316842754965}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( ( MUC * ( DS / RRSe ) ) / MLU ) - ( ( MUC * ( Min( MUR ,CS ) / RRSe ) ) / MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5177893170911856}, {"determining": "( ( AMS / ( Max( ( DDR + Max( DDR,FirstVNF_Mem_Server ) ),Const ) / ( FirstVNF_Mem_Server - Max( Const,FirstVNF_Mem ) ) ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "Max( ( MLU / CS ),( ( RCSe / Min( ( RCSe * DS ) ,MUM ) ) - DS ) )", "obj1": 0.22083333333333333, "obj2": 0.6918184176982108}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ACS ) ) + ( MRS + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - RRSe ) / RRSe ) ) - CS ) )", "obj1": 0.3375, "obj2": 0.5507369160797314}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( Min( Const ,Min( Max( FirstVNF_CPU_Server,RRS ) ,FirstVNF_RAM_Server ) ) - MDR ) ) + ACS ) / Min( ARS ,MDR ) ) + ( Max( ARS,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - ( ( Max( Max( RCSe,RCSe ),( CS + ( MLU / ( MUR / CS ) ) ) ) - DS ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5354902123149161}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "Max( ( MRS - FirstVNF_CPU ),Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,( ( MLU / RCSe ) - ( MUM - DS ) ) ) - ( DS - DS ) ) - Min( MUC ,CS ) )", "obj1": 0.30625, "obj2": 0.5598142055435351}, {"determining": "( ( ( ( Const + ( ( BR * ACS ) / ( Min( MDR ,FirstVNF_CPU_Server ) / PN ) ) ) + ( Max( Const,FirstVNF_RAM_Server ) + MRS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( MLU - RRSe ),( ( MUR / ( ( RRSe - Max( RCSe,( CS + DS ) ) ) / RRSe ) ) - CS ) )", "obj1": 0.29375, "obj2": 0.5688060086682738}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( RMSe / MLU ) ,( DS * MUM ) ) * Max( RCSe,MUM ) ) )", "obj1": 0.9583333333333334, "obj2": 0.03760981287531543}, {"determining": "( ( ( ( ( AMS / FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( MUC,( Min( RMSe ,RRSe ) * ( MUM * RRSe ) ) ) - CS ) )", "obj1": 0.6541666666666667, "obj2": 0.29200700206848945}, {"determining": "( ( CRS / ( RRS + ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( RCSe * MUM ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,( CS * MLU ) ) ) + ( MLU - ( ( CS * MUC ) / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.47708333333333336, "obj2": 0.4230180693805443}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) ) ) - CS ) )", "obj1": 0.91875, "obj2": 0.042437642437792474}, {"determining": "( Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + MUM ) - ( ( RRSe - DS ) + ( CS - RRSe ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Min( ( DS * ( RMSe / MUC ) ) ,( Max( ( ( RCSe / MUM ) / MUC ),( CS / MUM ) ) + MUR ) ) )", "obj1": 0.43333333333333335, "obj2": 0.46338067581732556}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,DDR ) ,FirstVNF_RAM_Server ) * Max( ( AMS / CRS ),MDR ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + ( MUM + DS ) ) - ( ( RRSe - DS ) + ( CS - RRSe ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - ( RMSe - MUC ) )", "obj1": 0.46458333333333335, "obj2": 0.4441395620179468}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * ( AMS / ( PN / ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS / ( ( DS - Min( MUM ,MUM ) ) * MUC ) ) - MUC ) - Min( MUC ,MLU ) ) * Min( ( MLU - RCSe ) ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24583333333333332, "obj2": 0.6451497596239236}, {"determining": "( Min( Min( Min( Max( Max( DDR,DDR ),BR ) ,( FirstVNF_Mem_Server * CRS ) ) ,DDR ) ,FirstVNF_RAM_Server ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + ( MUM + DS ) ) - ( ( RRSe - DS ) + ( CS - RRSe ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Min( ( DS * ( RMSe / MUC ) ) ,( Max( ( ( RCSe / MUM ) / MUC ),( CS / MUM ) ) + MUR ) ) )", "obj1": 0.41875, "obj2": 0.4835808919226363}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,Min( Min( CS ,DS ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ) ) ,( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.6020833333333333, "obj2": 0.3246941661394832}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU + Const ) * Max( RRS,ARS ) ) ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RMSe + RMSe ),Max( ( Min( RMSe ,RCSe ) + MLU ),RCSe ) )", "obj1": 0.6270833333333333, "obj2": 0.3226512821495868}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( CRS / ( ( Const - ( RRS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( ( ( ( ( MUC + MUC ) * MUC ) * CS ) - DS ) * MLU ) ) ,MLU ) + ( ( RCSe - ( Min( RMSe ,( ( MUM + ( MUR + RCSe ) ) * ( ( RRSe + RMSe ) / CS ) ) ) - RRSe ) ) + MLU ) )", "obj1": 0.73125, "obj2": 0.21088360460773709}, {"determining": "( ( MRS - AMS ) * ( ( ( ( ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) / ( DDR * BR ) ) / Min( PN ,FirstVNF_Mem_Server ) ) - AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * MLU ) - ( MUM / DS ) ) / Max( ( MUC - RMSe ),RCSe ) ) + MUR ) - MLU )", "obj1": 0.5583333333333333, "obj2": 0.367181311175334}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.27291666666666664, "obj2": 0.6056419357385925}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,Min( ACS ,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - MLU ),MUR ) )", "obj1": 0.2375, "obj2": 0.6750048027955287}, {"determining": "( ( FirstVNF_RAM * BR ) / ( MRS - ( CRS + ( ( CRS / FirstVNF_RAM_Server ) * ( CRS + ( ( CRS / FirstVNF_RAM_Server ) * ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RCSe / ( ( ( DS * MUR ) - MUR ) - ( MUR * RRSe ) ) ) ) - ( ( ( DS * MUR ) - MUR ) - ( MUR * RRSe ) ) )", "obj1": 0.9645833333333333, "obj2": 0.011444334140742394}, {"determining": "( ( AMS / ( PN / CRS ) ) + ( ( AMS / ( PN / CRS ) ) + Max( FirstVNF_RAM,Max( PN,PN ) ) ) )", "choosing": "Max( ( MLU / ( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( Min( DS ,Max( ( RRSe + CS ),( RRSe + CS ) ) ) - MUC ) + MUC ) ) ),( MUM - DS ) )", "obj1": 0.26875, "obj2": 0.6281805025451249}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5645833333333333, "obj2": 0.3529438631980061}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / ( RRS - Max( Const,FirstVNF_CPU ) ) ) - ( Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - Max( ( ARS - DDR ),MDR ) ) )", "choosing": "( Min( ( Max( Max( RMSe,Min( DS ,RRSe ) ),RRSe ) - ( MLU + RCSe ) ) ,MLU ) + Max( ( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ) + MLU ),MLU ) )", "obj1": 0.725, "obj2": 0.2232052985347351}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( CRS / ( ( Const - ( ACS - CRS ) ) + CRS ) ) / MDR ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( MUM / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( ( ( Max( ( RMSe * DS ),( CS / DS ) ) * CS ) - DS ) * MLU ) ) ,MLU ) + ( ( RCSe - ( Min( RMSe ,( ( MUM + ( MUR + RCSe ) ) * ( ( RRSe + RMSe ) / CS ) ) ) - RRSe ) ) + MLU ) )", "obj1": 0.70625, "obj2": 0.22818724228297613}, {"determining": "( ( Const - Max( Const,( Max( Const,( FirstVNF_RAM_Server * RRS ) ) * RRS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( ( ( DS * MUM ) * ( MLU * RMSe ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5900600192944864}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( CRS / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ) - Min( Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( CRS / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( ( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) - DS ) * MLU ) ) ,MLU ) + ( ( RCSe - ( Min( RMSe ,( ( MUM + ( MUR + RCSe ) ) * ( ( RRSe + RMSe ) / CS ) ) ) - RRSe ) ) + MLU ) )", "obj1": 0.6291666666666667, "obj2": 0.3054798619858557}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( CRS / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ) - Min( Max( ( Max( ( PN - MRS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),Max( ( FirstVNF_CPU_Server * PN ),( DDR + PN ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Min( ( ( RRSe + DS ) - ( ( RCSe + MLU ) / ( CS - RRSe ) ) ) ,( RCSe + RMSe ) ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( ( RRSe + DS ) - ( ( RCSe + MLU ) / ( CS - RRSe ) ) ) ) ,MLU ) + ( ( RCSe - ( Min( RMSe ,( ( MUM + ( MUR + RCSe ) ) * ( ( RRSe + RMSe ) / CS ) ) ) - RRSe ) ) + MLU ) )", "obj1": 0.6791666666666667, "obj2": 0.25532028981002314}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( RRS - Max( Const,FirstVNF_CPU ) ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( MLU + RCSe ) ) / MUC ) * CS ) ),( MUM * MLU ) ) ,MLU ) + ( RRSe + MLU ) )", "obj1": 0.7479166666666667, "obj2": 0.2002425806597597}, {"determining": "( ( AMS - Max( Max( ( Min( MRS ,CRS ) - DDR ),MDR ),( ( CRS / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( ( ( Max( ( RMSe * DS ),( CS / DS ) ) * CS ) - DS ) * MLU ) ) ,MLU ) + ( ( RCSe - ( Min( RMSe ,( ( MUM + ( MUR + RCSe ) ) * ( RRSe - RRSe ) ) ) - RRSe ) ) + MLU ) )", "obj1": 0.6958333333333333, "obj2": 0.25334787839473666}, {"determining": "( ( Const - FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem - FirstVNF_CPU ) ) / ( ( ( MRS - Min( DDR ,FirstVNF_Mem ) ) / AMS ) / ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( MUC - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 0.7020833333333333, "obj2": 0.24099560999026604}, {"determining": "( ( MRS + FirstVNF_CPU ) * ( FirstVNF_CPU + ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe * ( Min( DS ,Max( MUM,RMSe ) ) - Max( CS,( MUM - ( MUM + ( MUC - MUC ) ) ) ) ) ) + ( MUM - RRSe ) )", "obj1": 0.39375, "obj2": 0.5162423362192702}, {"determining": "( ( ACS - ( ( ( AMS / Min( BR ,FirstVNF_Mem ) ) - ( ACS / PN ) ) * FirstVNF_Mem ) ) * ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MLU - ( CS * RRSe ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.9604166666666667, "obj2": 0.030994152080309072}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( ( Min( RCSe ,RRSe ) * Max( RCSe,MUM ) ) ,RRSe ) * Max( RCSe,MUM ) ) )", "obj1": 0.55, "obj2": 0.3833461114288434}, {"determining": "Min( ( ( MDR / DDR ) + ( FirstVNF_Mem * MRS ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( DS - RMSe ) ) * MUM ) ) / ( ( MUC - ( DS - RMSe ) ) * MUM ) )", "obj1": 0.5958333333333333, "obj2": 0.3380660371021798}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( MLU - RRSe ) + ( MUM / CS ) ),( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( MLU - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.8854166666666666, "obj2": 0.06182295732931763}, {"determining": "( ( Const - Max( Const,( BR * RRS ) ) ) * Max( ( Max( ACS,( BR - ( RRS + Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) ) ) * PN ),( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUR - ( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ,MLU ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.25416666666666665, "obj2": 0.6299600574207739}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( MLU + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9, "obj2": 0.05434290514191034}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Max( ( DDR - FirstVNF_CPU ),RRS ) )", "choosing": "Min( Min( CS ,DS ) ,( Min( RCSe ,DS ) * Max( ( ( ( ( MLU / RRSe ) + RRSe ) / MLU ) + ( MUC - RCSe ) ),MUM ) ) )", "obj1": 0.6416666666666667, "obj2": 0.29912838909706563}, {"determining": "( ( ( ( ( Const - ( ( FirstVNF_CPU_Server + AMS ) / ( ( FirstVNF_RAM - Const ) / ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) * ( ( CRS - PN ) * ( AMS - MRS ) ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Const ) ) / ( RRS + ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( RCSe * MUM ) ) + MUC ),Min( ( CS * RMSe ) ,Min( MUC ,MUM ) ) ) - MLU ) ,Max( CS,( CS * MLU ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.49166666666666664, "obj2": 0.42142151820485424}, {"determining": "( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) )", "choosing": "Max( ( RMSe + RMSe ),( ( ( MLU / CS ) / DS ) - DS ) )", "obj1": 0.22291666666666668, "obj2": 0.6818924819238971}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( RMSe + ( Min( RMSe ,MUM ) / MUC ) ) / ( Min( ( RCSe * DS ) ,MUM ) / ( MUM - Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) ) ) )", "obj1": 0.5229166666666667, "obj2": 0.39517997268644767}, {"determining": "( Const / ( Const * FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.5833333333333334, "obj2": 0.34926560646084054}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ),( ( MRS + CRS ) * ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) - RRSe ) * Min( DS ,MUC ) )", "obj1": 0.51875, "obj2": 0.40658742008126675}, {"determining": "( ( AMS - Max( Max( ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ),DDR ),( ( Min( PN ,RRS ) / ( ( Const - ( ACS - FirstVNF_RAM ) ) + CRS ) ) / MDR ) ) ) - Min( Max( ( Max( Max( FirstVNF_Mem_Server,ARS ),FirstVNF_Mem ) * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( Max( ( ( MUR * MUM ) * CS ),MUM ) ,( ( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) * CS ) ),( MUM * MLU ) ) ,MLU ) + Min( ( ( Max( Min( RRSe ,MUC ),( RCSe - CS ) ) + ( RRSe + ( RMSe / RMSe ) ) ) - ( DS / ( RRSe + RRSe ) ) ) ,MLU ) )", "obj1": 0.7520833333333333, "obj2": 0.19433360219465953}, {"determining": "( Min( ARS ,( CRS * ( ARS + ( CRS + ( ARS * Max( PN,( CRS / ACS ) ) ) ) ) ) ) * ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUM ) - ( Max( MUM,( ( ( RMSe / DS ) - ( RMSe + MUC ) ) / MUC ) ) / RRSe ) )", "obj1": 0.5375, "obj2": 0.3918036624391389}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - Min( MUC ,DS ) ),MUR ) )", "obj1": 0.275, "obj2": 0.5901459627808295}, {"determining": "( ( Const - ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( ( DDR + Min( ARS ,FirstVNF_Mem ) ),( ( ACS / BR ) / AMS ) ) - FirstVNF_Mem ),ARS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR - ( ( DS + RCSe ) * ( RCSe / MUC ) ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.2520833333333333, "obj2": 0.6425995653804507}, {"determining": "( Min( Const ,( Min( Const ,( BR + FirstVNF_RAM ) ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + ( RCSe * MUM ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( ( MUM / ( Max( RMSe,RMSe ) / RCSe ) ),( Min( CS ,Min( MUM ,MUM ) ) + RMSe ) ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Max( ( MUM / ( Max( RMSe,RMSe ) / RCSe ) ),( Min( CS ,Min( MUM ,MUM ) ) + RMSe ) ) )", "obj1": 0.4395833333333333, "obj2": 0.45595302484239125}, {"determining": "Min( ( Max( Max( CRS,BR ),ARS ) * ARS ) ,( ARS * ( BR + ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( Min( ( Max( MUR,RRSe ) * ( Min( ( MUR - MUR ) ,DS ) - ( RRSe - DS ) ) ) ,Max( ( CS / Max( ( Min( CS ,( MUR * RMSe ) ) / Max( Min( MUC ,MLU ),RMSe ) ),( RMSe - MUM ) ) ),RMSe ) ) / ( Min( ( Max( RCSe,MUM ) * RCSe ) ,DS ) - CS ) )", "obj1": 0.4166666666666667, "obj2": 0.4938238142129288}, {"determining": "( ( FirstVNF_Mem - ( MDR / DDR ) ) / Min( BR ,CRS ) )", "choosing": "Min( ( CS + ( MUC + CS ) ) ,( MUR / MLU ) )", "obj1": 0.40625, "obj2": 0.5067465121185102}, {"determining": "( ( Const - ( ( Const - FirstVNF_RAM_Server ) * Max( ( Max( ( DDR + Min( ARS ,FirstVNF_CPU_Server ) ),( ( ACS / BR ) / AMS ) ) - FirstVNF_Mem ),ARS ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) - Max( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ),( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( DS ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.4479166666666667, "obj2": 0.45439223658526023}, {"determining": "( ( Const - Max( Const,( FirstVNF_RAM_Server * ( ( Const - Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) * ( Const - Max( Const,( FirstVNF_RAM_Server * RRS ) ) ) ) ) ) ) * Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( ( ( ( CS * MLU ) / ( RCSe * DS ) ) + ( MLU * Max( MLU,DS ) ) ) / MUC ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Min( CS ,Min( CS ,( MLU * RMSe ) ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6778789382303871}, {"determining": "( ( MRS * FirstVNF_CPU_Server ) * ( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe + Min( MUM ,MUC ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,Max( CS,( ( MLU + MUM ) - MLU ) ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5, "obj2": 0.41591382912430563}, {"determining": "Max( ( MRS - FirstVNF_RAM ),( Min( MDR ,CRS ) * ( ( Max( ( DDR - ( ACS - FirstVNF_Mem_Server ) ),PN ) - ( ( ( DDR - MDR ) - Max( Min( PN ,FirstVNF_CPU_Server ),BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) / Min( BR ,( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( Min( MLU ,DS ),( ( Max( MUR,( MUM - MUR ) ) + Max( RMSe,( MLU * CS ) ) ) + Max( ( MUM * ( ( ( Min( MUC ,CS ) - MLU ) - MUC ) + ( ( CS - MLU ) + ( Min( DS ,MUR ) / ( MLU / CS ) ) ) ) ),( MUM + ( MLU / CS ) ) ) ) )", "obj1": 0.6520833333333333, "obj2": 0.29796444997976207}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( PN - FirstVNF_RAM_Server ) / Min( ( PN + ( ACS - FirstVNF_RAM ) ) ,DDR ) ) )", "choosing": "Min( Min( CS ,DS ) ,Max( MLU,( MUR + DS ) ) )", "obj1": 0.5895833333333333, "obj2": 0.34470668464402976}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( AMS ,DDR ) / ( BR * FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server * ( ( CRS - ACS ) * ( MDR * ARS ) ) ) )", "choosing": "( Min( RMSe ,( ( Min( RMSe ,( ( MUC - MLU ) + MUM ) ) + RMSe ) * Max( DS,Min( RRSe ,Min( ( ( MLU * MLU ) * ( MUM * MUR ) ) ,MLU ) ) ) ) ) * ( MLU - RRSe ) )", "obj1": 0.98125, "obj2": 0.0081379204226538}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,ARS ) ) * ( Const - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR - CS ),( MUR - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.5012917238847506}, {"determining": "( ( CRS / ( RRS + ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * Max( Const,FirstVNF_Mem ) ) ,( FirstVNF_Mem * MRS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( Max( MUR,( ( RCSe * ( CS * MUC ) ) / ( RRSe / ( RCSe * MUM ) ) ) ) - MLU ) ,Max( CS,( CS * MLU ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - MLU )", "obj1": 0.5208333333333334, "obj2": 0.4030741172972473}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( ( MDR - ( MRS - ACS ) ),ARS ) ) ) * ( MDR - ( MRS - ACS ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) - ( ( ( MLU - RRSe ) + ( MUM / Min( RMSe ,RRSe ) ) ) / MUM ) )", "obj1": 0.88125, "obj2": 0.06694015752741111}, {"determining": "( ( RRS + AMS ) - ( FirstVNF_CPU_Server - Max( Max( ( DDR - Min( PN ,RRS ) ),( FirstVNF_RAM / Const ) ),MDR ) ) )", "choosing": "( Min( DS ,DS ) + ( DS - Min( ( RCSe * CS ) ,RCSe ) ) )", "obj1": 0.4, "obj2": 0.5155550847050534}, {"determining": "( ( ( Const - PN ) * ( ( CRS - PN ) * ( AMS - MRS ) ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / Const ) )", "choosing": "Max( MUR,( Max( ( ( MUR * MUC ) * Min( CS ,( CS - Min( ( CS * RMSe ) ,Min( MUC ,MUM ) ) ) ) ),( Min( ( MUR * MUC ) ,RRSe ) * ( ( ( RCSe + MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9916666666666667, "obj2": 0.003884043392680879}, {"determining": "( Min( Min( Min( Max( Max( DDR,DDR ),BR ) ,( FirstVNF_Mem_Server * CRS ) ) ,DDR ) ,FirstVNF_RAM_Server ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + ( MUM + DS ) ) - ( ( RRSe - DS ) + ( CS - RRSe ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Min( ( DS * ( RMSe / MUC ) ) ,( Max( ( ( RCSe / MUM ) / MUC ),( CS / MUM ) ) + MUR ) ) )", "obj1": 0.45625, "obj2": 0.4499482317671792}, {"determining": "( ( BR / PN ) + Min( Max( ( FirstVNF_CPU_Server - RRS ),( FirstVNF_Mem * MDR ) ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( ( RRSe + ( Min( RMSe ,MUR ) - Max( CS,RRSe ) ) ) ,DS ) )", "obj1": 0.54375, "obj2": 0.3853164208855546}, {"determining": "Max( ( ARS - FirstVNF_CPU ),Min( ACS ,DDR ) )", "choosing": "( MUC - Min( MUC ,CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5036406789904124}, {"determining": "( ( MRS - ( ( Const + FirstVNF_Mem_Server ) + ( MDR + MRS ) ) ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( ( ( MLU - RRSe ) + MUC ) / MUM ) )", "obj1": 0.7666666666666667, "obj2": 0.10676479469419563}, {"determining": "Min( ( ( AMS / ( PN / CRS ) ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem * MRS ) )", "choosing": "( ( DS * ( ( MUC - ( MUM - RMSe ) ) * MUM ) ) / ( CS + MUC ) )", "obj1": 0.5395833333333333, "obj2": 0.38719035810876357}, {"determining": "( Min( Min( Min( Max( Max( DDR,DDR ),BR ) ,( FirstVNF_Mem_Server * CRS ) ) ,DDR ) ,FirstVNF_RAM_Server ) * ( ( DDR / FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RRSe ) + Min( ( ( ( ( MUM * MUM ) + ( MUM + DS ) ) - ( ( RRSe - DS ) + ( CS - RRSe ) ) ) / ( ( MUR + MLU ) / ( MUM - ( DS - RCSe ) ) ) ) ,Min( MUR ,DS ) ) ) + ( MLU - ( RMSe / ( DS / Max( ( ( RRSe - RMSe ) / MUR ),( ( CS * MLU ) + RCSe ) ) ) ) ) ) - Min( ( DS * ( RMSe / MUC ) ) ,( Max( ( ( RCSe / MUM ) / MUC ),( CS / MUM ) ) + MUR ) ) )", "obj1": 0.45625, "obj2": 0.4499482317671792}, {"determining": "( ( ( Const - Max( MDR,( ( ACS + FirstVNF_CPU_Server ) - Max( ( Min( ARS ,PN ) * ACS ),( DDR + FirstVNF_Mem ) ) ) ) ) * Max( ( ( ACS + ( FirstVNF_CPU - Min( DDR ,FirstVNF_RAM ) ) ) / FirstVNF_Mem ),ARS ) ) * Min( CRS ,ARS ) )", "choosing": "Max( MUR,( ( ( ( RMSe + Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) + Min( Min( MUM ,MUM ) ,Max( ( MUR + MLU ),( Min( RCSe ,RRSe ) - DS ) ) ) ) / RCSe ) - CS ) )", "obj1": 0.9958333333333333, "obj2": 0.002178434937056234}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.90625, "obj2": 0.05194513017194412}, {"determining": "( ACS + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU * CRS ) ) )", "choosing": "Min( Min( MUR ,Min( RMSe ,RRSe ) ) ,Min( ( MUC * MUR ) ,DS ) )", "obj1": 0.5854166666666667, "obj2": 0.34578699368517574}, {"determining": "( ( ( Const - Max( MDR,( ( Min( CRS ,( BR + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) - Max( ( Min( ARS ,RRS ) * ACS ),( DDR + FirstVNF_Mem ) ) ) ) ) * Max( ( ( ACS + ( FirstVNF_CPU - Min( DDR ,FirstVNF_RAM ) ) ) / FirstVNF_Mem ),ARS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( Max( CS,CS ) - DS ),( ( ( ( RMSe + Max( ( MUR + MLU ),( Max( CS,CS ) - DS ) ) ) + Min( Min( MUM ,MUM ) ,MLU ) ) / RCSe ) - CS ) )", "obj1": 0.5041666666666667, "obj2": 0.41261682557622237}, {"determining": "( ( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) * Min( CRS ,AMS ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( Max( MUR,MUR ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9125, "obj2": 0.04698685887735648}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / ( MUM / Min( RMSe ,RRSe ) ) ) ) / MUM ) )", "obj1": 0.9104166666666667, "obj2": 0.048711926998637134}, {"determining": "( ( ARS * ( ( Const - ( DDR / Min( FirstVNF_Mem_Server ,BR ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( ( RMSe + MLU ) * DS ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.9854166666666667, "obj2": 0.006440650688269263}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( MUR * MUC ) / ( RMSe + MLU ) ) )", "obj1": 0.98125, "obj2": 0.0081379204226538}, {"determining": "( ( ARS * ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( ( DDR / ACS ) - ( MRS - ACS ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Min( RMSe ,RRSe ) ,RRSe ) ) ) / MUM ) )", "obj1": 0.9083333333333333, "obj2": 0.05137161248198251}, {"determining": "( ( ( Const - ( DDR / ACS ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * Min( CRS ,AMS ) )", "choosing": "Max( MUR,( Max( Max( MUR,MUR ),( Min( RMSe ,RRSe ) * ( ( ( RRSe - RRSe ) + ( MUM / CS ) ) / MUM ) ) ) - CS ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( RRS + AMS ) - ( FirstVNF_CPU_Server - Max( Max( ( DDR - Min( PN ,RRS ) ),( FirstVNF_RAM / Const ) ),MDR ) ) )", "choosing": "( Min( DS ,DS ) + ( DS - Min( ( RCSe * CS ) ,RCSe ) ) )", "obj1": 0.4, "obj2": 0.5155550847050534}, {"determining": "( ( ARS * ( ( Const - ( DDR / ( Max( ( ARS + RRS ),RRS ) - Max( Max( FirstVNF_RAM,FirstVNF_RAM ),ACS ) ) ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) * ( MDR - Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( MLU - ( ( ( MLU - RRSe ) + ( MUM / Min( Max( ( Max( RCSe,RRSe ) * ( RMSe + MLU ) ),MLU ) ,RRSe ) ) ) / ( RMSe + MLU ) ) )", "obj1": 0.9854166666666667, "obj2": 0.006440650688269263}, {"determining": "( ( ( ( AMS - MRS ) / Const ) * ( ( FirstVNF_RAM / ARS ) / MDR ) ) * Min( CRS ,AMS ) )", "choosing": "Max( ( ( Min( RMSe ,( Max( ( RMSe - ( RMSe + CS ) ),RCSe ) + RRSe ) ) - MUR ) + MUM ),( RCSe * Min( MUR ,MUC ) ) )", "obj1": 0.9145833333333333, "obj2": 0.04414952644326033}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,( ( ACS - FirstVNF_RAM_Server ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUR - MLU ) ,( Min( CS ,( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) ) - Max( RMSe,( ( ( DS * MUM ) * ( MLU * RMSe ) ) + MUM ) ) ) ) * Max( ( ( MUR / ( ( Min( MUC ,DS ) / MUM ) - MLU ) ) - MLU ),MUR ) )", "obj1": 0.275, "obj2": 0.5901459627808295}, {"determining": "( ( AMS / ( ( ( RRS - FirstVNF_RAM ) / ACS ) / ( FirstVNF_Mem_Server - CRS ) ) ) + ( FirstVNF_Mem * MRS ) )", "choosing": "Max( ( ( RMSe - RMSe ) / CS ),( ( RCSe / ( MLU * ( RCSe * DS ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( ( Max( ( ARS / MRS ),Max( ACS,( ( AMS - FirstVNF_RAM ) / Max( MRS,CRS ) ) ) ) - ( FirstVNF_CPU - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - Max( ( PN * Max( ( Min( MDR ,( MRS - Const ) ) * Max( CRS,Min( FirstVNF_CPU ,RRS ) ) ),BR ) ),MDR ) ) )", "choosing": "( Min( Min( ( ( RRSe - MUM ) / ( RMSe * MUR ) ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( Max( ( DDR * RRS ),( FirstVNF_Mem + ( Max( ACS,BR ) * FirstVNF_CPU_Server ) ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( RMSe + ( RMSe * MUR ) ) ,Max( CS,( MLU + MUM ) ) ) ,( DS + MUR ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + Const ) * ( AMS - DDR ) ) )", "choosing": "( Min( Min( ( Max( ( ( RCSe + ( MLU + MLU ) ) + MUC ),( MLU + RCSe ) ) - MLU ) ,Max( CS,( MLU + MUM ) ) ) ,( RCSe * MUC ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( AMS / ( Max( ( Min( ( MDR / MRS ) ,FirstVNF_RAM_Server ) - PN ),BR ) + ( ACS * ACS ) ) ) ) + ( AMS - ( ( AMS / ( PN / ( AMS / ( PN / ( FirstVNF_Mem_Server - CRS ) ) ) ) ) + Max( FirstVNF_RAM,( ARS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( ( RCSe + Min( MUR ,MUC ) ) - RRSe ) / CS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,( ( ( PN + FirstVNF_Mem_Server ) - DDR ) - ( RRS + ACS ) ) ) * PN ) * ( ( Const - FirstVNF_Mem_Server ) * Max( ( Max( Min( DDR ,DDR ),FirstVNF_CPU ) - FirstVNF_Mem ),ARS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) * ( ( CS - ( RCSe + MUM ) ) - Max( CS,RCSe ) ) ) * ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + BR ) / Min( BR ,( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - RMSe ) / ( DS * Min( ( ( Min( MUR ,CS ) + CS ) / MUR ) ,Max( MUM,( ( ( CS / RRSe ) + DS ) + RCSe ) ) ) ) ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}]}