{"1": [{"determining": "Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) )", "choosing": "( ( MUR * MUR ) / Min( RRSe ,RCSe ) )", "obj1": 0.38958333333333334, "obj2": 0.5829553581284649}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.4041666666666667, "obj2": 0.529512587500365}, {"determining": "Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem + AMS ) )", "choosing": "( Min( RCSe ,MUM ) - Min( DS ,MUC ) )", "obj1": 0.3458333333333333, "obj2": 0.6105750688873472}, {"determining": "( ( FirstVNF_RAM - MDR ) * ( MRS / PN ) )", "choosing": "( ( DS / MLU ) + ( RMSe + DS ) )", "obj1": 0.46041666666666664, "obj2": 0.49905152499213845}, {"determining": "( ( PN * FirstVNF_CPU ) + ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MDR ) / ( ARS * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RMSe ) + Max( MUC,MUC ) )", "obj1": 0.4, "obj2": 0.5546610854032141}, {"determining": "( Min( FirstVNF_RAM ,AMS ) / ( ACS + MDR ) )", "choosing": "Min( ( MLU / MLU ) ,( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - PN ),Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS + RMSe ),Min( MLU ,MLU ) )", "obj1": 0.4125, "obj2": 0.5765389885944067}, {"determining": "Max( ( FirstVNF_RAM_Server + CRS ),( FirstVNF_Mem + PN ) )", "choosing": "( ( RMSe / MUM ) - ( MUC + MUM ) )", "obj1": 0.37916666666666665, "obj2": 0.5969542922512191}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Const ) )", "choosing": "Max( ( RRSe / MLU ),( DS - MLU ) )", "obj1": 0.3416666666666667, "obj2": 0.6250359607770148}, {"determining": "( Min( AMS ,AMS ) + Min( CRS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MLU,MUM ),Max( MUR,CS ) )", "obj1": 0.2875, "obj2": 0.7242823422998959}, {"determining": "( ( ARS * FirstVNF_RAM ) / ( MRS - MRS ) )", "choosing": "( ( MUR - MUR ) + ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) / Max( FirstVNF_CPU,AMS ) )", "choosing": "( Min( RMSe ,MUM ) + Max( MUM,CS ) )", "obj1": 0.4041666666666667, "obj2": 0.553956417313154}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_RAM ),Min( RRS ,CRS ) )", "choosing": "( ( CS / MLU ) - ( MLU * RCSe ) )", "obj1": 0.325, "obj2": 0.6739838723129752}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( ARS * BR ) )", "choosing": "( ( RCSe * MUR ) - ( RRSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / MUC ) )", "obj1": 0.5020833333333333, "obj2": 0.443149913011169}, {"determining": "( ( Max( ACS,FirstVNF_Mem_Server ) + PN ) * Min( ( DDR + CRS ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( DS ,RMSe ) - ( MUR - MUM ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4, "obj2": 0.5822287400600176}, {"determining": "( Min( ( FirstVNF_Mem / ACS ) ,FirstVNF_Mem ) + ( ( DDR * FirstVNF_RAM ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe * RCSe ) / ( RRSe * MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5966931197980082}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + PN ) / ( MDR / MDR ) ) )", "choosing": "Min( ( MLU * ( CS + CS ) ) ,( RMSe + RMSe ) )", "obj1": 0.4875, "obj2": 0.4870154144890219}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.48541666666666666, "obj2": 0.4479664051459192}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + DS ) * ( CS * DS ) )", "obj1": 0.5541666666666667, "obj2": 0.3911065034493799}, {"determining": "( Min( ( ARS + PN ) ,( RRS * FirstVNF_CPU_Server ) ) + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS / RMSe ) / Min( MUR ,MLU ) ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.3145833333333333, "obj2": 0.6534651523866246}, {"determining": "( ( ( MRS - ACS ) + Min( PN ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,BR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - Max( ARS,Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,RCSe ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "Max( ( ( FirstVNF_CPU * CRS ) - ( RRS - FirstVNF_CPU_Server ) ),Max( ( MDR / ACS ),( AMS * FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe + MLU ) + ( RCSe + CS ) ) - ( ( MUR * MUC ) - ( MUM / RMSe ) ) )", "obj1": 0.44375, "obj2": 0.5245663996405757}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Const ) ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( CS - RRSe ) ) )", "obj1": 0.3229166666666667, "obj2": 0.6540849888203739}, {"determining": "Min( ( MDR / DDR ) ,( FirstVNF_Mem_Server + Const ) )", "choosing": "Min( ( CS + MUC ) ,( ( MUR / CS ) * ( CS - MUR ) ) )", "obj1": 0.30416666666666664, "obj2": 0.7004329239683985}, {"determining": "( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "( ( MUM + ( RCSe - RRSe ) ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 0.38333333333333336, "obj2": 0.5964353974437316}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.48027292190427606}, {"determining": "Min( ( ( Const / ARS ) * ( ACS + FirstVNF_RAM_Server ) ) ,( ( ACS + BR ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS - CS ) + ( MUM / RRSe ) ) / ( Max( MUM,MUR ) / Max( CS,MUM ) ) )", "obj1": 0.33541666666666664, "obj2": 0.6577731768386265}, {"determining": "Min( ( Max( MRS,RRS ) / BR ) ,( PN - BR ) )", "choosing": "( ( MUC * Min( RRSe ,CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,DS ) ) )", "obj1": 0.3729166666666667, "obj2": 0.5985375221544145}, {"determining": "Min( ( Const + FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM / ( ( MLU + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.37916666666666665, "obj2": 0.5503250293100734}, {"determining": "( ( FirstVNF_CPU * PN ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ARS ) + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * Min( AMS ,CRS ) ) ) + Max( ( ( RRS / ARS ) + Max( ARS,FirstVNF_Mem_Server ) ),( Max( Const,FirstVNF_Mem_Server ) - ( PN / Const ) ) ) )", "choosing": "( Max( ( Min( RMSe ,CS ) + ( MUM * DS ) ),Min( Min( MUR ,MUM ) ,( DS / RMSe ) ) ) * ( Min( ( MUM / DS ) ,( MUC - RMSe ) ) / ( Max( MLU,MUR ) * Max( MUC,MLU ) ) ) )", "obj1": 0.39375, "obj2": 0.5844968440658305}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.5138374900122431}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Min( BR ,FirstVNF_CPU ) ) + ( ( ( Const * CRS ) / ARS ) + Const ) )", "choosing": "( ( ( Min( DS ,CS ) / Min( MUC ,RRSe ) ) - ( ( MLU + RCSe ) - ( RMSe * CS ) ) ) / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM * MUC ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.3416666666666667, "obj2": 0.6634348435641159}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( ( MUM / MLU ) + Min( MUM ,RRSe ) ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - DS ) ) ) )", "obj1": 0.34375, "obj2": 0.6493201465217736}, {"determining": "( ( ( ( MRS - MRS ) * ( DDR + Const ) ) - ( ( FirstVNF_Mem_Server + Const ) * Min( ARS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) )", "choosing": "Max( ( MUR + ( MUM + Min( MLU ,MUR ) ) ),( RRSe + MUR ) )", "obj1": 0.42083333333333334, "obj2": 0.5313042965764119}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / CS ) ) ) )", "obj1": 0.525, "obj2": 0.41314859807024856}, {"determining": "Max( ( MRS / ( FirstVNF_CPU + ( DDR / ACS ) ) ),( MRS * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( ( CS * RCSe ),Max( MUM,MUM ) ),Max( ( CS - MUC ),( RCSe / MUM ) ) ),Max( Min( ( MUR * MLU ) ,( RCSe + MUR ) ),( Max( DS,DS ) + ( RMSe + CS ) ) ) )", "obj1": 0.46875, "obj2": 0.49259052609960013}], "2": [{"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_CPU ) + ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( CRS,CRS ),( DDR / Const ) )", "choosing": "( ( ( Min( ( ( ( Min( RCSe ,MLU ) * ( MUR + RRSe ) ) - Max( ( CS / MUC ),Min( MLU ,DS ) ) ) - ( ( ( MUM - MLU ) / ( DS / MUR ) ) / Max( ( MUM - RMSe ),( CS - DS ) ) ) ) ,( ( Max( ( RRSe - RCSe ),Min( MUR ,MUR ) ) - ( Max( MLU,MLU ) - ( DS / MUC ) ) ) + ( ( Max( RRSe,RRSe ) + ( MUM - RCSe ) ) * ( ( MLU - RCSe ) / ( MUC + CS ) ) ) ) ) * Min( ( ( Max( ( DS / DS ),( RRSe / RCSe ) ) - ( Max( CS,CS ) + ( MUC + RRSe ) ) ) + ( Max( ( RMSe + RCSe ),( MLU + RCSe ) ) / ( ( MUR - MUM ) / ( RRSe / RCSe ) ) ) ) ,( ( ( Max( MUR,MUR ) * Min( DS ,MUM ) ) / ( ( RCSe * RMSe ) / ( MLU / MUM ) ) ) - ( ( ( DS / MLU ) - ( MUM - MUC ) ) + ( ( DS + DS ) - ( RRSe + MUC ) ) ) ) ) ) - Min( ( ( ( ( Max( RRSe,MUC ) * ( RMSe + DS ) ) / ( Min( MUC ,MLU ) + Min( MLU ,MUR ) ) ) - Min( Max( ( MUM + RMSe ),( MUC + MUR ) ) ,Min( ( CS * MUM ) ,Max( MUR,RMSe ) ) ) ) / Max( ( Max( Max( MUC,RCSe ),( RCSe + RRSe ) ) * ( Min( RRSe ,RMSe ) / Min( MLU ,RCSe ) ) ),( ( ( RCSe + RMSe ) + Max( MUC,RMSe ) ) / ( ( RRSe * MLU ) + Max( MUC,MUC ) ) ) ) ) ,Min( ( ( ( ( RRSe / RCSe ) / ( MUC + MLU ) ) + Max( ( MLU - RMSe ),( MUC / RRSe ) ) ) * Min( ( Max( CS,RCSe ) * Max( CS,DS ) ) ,Max( ( CS * RMSe ),( CS * RRSe ) ) ) ) ,( ( Max( ( DS / RCSe ),( RCSe - RRSe ) ) - ( ( MUM + RRSe ) / Min( DS ,DS ) ) ) - ( ( ( RMSe + MUM ) * ( CS / MUR ) ) + Max( Max( DS,RMSe ),Min( RMSe ,MLU ) ) ) ) ) ) ) - Max( Min( ( Max( ( ( ( RMSe * MLU ) - Max( MUC,RMSe ) ) - Min( ( MUM * MUC ) ,( CS * DS ) ) ),( ( ( DS - CS ) * ( RRSe - DS ) ) + ( ( CS / MUR ) + ( CS / RRSe ) ) ) ) * Min( ( Min( ( MUC * MUM ) ,( RRSe / MLU ) ) / ( ( MUM * DS ) + ( MUC * MLU ) ) ) ,( ( Max( CS,MUM ) / ( RRSe / RRSe ) ) + ( ( MUR * MUR ) - ( CS + DS ) ) ) ) ) ,Max( ( Max( Max( ( RRSe * MUC ),Min( RCSe ,RMSe ) ),( ( MUR - MLU ) - ( RRSe * MUR ) ) ) - Max( ( ( MLU * DS ) - Min( MUM ,MLU ) ),( Max( MUC,MUM ) / Min( MUM ,RCSe ) ) ) ),( ( ( ( DS - MLU ) + ( RCSe / MLU ) ) + Max( Max( DS,MUC ),( MLU * CS ) ) ) * Min( ( ( MUM - RCSe ) * ( DS + MUC ) ) ,( ( MUC + DS ) - ( MLU + MUC ) ) ) ) ) ),( ( ( ( Min( Max( MUC,RMSe ) ,Min( RCSe ,CS ) ) / ( ( RCSe / RCSe ) - ( RMSe + MLU ) ) ) + ( Min( ( MUR * RRSe ) ,( DS / MUM ) ) * ( ( RMSe / MUC ) - Max( MLU,MUR ) ) ) ) * ( ( ( ( MUM + DS ) + Max( MLU,MUR ) ) * ( ( RRSe + MUC ) * ( MUC - RMSe ) ) ) + ( ( ( RMSe * RRSe ) - ( CS + DS ) ) / Max( Min( RRSe ,MUM ),( MUC + MLU ) ) ) ) ) / ( ( ( ( ( RRSe + DS ) * ( CS / MUM ) ) * Min( ( MUM + DS ) ,( RRSe * MUM ) ) ) + Min( ( ( MUR * MUM ) / ( CS + MUR ) ) ,( ( MLU / CS ) / ( MUM / RCSe ) ) ) ) / ( ( ( Max( RCSe,DS ) / ( MUR / MUC ) ) / ( ( CS / CS ) - ( RRSe * RRSe ) ) ) / Min( Max( ( RCSe - RMSe ),( MUM * MUR ) ) ,( ( RMSe * MLU ) - ( RMSe * MUM ) ) ) ) ) ) ) )", "obj1": 0.25416666666666665, "obj2": 0.691226148632274}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( Max( ( MDR / ACS ),( AMS * FirstVNF_RAM ) ) + Const ) )", "choosing": "Max( Min( ( CS * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,MUR ) + Min( MUC ,RCSe ) ) )", "obj1": 0.7020833333333333, "obj2": 0.2755896921803864}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - Max( ARS,Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,RCSe ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.32900824128764217}, {"determining": "( ( MRS + MDR ) * ( FirstVNF_Mem_Server + DDR ) )", "choosing": "( ( CS + ( Min( DS ,RMSe ) + ( CS * MUR ) ) ) / ( RCSe + RCSe ) )", "obj1": 0.2604166666666667, "obj2": 0.6412920667307512}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.65625, "obj2": 0.3046559620271694}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "( ( ( RRSe + MLU ) + ( RCSe + CS ) ) - Max( ( MUR * MUC ),( MUM / RMSe ) ) )", "obj1": 0.91875, "obj2": 0.09385705156742306}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "Min( ( Const + FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM / ( ( MLU + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.37916666666666665, "obj2": 0.5503250293100734}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "Min( ( Min( Min( ( Max( Max( ( FirstVNF_Mem - MDR ),( ARS / BR ) ),( ( FirstVNF_Mem_Server + MRS ) * ( FirstVNF_CPU_Server + RRS ) ) ) - Min( Max( ( RRS / FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ,( ( ( ( RRS / ACS ) + Max( MRS,AMS ) ) - ( Max( FirstVNF_RAM,CRS ) / ( MDR + FirstVNF_RAM_Server ) ) ) - ( ( ( DDR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server + CRS ) ) - ( Max( ARS,CRS ) - Max( MDR,FirstVNF_Mem ) ) ) ) ) ,( ( ( ( ( PN + FirstVNF_RAM_Server ) - ( ARS * ACS ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( MDR * CRS ) ) ) / Min( ( Min( MDR ,CRS ) - Max( ARS,BR ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Min( MDR ,ACS ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server / Const ) + Min( DDR ,FirstVNF_RAM ) ),( ( FirstVNF_CPU_Server + BR ) + Min( CRS ,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM + AMS ) - ( FirstVNF_RAM_Server + MDR ) ) / Max( ( BR / ARS ),( ACS - BR ) ) ) ) ) ) + ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( ACS * FirstVNF_Mem ) ) - ( ( FirstVNF_CPU - DDR ) + ( MDR + RRS ) ) ) - ( ( ( ARS + MDR ) / Max( AMS,ARS ) ) + Max( Min( AMS ,MRS ),( PN - FirstVNF_CPU ) ) ) ) + ( ( Min( ( FirstVNF_RAM / MRS ) ,( ARS - ACS ) ) * Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + ( Max( Max( DDR,FirstVNF_Mem ),( RRS + CRS ) ) / ( Max( AMS,FirstVNF_CPU ) + ( MDR / FirstVNF_CPU ) ) ) ) ) - ( ( ( ( ( MRS / FirstVNF_CPU_Server ) * ( MDR / ARS ) ) / ( ( DDR - Const ) + ( MDR + MDR ) ) ) - Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( ( MDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,MDR ) ) ) ) - ( ( ( ( MDR * FirstVNF_Mem ) / ( FirstVNF_CPU + MRS ) ) * Max( Max( BR,DDR ),( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - DDR ) ),( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_CPU_Server * MDR ) ) ) ) ) ) ) ,( Max( Max( ( Min( ( ( MDR / PN ) * ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ,Min( ( PN + FirstVNF_RAM_Server ) ,( AMS / MRS ) ) ) - Min( Max( ( Const * FirstVNF_CPU ),( FirstVNF_CPU_Server * Const ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( PN + ACS ) ) ) ),( Max( ( ( BR - BR ) - Max( FirstVNF_CPU_Server,MDR ) ),Max( ( FirstVNF_Mem_Server / Const ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Min( ( ( DDR + FirstVNF_CPU_Server ) / ( CRS * Const ) ) ,( ( FirstVNF_RAM + MDR ) / Min( AMS ,CRS ) ) ) ) ),( Min( ( Max( ( FirstVNF_Mem / CRS ),( MRS - DDR ) ) + ( ( FirstVNF_RAM_Server / MRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ,( ( ( PN - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( DDR,BR ) - Min( CRS ,ARS ) ) ) ) * Min( ( ( Max( Const,ACS ) + ( FirstVNF_Mem_Server * MRS ) ) * ( ( DDR / ACS ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ,( ( Max( RRS,PN ) / ( RRS * Const ) ) * ( ( FirstVNF_Mem * BR ) - ( RRS - CRS ) ) ) ) ) ) / ( Max( Max( Max( Min( ( ACS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * PN ) ),( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_RAM_Server ) ) ),( Min( ( ACS * DDR ) ,( Const * ACS ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * Max( ARS,FirstVNF_RAM ) ) ) ),Min( ( Max( ( MDR / RRS ),Min( DDR ,ARS ) ) / ( ( RRS + CRS ) + Max( ACS,ACS ) ) ) ,( ( ( CRS - FirstVNF_Mem ) + ( RRS / Const ) ) + Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ) / Min( ( ( ( Max( ACS,Const ) - Min( ARS ,MDR ) ) - ( ( MRS + BR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) * ( ( ( MRS * FirstVNF_CPU_Server ) / ( PN - MRS ) ) / ( ( FirstVNF_RAM_Server / DDR ) / ( PN / FirstVNF_CPU ) ) ) ) ,Max( ( ( ( FirstVNF_CPU / RRS ) + ( BR - FirstVNF_CPU_Server ) ) - Max( ( RRS - ACS ),( MDR * AMS ) ) ),Max( ( Min( Const ,FirstVNF_Mem_Server ) - ( MRS - FirstVNF_RAM ) ),( Min( RRS ,FirstVNF_RAM_Server ) / ( ARS - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUM + RRSe ),Min( ( RMSe - ( Max( ( DS / ( Min( DS ,RRSe ) * MLU ) ),RCSe ) * ( ( RMSe + CS ) * MLU ) ) ) ,MUM ) )", "obj1": 0.9979166666666667, "obj2": 0.0025597894154224185}, {"determining": "( ( ( ( ( Min( ( ( AMS / FirstVNF_Mem_Server ) + ( ACS - FirstVNF_RAM_Server ) ) ,( Max( Const,Const ) * Max( BR,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server - PN ) ) ) ) / Max( ( Min( ( FirstVNF_RAM_Server * DDR ) ,( ARS - MDR ) ) - Min( Min( FirstVNF_Mem_Server ,BR ) ,( FirstVNF_RAM - DDR ) ) ),( Max( ( FirstVNF_RAM - MRS ),( ACS + MDR ) ) + ( ( PN * Const ) / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) / ( ( Max( ( ( DDR - DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( MRS / AMS ) ) + ( ( FirstVNF_RAM - Const ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) / ( ( ( ( RRS / CRS ) * ( MDR + AMS ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_Mem - CRS ),( ACS - FirstVNF_Mem_Server ) ) - ( ( BR / CRS ) + ( DDR * ACS ) ) ) ) ) ) - Max( Max( Min( ( Max( ( ACS * PN ),( BR - FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server * ACS ) * ( ACS * FirstVNF_Mem_Server ) ) ) ,( Max( ( DDR / ARS ),( FirstVNF_CPU - BR ) ) / ( Min( FirstVNF_RAM_Server ,BR ) - Max( CRS,BR ) ) ) ),( ( ( Min( Const ,FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / Max( Max( DDR,MRS ),( FirstVNF_RAM_Server * AMS ) ) ) - ( ( Max( PN,Const ) - Max( MDR,FirstVNF_CPU_Server ) ) * Max( ( AMS / BR ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ),( ( ( Min( ( BR - DDR ) ,Max( DDR,BR ) ) * ( ( FirstVNF_RAM / AMS ) - ( AMS / MRS ) ) ) - ( ( ( AMS - PN ) / Max( RRS,FirstVNF_RAM_Server ) ) - Min( Max( BR,FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) / Min( ( ( ( FirstVNF_CPU / ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) + Min( ( BR / FirstVNF_Mem ) ,( BR / Const ) ) ) ,( ( ( DDR - DDR ) + ( BR * RRS ) ) * ( ( BR - ARS ) - Max( MRS,RRS ) ) ) ) ) ) ) / Min( ( Max( ( ( ( ( AMS + FirstVNF_CPU ) / ( FirstVNF_RAM - AMS ) ) + ( ( MDR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ACS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,PN ) * ( ACS * DDR ) ),( ( FirstVNF_CPU / PN ) / ( RRS - CRS ) ) ) ),Min( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - ARS ) ) + ( ( FirstVNF_Mem_Server * MRS ) / Max( PN,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * Min( DDR ,MRS ) ) + Max( ( ACS - FirstVNF_Mem_Server ),( FirstVNF_CPU * ACS ) ) ) ) ) * Min( ( ( Max( ( BR / PN ),( ARS + FirstVNF_RAM_Server ) ) / Min( ( BR - DDR ) ,Max( MRS,BR ) ) ) - ( Max( ( Const - FirstVNF_RAM ),( FirstVNF_CPU / ARS ) ) + ( ( AMS * BR ) / ( BR * BR ) ) ) ) ,( ( Max( ( RRS + FirstVNF_Mem_Server ),( MRS / ACS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( AMS - PN ) ) ) - ( ( ( FirstVNF_Mem_Server * MDR ) - ( ACS * RRS ) ) / ( Min( AMS ,BR ) - Max( AMS,FirstVNF_RAM ) ) ) ) ) ) ,Min( Max( ( ( Min( ( Const / FirstVNF_Mem_Server ) ,( MDR / MRS ) ) * ( ( MRS + FirstVNF_CPU ) * ( RRS * PN ) ) ) / ( ( Max( Const,DDR ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( BR / FirstVNF_RAM ) + ( AMS / AMS ) ) ) ),Max( ( ( ( FirstVNF_Mem_Server - Const ) + Min( MDR ,BR ) ) - ( ( PN + Const ) - Min( FirstVNF_CPU_Server ,RRS ) ) ),Max( ( Max( AMS,BR ) * ( MRS + FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ) ,( ( ( ( ( AMS - FirstVNF_CPU_Server ) - ( AMS + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,DDR ) ) ) - Max( ( Max( FirstVNF_Mem_Server,DDR ) * ( FirstVNF_CPU + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server / MRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + ( ( ( Max( AMS,DDR ) - ( MRS - Const ) ) * ( Min( AMS ,ACS ) - ( ARS / FirstVNF_CPU_Server ) ) ) - Max( Max( Max( AMS,MDR ),( AMS / FirstVNF_CPU ) ),( ( ACS - DDR ) * ( AMS / AMS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe - CS ) + ( RRSe / Max( ( MUM + MLU ),RCSe ) ) )", "obj1": 0.45416666666666666, "obj2": 0.47461667779694894}, {"determining": "( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.4130374801348067}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.48541666666666666, "obj2": 0.4479664051459192}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( MUM * DS ) )", "obj1": 0.5229166666666667, "obj2": 0.40507103113800663}, {"determining": "( Min( FirstVNF_CPU ,MRS ) / ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RMSe * RMSe ) + ( MUM - MUR ) )", "obj1": 0.41458333333333336, "obj2": 0.520899060776705}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "Min( ( Const * FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM * ( ( MLU + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5668490155052196}, {"determining": "Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),( FirstVNF_Mem + AMS ) )", "choosing": "( Min( RCSe ,MUR ) - Min( DS ,MUC ) )", "obj1": 0.30833333333333335, "obj2": 0.6300057003906921}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + DS ) )", "obj1": 0.4979166666666667, "obj2": 0.440028971018656}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ACS + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * ( ( MLU + MLU ) - ( DS * MUR ) ) ) ) / Min( RCSe ,MUC ) )", "obj1": 0.34791666666666665, "obj2": 0.5763319707392582}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( Max( DDR,RRS ) / BR ) ,( PN - BR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUC * Min( RRSe ,CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5770793495366977}, {"determining": "( Min( FirstVNF_RAM ,MDR ) / ( ARS * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RMSe ) + Max( MUC,MUC ) )", "obj1": 0.3854166666666667, "obj2": 0.5667720214002763}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.4625, "obj2": 0.4724518185807227}, {"determining": "( ( BR - DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / CS ) / ( CS - RRSe ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "( Min( FirstVNF_RAM ,AMS ) / ( ACS + MDR ) )", "choosing": "Min( ( MLU / MLU ) ,( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * FirstVNF_RAM ) / ( MRS - MRS ) )", "choosing": "( ( MUR - MUR ) + ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( ARS * BR ) )", "choosing": "( ( RCSe * MUR ) - ( RRSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ACS ) + Min( PN ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,BR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( Min( ( Max( ( Max( ( Max( MDR,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( CRS ,ACS ) ,Min( PN ,ACS ) ) ) * ( Min( Max( BR,RRS ) ,( FirstVNF_CPU_Server * RRS ) ) - Max( ( DDR * FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,Const ) ) ) ),( ( ( Min( MDR ,RRS ) / ( MRS * FirstVNF_Mem ) ) / ( ( PN + FirstVNF_CPU ) / ( ACS - BR ) ) ) - ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + ARS ) ) / Max( ( AMS + ARS ),( ARS / FirstVNF_RAM ) ) ) ) ) * Max( Max( ( ( Max( MDR,DDR ) * ( ACS * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,DDR ) + ( FirstVNF_RAM - ARS ) ) ),Min( ( ( FirstVNF_Mem * MDR ) / Max( RRS,ARS ) ) ,Max( ( CRS + DDR ),Min( FirstVNF_Mem ,MRS ) ) ) ),( ( ( ( MDR + FirstVNF_RAM ) * Min( DDR ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM + MRS ) * ( PN * FirstVNF_RAM_Server ) ) ) * ( ( ( ARS * MDR ) / ( MRS + CRS ) ) - ( Min( FirstVNF_RAM ,MRS ) / ( AMS / FirstVNF_RAM_Server ) ) ) ) ) ) ,( ( Max( ( Max( ( MDR + Const ),( ACS + MRS ) ) + ( Min( Const ,FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,MDR ) ) ),( ( Min( ARS ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) / ( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server * Const ) ) ) ) + Max( ( ( ( PN - ACS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server - MRS ) + Max( PN,FirstVNF_CPU ) ) ),( ( ( RRS - AMS ) - Min( BR ,FirstVNF_Mem_Server ) ) + ( ( MRS * MRS ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( Max( ( ( FirstVNF_Mem / ACS ) / Min( ACS ,BR ) ),Max( ( DDR * MDR ),Max( FirstVNF_Mem,MDR ) ) ) + ( ( Min( PN ,Const ) * Max( MDR,FirstVNF_CPU_Server ) ) + ( Min( FirstVNF_CPU_Server ,PN ) * ( RRS + AMS ) ) ) ) / ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,RRS ) ) - ( ( PN * Const ) / Max( FirstVNF_CPU_Server,ACS ) ) ) / ( ( Min( FirstVNF_CPU_Server ,MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * PN ) / Max( FirstVNF_CPU_Server,ACS ) ) ) ) ) ) ) ,( ( Min( Min( Max( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_RAM + CRS ) ),Min( ( FirstVNF_Mem / CRS ) ,( BR * CRS ) ) ) ,Max( ( ( CRS * FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( FirstVNF_CPU - FirstVNF_Mem ) * ( Const + FirstVNF_CPU ) ) ) ) ,( ( Max( Max( PN,ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * Max( CRS,FirstVNF_Mem ) ) ) * Max( Min( Min( Const ,FirstVNF_RAM_Server ) ,( DDR - FirstVNF_Mem ) ),( ( RRS * CRS ) - ( ACS / PN ) ) ) ) ) * ( Min( Min( ( ( ACS * ACS ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( DDR / BR ) ) ) ,Max( ( ( MRS + CRS ) / Max( MDR,MDR ) ),( Max( FirstVNF_CPU,PN ) - ( FirstVNF_RAM * AMS ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( FirstVNF_RAM * RRS ) ) ,( ( BR + FirstVNF_CPU ) - ( Const / Const ) ) ) * ( Max( ( Const - FirstVNF_CPU ),Min( MRS ,MRS ) ) * Min( Min( RRS ,FirstVNF_RAM_Server ) ,( BR + DDR ) ) ) ) ) ) - Max( ( ( ( ( ( CRS / CRS ) - ( DDR * AMS ) ) + ( Min( BR ,ACS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ( MDR + ARS ) ) + ( ( CRS - FirstVNF_RAM ) / ( CRS + MDR ) ) ) ) + Min( ( ( Max( BR,FirstVNF_CPU ) * Max( ARS,FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ,( Min( ( BR * Const ) ,( CRS / FirstVNF_RAM ) ) - ( ( BR - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,CRS ) ) ) ) ),( ( ( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU - CRS ) ) + ( ( MDR - PN ) + ( Const - BR ) ) ) * Min( ( ( PN / MDR ) / ( MRS * RRS ) ) ,Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( MRS / RRS ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server + AMS ) - Min( FirstVNF_Mem_Server ,DDR ) ) + ( ( PN * ARS ) - ( FirstVNF_CPU_Server - DDR ) ) ) - ( Min( ( PN + CRS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( MDR ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Max( Min( ( ( Max( ( MUR / RMSe ),Min( DS ,DS ) ) / Min( Min( CS ,RRSe ) ,Max( MUR,DS ) ) ) - ( ( ( RMSe + MUM ) * Min( RMSe ,MUC ) ) - ( ( MLU * CS ) - ( MUR - MUR ) ) ) ) ,Max( ( Max( ( RMSe + DS ),( RCSe * RMSe ) ) / ( ( RRSe * RCSe ) - ( MUR + MUC ) ) ),Max( ( ( MUM * RMSe ) - Max( RCSe,DS ) ),( Min( RMSe ,MUR ) / Min( CS ,MUC ) ) ) ) ),Min( Min( Max( ( ( DS / MLU ) / ( MUC * CS ) ),( ( DS * DS ) / ( MUC + MUC ) ) ) ,Max( ( ( MUC - MUC ) / Max( MUM,RRSe ) ),Min( Max( RCSe,RMSe ) ,( RRSe / MLU ) ) ) ) ,Min( ( ( ( RMSe + MUM ) - ( MUR - MUR ) ) + ( ( MUC - MLU ) * ( MUM * RCSe ) ) ) ,( ( ( RCSe / MLU ) * Min( DS ,DS ) ) * ( ( MUM / RMSe ) / ( RRSe + MUC ) ) ) ) ) ) / ( Min( Min( ( Max( Min( MUR ,MUR ),( MUR * DS ) ) + ( ( RCSe - RMSe ) - ( RCSe + DS ) ) ) ,Max( ( ( RRSe * MLU ) + Min( DS ,DS ) ),( ( RMSe * RMSe ) + ( MLU * MUC ) ) ) ) ,( Min( Max( ( RRSe - CS ),( MUC - MUR ) ) ,( ( DS + MUR ) * Min( RRSe ,CS ) ) ) * ( Min( Min( RRSe ,MLU ) ,( MUR * MUR ) ) + Min( ( DS / RMSe ) ,( MUM * MUC ) ) ) ) ) / Min( Max( Min( ( Max( MUR,MUC ) + ( RCSe / CS ) ) ,( ( DS - RCSe ) + ( RRSe / MLU ) ) ),Max( ( ( RCSe - MUM ) * ( MUR / MLU ) ),( ( RCSe - MUR ) / ( MUR * DS ) ) ) ) ,( ( ( Max( RMSe,RMSe ) * Max( MUC,RMSe ) ) / ( ( MLU + MUC ) * ( RRSe - MUC ) ) ) / ( Min( ( RCSe + RCSe ) ,( MUR * DS ) ) * ( ( MUC * MLU ) * ( DS / RCSe ) ) ) ) ) ) ) - Min( ( Max( ( ( ( Max( MUM,MUM ) * Min( RMSe ,RRSe ) ) + ( ( MLU / RCSe ) - ( MUM + MUM ) ) ) / ( ( ( MUM + CS ) - ( MLU * RCSe ) ) * Min( ( CS / MLU ) ,( MUR * MLU ) ) ) ),Max( Max( ( ( RCSe - MUC ) + ( CS + RCSe ) ),( ( MLU + MUC ) + ( MUC - DS ) ) ),Min( ( ( MUR * MUC ) - Max( MUR,MUR ) ) ,Max( Min( CS ,DS ),( MUC + MUC ) ) ) ) ) - Max( ( Max( ( Min( RCSe ,RMSe ) / ( RCSe + CS ) ),( Max( MLU,MUM ) / ( DS - RRSe ) ) ) / Max( Min( ( CS * MUR ) ,( RRSe * DS ) ),Max( ( MUC + RCSe ),Min( RRSe ,RMSe ) ) ) ),Min( Max( ( ( MUM + CS ) - Max( MUR,RCSe ) ),( ( RRSe / MUR ) / ( MLU - MLU ) ) ) ,( Min( ( RCSe / CS ) ,( RRSe - RMSe ) ) + ( ( MLU - MUR ) / ( RRSe + MUC ) ) ) ) ) ) ,( Min( Min( Max( ( ( RCSe / RMSe ) / ( MUM - MLU ) ),( ( CS / RRSe ) - ( RMSe * MUM ) ) ) ,( ( ( MUM * DS ) / ( MLU * MLU ) ) / ( Max( MUC,MLU ) - ( DS + MUC ) ) ) ) ,( ( ( ( CS * DS ) * ( MUM - MUM ) ) + ( ( MUR + DS ) - Max( RMSe,DS ) ) ) - ( ( ( MUC + DS ) - Max( MUR,RCSe ) ) + Max( Max( DS,MLU ),Max( RCSe,MUC ) ) ) ) ) + ( ( ( ( Max( RRSe,RMSe ) / ( MUR + MUM ) ) / ( ( RRSe - MLU ) + ( RMSe * MUC ) ) ) / Min( Min( ( RCSe - MUM ) ,( RCSe / DS ) ) ,( ( RCSe + MUC ) - ( MLU * RMSe ) ) ) ) + ( ( ( ( MUR + MUC ) - ( MUR - MLU ) ) / ( ( RMSe + CS ) / Min( CS ,RMSe ) ) ) * ( Min( ( MUC + MUR ) ,Max( RCSe,DS ) ) - ( ( MUR + CS ) / Min( MUR ,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( Max( ( ( ( Max( Min( ( Const - PN ) ,( BR * DDR ) ),( Max( MRS,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * BR ) ) ) - ( ( Max( FirstVNF_RAM_Server,ARS ) * ( ARS / MDR ) ) * ( ( FirstVNF_CPU / DDR ) + ( PN - FirstVNF_Mem ) ) ) ) * ( ( ( ( MRS - ACS ) * Max( BR,FirstVNF_Mem ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server / MDR ) ) ) - ( Min( ( BR * BR ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) ) / Max( ( ( Min( ( Const - MRS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - ( ( AMS + FirstVNF_Mem_Server ) * ( RRS / FirstVNF_RAM ) ) ) * Max( ( ( Const + PN ) - ( MDR / FirstVNF_CPU ) ),( Min( PN ,PN ) * ( CRS + DDR ) ) ) ),( ( ( Max( FirstVNF_Mem_Server,Const ) + ( FirstVNF_RAM_Server - MDR ) ) + ( Min( FirstVNF_CPU ,Const ) * ( DDR - PN ) ) ) * Max( ( ( FirstVNF_CPU / PN ) + Max( ACS,RRS ) ),Min( ( RRS / FirstVNF_RAM ) ,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) ) ),Min( ( ( Min( ( ( RRS + FirstVNF_Mem ) * ( BR + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server - ACS ) ,Min( BR ,BR ) ) ) / ( ( ( CRS + AMS ) * Min( ARS ,BR ) ) - Max( Min( ARS ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + BR ) ) ) ) + Min( ( ( ( CRS - MDR ) / ( Const - DDR ) ) - ( Max( FirstVNF_Mem_Server,RRS ) / ( MRS / ARS ) ) ) ,( ( Min( MDR ,MRS ) + ( MDR / FirstVNF_Mem_Server ) ) * ( ( PN - FirstVNF_RAM ) - Min( ACS ,MDR ) ) ) ) ) ,Max( Min( Max( ( ( RRS * Const ) + ( BR / FirstVNF_Mem_Server ) ),Min( ( BR * Const ) ,Min( DDR ,MRS ) ) ) ,Min( Min( ( ACS * AMS ) ,( RRS + ACS ) ) ,Max( ( MDR + MDR ),( RRS + FirstVNF_RAM ) ) ) ),Max( ( ( ( BR + ACS ) * ( MRS + BR ) ) * Max( ( AMS - PN ),Max( BR,FirstVNF_Mem_Server ) ) ),( Min( ( CRS - FirstVNF_CPU ) ,Min( PN ,Const ) ) - ( Min( PN ,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ) ) - ( Max( Min( ( ( Min( Max( Const,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) * ( Min( AMS ,FirstVNF_CPU ) - ( AMS / FirstVNF_Mem_Server ) ) ) - Min( ( Min( MRS ,ARS ) + ( AMS / FirstVNF_Mem ) ) ,Max( ( MDR - Const ),( FirstVNF_Mem_Server + MDR ) ) ) ) ,( Max( Max( Min( ARS ,RRS ),Min( FirstVNF_Mem ,BR ) ),( Max( FirstVNF_CPU_Server,Const ) * ( Const * FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_RAM / RRS ) + ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( Max( CRS,FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,CRS ) ) ) ) ),Max( ( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * BR ) ) ,( ( FirstVNF_RAM_Server * PN ) / Max( DDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + ( MDR * ACS ) ) + Max( Max( CRS,CRS ),Max( RRS,PN ) ) ) ),( Min( ( ( BR + DDR ) * Min( MDR ,CRS ) ) ,( Min( FirstVNF_RAM_Server ,CRS ) * Max( AMS,FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_RAM_Server - ACS ) * ( RRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( Const / MRS ) ) ) ) ) ) / Min( ( ( ( ( Max( BR,BR ) + ( CRS * CRS ) ) + ( Min( PN ,PN ) - Min( CRS ,FirstVNF_Mem ) ) ) + ( ( Max( PN,MDR ) + ( DDR * BR ) ) + ( Max( ARS,CRS ) * Min( AMS ,RRS ) ) ) ) + ( Min( ( Min( FirstVNF_RAM ,MRS ) * ( BR / ARS ) ) ,( Max( RRS,PN ) * Max( FirstVNF_RAM_Server,Const ) ) ) - ( ( Max( ARS,CRS ) * ( FirstVNF_Mem / RRS ) ) - Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * MDR ) ) ) ) ) ,Min( ( ( ( ( MRS / ACS ) / Min( FirstVNF_Mem_Server ,PN ) ) * Min( Max( BR,BR ) ,( DDR * ACS ) ) ) / Max( Max( ( CRS * DDR ),Max( FirstVNF_Mem,ACS ) ),Min( ( PN + FirstVNF_CPU ) ,( Const * FirstVNF_Mem_Server ) ) ) ) ,Min( ( ( ( RRS + MDR ) / Max( PN,FirstVNF_CPU_Server ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Max( CRS,MDR ) ) ) ,( ( Min( FirstVNF_Mem_Server ,Const ) / ( AMS - MRS ) ) / ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / Min( FirstVNF_CPU ,BR ) ) ) ) ) ) ) )", "choosing": "( ( DS * MUC ) + ( ( Max( Max( ( ( Min( RCSe ,RCSe ) - RCSe ) + RMSe ),RMSe ),( ( Min( RRSe ,MUC ) + MUM ) / MUC ) ) + MUR ) + ( MUC * ( RCSe + MUC ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.26673181688346087}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - Max( ARS,Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,RCSe ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.32900824128764217}, {"determining": "( CRS + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5833333333333334, "obj2": 0.36173599655443917}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.65625, "obj2": 0.3046559620271694}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "( ( ( RRSe + MLU ) + ( RCSe + CS ) ) - Max( ( MUR * MUC ),( MUM / RMSe ) ) )", "obj1": 0.91875, "obj2": 0.09385705156742306}, {"determining": "Min( ( Const + FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM / ( ( MLU + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.37916666666666665, "obj2": 0.5503250293100734}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "Min( ( Min( Min( ( Max( Max( ( FirstVNF_Mem - MDR ),( ARS / BR ) ),( ( FirstVNF_Mem_Server + MRS ) * ( FirstVNF_CPU_Server + RRS ) ) ) - Min( Max( ( RRS / FirstVNF_Mem ),( MRS - FirstVNF_RAM_Server ) ) ,( ( AMS / FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ,( ( ( ( RRS / ACS ) + Max( MRS,AMS ) ) - ( Max( FirstVNF_RAM,CRS ) / ( MDR + FirstVNF_RAM_Server ) ) ) - ( ( ( DDR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server + CRS ) ) - ( Max( ARS,CRS ) - Max( MDR,FirstVNF_Mem ) ) ) ) ) ,( ( ( ( ( PN + FirstVNF_RAM_Server ) - ( ARS * ACS ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( MDR * CRS ) ) ) / Min( ( Min( MDR ,CRS ) - Max( ARS,BR ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Min( MDR ,ACS ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server / Const ) + Min( DDR ,FirstVNF_RAM ) ),( ( FirstVNF_CPU_Server + BR ) + Min( CRS ,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM + AMS ) - ( FirstVNF_RAM_Server + MDR ) ) / Max( ( BR / ARS ),( ACS - BR ) ) ) ) ) ) + ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( ACS * FirstVNF_Mem ) ) - ( ( FirstVNF_CPU - DDR ) + ( MDR + RRS ) ) ) - ( ( ( ARS + MDR ) / Max( AMS,ARS ) ) + Max( Min( AMS ,MRS ),( PN - FirstVNF_CPU ) ) ) ) + ( ( Min( ( FirstVNF_RAM / MRS ) ,( ARS - ACS ) ) * Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + ( Max( Max( DDR,FirstVNF_Mem ),( RRS + CRS ) ) / ( Max( AMS,FirstVNF_CPU ) + ( MDR / FirstVNF_CPU ) ) ) ) ) - ( ( ( ( ( MRS / FirstVNF_CPU_Server ) * ( MDR / ARS ) ) / ( ( DDR - Const ) + ( MDR + MDR ) ) ) - Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( ( MDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,MDR ) ) ) ) - ( ( ( ( MDR * FirstVNF_Mem ) / ( FirstVNF_CPU + MRS ) ) * Max( Max( BR,DDR ),( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - DDR ) ),( ( FirstVNF_Mem_Server + RRS ) + ( FirstVNF_CPU_Server * MDR ) ) ) ) ) ) ) ,( Max( Max( ( Min( ( ( MDR / PN ) * ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ,Min( ( PN + FirstVNF_RAM_Server ) ,( AMS / MRS ) ) ) - Min( Max( ( Const * FirstVNF_CPU ),( FirstVNF_CPU_Server * Const ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( PN + ACS ) ) ) ),( Max( ( ( BR - BR ) - Max( FirstVNF_CPU_Server,MDR ) ),Max( ( FirstVNF_Mem_Server / Const ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + Min( ( ( DDR + FirstVNF_CPU_Server ) / ( CRS * Const ) ) ,( ( FirstVNF_RAM + MDR ) / Min( AMS ,CRS ) ) ) ) ),( Min( ( Max( ( FirstVNF_Mem / CRS ),( MRS - DDR ) ) + ( ( FirstVNF_RAM_Server / MRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ,( ( ( PN - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( DDR,BR ) - Min( CRS ,ARS ) ) ) ) * Min( ( ( Max( Const,ACS ) + ( FirstVNF_Mem_Server * MRS ) ) * ( ( DDR / ACS ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ,( ( Max( RRS,PN ) / ( RRS * Const ) ) * ( ( FirstVNF_Mem * BR ) - ( RRS - CRS ) ) ) ) ) ) / ( Max( Max( Max( Min( ( ACS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * PN ) ),( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_RAM_Server ) ) ),( Min( ( ACS * DDR ) ,( Const * ACS ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * Max( ARS,FirstVNF_RAM ) ) ) ),Min( ( Max( ( MDR / RRS ),Min( DDR ,ARS ) ) / ( ( RRS + CRS ) + Max( ACS,ACS ) ) ) ,( ( ( CRS - FirstVNF_Mem ) + ( RRS / Const ) ) + Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ) / Min( ( ( ( Max( ACS,Const ) - Min( ARS ,MDR ) ) - ( ( MRS + BR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) * ( ( ( MRS * FirstVNF_CPU_Server ) / ( PN - MRS ) ) / ( ( FirstVNF_RAM_Server / DDR ) / ( PN / FirstVNF_CPU ) ) ) ) ,Max( ( ( ( FirstVNF_CPU / RRS ) + ( BR - FirstVNF_CPU_Server ) ) - Max( ( RRS - ACS ),( MDR * AMS ) ) ),Max( ( Min( Const ,FirstVNF_Mem_Server ) - ( MRS - FirstVNF_RAM ) ),( Min( RRS ,FirstVNF_RAM_Server ) / ( ARS - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUM + RRSe ),Min( ( RMSe - ( Max( ( DS / ( Min( DS ,RRSe ) * MLU ) ),RCSe ) * ( ( RMSe + CS ) * MLU ) ) ) ,MUM ) )", "obj1": 0.9979166666666667, "obj2": 0.0025597894154224185}, {"determining": "( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( BR / Const ) / Max( DDR,( ( BR / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / ( DS - MUR ) ) ) / ( Min( RMSe ,MUM ) / ( DS - MUR ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5601827295673556}, {"determining": "( ( FirstVNF_RAM - MDR ) * CRS )", "choosing": "( ( DS / MUR ) + ( ( ( DS / MUR ) + ( RMSe + DS ) ) + DS ) )", "obj1": 0.5083333333333333, "obj2": 0.43201622491759845}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUM ) ) ) / ( DS - MUR ) )", "obj1": 0.25625, "obj2": 0.6435766825070486}, {"determining": "( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.4130374801348067}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( MUM * DS ) )", "obj1": 0.5229166666666667, "obj2": 0.40507103113800663}, {"determining": "Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),( FirstVNF_Mem + AMS ) )", "choosing": "( Min( RCSe ,MUR ) - Min( DS ,MUC ) )", "obj1": 0.30833333333333335, "obj2": 0.6300057003906921}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( ( BR / Const ) * ( BR / Const ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.2604166666666667, "obj2": 0.6395471130225023}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + ( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4866582898827163}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( ( FirstVNF_RAM - CRS ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( MUR + ( RMSe + DS ) )", "obj1": 0.48125, "obj2": 0.45232104961246605}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Min( MUR ,Max( MUM,MLU ) )", "obj1": 0.4354166666666667, "obj2": 0.4921205680325892}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + DS ) )", "obj1": 0.4979166666666667, "obj2": 0.440028971018656}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ACS + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * ( ( MLU + MLU ) - ( DS * MUR ) ) ) ) / Min( RCSe ,MUC ) )", "obj1": 0.34791666666666665, "obj2": 0.5763319707392582}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( Max( DDR,RRS ) / BR ) ,( PN - BR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUC * Min( RRSe ,CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5770793495366977}, {"determining": "( Min( FirstVNF_CPU ,MRS ) / ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RMSe * RMSe ) + ( MUM - MUR ) )", "obj1": 0.41458333333333336, "obj2": 0.520899060776705}, {"determining": "( Max( Const,FirstVNF_RAM_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - DS ),( MLU - MLU ) )", "obj1": 0.31875, "obj2": 0.604945840597159}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( ( ( ( Min( ( ( AMS / FirstVNF_Mem_Server ) + ( ACS - FirstVNF_RAM_Server ) ) ,( Max( Const,Const ) * Max( BR,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server - PN ) ) ) ) / Max( ( Min( ( FirstVNF_RAM_Server * DDR ) ,( ARS - MDR ) ) - Min( Min( FirstVNF_Mem_Server ,BR ) ,( FirstVNF_RAM - DDR ) ) ),( Max( ( FirstVNF_RAM - MRS ),( ACS + MDR ) ) + ( ( PN * Const ) / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) / ( ( Max( ( ( DDR - DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( MRS / AMS ) ) + ( ( FirstVNF_RAM - Const ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) / ( ( ( ( RRS / CRS ) * ( MDR + AMS ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_Mem - CRS ),( ACS - FirstVNF_Mem_Server ) ) - ( ( BR / CRS ) + ( DDR * ACS ) ) ) ) ) ) - Max( Max( Min( ( Max( ( ACS * PN ),( BR - FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server * ACS ) * ( ACS * FirstVNF_Mem_Server ) ) ) ,( Max( ( DDR / ARS ),( FirstVNF_CPU - BR ) ) / ( Min( FirstVNF_RAM_Server ,BR ) - Max( CRS,BR ) ) ) ),( ( ( Min( Const ,FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / Max( Max( DDR,MRS ),( FirstVNF_RAM_Server * AMS ) ) ) - ( ( Max( PN,Const ) - Max( MDR,FirstVNF_CPU_Server ) ) * Max( ( AMS / BR ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ),( ( ( Min( ( BR - DDR ) ,Max( DDR,BR ) ) * ( ( FirstVNF_RAM / AMS ) - ( AMS / MRS ) ) ) - ( ( ( AMS - PN ) / Max( RRS,FirstVNF_RAM_Server ) ) - Min( Max( BR,FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) / Min( ( ( ( FirstVNF_CPU / ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) + Min( ( BR / FirstVNF_Mem ) ,( BR / Const ) ) ) ,( ( ( DDR - DDR ) + ( BR * RRS ) ) * ( ( BR - ARS ) - Max( MRS,RRS ) ) ) ) ) ) ) / Min( ( Max( ( ( ( ( AMS + FirstVNF_CPU ) / ( FirstVNF_RAM - AMS ) ) + ( ( MDR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ACS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,PN ) * ( ACS * DDR ) ),( ( FirstVNF_CPU / PN ) / ( RRS - CRS ) ) ) ),Min( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - ARS ) ) + ( ( FirstVNF_Mem_Server * MRS ) / Max( PN,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * Min( DDR ,MRS ) ) + Max( ( ACS - FirstVNF_Mem_Server ),( FirstVNF_CPU * ACS ) ) ) ) ) * Min( ( ( Max( ( BR / PN ),( ARS + FirstVNF_RAM_Server ) ) / Min( ( BR - DDR ) ,Max( MRS,BR ) ) ) - ( Max( ( Const - FirstVNF_RAM ),( FirstVNF_CPU / ARS ) ) + ( ( AMS * BR ) / ( BR * BR ) ) ) ) ,( ( Max( ( RRS + FirstVNF_Mem_Server ),( MRS / ACS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( AMS - PN ) ) ) - ( ( ( FirstVNF_Mem_Server * MDR ) - ( ACS * RRS ) ) / ( Min( AMS ,BR ) - Max( AMS,FirstVNF_RAM ) ) ) ) ) ) ,Min( Max( ( ( Min( ( Const / FirstVNF_Mem_Server ) ,( MDR / MRS ) ) * ( ( MRS + FirstVNF_CPU ) * ( RRS * PN ) ) ) / ( ( Max( Const,DDR ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( BR / FirstVNF_RAM ) + ( AMS / AMS ) ) ) ),Max( ( ( ( FirstVNF_Mem_Server - Const ) + Min( MDR ,BR ) ) - ( ( PN + Const ) - Min( FirstVNF_CPU_Server ,RRS ) ) ),Max( ( Max( AMS,BR ) * ( MRS + FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ) ,( ( ( ( ( AMS - FirstVNF_CPU_Server ) - ( AMS + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,DDR ) ) ) - Max( ( Max( FirstVNF_Mem_Server,DDR ) * ( FirstVNF_CPU + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server / MRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + ( ( ( Max( AMS,DDR ) - ( MRS - Const ) ) * ( Min( AMS ,ACS ) - ( ARS / FirstVNF_CPU_Server ) ) ) - Max( Max( Max( AMS,MDR ),( AMS / FirstVNF_CPU ) ),( ( ACS - DDR ) * ( AMS / AMS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe - CS ) + ( RRSe / Max( ( MUM + MLU ),RCSe ) ) )", "obj1": 0.45416666666666666, "obj2": 0.47461667779694894}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.48541666666666666, "obj2": 0.4479664051459192}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.4625, "obj2": 0.4724518185807227}], "4": [{"determining": "( ( BR / Const ) * ( Const - ( AMS / Const ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ( Max( ( Max( MDR,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( CRS ,ACS ) ,Min( PN ,ACS ) ) ) * ( Min( Max( BR,RRS ) ,( FirstVNF_CPU_Server * RRS ) ) - Max( ( DDR * FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,Const ) ) ) ),( ( ( Min( MDR ,RRS ) / ( MRS * FirstVNF_Mem ) ) / ( ( PN + FirstVNF_CPU ) / ( ACS - BR ) ) ) - ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + ARS ) ) / Max( ( AMS + ARS ),( ARS / FirstVNF_RAM ) ) ) ) ) * Max( Max( ( ( Max( MDR,DDR ) * ( ACS * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,DDR ) + ( FirstVNF_RAM - ARS ) ) ),Min( ( ( FirstVNF_Mem * MDR ) / Max( RRS,ARS ) ) ,Max( ( CRS + DDR ),Min( FirstVNF_Mem ,MRS ) ) ) ),( ( ( ( MDR + FirstVNF_RAM ) * Min( DDR ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM + MRS ) * ( PN * FirstVNF_RAM_Server ) ) ) * ( ( ( ARS * MDR ) / ( MRS + CRS ) ) - ( Min( FirstVNF_RAM ,MRS ) / ( AMS / FirstVNF_RAM_Server ) ) ) ) ) ) ,( ( Max( ( Max( ( MDR + Const ),( ACS + MRS ) ) + ( Min( Const ,FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,MDR ) ) ),( ( Min( ARS ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) / ( ( CRS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server * Const ) ) ) ) + Max( ( ( ( PN - ACS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server - MRS ) + Max( PN,FirstVNF_CPU ) ) ),( ( ( RRS - AMS ) - Min( BR ,FirstVNF_Mem_Server ) ) + ( ( MRS * MRS ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( Max( ( ( FirstVNF_Mem / ACS ) / Min( ACS ,BR ) ),Max( ( DDR * MDR ),Max( FirstVNF_Mem,MDR ) ) ) + ( ( Min( PN ,Const ) * Max( MDR,FirstVNF_CPU_Server ) ) + ( Min( FirstVNF_CPU_Server ,PN ) * ( RRS + AMS ) ) ) ) / ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,RRS ) ) - ( ( PN * Const ) / Max( FirstVNF_CPU_Server,ACS ) ) ) / ( ( Min( FirstVNF_CPU_Server ,MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * PN ) / Max( FirstVNF_CPU_Server,ACS ) ) ) ) ) ) ) ,( ( Min( Min( Max( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_RAM + CRS ) ),Min( ( FirstVNF_Mem / CRS ) ,( BR * CRS ) ) ) ,Max( ( ( CRS * FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( FirstVNF_CPU - FirstVNF_Mem ) * ( Const + FirstVNF_CPU ) ) ) ) ,( ( Max( Max( PN,ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * Max( CRS,FirstVNF_Mem ) ) ) * Max( Min( Min( Const ,FirstVNF_RAM_Server ) ,( DDR - FirstVNF_Mem ) ),( ( RRS * CRS ) - ( ACS / PN ) ) ) ) ) * ( Min( Min( ( ( ACS * ACS ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( DDR / BR ) ) ) ,Max( ( ( MRS + CRS ) / Max( MDR,MDR ) ),( Max( FirstVNF_CPU,PN ) - ( FirstVNF_RAM * AMS ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( FirstVNF_RAM * RRS ) ) ,( ( BR + FirstVNF_CPU ) - ( Const / Const ) ) ) * ( Max( ( Const - FirstVNF_CPU ),Min( MRS ,MRS ) ) * Min( Min( RRS ,FirstVNF_RAM_Server ) ,( BR + DDR ) ) ) ) ) ) - Max( ( ( ( ( ( CRS / CRS ) - ( DDR * AMS ) ) + ( Min( BR ,ACS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ( MDR + ARS ) ) + ( ( CRS - FirstVNF_RAM ) / ( CRS + MDR ) ) ) ) + Min( ( ( Max( BR,FirstVNF_CPU ) * Max( ARS,FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ,( Min( ( BR * Const ) ,( CRS / FirstVNF_RAM ) ) - ( ( BR - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,CRS ) ) ) ) ),( ( ( ( Max( FirstVNF_Mem,ACS ) - ( FirstVNF_CPU - CRS ) ) + ( ( MDR - PN ) + ( Const - BR ) ) ) * Min( ( ( PN / MDR ) / ( MRS * RRS ) ) ,Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( MRS / RRS ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server + AMS ) - Min( FirstVNF_Mem_Server ,DDR ) ) + ( ( PN * ARS ) - ( FirstVNF_CPU_Server - DDR ) ) ) - ( Min( ( PN + CRS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( MDR ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Max( Min( ( ( Max( ( MUR / RMSe ),Min( DS ,DS ) ) / Min( Min( CS ,RRSe ) ,Max( MUR,DS ) ) ) - ( ( ( RMSe + MUM ) * Min( RMSe ,MUC ) ) - ( ( MLU * CS ) - ( MUR - MUR ) ) ) ) ,Max( ( Max( ( RMSe + DS ),( RCSe * RMSe ) ) / ( ( RRSe * RCSe ) - ( MUR + MUC ) ) ),Max( ( ( MUM * RMSe ) - Max( RCSe,DS ) ),( Min( RMSe ,MUR ) / Min( CS ,MUC ) ) ) ) ),Min( Min( Max( ( ( DS / MLU ) / ( MUC * CS ) ),( ( DS * DS ) / ( MUC + MUC ) ) ) ,Max( ( ( MUC - MUC ) / Max( MUM,RRSe ) ),Min( Max( RCSe,RMSe ) ,( RRSe / MLU ) ) ) ) ,Min( ( ( ( RMSe + MUM ) - ( MUR - MUR ) ) + ( ( MUC - MLU ) * ( MUM * RCSe ) ) ) ,( ( ( RCSe / MLU ) * Min( DS ,DS ) ) * ( ( MUM / RMSe ) / ( RRSe + MUC ) ) ) ) ) ) / ( Min( Min( ( Max( Min( MUR ,MUR ),( MUR * DS ) ) + ( ( RCSe - RMSe ) - ( RCSe + DS ) ) ) ,Max( ( ( RRSe * MLU ) + Min( DS ,DS ) ),( ( RMSe * RMSe ) + ( MLU * MUC ) ) ) ) ,( Min( Max( ( RRSe - CS ),( MUC - MUR ) ) ,( ( DS + MUR ) * Min( RRSe ,CS ) ) ) * ( Min( Min( RRSe ,MLU ) ,( MUR * MUR ) ) + Min( ( DS / RMSe ) ,( MUM * MUC ) ) ) ) ) / Min( Max( Min( ( Max( MUR,MUC ) + ( RCSe / CS ) ) ,( ( DS - RCSe ) + ( RRSe / MLU ) ) ),Max( ( ( RCSe - MUM ) * ( MUR / MLU ) ),( ( RCSe - MUR ) / ( MUR * DS ) ) ) ) ,( ( ( Max( RMSe,RMSe ) * Max( MUC,RMSe ) ) / ( ( MLU + MUC ) * ( RRSe - MUC ) ) ) / ( Min( ( RCSe + RCSe ) ,( MUR * DS ) ) * ( ( MUC * MLU ) * ( DS / RCSe ) ) ) ) ) ) ) - Min( ( Max( ( ( ( Max( MUM,MUM ) * Min( RMSe ,RRSe ) ) + ( ( MLU / RCSe ) - ( MUM + MUM ) ) ) / ( ( ( MUM + CS ) - ( MLU * RCSe ) ) * Min( ( CS / MLU ) ,( MUR * MLU ) ) ) ),Max( Max( ( ( RCSe - MUC ) + ( CS + RCSe ) ),( ( MLU + MUC ) + ( MUC - DS ) ) ),Min( ( ( MUR * MUC ) - Max( MUR,MUR ) ) ,Max( Min( CS ,DS ),( MUC + MUC ) ) ) ) ) - Max( ( Max( ( Min( RCSe ,RMSe ) / ( RCSe + CS ) ),( Max( MLU,MUM ) / ( DS - RRSe ) ) ) / Max( Min( ( CS * MUR ) ,( RRSe * DS ) ),Max( ( MUC + RCSe ),Min( RRSe ,RMSe ) ) ) ),Min( Max( ( ( MUM + CS ) - Max( MUR,RCSe ) ),( ( RRSe / MUR ) / ( MLU - MLU ) ) ) ,( Min( ( RCSe / CS ) ,( RRSe - RMSe ) ) + ( ( MLU - MUR ) / ( RRSe + MUC ) ) ) ) ) ) ,( Min( Min( Max( ( ( RCSe / RMSe ) / ( MUM - MLU ) ),( ( CS / RRSe ) - ( RMSe * MUM ) ) ) ,( ( ( MUM * DS ) / ( MLU * MLU ) ) / ( Max( MUC,MLU ) - ( DS + MUC ) ) ) ) ,( ( ( ( CS * DS ) * ( MUM - MUM ) ) + ( ( MUR + DS ) - Max( RMSe,DS ) ) ) - ( ( ( MUC + DS ) - Max( MUR,RCSe ) ) + Max( Max( DS,MLU ),Max( RCSe,MUC ) ) ) ) ) + ( ( ( ( Max( RRSe,RMSe ) / ( MUR + MUM ) ) / ( ( RRSe - MLU ) + ( RMSe * MUC ) ) ) / Min( Min( ( RCSe - MUM ) ,( RCSe / DS ) ) ,( ( RCSe + MUC ) - ( MLU * RMSe ) ) ) ) + ( ( ( ( MUR + MUC ) - ( MUR - MLU ) ) / ( ( RMSe + CS ) / Min( CS ,RMSe ) ) ) * ( Min( ( MUC + MUR ) ,Max( RCSe,DS ) ) - ( ( MUR + CS ) / Min( MUR ,RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - Max( ARS,Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,RCSe ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.32900824128764217}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.65625, "obj2": 0.3046559620271694}, {"determining": "( CRS + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5833333333333334, "obj2": 0.36173599655443917}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "( ( ( RRSe + MLU ) + ( RCSe + CS ) ) - Max( ( MUR * MUC ),( MUM / RMSe ) ) )", "obj1": 0.91875, "obj2": 0.09385705156742306}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "Min( ( Const + FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM / ( ( MLU + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.37916666666666665, "obj2": 0.5503250293100734}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( ( BR / Const ) / Max( DDR,( ( BR / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / ( DS - MUR ) ) ) / ( Min( RMSe ,MUM ) / ( DS - MUR ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5601827295673556}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( ( ( PN - FirstVNF_CPU ) + MRS ) ,MDR ) / ( ARS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) + Max( MUC,MUC ) )", "obj1": 0.9979166666666667, "obj2": 0.0006653924456461514}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUM ) ) ) / ( DS - MUR ) )", "obj1": 0.25625, "obj2": 0.6435766825070486}, {"determining": "( ACS + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * ( ( MLU + MLU ) - ( DS * MUR ) ) ) ) / Min( RCSe ,MUC ) )", "obj1": 0.34791666666666665, "obj2": 0.5763319707392582}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( MUM * DS ) )", "obj1": 0.5229166666666667, "obj2": 0.40507103113800663}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + ( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4866582898827163}, {"determining": "( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.4130374801348067}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Min( MUR ,Max( MUM,MLU ) )", "obj1": 0.4354166666666667, "obj2": 0.4921205680325892}, {"determining": "( ( BR / Const ) / ( BR / Const ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / ( DS - MUR ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.275, "obj2": 0.6386081955289545}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( Max( DDR,RRS ) / BR ) ,( PN - BR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUC * Min( RRSe ,CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5770793495366977}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( Min( RMSe ,MUM ) / ( DS - MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.5145766726804786}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + DS ) )", "obj1": 0.4979166666666667, "obj2": 0.440028971018656}, {"determining": "( ( ( ( ( Min( ( ( AMS / FirstVNF_Mem_Server ) + ( ACS - FirstVNF_RAM_Server ) ) ,( Max( Const,Const ) * Max( BR,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server - PN ) ) ) ) / Max( ( Min( ( FirstVNF_RAM_Server * DDR ) ,( ARS - MDR ) ) - Min( Min( FirstVNF_Mem_Server ,BR ) ,( FirstVNF_RAM - DDR ) ) ),( Max( ( FirstVNF_RAM - MRS ),( ACS + MDR ) ) + ( ( PN * Const ) / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) / ( ( Max( ( ( DDR - DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( MRS / AMS ) ) + ( ( FirstVNF_RAM - Const ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) / ( ( ( ( RRS / CRS ) * ( MDR + AMS ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_Mem - CRS ),( ACS - FirstVNF_Mem_Server ) ) - ( ( BR / CRS ) + ( DDR * ACS ) ) ) ) ) ) - Max( Max( Min( ( Max( ( ACS * PN ),( BR - FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server * ACS ) * ( ACS * FirstVNF_Mem_Server ) ) ) ,( Max( ( DDR / ARS ),( FirstVNF_CPU - BR ) ) / ( Min( FirstVNF_RAM_Server ,BR ) - Max( CRS,BR ) ) ) ),( ( ( Min( Const ,FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / Max( Max( DDR,MRS ),( FirstVNF_RAM_Server * AMS ) ) ) - ( ( Max( PN,Const ) - Max( MDR,FirstVNF_CPU_Server ) ) * Max( ( AMS / BR ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ),( ( ( Min( ( BR - DDR ) ,Max( DDR,BR ) ) * ( ( FirstVNF_RAM / AMS ) - ( AMS / MRS ) ) ) - ( ( ( AMS - PN ) / Max( RRS,FirstVNF_RAM_Server ) ) - Min( Max( BR,FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) / Min( ( ( ( FirstVNF_CPU / ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) + Min( ( BR / FirstVNF_Mem ) ,( BR / Const ) ) ) ,( ( ( DDR - DDR ) + ( BR * RRS ) ) * ( ( BR - ARS ) - Max( MRS,RRS ) ) ) ) ) ) ) / Min( ( Max( ( ( ( ( AMS + FirstVNF_CPU ) / ( FirstVNF_RAM - AMS ) ) + ( ( MDR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ACS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,PN ) * ( ACS * DDR ) ),( ( FirstVNF_CPU / PN ) / ( RRS - CRS ) ) ) ),Min( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - ARS ) ) + ( ( FirstVNF_Mem_Server * MRS ) / Max( PN,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * Min( DDR ,MRS ) ) + Max( ( ACS - FirstVNF_Mem_Server ),( FirstVNF_CPU * ACS ) ) ) ) ) * Min( ( ( Max( ( BR / PN ),( ARS + FirstVNF_RAM_Server ) ) / Min( ( BR - DDR ) ,Max( MRS,BR ) ) ) - ( Max( ( Const - FirstVNF_RAM ),( FirstVNF_CPU / ARS ) ) + ( ( AMS * BR ) / ( BR * BR ) ) ) ) ,( ( Max( ( RRS + FirstVNF_Mem_Server ),( MRS / ACS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( AMS - PN ) ) ) - ( ( ( FirstVNF_Mem_Server * MDR ) - ( ACS * RRS ) ) / ( Min( AMS ,BR ) - Max( AMS,FirstVNF_RAM ) ) ) ) ) ) ,Min( Max( ( ( Min( ( Const / FirstVNF_Mem_Server ) ,( MDR / MRS ) ) * ( ( MRS + FirstVNF_CPU ) * ( RRS * PN ) ) ) / ( ( Max( Const,DDR ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( BR / FirstVNF_RAM ) + ( AMS / AMS ) ) ) ),Max( ( ( ( FirstVNF_Mem_Server - Const ) + Min( MDR ,BR ) ) - ( ( PN + Const ) - Min( FirstVNF_CPU_Server ,RRS ) ) ),Max( ( Max( AMS,BR ) * ( MRS + FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ) ,( ( ( ( ( AMS - FirstVNF_CPU_Server ) - ( AMS + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,DDR ) ) ) - Max( ( Max( FirstVNF_Mem_Server,DDR ) * ( FirstVNF_CPU + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server / MRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + ( ( ( Max( AMS,DDR ) - ( MRS - Const ) ) * ( Min( AMS ,ACS ) - ( ARS / FirstVNF_CPU_Server ) ) ) - Max( Max( Max( AMS,MDR ),( AMS / FirstVNF_CPU ) ),( ( ACS - DDR ) * ( AMS / AMS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe - CS ) + ( RRSe / Max( ( MUM + MLU ),RCSe ) ) )", "obj1": 0.45416666666666666, "obj2": 0.47461667779694894}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.4625, "obj2": 0.4724518185807227}, {"determining": "( ( BR / Const ) * ( BR / Const ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.2604166666666667, "obj2": 0.6395471130225023}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( ( DS / MUR ) + ( RMSe + DS ) ) + ( RMSe + DS ) )", "obj1": 0.5145833333333333, "obj2": 0.4303210580477608}, {"determining": "( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( FirstVNF_RAM - MDR ) * CRS )", "choosing": "( ( DS / MUR ) + ( ( ( DS / MUR ) + ( RMSe + DS ) ) + DS ) )", "obj1": 0.5083333333333333, "obj2": 0.43201622491759845}, {"determining": "( ( Const - MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( Min( RMSe ,MUM ) / ( DS - MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.5145766726804786}, {"determining": "( Max( Const,FirstVNF_RAM_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - DS ),( MLU - MLU ) )", "obj1": 0.31875, "obj2": 0.604945840597159}], "5": [{"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( ( CRS - FirstVNF_RAM_Server ) / Const ) )", "choosing": "Max( Max( Max( MLU,MUM ),Max( MUR,CS ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( Const - ( AMS / Const ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - Max( ARS,Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,RCSe ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( CRS + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5833333333333334, "obj2": 0.36173599655443917}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_RAM - MDR ) * ( ( PN - FirstVNF_CPU ) + Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) )", "choosing": "( ( DS / MUR ) + RCSe )", "obj1": 0.6208333333333333, "obj2": 0.3232389550203869}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "Min( ( Const + FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM / ( ( MLU + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.37916666666666665, "obj2": 0.5503250293100734}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.65625, "obj2": 0.3046559620271694}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( AMS / Const ) / Max( ( ( BR / Const ) * ( Const - MDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( DS - MUR ) ) ) / Min( ( Min( RMSe ,MUM ) / ( DS - MUR ) ) ,MUR ) )", "obj1": 0.35208333333333336, "obj2": 0.5585851509059637}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,( Min( RMSe ,MUM ) / ( DS - MUR ) ) ) ) ) / ( DS - MUR ) )", "obj1": 0.30833333333333335, "obj2": 0.6172202061165266}, {"determining": "( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.32900824128764217}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "( ( ( RRSe + MLU ) + ( RCSe + CS ) ) - Max( ( MUR * MUC ),( MUM / RMSe ) ) )", "obj1": 0.91875, "obj2": 0.09385705156742306}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ACS + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * ( ( MLU + MLU ) - ( DS * MUR ) ) ) ) / Min( RCSe ,MUC ) )", "obj1": 0.34791666666666665, "obj2": 0.5763319707392582}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( MUM * DS ) )", "obj1": 0.5229166666666667, "obj2": 0.40507103113800663}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.4130374801348067}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + ( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4866582898827163}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Min( MUR ,Max( MUM,MLU ) )", "obj1": 0.4354166666666667, "obj2": 0.4921205680325892}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( Min( ( ( PN - FirstVNF_CPU ) + MRS ) ,MDR ) / ( ARS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) + Max( MUC,MUC ) )", "obj1": 0.9979166666666667, "obj2": 0.0006653924456461514}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( Max( DDR,RRS ) / BR ) ,( PN - BR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUC * Min( RRSe ,CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5770793495366977}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( DS - MUR ) ) / Min( RMSe ,MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.4291433704728713}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( Const - MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( Min( RMSe ,MUM ) / ( DS - MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.5145766726804786}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + DS ) )", "obj1": 0.4979166666666667, "obj2": 0.440028971018656}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( ( ( ( ( Min( ( ( AMS / FirstVNF_Mem_Server ) + ( ACS - FirstVNF_RAM_Server ) ) ,( Max( Const,Const ) * Max( BR,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server - PN ) ) ) ) / Max( ( Min( ( FirstVNF_RAM_Server * DDR ) ,( ARS - MDR ) ) - Min( Min( FirstVNF_Mem_Server ,BR ) ,( FirstVNF_RAM - DDR ) ) ),( Max( ( FirstVNF_RAM - MRS ),( ACS + MDR ) ) + ( ( PN * Const ) / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) / ( ( Max( ( ( DDR - DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( MRS / AMS ) ) + ( ( FirstVNF_RAM - Const ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) / ( ( ( ( RRS / CRS ) * ( MDR + AMS ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_Mem - CRS ),( ACS - FirstVNF_Mem_Server ) ) - ( ( BR / CRS ) + ( DDR * ACS ) ) ) ) ) ) - Max( Max( Min( ( Max( ( ACS * PN ),( BR - FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server * ACS ) * ( ACS * FirstVNF_Mem_Server ) ) ) ,( Max( ( DDR / ARS ),( FirstVNF_CPU - BR ) ) / ( Min( FirstVNF_RAM_Server ,BR ) - Max( CRS,BR ) ) ) ),( ( ( Min( Const ,FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / Max( Max( DDR,MRS ),( FirstVNF_RAM_Server * AMS ) ) ) - ( ( Max( PN,Const ) - Max( MDR,FirstVNF_CPU_Server ) ) * Max( ( AMS / BR ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ),( ( ( Min( ( BR - DDR ) ,Max( DDR,BR ) ) * ( ( FirstVNF_RAM / AMS ) - ( AMS / MRS ) ) ) - ( ( ( AMS - PN ) / Max( RRS,FirstVNF_RAM_Server ) ) - Min( Max( BR,FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) / Min( ( ( ( FirstVNF_CPU / ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) + Min( ( BR / FirstVNF_Mem ) ,( BR / Const ) ) ) ,( ( ( DDR - DDR ) + ( BR * RRS ) ) * ( ( BR - ARS ) - Max( MRS,RRS ) ) ) ) ) ) ) / Min( ( Max( ( ( ( ( AMS + FirstVNF_CPU ) / ( FirstVNF_RAM - AMS ) ) + ( ( MDR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ACS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,PN ) * ( ACS * DDR ) ),( ( FirstVNF_CPU / PN ) / ( RRS - CRS ) ) ) ),Min( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - ARS ) ) + ( ( FirstVNF_Mem_Server * MRS ) / Max( PN,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * Min( DDR ,MRS ) ) + Max( ( ACS - FirstVNF_Mem_Server ),( FirstVNF_CPU * ACS ) ) ) ) ) * Min( ( ( Max( ( BR / PN ),( ARS + FirstVNF_RAM_Server ) ) / Min( ( BR - DDR ) ,Max( MRS,BR ) ) ) - ( Max( ( Const - FirstVNF_RAM ),( FirstVNF_CPU / ARS ) ) + ( ( AMS * BR ) / ( BR * BR ) ) ) ) ,( ( Max( ( RRS + FirstVNF_Mem_Server ),( MRS / ACS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( AMS - PN ) ) ) - ( ( ( FirstVNF_Mem_Server * MDR ) - ( ACS * RRS ) ) / ( Min( AMS ,BR ) - Max( AMS,FirstVNF_RAM ) ) ) ) ) ) ,Min( Max( ( ( Min( ( Const / FirstVNF_Mem_Server ) ,( MDR / MRS ) ) * ( ( MRS + FirstVNF_CPU ) * ( RRS * PN ) ) ) / ( ( Max( Const,DDR ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( BR / FirstVNF_RAM ) + ( AMS / AMS ) ) ) ),Max( ( ( ( FirstVNF_Mem_Server - Const ) + Min( MDR ,BR ) ) - ( ( PN + Const ) - Min( FirstVNF_CPU_Server ,RRS ) ) ),Max( ( Max( AMS,BR ) * ( MRS + FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ) ,( ( ( ( ( AMS - FirstVNF_CPU_Server ) - ( AMS + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,DDR ) ) ) - Max( ( Max( FirstVNF_Mem_Server,DDR ) * ( FirstVNF_CPU + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server / MRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + ( ( ( Max( AMS,DDR ) - ( MRS - Const ) ) * ( Min( AMS ,ACS ) - ( ARS / FirstVNF_CPU_Server ) ) ) - Max( Max( Max( AMS,MDR ),( AMS / FirstVNF_CPU ) ),( ( ACS - DDR ) * ( AMS / AMS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe - CS ) + ( RRSe / Max( ( MUM + MLU ),RCSe ) ) )", "obj1": 0.45416666666666666, "obj2": 0.47461667779694894}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( FirstVNF_RAM - MDR ) * CRS )", "choosing": "( ( DS / MUR ) + ( ( ( DS / MUR ) + ( RMSe + DS ) ) + DS ) )", "obj1": 0.5083333333333333, "obj2": 0.43201622491759845}], "6": [{"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( ( CRS - FirstVNF_RAM_Server ) / Const ) )", "choosing": "Max( Max( MUR,MUM ),Max( MUR,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( ( CRS - FirstVNF_RAM_Server ) / Const ) )", "choosing": "Max( Max( Max( MLU,MUM ),Max( MUR,CS ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_RAM - MDR ) * ( ( PN - FirstVNF_CPU ) + Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) )", "choosing": "( ( DS / MUR ) + RCSe )", "obj1": 0.6208333333333333, "obj2": 0.3232389550203869}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.65625, "obj2": 0.3046559620271694}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( Max( DDR,RRS ) / BR ) ,( PN - BR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUC * Min( RRSe ,CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5770793495366977}, {"determining": "( ( AMS / ARS ) / Max( DDR,Const ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( RMSe ,( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.3875, "obj2": 0.5418612133693447}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Max( Max( MLU,MUM ),Max( MUR,CS ) ) )", "obj1": 0.575, "obj2": 0.37314460160777696}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( CRS + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5833333333333334, "obj2": 0.36173599655443917}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.32900824128764217}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( MUM * DS ) )", "obj1": 0.5229166666666667, "obj2": 0.40507103113800663}, {"determining": "( ( Const - MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( Min( RMSe ,MUM ) / ( DS - MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.5145766726804786}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( ( ( ( Min( ( ( AMS / FirstVNF_Mem_Server ) + ( ACS - FirstVNF_RAM_Server ) ) ,( Max( Const,Const ) * Max( BR,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server - PN ) ) ) ) / Max( ( Min( ( FirstVNF_RAM_Server * DDR ) ,( ARS - MDR ) ) - Min( Min( FirstVNF_Mem_Server ,BR ) ,( FirstVNF_RAM - DDR ) ) ),( Max( ( FirstVNF_RAM - MRS ),( ACS + MDR ) ) + ( ( PN * Const ) / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) / ( ( Max( ( ( DDR - DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( MRS / AMS ) ) + ( ( FirstVNF_RAM - Const ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) / ( ( ( ( RRS / CRS ) * ( MDR + AMS ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_Mem - CRS ),( ACS - FirstVNF_Mem_Server ) ) - ( ( BR / CRS ) + ( DDR * ACS ) ) ) ) ) ) - Max( Max( Min( ( Max( ( ACS * PN ),( BR - FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server * ACS ) * ( ACS * FirstVNF_Mem_Server ) ) ) ,( Max( ( DDR / ARS ),( FirstVNF_CPU - BR ) ) / ( Min( FirstVNF_RAM_Server ,BR ) - Max( CRS,BR ) ) ) ),( ( ( Min( Const ,FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / Max( Max( DDR,MRS ),( FirstVNF_RAM_Server * AMS ) ) ) - ( ( Max( PN,Const ) - Max( MDR,FirstVNF_CPU_Server ) ) * Max( ( AMS / BR ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ),( ( ( Min( ( BR - DDR ) ,Max( DDR,BR ) ) * ( ( FirstVNF_RAM / AMS ) - ( AMS / MRS ) ) ) - ( ( ( AMS - PN ) / Max( RRS,FirstVNF_RAM_Server ) ) - Min( Max( BR,FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) / Min( ( ( ( FirstVNF_CPU / ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) + Min( ( BR / FirstVNF_Mem ) ,( BR / Const ) ) ) ,( ( ( DDR - DDR ) + ( BR * RRS ) ) * ( ( BR - ARS ) - Max( MRS,RRS ) ) ) ) ) ) ) / Min( ( Max( ( ( ( ( AMS + FirstVNF_CPU ) / ( FirstVNF_RAM - AMS ) ) + ( ( MDR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ACS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,PN ) * ( ACS * DDR ) ),( ( FirstVNF_CPU / PN ) / ( RRS - CRS ) ) ) ),Min( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - ARS ) ) + ( ( FirstVNF_Mem_Server * MRS ) / Max( PN,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * Min( DDR ,MRS ) ) + Max( ( ACS - FirstVNF_Mem_Server ),( FirstVNF_CPU * ACS ) ) ) ) ) * Min( ( ( Max( ( BR / PN ),( ARS + FirstVNF_RAM_Server ) ) / Min( ( BR - DDR ) ,Max( MRS,BR ) ) ) - ( Max( ( Const - FirstVNF_RAM ),( FirstVNF_CPU / ARS ) ) + ( ( AMS * BR ) / ( BR * BR ) ) ) ) ,( ( Max( ( RRS + FirstVNF_Mem_Server ),( MRS / ACS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( AMS - PN ) ) ) - ( ( ( FirstVNF_Mem_Server * MDR ) - ( ACS * RRS ) ) / ( Min( AMS ,BR ) - Max( AMS,FirstVNF_RAM ) ) ) ) ) ) ,Min( Max( ( ( Min( ( Const / FirstVNF_Mem_Server ) ,( MDR / MRS ) ) * ( ( MRS + FirstVNF_CPU ) * ( RRS * PN ) ) ) / ( ( Max( Const,DDR ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( BR / FirstVNF_RAM ) + ( AMS / AMS ) ) ) ),Max( ( ( ( FirstVNF_Mem_Server - Const ) + Min( MDR ,BR ) ) - ( ( PN + Const ) - Min( FirstVNF_CPU_Server ,RRS ) ) ),Max( ( Max( AMS,BR ) * ( MRS + FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ) ,( ( ( ( ( AMS - FirstVNF_CPU_Server ) - ( AMS + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,DDR ) ) ) - Max( ( Max( FirstVNF_Mem_Server,DDR ) * ( FirstVNF_CPU + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server / MRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + ( ( ( Max( AMS,DDR ) - ( MRS - Const ) ) * ( Min( AMS ,ACS ) - ( ARS / FirstVNF_CPU_Server ) ) ) - Max( Max( Max( AMS,MDR ),( AMS / FirstVNF_CPU ) ),( ( ACS - DDR ) * ( AMS / AMS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe - CS ) + ( RRSe / Max( ( MUM + MLU ),RCSe ) ) )", "obj1": 0.45416666666666666, "obj2": 0.47461667779694894}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.4130374801348067}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + ( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4866582898827163}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Min( MUR ,Max( MUM,MLU ) )", "obj1": 0.4354166666666667, "obj2": 0.4921205680325892}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( DS - MUR ) ) / Min( RMSe ,MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.4291433704728713}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( BR / MDR ) * ( ( ( BR / Const ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( DS - MUR ) - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.99375, "obj2": 0.0025654267351486655}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + DS ) )", "obj1": 0.4979166666666667, "obj2": 0.440028971018656}, {"determining": "( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( FirstVNF_RAM - MDR ) * CRS )", "choosing": "( ( DS / MUR ) + ( ( ( DS / MUR ) + ( RMSe + DS ) ) + DS ) )", "obj1": 0.5083333333333333, "obj2": 0.43201622491759845}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}], "7": [{"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( ( CRS - FirstVNF_RAM_Server ) / Const ) )", "choosing": "Max( Max( Max( MLU,MUM ),Max( MUR,CS ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( ( CRS - FirstVNF_RAM_Server ) / Const ) )", "choosing": "Max( Max( MUR,MUM ),Max( MUR,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_RAM - MDR ) * ( ( PN - FirstVNF_CPU ) + Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) )", "choosing": "( ( DS / MUR ) + RCSe )", "obj1": 0.6208333333333333, "obj2": 0.3232389550203869}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.65625, "obj2": 0.3046559620271694}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( Max( DDR,RRS ) / BR ) ,( PN - BR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUC * Min( RRSe ,CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5770793495366977}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( CRS + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5833333333333334, "obj2": 0.36173599655443917}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.32900824128764217}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( MUM * DS ) )", "obj1": 0.5229166666666667, "obj2": 0.40507103113800663}, {"determining": "( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( Const - MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( Min( RMSe ,MUM ) / ( DS - MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.5145766726804786}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( ( ( ( Min( ( ( AMS / FirstVNF_Mem_Server ) + ( ACS - FirstVNF_RAM_Server ) ) ,( Max( Const,Const ) * Max( BR,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server - PN ) ) ) ) / Max( ( Min( ( FirstVNF_RAM_Server * DDR ) ,( ARS - MDR ) ) - Min( Min( FirstVNF_Mem_Server ,BR ) ,( FirstVNF_RAM - DDR ) ) ),( Max( ( FirstVNF_RAM - MRS ),( ACS + MDR ) ) + ( ( PN * Const ) / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) / ( ( Max( ( ( DDR - DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( MRS / AMS ) ) + ( ( FirstVNF_RAM - Const ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) / ( ( ( ( RRS / CRS ) * ( MDR + AMS ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_Mem - CRS ),( ACS - FirstVNF_Mem_Server ) ) - ( ( BR / CRS ) + ( DDR * ACS ) ) ) ) ) ) - Max( Max( Min( ( Max( ( ACS * PN ),( BR - FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server * ACS ) * ( ACS * FirstVNF_Mem_Server ) ) ) ,( Max( ( DDR / ARS ),( FirstVNF_CPU - BR ) ) / ( Min( FirstVNF_RAM_Server ,BR ) - Max( CRS,BR ) ) ) ),( ( ( Min( Const ,FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / Max( Max( DDR,MRS ),( FirstVNF_RAM_Server * AMS ) ) ) - ( ( Max( PN,Const ) - Max( MDR,FirstVNF_CPU_Server ) ) * Max( ( AMS / BR ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ),( ( ( Min( ( BR - DDR ) ,Max( DDR,BR ) ) * ( ( FirstVNF_RAM / AMS ) - ( AMS / MRS ) ) ) - ( ( ( AMS - PN ) / Max( RRS,FirstVNF_RAM_Server ) ) - Min( Max( BR,FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) / Min( ( ( ( FirstVNF_CPU / ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) + Min( ( BR / FirstVNF_Mem ) ,( BR / Const ) ) ) ,( ( ( DDR - DDR ) + ( BR * RRS ) ) * ( ( BR - ARS ) - Max( MRS,RRS ) ) ) ) ) ) ) / Min( ( Max( ( ( ( ( AMS + FirstVNF_CPU ) / ( FirstVNF_RAM - AMS ) ) + ( ( MDR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ACS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,PN ) * ( ACS * DDR ) ),( ( FirstVNF_CPU / PN ) / ( RRS - CRS ) ) ) ),Min( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - ARS ) ) + ( ( FirstVNF_Mem_Server * MRS ) / Max( PN,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * Min( DDR ,MRS ) ) + Max( ( ACS - FirstVNF_Mem_Server ),( FirstVNF_CPU * ACS ) ) ) ) ) * Min( ( ( Max( ( BR / PN ),( ARS + FirstVNF_RAM_Server ) ) / Min( ( BR - DDR ) ,Max( MRS,BR ) ) ) - ( Max( ( Const - FirstVNF_RAM ),( FirstVNF_CPU / ARS ) ) + ( ( AMS * BR ) / ( BR * BR ) ) ) ) ,( ( Max( ( RRS + FirstVNF_Mem_Server ),( MRS / ACS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( AMS - PN ) ) ) - ( ( ( FirstVNF_Mem_Server * MDR ) - ( ACS * RRS ) ) / ( Min( AMS ,BR ) - Max( AMS,FirstVNF_RAM ) ) ) ) ) ) ,Min( Max( ( ( Min( ( Const / FirstVNF_Mem_Server ) ,( MDR / MRS ) ) * ( ( MRS + FirstVNF_CPU ) * ( RRS * PN ) ) ) / ( ( Max( Const,DDR ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( BR / FirstVNF_RAM ) + ( AMS / AMS ) ) ) ),Max( ( ( ( FirstVNF_Mem_Server - Const ) + Min( MDR ,BR ) ) - ( ( PN + Const ) - Min( FirstVNF_CPU_Server ,RRS ) ) ),Max( ( Max( AMS,BR ) * ( MRS + FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ) ,( ( ( ( ( AMS - FirstVNF_CPU_Server ) - ( AMS + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,DDR ) ) ) - Max( ( Max( FirstVNF_Mem_Server,DDR ) * ( FirstVNF_CPU + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server / MRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + ( ( ( Max( AMS,DDR ) - ( MRS - Const ) ) * ( Min( AMS ,ACS ) - ( ARS / FirstVNF_CPU_Server ) ) ) - Max( Max( Max( AMS,MDR ),( AMS / FirstVNF_CPU ) ),( ( ACS - DDR ) * ( AMS / AMS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe - CS ) + ( RRSe / Max( ( MUM + MLU ),RCSe ) ) )", "obj1": 0.45416666666666666, "obj2": 0.47461667779694894}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ) / ( ( CRS / RRS ) * ( CRS * ACS ) ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.4130374801348067}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + ( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4866582898827163}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( CRS ,RRS ) / ( CRS - FirstVNF_Mem ) )", "choosing": "Min( ( MLU * MLU ) ,RCSe )", "obj1": 0.56875, "obj2": 0.373923357259076}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Min( MUR ,Max( MUM,MLU ) )", "obj1": 0.4354166666666667, "obj2": 0.4921205680325892}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( BR / MDR ) * ( ( ( BR / Const ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( DS - MUR ) - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.99375, "obj2": 0.0025654267351486655}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( DS - MUR ) ) / Min( RMSe ,MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.4291433704728713}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Max( Max( MLU,MUM ),Max( MUR,CS ) ) )", "obj1": 0.575, "obj2": 0.37314460160777696}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + DS ) )", "obj1": 0.4979166666666667, "obj2": 0.440028971018656}], "8": [{"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * ( BR - FirstVNF_CPU_Server ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( ( CRS - FirstVNF_RAM_Server ) / Const ) )", "choosing": "Max( Max( Max( MLU,MUM ),Max( MUR,CS ) ),( RRSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( FirstVNF_RAM - MDR ) * ( ( PN - FirstVNF_CPU ) + Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) )", "choosing": "( ( DS / MUR ) + RCSe )", "obj1": 0.6208333333333333, "obj2": 0.3232389550203869}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.65625, "obj2": 0.3046559620271694}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( CRS + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5833333333333334, "obj2": 0.36173599655443917}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( Max( DDR,RRS ) / BR ) ,( PN - BR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUC * Min( RRSe ,CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5770793495366977}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "( ( RRS / MRS ) / ( BR - CRS ) )", "choosing": "Min( ( MLU * ( DS / MLU ) ) ,Max( MUM,MLU ) )", "obj1": 0.5583333333333333, "obj2": 0.37239137075918927}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( Const - MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( Min( RMSe ,MUM ) / ( DS - MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.5145766726804786}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + ( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4866582898827163}, {"determining": "( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( DS - MUR ) ) / Min( RMSe ,MUR ) )", "obj1": 0.5104166666666666, "obj2": 0.4291433704728713}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Min( MUR ,Max( MUM,MLU ) )", "obj1": 0.4354166666666667, "obj2": 0.4921205680325892}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.32900824128764217}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( BR / MDR ) * ( ( ( BR / Const ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( DS - MUR ) - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.99375, "obj2": 0.0025654267351486655}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( ( DS / MUR ) + ( RMSe + DS ) )", "obj1": 0.4979166666666667, "obj2": 0.440028971018656}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( MUR / Max( DS,MUR ) )", "obj1": 0.5270833333333333, "obj2": 0.4017333454240526}, {"determining": "( ( ( ( ( Min( ( ( AMS / FirstVNF_Mem_Server ) + ( ACS - FirstVNF_RAM_Server ) ) ,( Max( Const,Const ) * Max( BR,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM_Server ) ) * ( ( BR / FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server - PN ) ) ) ) / Max( ( Min( ( FirstVNF_RAM_Server * DDR ) ,( ARS - MDR ) ) - Min( Min( FirstVNF_Mem_Server ,BR ) ,( FirstVNF_RAM - DDR ) ) ),( Max( ( FirstVNF_RAM - MRS ),( ACS + MDR ) ) + ( ( PN * Const ) / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) / ( ( Max( ( ( DDR - DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM_Server * PN ) + ( MRS / AMS ) ) + ( ( FirstVNF_RAM - Const ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) / ( ( ( ( RRS / CRS ) * ( MDR + AMS ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( Max( ( FirstVNF_Mem - CRS ),( ACS - FirstVNF_Mem_Server ) ) - ( ( BR / CRS ) + ( DDR * ACS ) ) ) ) ) ) - Max( Max( Min( ( Max( ( ACS * PN ),( BR - FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server * ACS ) * ( ACS * FirstVNF_Mem_Server ) ) ) ,( Max( ( DDR / ARS ),( FirstVNF_CPU - BR ) ) / ( Min( FirstVNF_RAM_Server ,BR ) - Max( CRS,BR ) ) ) ),( ( ( Min( Const ,FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) / Max( Max( DDR,MRS ),( FirstVNF_RAM_Server * AMS ) ) ) - ( ( Max( PN,Const ) - Max( MDR,FirstVNF_CPU_Server ) ) * Max( ( AMS / BR ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ),( ( ( Min( ( BR - DDR ) ,Max( DDR,BR ) ) * ( ( FirstVNF_RAM / AMS ) - ( AMS / MRS ) ) ) - ( ( ( AMS - PN ) / Max( RRS,FirstVNF_RAM_Server ) ) - Min( Max( BR,FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) / Min( ( ( ( FirstVNF_CPU / ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) + Min( ( BR / FirstVNF_Mem ) ,( BR / Const ) ) ) ,( ( ( DDR - DDR ) + ( BR * RRS ) ) * ( ( BR - ARS ) - Max( MRS,RRS ) ) ) ) ) ) ) / Min( ( Max( ( ( ( ( AMS + FirstVNF_CPU ) / ( FirstVNF_RAM - AMS ) ) + ( ( MDR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ACS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,PN ) * ( ACS * DDR ) ),( ( FirstVNF_CPU / PN ) / ( RRS - CRS ) ) ) ),Min( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - ARS ) ) + ( ( FirstVNF_Mem_Server * MRS ) / Max( PN,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / MDR ) * Min( DDR ,MRS ) ) + Max( ( ACS - FirstVNF_Mem_Server ),( FirstVNF_CPU * ACS ) ) ) ) ) * Min( ( ( Max( ( BR / PN ),( ARS + FirstVNF_RAM_Server ) ) / Min( ( BR - DDR ) ,Max( MRS,BR ) ) ) - ( Max( ( Const - FirstVNF_RAM ),( FirstVNF_CPU / ARS ) ) + ( ( AMS * BR ) / ( BR * BR ) ) ) ) ,( ( Max( ( RRS + FirstVNF_Mem_Server ),( MRS / ACS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( AMS - PN ) ) ) - ( ( ( FirstVNF_Mem_Server * MDR ) - ( ACS * RRS ) ) / ( Min( AMS ,BR ) - Max( AMS,FirstVNF_RAM ) ) ) ) ) ) ,Min( Max( ( ( Min( ( Const / FirstVNF_Mem_Server ) ,( MDR / MRS ) ) * ( ( MRS + FirstVNF_CPU ) * ( RRS * PN ) ) ) / ( ( Max( Const,DDR ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( BR / FirstVNF_RAM ) + ( AMS / AMS ) ) ) ),Max( ( ( ( FirstVNF_Mem_Server - Const ) + Min( MDR ,BR ) ) - ( ( PN + Const ) - Min( FirstVNF_CPU_Server ,RRS ) ) ),Max( ( Max( AMS,BR ) * ( MRS + FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ) ,( ( ( ( ( AMS - FirstVNF_CPU_Server ) - ( AMS + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,DDR ) ) ) - Max( ( Max( FirstVNF_Mem_Server,DDR ) * ( FirstVNF_CPU + FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server / MRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + ( ( ( Max( AMS,DDR ) - ( MRS - Const ) ) * ( Min( AMS ,ACS ) - ( ARS / FirstVNF_CPU_Server ) ) ) - Max( Max( Max( AMS,MDR ),( AMS / FirstVNF_CPU ) ),( ( ACS - DDR ) * ( AMS / AMS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe - CS ) + ( RRSe / Max( ( MUM + MLU ),RCSe ) ) )", "obj1": 0.45416666666666666, "obj2": 0.47461667779694894}, {"determining": "( Max( ( ( FirstVNF_RAM / MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ),MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( RCSe + ( RMSe + RCSe ) )", "obj1": 0.5958333333333333, "obj2": 0.3306169950899534}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUC,MUR ) + ( RMSe + DS ) )", "obj1": 0.46041666666666664, "obj2": 0.46883010239215306}], "9": [{"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - ( PN - MRS ) ) )", "choosing": "( ( ( ( MUC / MUC ) + Max( MUM,MUR ) ) / MUC ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * ( BR - FirstVNF_CPU_Server ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( FirstVNF_RAM - MDR ) * ( ( PN - FirstVNF_CPU ) + Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) )", "choosing": "( ( DS / MUR ) + RCSe )", "obj1": 0.6208333333333333, "obj2": 0.3232389550203869}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( Max( DDR,RRS ) / BR ) ,( PN - BR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUC * Min( RRSe ,CS ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5770793495366977}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "( ( ( ( FirstVNF_RAM - ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) )", "choosing": "( RMSe + ( RMSe + DS ) )", "obj1": 0.525, "obj2": 0.42153417102828433}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( MDR / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( RMSe ,Max( MUR,MUM ) ) )", "obj1": 0.49375, "obj2": 0.4237777809985441}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( MUR / Max( DS,MUR ) )", "obj1": 0.5270833333333333, "obj2": 0.4017333454240526}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( CRS + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5833333333333334, "obj2": 0.36173599655443917}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Min( MUR ,Max( MUM,MLU ) )", "obj1": 0.4354166666666667, "obj2": 0.4921205680325892}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5958333333333333, "obj2": 0.32597665230452133}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( BR / MDR ) * ( ( ( BR / Const ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( DS - MUR ) - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.99375, "obj2": 0.0025654267351486655}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUC,MUR ) + ( RMSe + DS ) )", "obj1": 0.46041666666666664, "obj2": 0.46883010239215306}, {"determining": "( Min( CRS ,RRS ) / ( CRS - ( PN - FirstVNF_RAM ) ) )", "choosing": "Min( ( MLU * Max( ( ( DS / MUR ) + ( RMSe + DS ) ),MUR ) ) ,DS )", "obj1": 0.5729166666666666, "obj2": 0.37218732493027246}], "10": [{"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - ( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe / MUC ) + Max( MLU,MUR ) ) / MUC ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - ( PN - MRS ) ) )", "choosing": "( ( ( ( MUC / MUC ) + Max( MUM,MUR ) ) / MUC ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( ( FirstVNF_RAM - MDR ) * ( ( PN - FirstVNF_CPU ) + Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) )", "choosing": "( ( DS / MUR ) + RCSe )", "obj1": 0.6208333333333333, "obj2": 0.3232389550203869}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( MDR / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( RMSe ,Max( MUR,MUM ) ) )", "obj1": 0.49375, "obj2": 0.4237777809985441}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5895833333333333, "obj2": 0.32380204213429475}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUC,MUR ) + ( RMSe + DS ) )", "obj1": 0.46041666666666664, "obj2": 0.46883010239215306}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "Min( MUR ,Max( MUM,MLU ) )", "obj1": 0.4354166666666667, "obj2": 0.4921205680325892}, {"determining": "Max( MRS,Min( RRS ,Min( RRS ,CRS ) ) )", "choosing": "( ( CS / RMSe ) - ( ( CS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.4479166666666667, "obj2": 0.491652566922729}, {"determining": "( ( BR - ( Min( AMS ,AMS ) + Max( CRS,FirstVNF_RAM_Server ) ) ) + ( Const + FirstVNF_Mem ) )", "choosing": "Max( Max( ( RRSe / DS ),( DS - MLU ) ),Max( MLU,RMSe ) )", "obj1": 0.9916666666666667, "obj2": 0.00763940918926949}, {"determining": "( ( BR / MDR ) * ( ( ( BR / Const ) * ( Const - MDR ) ) - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( DS - MUR ) - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.99375, "obj2": 0.0025654267351486655}], "11": [{"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - ( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe / MUC ) + Max( MLU,MUR ) ) / MUC ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - ( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe / MUC ) + Max( MLU,MUR ) ) / MUC ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( MDR / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( RMSe ,Max( MUR,MUM ) ) )", "obj1": 0.49375, "obj2": 0.4237777809985441}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUC,MUR ) + ( RMSe + DS ) )", "obj1": 0.46041666666666664, "obj2": 0.46883010239215306}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "Max( MRS,Min( RRS ,Min( RRS ,CRS ) ) )", "choosing": "( ( CS / RMSe ) - ( ( CS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.4479166666666667, "obj2": 0.491652566922729}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}], "12": [{"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - ( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe / MUC ) + Max( MLU,MUR ) ) / MUC ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - ( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe / MUC ) + Max( MLU,MUR ) ) / MUC ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( MDR / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( RMSe ,Max( MUR,MUM ) ) )", "obj1": 0.49375, "obj2": 0.4237777809985441}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * ( DS + MUM ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.42291666666666666, "obj2": 0.509945802021299}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "Max( MRS,Min( RRS ,Min( RRS ,CRS ) ) )", "choosing": "( ( CS / RMSe ) - ( ( CS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.4479166666666667, "obj2": 0.491652566922729}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}], "13": [{"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Max( Max( DS,RRSe ),Max( Max( DS,RRSe ),Max( RRSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - ( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe / MUC ) + Max( MLU,MUR ) ) / MUC ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( MDR / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( RMSe ,Max( MUR,MUM ) ) )", "obj1": 0.49375, "obj2": 0.4237777809985441}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "Max( MRS,Min( RRS ,Min( RRS ,CRS ) ) )", "choosing": "( ( CS / RMSe ) - ( ( CS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.4479166666666667, "obj2": 0.491652566922729}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( BR / MDR ) * ( ( BR / MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) * ( RMSe - MUR ) ) ) / ( DS + RMSe ) )", "obj1": 0.9854166666666667, "obj2": 0.006489890067549481}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5958333333333333, "obj2": 0.32597665230452133}], "14": [{"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Max( Max( Max( DS,RRSe ),Max( RRSe,RMSe ) ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Max( Max( DS,RRSe ),Max( Max( DS,RRSe ),Max( RRSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( Min( FirstVNF_RAM ,MRS ) * Max( ( FirstVNF_RAM - CRS ),( ( AMS - FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,Max( ( Min( DS ,MUR ) + ( RMSe + DS ) ),MUR ) ) + Min( DS ,( RRSe * MUR ) ) )", "obj1": 0.5083333333333333, "obj2": 0.4218423259083124}, {"determining": "( MDR / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( RMSe ,Max( MUR,MUM ) ) )", "obj1": 0.49375, "obj2": 0.4237777809985441}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "Max( MRS,Min( RRS ,Min( RRS ,CRS ) ) )", "choosing": "( ( CS / RMSe ) - ( ( CS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.4479166666666667, "obj2": 0.491652566922729}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( BR / MDR ) * ( ( BR / MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) * ( RMSe - MUR ) ) ) / ( DS + RMSe ) )", "obj1": 0.9854166666666667, "obj2": 0.006489890067549481}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}], "15": [{"determining": "( ( ARS - ( ( FirstVNF_CPU_Server / PN ) * Min( FirstVNF_RAM_Server ,ARS ) ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,DS ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Max( Max( Max( DS,RRSe ),Max( RRSe,RMSe ) ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( Min( FirstVNF_RAM ,MRS ) * Max( ( FirstVNF_RAM - CRS ),( ( AMS - FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,Max( ( Min( DS ,MUR ) + ( RMSe + DS ) ),MUR ) ) + Min( DS ,( RRSe * MUR ) ) )", "obj1": 0.5083333333333333, "obj2": 0.4218423259083124}, {"determining": "( MDR / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( RMSe ,Max( MUR,MUM ) ) )", "obj1": 0.49375, "obj2": 0.4237777809985441}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( ( PN + FirstVNF_CPU ) * CRS ) )", "choosing": "Min( Min( Max( RRSe,MUC ) ,( RRSe + CS ) ) ,Max( MUM,MLU ) )", "obj1": 0.44375, "obj2": 0.48522172552325477}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "Max( ( FirstVNF_Mem * Min( FirstVNF_Mem_Server ,Const ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) )", "obj1": 0.5416666666666666, "obj2": 0.390852916856811}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) )", "choosing": "Min( ( MLU * MUC ) ,( RRSe + CS ) )", "obj1": 0.41041666666666665, "obj2": 0.5120381922115835}], "16": [{"determining": "( Min( BR ,( ARS - ( MRS - Min( Const ,FirstVNF_CPU_Server ) ) ) ) - ( RRS + ACS ) )", "choosing": "( ( MLU - ( RRSe * MUR ) ) - Min( ( MLU * Min( ( MUM - RMSe ) ,MUR ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server / PN ) * Min( FirstVNF_RAM_Server ,ARS ) ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,DS ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( Min( FirstVNF_RAM ,MRS ) * Max( ( FirstVNF_RAM - CRS ),( ( AMS - FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,Max( ( Min( DS ,MUR ) + ( RMSe + DS ) ),MUR ) ) + Min( DS ,( RRSe * MUR ) ) )", "obj1": 0.5083333333333333, "obj2": 0.4218423259083124}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( ( PN + FirstVNF_CPU ) * CRS ) )", "choosing": "Min( Min( Max( RRSe,MUC ) ,( RRSe + CS ) ) ,Max( MUM,MLU ) )", "obj1": 0.44375, "obj2": 0.48522172552325477}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( MDR / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( RMSe ,Max( MUR,MUM ) ) )", "obj1": 0.49375, "obj2": 0.4237777809985441}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( PN - FirstVNF_CPU ) + PN )", "choosing": "( ( MUC / ( MUC / MUC ) ) + RCSe )", "obj1": 0.99375, "obj2": 0.0031262860008537713}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}], "17": [{"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( CS - Min( ( RMSe * CS ) ,( MUC - MUC ) ) ) / ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ARS - ( MRS - Min( Const ,FirstVNF_CPU_Server ) ) ) ) - ( RRS + ACS ) )", "choosing": "( ( MLU - ( RRSe * MUR ) ) - Min( ( MLU * Min( ( MUM - RMSe ) ,MUR ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( BR - DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / CS ) / ( CS - RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( PN + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + CS ) )", "obj1": 0.4166666666666667, "obj2": 0.5081060839625297}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( PN - FirstVNF_CPU ) + PN )", "choosing": "( ( MUC / ( MUC / MUC ) ) + RCSe )", "obj1": 0.99375, "obj2": 0.0031262860008537713}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.39791666666666664, "obj2": 0.5256847524884892}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( AMS - FirstVNF_Mem ) )", "choosing": "Min( ( RRSe * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.4375, "obj2": 0.48776677029542387}], "18": [{"determining": "Min( ( Min( Max( Max( ( ( ( PN - FirstVNF_CPU ) + Min( BR ,PN ) ) * ( ( Const - FirstVNF_RAM ) * ( FirstVNF_Mem_Server - AMS ) ) ),( ( ( MRS - ARS ) / ( ACS - PN ) ) / ( ( MDR + MRS ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ),Min( Min( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( AMS + AMS ) ) ,Min( Min( ARS ,MDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM - MDR ) - ( MDR / MRS ) ) ) ) ) ,Max( ( ( ( ( PN / FirstVNF_Mem ) * ( FirstVNF_RAM_Server / PN ) ) * ( ( DDR * MDR ) + ( FirstVNF_Mem_Server - PN ) ) ) - ( Min( ( FirstVNF_RAM_Server / DDR ) ,( AMS - FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU - CRS ) ,( PN - BR ) ) ) ),Min( ( Max( ( ARS / Const ),Max( DDR,ARS ) ) * ( Max( FirstVNF_Mem_Server,MDR ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) ,Min( ( ( CRS * CRS ) / ( ARS * FirstVNF_Mem ) ) ,Min( Max( FirstVNF_Mem,RRS ) ,Min( MDR ,PN ) ) ) ) ) ) + Min( ( ( ( Max( ( BR + MRS ),( BR / FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),Min( MRS ,PN ) ) ) - ( ( ( FirstVNF_Mem / AMS ) + ( DDR * MDR ) ) * Max( ( CRS - PN ),( AMS * MRS ) ) ) ) * Min( ( Min( Max( AMS,FirstVNF_RAM ) ,( FirstVNF_Mem_Server - MRS ) ) + Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_Mem * BR ) ) ) ,( ( ( MRS / MDR ) * ( FirstVNF_Mem * MRS ) ) - ( Min( Const ,BR ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server * Const ) * Min( ACS ,PN ) ) / Min( ( RRS - MDR ) ,( BR - DDR ) ) ) * Max( ( Max( FirstVNF_CPU_Server,AMS ) / ( CRS * MRS ) ),Max( ( FirstVNF_CPU + ACS ),Max( RRS,PN ) ) ) ) ,( ( ( ( AMS / BR ) + ( Const - MRS ) ) * Max( ( MRS * FirstVNF_RAM ),Min( FirstVNF_RAM ,BR ) ) ) + Max( Min( ( BR / AMS ) ,( MRS / MRS ) ),( Max( FirstVNF_Mem,RRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) ) ) ) ,Min( Min( ( ( ( Max( ( MDR + PN ),( ACS + FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem * RRS ) ,( CRS + PN ) ) ) - ( ( ( BR + FirstVNF_CPU ) + ( MRS * AMS ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) - Min( MRS ,ACS ) ) ) ) * ( ( ( ( PN - AMS ) + ( BR * FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_CPU_Server,MDR ) + Min( Const ,RRS ) ) ) * Min( Min( ( PN / FirstVNF_RAM_Server ) ,Max( RRS,FirstVNF_CPU ) ) ,Min( ( BR + MDR ) ,( FirstVNF_Mem * RRS ) ) ) ) ) ,( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM_Server ,ACS ) / ( DDR * FirstVNF_RAM ) ) ) ,Min( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( AMS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM - ACS ) - ( CRS * FirstVNF_CPU ) ) ) ) / Min( ( ( Min( FirstVNF_Mem ,ACS ) - Max( ACS,FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_Mem + ARS ),Min( MRS ,MDR ) ) ) ,Min( ( Max( RRS,RRS ) + Min( BR ,Const ) ) ,Max( ( MRS - MRS ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) ) ) ,( Min( ( Max( Max( ( ACS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,BR ) ),( ( FirstVNF_Mem_Server - Const ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) - ( ( Max( ARS,PN ) * ( Const - ARS ) ) - Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ,( ( Max( Max( FirstVNF_Mem,DDR ),( ARS / BR ) ) / ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * DDR ) ) ) - Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( DDR - MDR ) ) ,( ( FirstVNF_Mem * AMS ) / Max( PN,BR ) ) ) ) ) * ( ( Min( Max( Max( FirstVNF_RAM,RRS ),( FirstVNF_CPU_Server - ACS ) ) ,( ( ACS * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem ) ) ) / ( ( ( BR - FirstVNF_CPU_Server ) * Min( Const ,FirstVNF_RAM ) ) / ( Min( DDR ,MDR ) - Min( FirstVNF_RAM_Server ,ACS ) ) ) ) + ( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_RAM_Server / RRS ) ) / ( ( FirstVNF_RAM_Server / RRS ) + ( Const / FirstVNF_CPU ) ) ) * ( ( ( DDR / FirstVNF_RAM ) * ( MDR + RRS ) ) * Max( ( RRS / ARS ),( DDR - AMS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Min( ( CS * MLU ) ,( RRSe / MUR ) ) / ( ( RRSe - RMSe ) + ( RCSe - CS ) ) ) * ( ( ( MUC * MUM ) + ( CS * MUC ) ) / ( ( MUC * MUC ) / ( MUC - MUC ) ) ) ) + Max( ( ( Min( RMSe ,DS ) * Max( RMSe,MUR ) ) * ( ( MUC + RRSe ) * ( MUR * RRSe ) ) ),( ( ( RMSe - CS ) + Max( RMSe,MLU ) ) / ( Max( RMSe,CS ) - ( MUR - RMSe ) ) ) ) ) * Min( ( ( ( ( CS * RCSe ) * ( MUR - CS ) ) * ( ( MUC - MLU ) * Min( RMSe ,RMSe ) ) ) + Max( Min( ( RMSe / MLU ) ,( RMSe / RCSe ) ),( ( RRSe + CS ) * ( MUM - MUR ) ) ) ) ,Min( ( Min( Min( MLU ,MLU ) ,( CS * MUR ) ) / ( ( MUM * MUC ) - ( DS * RMSe ) ) ) ,( ( ( MUC - RRSe ) + ( MLU * RCSe ) ) + ( ( CS / RRSe ) * ( RMSe + RRSe ) ) ) ) ) ) * ( ( ( ( ( ( DS - DS ) + Max( MLU,RRSe ) ) + Max( ( RRSe / CS ),( MUR / MLU ) ) ) / ( Min( Max( RCSe,DS ) ,( MUM / MUM ) ) * ( Max( RCSe,DS ) * Max( MUC,MLU ) ) ) ) / ( ( ( ( DS - CS ) * Min( CS ,RRSe ) ) / ( Min( RMSe ,RRSe ) * Max( CS,RRSe ) ) ) + ( ( Min( RRSe ,RCSe ) * ( RCSe / MLU ) ) + ( Max( RMSe,RMSe ) * ( MUC + RRSe ) ) ) ) ) / ( ( Max( ( ( MLU / MUR ) * ( MUC - MLU ) ),( Min( RRSe ,RRSe ) * ( RCSe + MUR ) ) ) - ( ( ( MUR / CS ) + Max( RRSe,MUM ) ) / ( ( CS + MUR ) / Min( MUC ,MLU ) ) ) ) + Max( ( ( Min( CS ,RCSe ) + Min( CS ,MUC ) ) / ( ( RMSe * MUC ) / Min( MUR ,MUM ) ) ),( Max( Max( MLU,MLU ),( RMSe - RMSe ) ) + Max( Max( MUC,RMSe ),( MLU + DS ) ) ) ) ) ) ) + ( Max( ( ( ( Max( ( DS * MUR ),Min( CS ,RRSe ) ) - Min( ( RMSe + MUR ) ,( MUC - DS ) ) ) - ( ( ( RCSe / MUR ) / ( RRSe + MUR ) ) - ( ( MLU + RMSe ) - Max( MUC,MUR ) ) ) ) + ( ( Max( ( MUM - MLU ),Min( MUM ,MLU ) ) + Min( Max( MUR,RMSe ) ,Min( MUM ,MUR ) ) ) - ( ( ( RCSe + DS ) * Max( CS,CS ) ) * ( ( DS - MUM ) / Min( MLU ,MUC ) ) ) ) ),( Min( Min( ( Min( RCSe ,MUC ) + ( RCSe * MUR ) ) ,( ( RCSe + CS ) + Min( RCSe ,MUM ) ) ) ,( ( ( DS * DS ) / ( CS / MUM ) ) - Max( Max( MUC,RCSe ),Max( MLU,RCSe ) ) ) ) * ( Max( Max( Min( MUM ,RRSe ),( MUM / MUR ) ),( ( MLU * MLU ) + ( MUM - MUM ) ) ) - ( ( ( RMSe + RRSe ) * ( RCSe + CS ) ) * Min( Min( MUR ,MUM ) ,Min( MLU ,MUR ) ) ) ) ) ) + Min( ( Max( ( ( Min( MUR ,MUR ) * Min( RRSe ,MUC ) ) + ( Max( RMSe,MUC ) - ( RMSe - RRSe ) ) ),( ( ( DS + MUC ) / Max( CS,MUR ) ) + Min( Max( RCSe,RCSe ) ,Min( MUR ,RMSe ) ) ) ) / ( ( ( ( DS - MUR ) - ( MUR - RRSe ) ) - ( ( MUM - RRSe ) * Max( MUC,MUC ) ) ) + Min( Min( ( MLU + CS ) ,( RMSe * DS ) ) ,( ( MUC - CS ) - Min( RCSe ,MLU ) ) ) ) ) ,( Min( ( ( Min( MUC ,MUC ) + ( MUM - RCSe ) ) * ( Min( MUC ,MUM ) / Min( RRSe ,RRSe ) ) ) ,( Max( ( MUM * RRSe ),Max( MUM,RMSe ) ) + ( ( MLU * CS ) * ( DS * MUC ) ) ) ) * Min( ( ( ( RRSe * RRSe ) + ( RRSe + MUM ) ) - ( ( MUM / MLU ) * Min( RCSe ,CS ) ) ) ,( Min( Max( CS,RMSe ) ,( DS + MUC ) ) / ( Max( CS,RMSe ) + Max( CS,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( CS - Min( ( RMSe * CS ) ,( MUC - MUC ) ) ) / ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( AMS - FirstVNF_Mem ) )", "choosing": "Min( ( RRSe * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.4375, "obj2": 0.48776677029542387}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ( BR - DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / CS ) / ( CS - RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( PN - FirstVNF_CPU ) + PN )", "choosing": "( ( MUC / ( MUC / MUC ) ) + RCSe )", "obj1": 0.99375, "obj2": 0.0031262860008537713}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( PN + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + CS ) )", "obj1": 0.4166666666666667, "obj2": 0.5081060839625297}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}], "19": [{"determining": "( Min( BR ,ARS ) + ( ( MDR - AMS ) / Const ) )", "choosing": "Max( Max( DS,RRSe ),Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( PN - FirstVNF_CPU ) + Min( BR ,PN ) ) * ( ( Const - FirstVNF_RAM ) * ( FirstVNF_Mem_Server - AMS ) ) ),( ( ( MRS - ARS ) / ( ACS - PN ) ) / ( ( MDR + MRS ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ),Min( Min( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( AMS + AMS ) ) ,Min( Min( ARS ,MDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM - MDR ) - ( MDR / MRS ) ) ) ) ) ,Max( ( ( ( ( PN / FirstVNF_Mem ) * ( FirstVNF_RAM_Server / PN ) ) * ( ( DDR * MDR ) + ( FirstVNF_Mem_Server - PN ) ) ) - ( Min( ( FirstVNF_RAM_Server / DDR ) ,( AMS - FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU - CRS ) ,( PN - BR ) ) ) ),Min( ( Max( ( ARS / Const ),Max( DDR,ARS ) ) * ( Max( FirstVNF_Mem_Server,MDR ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) ,Min( ( ( CRS * CRS ) / ( ARS * FirstVNF_Mem ) ) ,Min( Max( FirstVNF_Mem,RRS ) ,Min( MDR ,PN ) ) ) ) ) ) + Min( ( ( ( Max( ( BR + MRS ),( BR / FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),Min( MRS ,PN ) ) ) - ( ( ( FirstVNF_Mem / AMS ) + ( DDR * MDR ) ) * Max( ( CRS - PN ),( AMS * MRS ) ) ) ) * Min( ( Min( Max( AMS,FirstVNF_RAM ) ,( FirstVNF_Mem_Server - MRS ) ) + Max( Min( FirstVNF_RAM_Server ,RRS ),( FirstVNF_Mem * BR ) ) ) ,( ( ( MRS / MDR ) * ( FirstVNF_Mem * MRS ) ) - ( Min( Const ,BR ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server * Const ) * Min( ACS ,PN ) ) / Min( ( RRS - MDR ) ,( BR - DDR ) ) ) * Max( ( Max( FirstVNF_CPU_Server,AMS ) / ( CRS * MRS ) ),Max( ( FirstVNF_CPU + ACS ),Max( RRS,PN ) ) ) ) ,( ( ( ( AMS / BR ) + ( Const - MRS ) ) * Max( ( MRS * FirstVNF_RAM ),Min( FirstVNF_RAM ,BR ) ) ) + Max( Min( ( BR / AMS ) ,( MRS / MRS ) ),( Max( FirstVNF_Mem,RRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) ) ) ) ,Min( Min( ( ( ( Max( ( MDR + PN ),( ACS + FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem * RRS ) ,( CRS + PN ) ) ) - ( ( ( BR + FirstVNF_CPU ) + ( MRS * AMS ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) - Min( MRS ,ACS ) ) ) ) * ( ( ( ( PN - AMS ) + ( BR * FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_CPU_Server,MDR ) + Min( Const ,RRS ) ) ) * Min( Min( ( PN / FirstVNF_RAM_Server ) ,Max( RRS,FirstVNF_CPU ) ) ,Min( ( BR + MDR ) ,( FirstVNF_Mem * RRS ) ) ) ) ) ,( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_RAM_Server ,ACS ) / ( DDR * FirstVNF_RAM ) ) ) ,Min( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( AMS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM - ACS ) - ( CRS * FirstVNF_CPU ) ) ) ) / Min( ( ( Min( FirstVNF_Mem ,ACS ) - Max( ACS,FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_Mem + ARS ),Min( MRS ,MDR ) ) ) ,Min( ( Max( RRS,RRS ) + Min( BR ,Const ) ) ,Max( ( MRS - MRS ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) ) ) ,( Min( ( Max( Max( ( ACS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,BR ) ),( ( FirstVNF_Mem_Server - Const ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) - ( ( Max( ARS,PN ) * ( Const - ARS ) ) - Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ,( ( Max( Max( FirstVNF_Mem,DDR ),( ARS / BR ) ) / ( Min( DDR ,ACS ) - ( FirstVNF_CPU_Server * DDR ) ) ) - Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( DDR - MDR ) ) ,( ( FirstVNF_Mem * AMS ) / Max( PN,BR ) ) ) ) ) * ( ( Min( Max( Max( FirstVNF_RAM,RRS ),( FirstVNF_CPU_Server - ACS ) ) ,( ( ACS * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem ) ) ) / ( ( ( BR - FirstVNF_CPU_Server ) * Min( Const ,FirstVNF_RAM ) ) / ( Min( DDR ,MDR ) - Min( FirstVNF_RAM_Server ,ACS ) ) ) ) + ( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_RAM_Server / RRS ) ) / ( ( FirstVNF_RAM_Server / RRS ) + ( Const / FirstVNF_CPU ) ) ) * ( ( ( DDR / FirstVNF_RAM ) * ( MDR + RRS ) ) * Max( ( RRS / ARS ),( DDR - AMS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Min( ( CS * MLU ) ,( RRSe / MUR ) ) / ( ( RRSe - RMSe ) + ( RCSe - CS ) ) ) * ( ( ( MUC * MUM ) + ( CS * MUC ) ) / ( ( MUC * MUC ) / ( MUC - MUC ) ) ) ) + Max( ( ( Min( RMSe ,DS ) * Max( RMSe,MUR ) ) * ( ( MUC + RRSe ) * ( MUR * RRSe ) ) ),( ( ( RMSe - CS ) + Max( RMSe,MLU ) ) / ( Max( RMSe,CS ) - ( MUR - RMSe ) ) ) ) ) * Min( ( ( ( ( CS * RCSe ) * ( MUR - CS ) ) * ( ( MUC - MLU ) * Min( RMSe ,RMSe ) ) ) + Max( Min( ( RMSe / MLU ) ,( RMSe / RCSe ) ),( ( RRSe + CS ) * ( MUM - MUR ) ) ) ) ,Min( ( Min( Min( MLU ,MLU ) ,( CS * MUR ) ) / ( ( MUM * MUC ) - ( DS * RMSe ) ) ) ,( ( ( MUC - RRSe ) + ( MLU * RCSe ) ) + ( ( CS / RRSe ) * ( RMSe + RRSe ) ) ) ) ) ) * ( ( ( ( ( ( DS - DS ) + Max( MLU,RRSe ) ) + Max( ( RRSe / CS ),( MUR / MLU ) ) ) / ( Min( Max( RCSe,DS ) ,( MUM / MUM ) ) * ( Max( RCSe,DS ) * Max( MUC,MLU ) ) ) ) / ( ( ( ( DS - CS ) * Min( CS ,RRSe ) ) / ( Min( RMSe ,RRSe ) * Max( CS,RRSe ) ) ) + ( ( Min( RRSe ,RCSe ) * ( RCSe / MLU ) ) + ( Max( RMSe,RMSe ) * ( MUC + RRSe ) ) ) ) ) / ( ( Max( ( ( MLU / MUR ) * ( MUC - MLU ) ),( Min( RRSe ,RRSe ) * ( RCSe + MUR ) ) ) - ( ( ( MUR / CS ) + Max( RRSe,MUM ) ) / ( ( CS + MUR ) / Min( MUC ,MLU ) ) ) ) + Max( ( ( Min( CS ,RCSe ) + Min( CS ,MUC ) ) / ( ( RMSe * MUC ) / Min( MUR ,MUM ) ) ),( Max( Max( MLU,MLU ),( RMSe - RMSe ) ) + Max( Max( MUC,RMSe ),( MLU + DS ) ) ) ) ) ) ) + ( Max( ( ( ( Max( ( DS * MUR ),Min( CS ,RRSe ) ) - Min( ( RMSe + MUR ) ,( MUC - DS ) ) ) - ( ( ( RCSe / MUR ) / ( RRSe + MUR ) ) - ( ( MLU + RMSe ) - Max( MUC,MUR ) ) ) ) + ( ( Max( ( MUM - MLU ),Min( MUM ,MLU ) ) + Min( Max( MUR,RMSe ) ,Min( MUM ,MUR ) ) ) - ( ( ( RCSe + DS ) * Max( CS,CS ) ) * ( ( DS - MUM ) / Min( MLU ,MUC ) ) ) ) ),( Min( Min( ( Min( RCSe ,MUC ) + ( RCSe * MUR ) ) ,( ( RCSe + CS ) + Min( RCSe ,MUM ) ) ) ,( ( ( DS * DS ) / ( CS / MUM ) ) - Max( Max( MUC,RCSe ),Max( MLU,RCSe ) ) ) ) * ( Max( Max( Min( MUM ,RRSe ),( MUM / MUR ) ),( ( MLU * MLU ) + ( MUM - MUM ) ) ) - ( ( ( RMSe + RRSe ) * ( RCSe + CS ) ) * Min( Min( MUR ,MUM ) ,Min( MLU ,MUR ) ) ) ) ) ) + Min( ( Max( ( ( Min( MUR ,MUR ) * Min( RRSe ,MUC ) ) + ( Max( RMSe,MUC ) - ( RMSe - RRSe ) ) ),( ( ( DS + MUC ) / Max( CS,MUR ) ) + Min( Max( RCSe,RCSe ) ,Min( MUR ,RMSe ) ) ) ) / ( ( ( ( DS - MUR ) - ( MUR - RRSe ) ) - ( ( MUM - RRSe ) * Max( MUC,MUC ) ) ) + Min( Min( ( MLU + CS ) ,( RMSe * DS ) ) ,( ( MUC - CS ) - Min( RCSe ,MLU ) ) ) ) ) ,( Min( ( ( Min( MUC ,MUC ) + ( MUM - RCSe ) ) * ( Min( MUC ,MUM ) / Min( RRSe ,RRSe ) ) ) ,( Max( ( MUM * RRSe ),Max( MUM,RMSe ) ) + ( ( MLU * CS ) * ( DS * MUC ) ) ) ) * Min( ( ( ( RRSe * RRSe ) + ( RRSe + MUM ) ) - ( ( MUM / MLU ) * Min( RCSe ,CS ) ) ) ,( Min( Max( CS,RMSe ) ,( DS + MUC ) ) / ( Max( CS,RMSe ) + Max( CS,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( AMS / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( RMSe / MUM ) / ( DS - RRSe ) ) )", "obj1": 0.45208333333333334, "obj2": 0.4809045441751312}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( FirstVNF_CPU_Server / PN ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( AMS - FirstVNF_Mem ) )", "choosing": "Min( ( RRSe * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.4375, "obj2": 0.48776677029542387}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( PN + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + CS ) )", "obj1": 0.4166666666666667, "obj2": 0.5081060839625297}, {"determining": "( ( ( Max( Min( Max( Min( ( DDR - MRS ) ,( ARS + FirstVNF_CPU ) ),( ( MRS - RRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Max( ( MRS / RRS ),( MRS - FirstVNF_RAM ) ) + Max( Min( Const ,BR ),( CRS * FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server * MDR ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + ( ( ( BR / BR ) / ( FirstVNF_CPU + RRS ) ) - ( ( FirstVNF_CPU + Const ) - Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) / Max( ( Min( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( AMS - ACS ) ) ,( ( AMS / MRS ) - Min( Const ,FirstVNF_RAM_Server ) ) ) * ( ( ( ACS / AMS ) * ( FirstVNF_Mem * DDR ) ) * ( ( AMS / FirstVNF_RAM_Server ) / Min( DDR ,ARS ) ) ) ),Max( Max( Min( ( FirstVNF_Mem - ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( ( MRS * MRS ) / ( ACS - RRS ) ) ),Max( ( Max( Const,MDR ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),Min( Max( ACS,FirstVNF_RAM_Server ) ,( ACS / PN ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_Mem + DDR ) + ( Const * BR ) ) - ( ( FirstVNF_Mem_Server + PN ) / ( FirstVNF_CPU_Server + MDR ) ) ) * ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - CRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_RAM * DDR ) ) ) ) ,( ( Min( ( Const - AMS ) ,Max( MRS,MDR ) ) / ( ( RRS * FirstVNF_CPU_Server ) - ( ARS / AMS ) ) ) / Max( ( Max( FirstVNF_CPU_Server,RRS ) - ( MRS - MDR ) ),( ( PN - FirstVNF_RAM_Server ) + ( Const * MDR ) ) ) ) ) - Min( ( Max( Min( ( FirstVNF_CPU * ARS ) ,( AMS * FirstVNF_RAM ) ),( Min( FirstVNF_Mem ,DDR ) + ( MRS + CRS ) ) ) + ( ( Min( MRS ,Const ) * ( FirstVNF_Mem_Server + ARS ) ) + ( Max( AMS,ACS ) + ( ARS - ARS ) ) ) ) ,Min( Min( Max( Min( Const ,FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM ) ) ,Min( Max( PN,CRS ) ,( BR - PN ) ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( MRS + FirstVNF_CPU_Server ) ) - ( ( BR * ARS ) * Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( ( ( ( ( Max( Const,CRS ) / ( ARS - BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) + Max( ( ( FirstVNF_Mem - DDR ) - ( MDR * ACS ) ),( ( RRS / RRS ) - Max( MDR,ARS ) ) ) ) - ( Min( ( Min( Const ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,AMS ) ) ,( Max( FirstVNF_CPU,PN ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( Min( ( ACS - ARS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_CPU / AMS ) ,( FirstVNF_CPU_Server / ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,Const ) ) - ( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem * RRS ) ) ) * ( Max( ( Const + MRS ),Min( MDR ,BR ) ) * Max( ( ARS / FirstVNF_Mem ),( FirstVNF_Mem_Server / ACS ) ) ) ) - ( ( ( Max( PN,FirstVNF_Mem_Server ) * Min( ACS ,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MDR ) / Max( Const,DDR ) ) ) * ( ( ( ACS + Const ) + Max( MRS,FirstVNF_Mem ) ) + Min( Min( MRS ,RRS ) ,( FirstVNF_RAM_Server / Const ) ) ) ) ) ) - ( ( ( ( ( Min( ACS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,ARS ) ) / ( Min( ACS ,DDR ) - Min( DDR ,FirstVNF_Mem ) ) ) * Max( Min( ( FirstVNF_Mem_Server * BR ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * Min( AMS ,AMS ) ) ) ) - ( ( Min( ( BR / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) + Min( Min( RRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) / ( Max( ( AMS - MDR ),( FirstVNF_CPU / FirstVNF_Mem ) ) - ( Max( DDR,AMS ) / ( BR - FirstVNF_CPU ) ) ) ) ) - ( ( Max( ( Max( ACS,MDR ) + Min( FirstVNF_CPU ,MRS ) ),( ( MRS / AMS ) * ( AMS * BR ) ) ) * ( Min( ( MDR - MDR ) ,Min( MDR ,FirstVNF_CPU_Server ) ) / Min( ( PN * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM - AMS ) / ( ARS / FirstVNF_RAM ) ) + Max( ( PN * BR ),Max( FirstVNF_Mem,BR ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) * Max( MRS,MDR ) ) + ( ( RRS * BR ) - ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Min( ( Min( ( Max( ( ( CS + RRSe ) * ( MUM + RMSe ) ),Min( ( MLU / MUC ) ,( MLU / RCSe ) ) ) * ( ( ( RMSe * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU - DS ) - ( MUM / DS ) ) ) ) ,( Min( ( Min( MUC ,DS ) / ( MLU * MUR ) ) ,( ( CS - MUR ) + ( RCSe - MUR ) ) ) * Min( ( Max( MUM,RMSe ) - ( CS / RCSe ) ) ,Max( Min( MUR ,DS ),Max( MLU,MUM ) ) ) ) ) + Max( Max( Min( ( ( RMSe * MLU ) - Min( DS ,RRSe ) ) ,( Min( MUM ,RRSe ) - ( DS + RMSe ) ) ),( ( Min( RCSe ,MUC ) / ( MUC * MLU ) ) + Max( ( MUC - RCSe ),Min( RCSe ,RMSe ) ) ) ),Min( ( Max( ( MUM + RMSe ),Max( DS,MUM ) ) / ( ( CS - RCSe ) + ( RMSe + MUR ) ) ) ,Max( ( ( CS / DS ) + ( CS + MLU ) ),Max( Max( MLU,RRSe ),Min( RRSe ,MUM ) ) ) ) ) ) ,Min( Max( ( ( ( ( RMSe + RCSe ) * ( MUM + RMSe ) ) / ( Min( MLU ,MLU ) / Max( DS,MUC ) ) ) * ( Max( ( RMSe - MUC ),( RRSe * DS ) ) * ( ( DS + CS ) - ( CS / CS ) ) ) ),Min( Max( ( ( RMSe / MUC ) / ( MUR / MLU ) ),( Max( MUM,MUC ) - Max( MLU,RMSe ) ) ) ,( ( ( DS / RCSe ) * ( MUC * RRSe ) ) * Min( ( CS + RCSe ) ,Min( RMSe ,CS ) ) ) ) ) ,Max( ( ( ( Min( MUC ,MUC ) / Max( CS,MUM ) ) / Max( ( RCSe / MLU ),( MUC / CS ) ) ) * ( ( ( MLU * MUC ) * ( RMSe - MLU ) ) * ( Min( MUR ,DS ) - ( MUM * DS ) ) ) ),( ( Max( ( RMSe / MUC ),Max( RMSe,MUR ) ) * ( ( MUR - MUR ) * Max( DS,MUC ) ) ) - ( ( ( MLU * MLU ) * ( RCSe + MLU ) ) * ( ( MUC - MUR ) * Max( RMSe,CS ) ) ) ) ) ) ) / Min( ( ( ( ( ( Max( MLU,MUM ) + ( MLU / RCSe ) ) * Min( ( RCSe - MUM ) ,Max( CS,CS ) ) ) * Min( ( ( RMSe / MUR ) * Max( RMSe,RRSe ) ) ,( ( CS - MLU ) + ( DS - DS ) ) ) ) - ( ( ( ( MLU * DS ) - ( MUR - RMSe ) ) / ( ( MLU * MUR ) * Max( MUR,DS ) ) ) / Max( Min( ( DS + CS ) ,Min( RRSe ,RMSe ) ),Min( Min( RRSe ,RCSe ) ,( MLU * RRSe ) ) ) ) ) / Max( Min( Max( ( Max( RCSe,RCSe ) / ( RRSe + RMSe ) ),( ( DS * CS ) + ( DS + MUC ) ) ) ,( Min( ( MUR * RRSe ) ,( MUM / MUM ) ) / ( ( RMSe - RCSe ) * ( MLU * MUC ) ) ) ),Min( Min( Min( ( CS * MUC ) ,( MUM - RMSe ) ) ,Min( ( DS - DS ) ,( CS / MLU ) ) ) ,( ( Max( MLU,MUM ) - ( DS + CS ) ) + Max( Min( MUC ,MUC ),( MLU / MUM ) ) ) ) ) ) ,( ( ( ( ( ( DS * DS ) * ( MUC * RCSe ) ) / ( ( DS + MLU ) / ( MUR * MUR ) ) ) * Max( ( ( MUC * RCSe ) / ( RCSe * MLU ) ),Min( ( MUR + RMSe ) ,( DS / DS ) ) ) ) - Max( Max( ( ( RRSe * MUC ) * ( RMSe / MUM ) ),( Min( MUR ,MLU ) + ( MUC / RRSe ) ) ),( Min( Max( CS,RMSe ) ,( CS - CS ) ) / Min( ( RMSe - MUR ) ,Min( RCSe ,RRSe ) ) ) ) ) + ( ( Max( ( Max( CS,RMSe ) - Max( RRSe,RMSe ) ),Max( Max( RRSe,CS ),( MLU / RCSe ) ) ) + ( Max( ( MLU - MUR ),Min( RCSe ,MUR ) ) + ( ( DS - CS ) - ( DS / RRSe ) ) ) ) * ( Min( ( ( RCSe + DS ) + ( RRSe / MLU ) ) ,Min( ( MLU / MLU ) ,Min( DS ,MUM ) ) ) * ( ( ( MUR / CS ) / ( MUR + RCSe ) ) - Min( ( MUC * DS ) ,( RRSe * CS ) ) ) ) ) ) ) )", "obj1": 0.975, "obj2": 0.027452785156172804}, {"determining": "( ( PN - FirstVNF_CPU ) + PN )", "choosing": "( ( MUC / ( MUC / MUC ) ) + RCSe )", "obj1": 0.99375, "obj2": 0.0031262860008537713}], "20": [{"determining": "( Min( BR ,ARS ) + ( ( MDR - AMS ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) + ( ( MDR - AMS ) / Const ) )", "choosing": "Max( Max( DS,RRSe ),Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08897423179566386}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.45208333333333334, "obj2": 0.471624296241639}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( FirstVNF_CPU_Server / PN ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe + DS ) ) / MUC ) + Max( MUC,MUR ) )", "obj1": 0.9229166666666667, "obj2": 0.05828563469022427}, {"determining": "( ARS + Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * RMSe ) + Max( ( RCSe + MLU ),( RCSe * MUM ) ) )", "obj1": 0.425, "obj2": 0.49328480350849313}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( AMS - FirstVNF_Mem ) )", "choosing": "Min( ( RRSe * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.4375, "obj2": 0.48776677029542387}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ( FirstVNF_CPU_Server / PN ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( PN + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + CS ) )", "obj1": 0.4166666666666667, "obj2": 0.5081060839625297}], "21": [{"determining": "( ( FirstVNF_RAM - CRS ) / ( ( FirstVNF_RAM - CRS ) - FirstVNF_RAM ) )", "choosing": "Min( Max( DS,DS ) ,( CS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) + ( ( MDR - AMS ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08897423179566386}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( FirstVNF_CPU - ( ( ( Min( PN ,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) - ACS ) * Max( ( FirstVNF_RAM - CRS ),( RRS * RRS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) + Min( MLU ,DS ) ) + Max( ( MUC / MUC ),Max( ( Min( DS ,MUR ) + ( RMSe + DS ) ),MUR ) ) )", "obj1": 0.5104166666666666, "obj2": 0.41930624477786926}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.45208333333333334, "obj2": 0.471624296241639}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( AMS - FirstVNF_Mem ) )", "choosing": "Min( ( RRSe * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.4375, "obj2": 0.48776677029542387}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_CPU_Server / BR ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( RMSe / ( ( RCSe + RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 0.41875, "obj2": 0.49243989398004395}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,RRSe ),Max( RRSe,RMSe ) )", "obj1": 0.9104166666666667, "obj2": 0.07369291413691675}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( ( BR - FirstVNF_CPU_Server ) + ( Const + FirstVNF_Mem ) ) )", "choosing": "Max( Max( DS,Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) ),Max( MLU,RMSe ) )", "obj1": 0.93125, "obj2": 0.056171237178251864}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( PN + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + CS ) )", "obj1": 0.4166666666666667, "obj2": 0.5081060839625297}, {"determining": "( ( PN - FirstVNF_CPU ) + ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,( RMSe + DS ) ) )", "obj1": 0.91875, "obj2": 0.06038364096063485}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}], "22": [{"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Min( FirstVNF_RAM ,MRS ) - FirstVNF_RAM ) )", "choosing": "Min( Max( MLU,Min( Max( MLU,DS ) ,( CS - CS ) ) ) ,( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - CRS ) / ( ( FirstVNF_RAM - CRS ) - FirstVNF_RAM ) )", "choosing": "Min( Max( DS,DS ) ,( CS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08897423179566386}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( BR / ( FirstVNF_Mem_Server - MDR ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( RMSe - MUR ) ) / ( DS - MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.6111296036544948}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( FirstVNF_CPU - ( ( ( Min( PN ,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) - ACS ) * Max( ( FirstVNF_RAM - CRS ),( RRS * RRS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) + Min( MLU ,DS ) ) + Max( ( MUC / MUC ),Max( ( Min( DS ,MUR ) + ( RMSe + DS ) ),MUR ) ) )", "obj1": 0.5104166666666666, "obj2": 0.41930624477786926}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.45208333333333334, "obj2": 0.471624296241639}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( AMS - FirstVNF_Mem ) )", "choosing": "Min( ( RRSe * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.4375, "obj2": 0.48776677029542387}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_CPU_Server / BR ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( RMSe / ( ( RCSe + RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 0.41875, "obj2": 0.49243989398004395}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.31666666666666665, "obj2": 0.6063613631062232}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( ( ( Max( ( ( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN + CRS ) ) - ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( PN / FirstVNF_RAM_Server ) ) ) + Max( ( ( FirstVNF_CPU_Server / CRS ) + Max( PN,FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_Mem / BR ) ) ) ),Min( ( ( ( AMS / CRS ) - Min( ARS ,FirstVNF_Mem ) ) - ( ( MRS + PN ) - ( FirstVNF_RAM_Server * ACS ) ) ) ,( ( ( BR - FirstVNF_CPU ) - ( Const / CRS ) ) * ( Min( FirstVNF_CPU ,AMS ) + ( ARS - FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( ( ( ARS / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server - ARS ) ) - ( ( Const + PN ) / ( CRS / MRS ) ) ) / Min( Min( ( FirstVNF_CPU * MRS ) ,( BR * FirstVNF_RAM ) ) ,( ( DDR * FirstVNF_RAM_Server ) + ( Const / PN ) ) ) ) + ( ( ( Max( MRS,FirstVNF_RAM_Server ) - ( BR + MRS ) ) / Min( Max( DDR,AMS ) ,( FirstVNF_CPU_Server + MRS ) ) ) - ( Max( ( AMS - FirstVNF_CPU_Server ),( ARS + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ( ( Max( Max( PN,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,ACS ) ) - Min( ( FirstVNF_Mem_Server * ARS ) ,( DDR - FirstVNF_CPU_Server ) ) ) * Min( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ,( ( MDR / MRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) ) / ( Max( ( ( MDR - Const ) * ( CRS * FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem - CRS ) + ( MDR - MRS ) ) ) * ( ( ( AMS / FirstVNF_CPU ) + ( MDR * Const ) ) / ( ( MDR / CRS ) + ( CRS - BR ) ) ) ) ) * Min( Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( MRS + MDR ) ) * Max( Max( MRS,FirstVNF_RAM_Server ),( BR + RRS ) ) ) ,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem / DDR ) ) + Max( ( Const + MRS ),( FirstVNF_Mem_Server + AMS ) ) ) ) ,( ( ( ( FirstVNF_RAM + PN ) + Min( ARS ,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM - PN ),( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) + Min( Min( ( BR + FirstVNF_Mem_Server ) ,( ARS * ACS ) ) ,( Max( ARS,RRS ) + Max( AMS,ARS ) ) ) ) ) ) ) - ( ( ( Max( Max( Max( ( FirstVNF_CPU + ACS ),Max( FirstVNF_CPU,MDR ) ),( ( MRS * AMS ) + Min( FirstVNF_RAM_Server ,DDR ) ) ),( ( Max( PN,AMS ) - ( MDR / PN ) ) * ( ( MRS - FirstVNF_RAM ) * ( RRS * AMS ) ) ) ) - Max( ( ( ( MRS / CRS ) * ( CRS / FirstVNF_RAM_Server ) ) * ( ( Const + AMS ) + ( ARS / FirstVNF_CPU_Server ) ) ),Max( ( Min( RRS ,FirstVNF_Mem ) - ( FirstVNF_CPU - CRS ) ),Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( ACS + PN ) ) ) ) ) - Min( Min( ( ( ( FirstVNF_RAM + MRS ) / Min( BR ,CRS ) ) / ( ( ARS + BR ) + ( PN - ARS ) ) ) ,( ( ( ARS / FirstVNF_Mem_Server ) - ( Const - DDR ) ) - Max( ( MDR * FirstVNF_Mem ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) ,( ( Max( ( FirstVNF_CPU + PN ),( MDR * ACS ) ) * ( ( FirstVNF_CPU - Const ) * ( ACS / ARS ) ) ) + Min( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) - Min( RRS ,BR ) ) ,( ( ACS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * BR ) ) ) ) ) ) - Max( ( ( ( ( ( FirstVNF_Mem * CRS ) - Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_Mem_Server + ACS ) * ( BR / MRS ) ) ) - ( Min( Min( AMS ,FirstVNF_RAM_Server ) ,( ARS / PN ) ) + ( ( PN + FirstVNF_RAM ) / Max( AMS,FirstVNF_RAM_Server ) ) ) ) + Min( Min( ( Min( ARS ,DDR ) * ( DDR - MDR ) ) ,( ( FirstVNF_RAM - RRS ) / Max( FirstVNF_Mem_Server,BR ) ) ) ,Max( ( ( FirstVNF_CPU_Server - ACS ) * ( ACS + DDR ) ),( ( FirstVNF_RAM / FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ),( ( ( ( ( Const * ACS ) * ( CRS + BR ) ) - ( Min( RRS ,RRS ) - ( ARS - FirstVNF_CPU ) ) ) + ( Max( ( FirstVNF_Mem + BR ),Min( ARS ,MDR ) ) + ( ( AMS - FirstVNF_CPU ) / ( FirstVNF_CPU / BR ) ) ) ) / ( ( ( Min( FirstVNF_Mem ,CRS ) + ( FirstVNF_RAM * Const ) ) - ( ( ACS - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) + ( Max( ( ACS + Const ),( ACS / FirstVNF_CPU ) ) / ( Min( RRS ,FirstVNF_RAM ) * ( BR * PN ) ) ) ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( ( ( Min( RRSe ,CS ) + ( RCSe / RRSe ) ) * Min( ( MUC - MUM ) ,( MUC - MUR ) ) ),( ( Max( MLU,CS ) - Max( MLU,DS ) ) * ( Min( DS ,MLU ) * Max( RCSe,MLU ) ) ) ) ,( ( Max( Min( MUC ,RCSe ),Max( MUR,RRSe ) ) * Min( ( RCSe + RRSe ) ,( RCSe + RRSe ) ) ) * Min( Max( Min( MUR ,RCSe ),( MLU / CS ) ) ,Min( ( MUM * MUR ) ,( RRSe * MUC ) ) ) ) ) - ( ( Min( Max( ( MUR / RMSe ),Min( RCSe ,DS ) ) ,Min( Min( RCSe ,MUR ) ,( CS + MUC ) ) ) * ( ( ( MUM / CS ) * ( MUM - MLU ) ) + ( ( MUM - MUM ) * ( MUR / RMSe ) ) ) ) + Max( ( Min( ( MUR * RRSe ) ,( RRSe - RCSe ) ) * Max( ( MLU - MLU ),( DS + CS ) ) ),( ( ( DS - RCSe ) + Min( RCSe ,DS ) ) * ( Min( DS ,RCSe ) - Min( MUC ,DS ) ) ) ) ) ) ,Max( ( ( ( Max( Max( MUM,MUM ),( CS - MUC ) ) / Min( ( CS * MUC ) ,( MUC / MUM ) ) ) / Max( ( Min( MUC ,CS ) / ( MUR - DS ) ),Min( ( RRSe / MLU ) ,( RMSe + RMSe ) ) ) ) - Min( ( Min( ( RCSe - MLU ) ,Max( MUC,DS ) ) + ( Min( MUR ,RRSe ) * ( MLU / MUR ) ) ) ,Max( ( Max( DS,MUM ) / ( MLU + RMSe ) ),( ( MLU * MUR ) * ( RMSe / MUR ) ) ) ) ),( ( ( Max( ( RMSe * MUR ),( RRSe - RRSe ) ) + Max( ( MUC * MUR ),Min( MUM ,CS ) ) ) + Max( Max( ( RRSe + MLU ),Max( DS,MUR ) ),( Min( MUR ,RMSe ) - Max( MLU,MUM ) ) ) ) * ( ( Max( ( MUC / MUR ),( MUM - MUR ) ) * ( ( MUC - RCSe ) + ( MUM * RMSe ) ) ) / Min( Min( ( RRSe + DS ) ,Max( RMSe,MUC ) ) ,( ( RRSe - MUM ) - Max( RMSe,CS ) ) ) ) ) ) ) ,( Max( ( ( Max( ( ( MUC * MUR ) - ( RCSe - MLU ) ),Max( ( MLU - MUC ),( RMSe + RRSe ) ) ) * Max( Max( ( RCSe * MUC ),( RRSe - CS ) ),( ( MLU * MLU ) * ( MUC / RMSe ) ) ) ) / ( ( Max( Min( MLU ,MUR ),( CS * DS ) ) * ( Min( DS ,DS ) - ( MUC / DS ) ) ) * ( Max( ( MUC - DS ),Min( CS ,RCSe ) ) + Min( Min( DS ,DS ) ,Min( CS ,MUM ) ) ) ) ),Min( ( ( ( ( MLU - RRSe ) / ( MUR + MUR ) ) - Max( Max( DS,DS ),Min( MUR ,MUM ) ) ) * ( ( ( MUC + MUC ) * ( MUM + RRSe ) ) / Max( Min( RCSe ,MUC ),Max( MLU,RRSe ) ) ) ) ,Min( ( Max( ( MUC / MUM ),Min( RCSe ,RRSe ) ) + ( ( RRSe + RMSe ) * ( MUR - DS ) ) ) ,Min( ( ( DS + MUM ) - Max( CS,MUC ) ) ,( Max( DS,DS ) / ( MUC - MUC ) ) ) ) ) ) + ( ( ( Max( Max( ( RMSe - MUM ),Min( MUM ,MUR ) ),( ( RCSe + RRSe ) * ( MUM - RMSe ) ) ) - ( Min( ( MUM + MUM ) ,( RCSe * MUC ) ) * Min( ( RCSe / CS ) ,( MUC * RCSe ) ) ) ) + ( ( Min( ( MUM - MUC ) ,Max( RCSe,RCSe ) ) * ( ( CS - RRSe ) * ( RRSe - MUC ) ) ) - ( ( ( MUC * CS ) * ( MUR - RRSe ) ) / ( Max( DS,MUC ) + ( MLU + MUR ) ) ) ) ) / ( ( ( ( ( MLU / MUM ) / ( CS * MUC ) ) / Max( ( MUC - DS ),( DS * RCSe ) ) ) * ( ( ( MUM - RMSe ) / Max( MUC,MLU ) ) / ( ( RRSe - MUR ) / Min( RRSe ,MUR ) ) ) ) * Max( Min( Min( ( DS * MUM ) ,( DS - RCSe ) ) ,( Min( CS ,MUM ) / Min( RRSe ,MUM ) ) ),Min( ( Max( CS,RRSe ) - ( MUR / RCSe ) ) ,( Max( DS,RMSe ) / ( RCSe + MLU ) ) ) ) ) ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0021984975525033068}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( PN + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + CS ) )", "obj1": 0.4166666666666667, "obj2": 0.5081060839625297}], "23": [{"determining": "( Min( BR ,ARS ) + ( ( MDR - AMS ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Min( FirstVNF_RAM ,MRS ) - FirstVNF_RAM ) )", "choosing": "Min( Max( MLU,Min( Max( MLU,DS ) ,( CS - CS ) ) ) ,( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08897423179566386}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.5270384881477926}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( FirstVNF_CPU - ( ( ( Min( PN ,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) - ACS ) * Max( ( FirstVNF_RAM - CRS ),( RRS * RRS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) + Min( MLU ,DS ) ) + Max( ( MUC / MUC ),Max( ( Min( DS ,MUR ) + ( RMSe + DS ) ),MUR ) ) )", "obj1": 0.5104166666666666, "obj2": 0.41930624477786926}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.45208333333333334, "obj2": 0.471624296241639}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( AMS - FirstVNF_Mem ) )", "choosing": "Min( ( RRSe * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.4375, "obj2": 0.48776677029542387}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "Min( ( FirstVNF_CPU * PN ) ,( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,Min( Max( MLU,DS ) ,( CS - CS ) ) ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29791666666666666, "obj2": 0.6090407520269414}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Const / ARS ) )", "choosing": "( Max( Min( DS ,( Max( MUR,MUM ) / Max( DS,RRSe ) ) ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.56875, "obj2": 0.35425679301692214}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( BR / ( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) ) ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) )", "obj1": 0.28125, "obj2": 0.6285110337266552}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_CPU_Server / BR ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( RMSe / ( ( RCSe + RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 0.41875, "obj2": 0.49243989398004395}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( ( BR / Const ) * BR )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - ( Min( RMSe ,( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) / ( DS - MUR ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6340308938166396}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( PN + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + CS ) )", "obj1": 0.4166666666666667, "obj2": 0.5081060839625297}, {"determining": "( ( ARS - FirstVNF_CPU ) / Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( Max( Max( ( MLU - MUM ),Max( MUR,CS ) ),( RRSe / MLU ) ) / MUR ) )", "obj1": 0.58125, "obj2": 0.350335072825951}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( ( PN - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ,MDR ) )", "choosing": "( ( MUR + MUC ) + Max( MUC,MUR ) )", "obj1": 0.99375, "obj2": 0.003226863950338326}], "24": [{"determining": "Min( ( ( Min( Min( Min( Min( ( AMS + FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ,Max( ( BR + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ,Max( Min( ( ARS - FirstVNF_Mem ) ,Max( MDR,RRS ) ),( Max( FirstVNF_RAM_Server,MRS ) + ( Const + RRS ) ) ) ) ,Min( ( ( ( MDR + Const ) / ( DDR / FirstVNF_CPU_Server ) ) - Min( ( BR / Const ) ,( MRS - MRS ) ) ) ,Max( ( Min( CRS ,CRS ) + ( Const * RRS ) ),( ( PN / PN ) + ( MRS * FirstVNF_RAM ) ) ) ) ) / Max( ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( FirstVNF_CPU_Server - ARS ) ) + ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * FirstVNF_Mem ) ) ) * ( Max( ( MDR - ACS ),( RRS / ACS ) ) * ( ( FirstVNF_CPU_Server * AMS ) + ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ),( ( Min( Max( MDR,FirstVNF_CPU ) ,( CRS + RRS ) ) - ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) + ( Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server - PN ) ) / ( Max( RRS,MRS ) - ( ARS / FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( ( ( ( ( ARS * AMS ) + ( MRS + FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MRS * AMS ) ) ) - ( Max( ( MDR - MDR ),( PN - FirstVNF_RAM ) ) - ( ( BR + AMS ) / Min( Const ,DDR ) ) ) ) ,Min( Max( Min( ( MRS * CRS ) ,( AMS - FirstVNF_RAM_Server ) ),( ( MDR * FirstVNF_Mem ) * ( Const + FirstVNF_Mem_Server ) ) ) ,( Max( ( DDR * ACS ),( MDR / FirstVNF_Mem ) ) + ( ( ACS + MDR ) / Min( ARS ,MRS ) ) ) ) ) / Min( Min( ( Max( ( AMS / BR ),( FirstVNF_RAM / MDR ) ) / ( ( FirstVNF_Mem + Const ) / Min( CRS ,AMS ) ) ) ,( ( Max( FirstVNF_Mem,ACS ) / ( ACS * DDR ) ) + ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_Mem_Server + BR ) ) ) ) ,Min( ( Min( Min( ACS ,PN ) ,( ACS - FirstVNF_Mem_Server ) ) - ( Max( CRS,Const ) * ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( ( BR * FirstVNF_Mem ) + ( MRS / FirstVNF_Mem ) ) - Min( Min( PN ,CRS ) ,Max( RRS,RRS ) ) ) ) ) ) ) ,( ( ( Max( ( Max( ( FirstVNF_Mem_Server / RRS ),( Const + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server * BR ) * ( Const * FirstVNF_CPU ) ) ),( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - Min( ARS ,FirstVNF_CPU_Server ) ) - Max( ( MDR * ARS ),( CRS / FirstVNF_RAM ) ) ) ) / Min( Min( ( ( ARS - MDR ) / ( AMS / MDR ) ) ,( ( ARS + AMS ) - ( FirstVNF_RAM / DDR ) ) ) ,( Max( ( ACS + FirstVNF_Mem ),( MDR + FirstVNF_RAM_Server ) ) / ( ( ACS + ACS ) / ( ACS * FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ( Min( RRS ,DDR ) / ( FirstVNF_CPU * MRS ) ) ,Min( ( PN / MRS ) ,Min( CRS ,FirstVNF_Mem ) ) ) ,Min( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + ARS ) ) ,( ( ACS / DDR ) + ( RRS - ACS ) ) ) ) + ( ( ( Min( ARS ,MRS ) * ( RRS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),( MRS - FirstVNF_Mem_Server ) ) ) / ( Min( ( RRS * FirstVNF_CPU ) ,( AMS - MDR ) ) - Min( Max( MDR,DDR ) ,Min( ARS ,PN ) ) ) ) ) ) / ( ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( ACS - FirstVNF_Mem_Server ) ) + ( ( DDR + MDR ) * Min( PN ,CRS ) ) ) / ( ( ( DDR + DDR ) - ( PN * MDR ) ) - Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR + ARS ) ) ) ) - ( ( Max( ( ACS + FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_RAM_Server,CRS ) - ( DDR - AMS ) ) ) * ( ( Max( Const,Const ) + ( ACS * PN ) ) / Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( AMS + PN ) ) ) ) ) + ( Min( ( ( Min( ACS ,FirstVNF_RAM ) + Min( Const ,FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( FirstVNF_CPU_Server - AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * ( FirstVNF_CPU - Const ) ) - Max( Max( FirstVNF_CPU_Server,MDR ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( Max( ( MRS / CRS ),Min( CRS ,BR ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( RRS + DDR ) ) ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM ),( RRS - MRS ) ) - Max( ( FirstVNF_Mem + MRS ),( ACS / BR ) ) ) ) ) ) ) )", "choosing": "( Min( Min( Max( Min( Min( ( Max( MUM,MUC ) * ( MLU + DS ) ) ,( ( MUC * RCSe ) / ( CS + RMSe ) ) ) ,Min( Max( ( RRSe * MUR ),( RCSe / DS ) ) ,Min( Max( MUC,RMSe ) ,Max( RMSe,RMSe ) ) ) ),( Min( ( ( MLU / CS ) + ( RRSe - DS ) ) ,Max( ( CS + MUM ),( MUC - DS ) ) ) + ( ( ( RRSe * MUR ) * Min( MUM ,CS ) ) - ( Max( MLU,MLU ) - ( RCSe + MUM ) ) ) ) ) ,Min( ( Min( ( ( RCSe / RRSe ) * ( RMSe - CS ) ) ,( ( CS - RCSe ) / ( MUM / RMSe ) ) ) * ( ( ( CS / RRSe ) / Max( MLU,MLU ) ) - ( ( RRSe / RCSe ) / ( MUR + CS ) ) ) ) ,( ( ( ( CS - RRSe ) / Min( MUM ,CS ) ) * Max( Min( MUR ,MLU ),( RMSe * MUC ) ) ) * Min( ( ( RMSe - DS ) - ( RMSe * CS ) ) ,Max( ( RMSe * MUC ),Min( MUC ,MUC ) ) ) ) ) ) ,Min( ( Min( Max( ( ( CS + RCSe ) * ( CS + MLU ) ),Max( ( MUR / MUC ),( MUM + RCSe ) ) ) ,( ( ( DS * MLU ) * ( RCSe * MLU ) ) / Min( ( MLU / RMSe ) ,( RMSe - MUM ) ) ) ) + ( Max( ( ( RCSe * RRSe ) - ( MUM / MLU ) ),( ( DS / RMSe ) / ( RMSe / MUR ) ) ) * ( Min( ( RCSe * RMSe ) ,Min( RMSe ,RCSe ) ) + ( ( MLU + MUR ) - Min( MUM ,MUR ) ) ) ) ) ,Max( Min( ( ( Max( MUC,CS ) + ( CS / RRSe ) ) * ( Min( RRSe ,RMSe ) - Min( DS ,RRSe ) ) ) ,( ( ( MUM * RRSe ) / Min( RRSe ,RMSe ) ) * ( ( MLU / MUR ) + ( RCSe + MUM ) ) ) ),( Max( Max( ( DS - RMSe ),Max( MUC,MUR ) ),Max( Max( MUR,DS ),( MUC * DS ) ) ) - Min( Min( ( RRSe * RRSe ) ,( RMSe / MUM ) ) ,( ( MUR * RMSe ) + ( MLU / MUC ) ) ) ) ) ) ) * ( ( ( ( ( ( Min( MUC ,RCSe ) + ( MLU - MLU ) ) - ( ( MLU + MUC ) + ( MUM + MUM ) ) ) / ( Min( ( MUR + MUC ) ,( DS * RCSe ) ) - ( ( MLU / MLU ) * Min( MUM ,DS ) ) ) ) + ( ( ( ( MUM * CS ) * ( CS / RMSe ) ) * ( Max( RRSe,RMSe ) / ( RCSe + RRSe ) ) ) * Max( ( ( RRSe * RMSe ) + ( MUR * DS ) ),Min( ( CS - CS ) ,Max( RCSe,MUC ) ) ) ) ) - ( ( Max( ( Max( RCSe,RCSe ) - Max( CS,MUC ) ),( ( DS / MUM ) - ( RMSe + MUM ) ) ) + ( Max( ( MLU + MUM ),( MUM - MLU ) ) / Max( Min( MLU ,RCSe ),Min( MUR ,RRSe ) ) ) ) * ( Min( ( ( RRSe / CS ) * Max( RCSe,MUM ) ) ,( Max( MUC,RMSe ) - ( MLU * RMSe ) ) ) - ( Min( ( RRSe + CS ) ,Min( MLU ,RMSe ) ) / Min( ( RRSe / MUC ) ,Min( DS ,RRSe ) ) ) ) ) ) + ( ( Max( ( ( ( MUC - CS ) - Max( MUC,MUC ) ) + ( ( DS - CS ) * Min( MUR ,MUR ) ) ),( Max( ( CS / CS ),Max( MUR,RRSe ) ) + ( ( MUC / RCSe ) / Max( MUC,MUM ) ) ) ) - Min( ( Min( Min( MUM ,RRSe ) ,( RRSe - CS ) ) / ( Max( MLU,MUC ) / ( DS + MUR ) ) ) ,( ( ( MUM + MUR ) - Min( MUM ,MLU ) ) - ( ( DS - RCSe ) * ( DS + RMSe ) ) ) ) ) * Min( Min( Max( Min( ( MUR + RCSe ) ,Max( MUM,DS ) ),( ( MUR / MLU ) / ( RCSe + MUC ) ) ) ,Max( Min( Min( MLU ,MLU ) ,( MUR * MUR ) ),Max( ( DS - MUR ),( RRSe + RMSe ) ) ) ) ,Max( ( ( ( MUM / DS ) / Max( MUC,RRSe ) ) + ( Max( CS,RRSe ) + ( MUR / RCSe ) ) ),( ( ( DS + RRSe ) * ( MUM - MUC ) ) - ( ( MUC * RCSe ) + ( MLU * CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) + ( ( MDR - AMS ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08897423179566386}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Min( MRS ,MDR ) * ( ( ARS - MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RMSe ,DS ) / Max( CS,DS ) ) / ( DS + RCSe ) )", "obj1": 0.5041666666666667, "obj2": 0.40975683077798003}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.45208333333333334, "obj2": 0.471624296241639}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( AMS - FirstVNF_Mem ) )", "choosing": "Min( ( RRSe * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.4375, "obj2": 0.48776677029542387}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( Max( ( ( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + ( Const + DDR ) ),( Min( BR ,RRS ) * ( MDR * Const ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_CPU_Server ) ) * Max( ( Const + DDR ),( AMS - DDR ) ) ) ) - ( ( ( Max( ACS,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) - ( ( RRS + Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) - Min( ( ( ACS * DDR ) - ( CRS / RRS ) ) ,Max( Min( RRS ,ACS ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) / ( Min( ( ( ( PN - Const ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( ( DDR / ARS ) * Max( BR,CRS ) ) ) ,( ( ( PN + FirstVNF_Mem_Server ) + ( BR / MRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( DDR + ACS ) ) ) ) + ( ( ( ( MDR - FirstVNF_CPU_Server ) - Max( ARS,FirstVNF_CPU ) ) - ( Min( DDR ,ACS ) - Min( CRS ,MRS ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( Min( Const ,MDR ) + ( FirstVNF_RAM_Server / MRS ) ) ) ) ) ),( ( ( Min( Min( Max( RRS,DDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ,( Min( CRS ,AMS ) + ( MRS * Const ) ) ) / ( ( ( CRS / BR ) + ( FirstVNF_CPU + MDR ) ) * ( ( ACS - ACS ) + Min( MDR ,ARS ) ) ) ) + ( ( Min( ( CRS / FirstVNF_Mem_Server ) ,Max( RRS,AMS ) ) - ( ( PN * PN ) + ( FirstVNF_CPU - RRS ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( PN + MDR ) - Min( ACS ,FirstVNF_RAM ) ) ) ) ) - ( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + RRS ) ) + Max( ( FirstVNF_CPU_Server - ARS ),( CRS - ACS ) ) ),( Min( ( ACS - ACS ) ,( DDR - MDR ) ) + ( ( FirstVNF_CPU / BR ) - ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + ( Min( ( ( ACS * RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Max( MDR,MRS ) / ( CRS + BR ) ) ) + ( Min( ( ARS - BR ) ,Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_RAM / Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) ) ) + Min( ( ( Min( ( Min( Max( CRS,AMS ) ,( BR + CRS ) ) + ( ( AMS - MDR ) / Max( MRS,RRS ) ) ) ,( Max( Max( ACS,FirstVNF_CPU_Server ),( CRS - DDR ) ) + Max( ( MRS / MDR ),( BR * FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server / CRS ) * ( Const - PN ) ) / ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) / Max( ACS,FirstVNF_RAM ) ) * ( ( AMS + PN ) - Max( FirstVNF_CPU,AMS ) ) ) ) ) / ( ( ( ( Min( ACS ,Const ) / ( CRS / PN ) ) * Max( ( AMS + FirstVNF_Mem ),( FirstVNF_RAM_Server - ACS ) ) ) + ( Max( ( ARS / FirstVNF_RAM ),( DDR * FirstVNF_RAM ) ) + ( ( ARS - CRS ) * ( Const + FirstVNF_Mem ) ) ) ) * ( Min( Min( Min( RRS ,DDR ) ,( DDR * RRS ) ) ,Max( Max( AMS,FirstVNF_CPU_Server ),( BR / PN ) ) ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + Max( Const,MRS ) ) / Max( Min( BR ,FirstVNF_RAM ),( AMS / MRS ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( Min( CRS ,DDR ) - ( MDR / RRS ) ) ) * Max( ( ( PN + FirstVNF_RAM ) * ( FirstVNF_RAM / MDR ) ),( ( CRS / MDR ) / Min( FirstVNF_Mem ,RRS ) ) ) ) * ( Min( ( Min( PN ,DDR ) + Min( RRS ,FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + AMS ) ) ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - Max( PN,CRS ) ) * ( Max( FirstVNF_Mem,CRS ) / ( BR + CRS ) ) ) ) ),( Min( ( ( ( DDR / ACS ) + ( Const - MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( AMS / FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU * AMS ) * ( FirstVNF_Mem_Server / ARS ) ) / ( ( FirstVNF_Mem / ARS ) + Max( CRS,BR ) ) ) ) + ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MRS + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Max( RRS,FirstVNF_RAM ) ) ) + ( ( ( CRS * Const ) * Max( MDR,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_Mem - FirstVNF_RAM ),Max( AMS,MRS ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( RMSe * RRSe ) / ( RRSe - MUR ) ) * ( Max( MLU,MUM ) - ( MUC + MUM ) ) ) * Max( Max( ( DS - DS ),( DS - MUR ) ),Max( ( MLU + MUM ),( RRSe * RRSe ) ) ) ) * Min( Max( ( ( RRSe + MUM ) * Max( MLU,MUM ) ),( ( DS * MLU ) - ( RMSe / MUM ) ) ) ,Max( Min( ( MUM - RCSe ) ,( MUR * MLU ) ),Max( Min( RRSe ,DS ),( MLU - RMSe ) ) ) ) ) / ( ( ( ( ( MUC + MUC ) / ( MUR + MUM ) ) + Max( ( RMSe * MLU ),( RCSe / MUC ) ) ) * ( ( ( RCSe * MLU ) - Min( MLU ,MUC ) ) - ( Max( CS,DS ) + Min( DS ,RMSe ) ) ) ) / ( Min( ( ( RMSe / RRSe ) / ( RRSe * RMSe ) ) ,( Max( RCSe,MLU ) / ( MUC + RRSe ) ) ) * ( Max( ( RCSe / RRSe ),( DS / CS ) ) - ( Max( MUR,RCSe ) - Max( MUC,DS ) ) ) ) ) ) ,Min( ( ( Max( ( ( RMSe * MUM ) / ( RCSe + MLU ) ),( Max( MUC,MUC ) - ( MLU + MUR ) ) ) - ( Min( ( MUC * DS ) ,( RMSe * MUC ) ) * Min( ( MUR * RCSe ) ,( RMSe - RMSe ) ) ) ) - Max( ( Max( ( CS - MLU ),( MUM * MUM ) ) + ( ( RMSe - MUC ) - ( MLU * MUM ) ) ),( ( Max( RRSe,MUC ) + ( CS * MUC ) ) - Max( Max( DS,MLU ),( RMSe - RCSe ) ) ) ) ) ,( ( ( ( Max( CS,RRSe ) * ( RRSe - MUC ) ) + Max( ( MUC + MUR ),( MUM * RRSe ) ) ) - ( ( ( RMSe + RMSe ) - ( MUM / MUC ) ) + Min( ( RCSe * MUC ) ,( DS + RCSe ) ) ) ) - ( ( ( ( DS + MUC ) * Min( DS ,MLU ) ) * Max( ( MUM * RCSe ),Max( RCSe,MUR ) ) ) - Max( ( ( DS / RRSe ) / Min( MUM ,MUC ) ),( ( RMSe + DS ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( ( ( ( ( MUM - RCSe ) - ( MUR + CS ) ) * Min( Min( RCSe ,MUM ) ,( MUM + MUR ) ) ) / Max( ( ( MUM - MUC ) * ( RMSe * DS ) ),( ( MUC / DS ) * ( MUR + MUC ) ) ) ) ,Max( ( Max( ( MLU / MLU ),( CS * RMSe ) ) / ( ( DS + RMSe ) * ( DS * MLU ) ) ),( ( ( MLU - MUM ) + ( RCSe / RCSe ) ) / ( Min( CS ,MUC ) + Max( RMSe,MLU ) ) ) ) ) / Min( Min( Max( ( ( CS * RRSe ) / ( RCSe / MLU ) ),( ( MUC * DS ) + ( RRSe - RCSe ) ) ) ,( ( Max( DS,DS ) / ( MUM / RRSe ) ) / Min( ( CS * DS ) ,Min( CS ,RRSe ) ) ) ) ,( ( ( ( MUC - RMSe ) - ( RCSe - MUM ) ) / Min( ( RCSe - MUR ) ,( MUC * MUC ) ) ) + ( ( ( CS / MUC ) / ( MUC - MUR ) ) / Max( ( MLU * MUR ),( CS - DS ) ) ) ) ) ) + ( ( Max( Max( ( Min( MUC ,DS ) - ( MUC + MUM ) ),Max( Min( MUR ,RMSe ),( MUC + RRSe ) ) ),Min( ( Min( RMSe ,RCSe ) - ( RMSe / RCSe ) ) ,( Max( RCSe,CS ) + ( DS * RRSe ) ) ) ) / ( ( Min( ( DS - MUM ) ,Min( RRSe ,MUM ) ) * Min( ( CS - MUR ) ,( RCSe - DS ) ) ) / Max( ( ( CS / CS ) * ( MUR + CS ) ),( ( RMSe * RMSe ) / ( MLU + RRSe ) ) ) ) ) / ( Min( ( ( Max( RMSe,MUM ) + ( MUR + MUC ) ) - ( Min( MUM ,MLU ) + Max( MUC,MUM ) ) ) ,( ( ( RCSe + MUM ) - ( MUR / RRSe ) ) - ( Min( CS ,RRSe ) + Max( RCSe,MUC ) ) ) ) + ( Min( ( ( MUC - CS ) * ( MUR + DS ) ) ,Min( ( DS - MLU ) ,( RRSe / CS ) ) ) / ( ( Min( MUR ,MUR ) / ( MUM * RRSe ) ) * ( ( RCSe * MUC ) * ( MUC * MUR ) ) ) ) ) ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5121597102014671}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_CPU_Server / BR ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( RMSe / ( ( RCSe + RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 0.41875, "obj2": 0.49243989398004395}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( PN - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ,MDR ) )", "choosing": "( ( MUR + MUC ) + Max( MUC,MUR ) )", "obj1": 0.99375, "obj2": 0.003226863950338326}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( PN + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RRSe + CS ) )", "obj1": 0.4166666666666667, "obj2": 0.5081060839625297}, {"determining": "( ( ARS - Min( ( ( PN - PN ) - ( CRS - FirstVNF_Mem ) ) ,MDR ) ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MUC ) + ( RCSe - MUR ) )", "obj1": 0.98125, "obj2": 0.008482915544012643}], "25": [{"determining": "( Min( BR ,ACS ) + ( ( MDR - FirstVNF_Mem_Server ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Min( Min( Min( ( AMS + FirstVNF_Mem_Server ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ,Max( ( BR + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ,Max( Min( ( ARS - FirstVNF_Mem ) ,Max( MDR,RRS ) ),( Max( FirstVNF_RAM_Server,MRS ) + ( Const + RRS ) ) ) ) ,Min( ( ( ( MDR + Const ) / ( DDR / FirstVNF_CPU_Server ) ) - Min( ( BR / Const ) ,( MRS - MRS ) ) ) ,Max( ( Min( CRS ,CRS ) + ( Const * RRS ) ),( ( PN / PN ) + ( MRS * FirstVNF_RAM ) ) ) ) ) / Max( ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( FirstVNF_CPU_Server - ARS ) ) + ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * FirstVNF_Mem ) ) ) * ( Max( ( MDR - ACS ),( RRS / ACS ) ) * ( ( FirstVNF_CPU_Server * AMS ) + ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ),( ( Min( Max( MDR,FirstVNF_CPU ) ,( CRS + RRS ) ) - ( ( FirstVNF_RAM_Server - AMS ) * Min( FirstVNF_CPU_Server ,MDR ) ) ) + ( Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server - PN ) ) / ( Max( RRS,MRS ) - ( ARS / FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( ( ( ( ( ARS * AMS ) + ( MRS + FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MRS * AMS ) ) ) - ( Max( ( MDR - MDR ),( PN - FirstVNF_RAM ) ) - ( ( BR + AMS ) / Min( Const ,DDR ) ) ) ) ,Min( Max( Min( ( MRS * CRS ) ,( AMS - FirstVNF_RAM_Server ) ),( ( MDR * FirstVNF_Mem ) * ( Const + FirstVNF_Mem_Server ) ) ) ,( Max( ( DDR * ACS ),( MDR / FirstVNF_Mem ) ) + ( ( ACS + MDR ) / Min( ARS ,MRS ) ) ) ) ) / Min( Min( ( Max( ( AMS / BR ),( FirstVNF_RAM / MDR ) ) / ( ( FirstVNF_Mem + Const ) / Min( CRS ,AMS ) ) ) ,( ( Max( FirstVNF_Mem,ACS ) / ( ACS * DDR ) ) + ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_Mem_Server + BR ) ) ) ) ,Min( ( Min( Min( ACS ,PN ) ,( ACS - FirstVNF_Mem_Server ) ) - ( Max( CRS,Const ) * ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( ( BR * FirstVNF_Mem ) + ( MRS / FirstVNF_Mem ) ) - Min( Min( PN ,CRS ) ,Max( RRS,RRS ) ) ) ) ) ) ) ,( ( ( Max( ( Max( ( FirstVNF_Mem_Server / RRS ),( Const + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server * BR ) * ( Const * FirstVNF_CPU ) ) ),( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - Min( ARS ,FirstVNF_CPU_Server ) ) - Max( ( MDR * ARS ),( CRS / FirstVNF_RAM ) ) ) ) / Min( Min( ( ( ARS - MDR ) / ( AMS / MDR ) ) ,( ( ARS + AMS ) - ( FirstVNF_RAM / DDR ) ) ) ,( Max( ( ACS + FirstVNF_Mem ),( MDR + FirstVNF_RAM_Server ) ) / ( ( ACS + ACS ) / ( ACS * FirstVNF_Mem ) ) ) ) ) / ( Min( Min( ( Min( RRS ,DDR ) / ( FirstVNF_CPU * MRS ) ) ,Min( ( PN / MRS ) ,Min( CRS ,FirstVNF_Mem ) ) ) ,Min( ( ( CRS * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + ARS ) ) ,( ( ACS / DDR ) + ( RRS - ACS ) ) ) ) + ( ( ( Min( ARS ,MRS ) * ( RRS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),( MRS - FirstVNF_Mem_Server ) ) ) / ( Min( ( RRS * FirstVNF_CPU ) ,( AMS - MDR ) ) - Min( Max( MDR,DDR ) ,Min( ARS ,PN ) ) ) ) ) ) / ( ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( ACS - FirstVNF_Mem_Server ) ) + ( ( DDR + MDR ) * Min( PN ,CRS ) ) ) / ( ( ( DDR + DDR ) - ( PN * MDR ) ) - Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR + ARS ) ) ) ) - ( ( Max( ( ACS + FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) + ( Max( FirstVNF_RAM_Server,CRS ) - ( DDR - AMS ) ) ) * ( ( Max( Const,Const ) + ( ACS * PN ) ) / Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( AMS + PN ) ) ) ) ) + ( Min( ( ( Min( ACS ,FirstVNF_RAM ) + Min( Const ,FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( FirstVNF_CPU_Server - AMS ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * ( FirstVNF_CPU - Const ) ) - Max( Max( FirstVNF_CPU_Server,MDR ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( Max( ( MRS / CRS ),Min( CRS ,BR ) ) * ( ( FirstVNF_RAM_Server + BR ) - ( RRS + DDR ) ) ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM ),( RRS - MRS ) ) - Max( ( FirstVNF_Mem + MRS ),( ACS / BR ) ) ) ) ) ) ) )", "choosing": "( Min( Min( Max( Min( Min( ( Max( MUM,MUC ) * ( MLU + DS ) ) ,( ( MUC * RCSe ) / ( CS + RMSe ) ) ) ,Min( Max( ( RRSe * MUR ),( RCSe / DS ) ) ,Min( Max( MUC,RMSe ) ,Max( RMSe,RMSe ) ) ) ),( Min( ( ( MLU / CS ) + ( RRSe - DS ) ) ,Max( ( CS + MUM ),( MUC - DS ) ) ) + ( ( ( RRSe * MUR ) * Min( MUM ,CS ) ) - ( Max( MLU,MLU ) - ( RCSe + MUM ) ) ) ) ) ,Min( ( Min( ( ( RCSe / RRSe ) * ( RMSe - CS ) ) ,( ( CS - RCSe ) / ( MUM / RMSe ) ) ) * ( ( ( CS / RRSe ) / Max( MLU,MLU ) ) - ( ( RRSe / RCSe ) / ( MUR + CS ) ) ) ) ,( ( ( ( CS - RRSe ) / Min( MUM ,CS ) ) * Max( Min( MUR ,MLU ),( RMSe * MUC ) ) ) * Min( ( ( RMSe - DS ) - ( RMSe * CS ) ) ,Max( ( RMSe * MUC ),Min( MUC ,MUC ) ) ) ) ) ) ,Min( ( Min( Max( ( ( CS + RCSe ) * ( CS + MLU ) ),Max( ( MUR / MUC ),( MUM + RCSe ) ) ) ,( ( ( DS * MLU ) * ( RCSe * MLU ) ) / Min( ( MLU / RMSe ) ,( RMSe - MUM ) ) ) ) + ( Max( ( ( RCSe * RRSe ) - ( MUM / MLU ) ),( ( DS / RMSe ) / ( RMSe / MUR ) ) ) * ( Min( ( RCSe * RMSe ) ,Min( RMSe ,RCSe ) ) + ( ( MLU + MUR ) - Min( MUM ,MUR ) ) ) ) ) ,Max( Min( ( ( Max( MUC,CS ) + ( CS / RRSe ) ) * ( Min( RRSe ,RMSe ) - Min( DS ,RRSe ) ) ) ,( ( ( MUM * RRSe ) / Min( RRSe ,RMSe ) ) * ( ( MLU / MUR ) + ( RCSe + MUM ) ) ) ),( Max( Max( ( DS - RMSe ),Max( MUC,MUR ) ),Max( Max( MUR,DS ),( MUC * DS ) ) ) - Min( Min( ( RRSe * RRSe ) ,( RMSe / MUM ) ) ,( ( MUR * RMSe ) + ( MLU / MUC ) ) ) ) ) ) ) * ( ( ( ( ( ( Min( MUC ,RCSe ) + ( MLU - MLU ) ) - ( ( MLU + MUC ) + ( MUM + MUM ) ) ) / ( Min( ( MUR + MUC ) ,( DS * RCSe ) ) - ( ( MLU / MLU ) * Min( MUM ,DS ) ) ) ) + ( ( ( ( MUM * CS ) * ( CS / RMSe ) ) * ( Max( RRSe,RMSe ) / ( RCSe + RRSe ) ) ) * Max( ( ( RRSe * RMSe ) + ( MUR * DS ) ),Min( ( CS - CS ) ,Max( RCSe,MUC ) ) ) ) ) - ( ( Max( ( Max( RCSe,RCSe ) - Max( CS,MUC ) ),( ( DS / MUM ) - ( RMSe + MUM ) ) ) + ( Max( ( MLU + MUM ),( MUM - MLU ) ) / Max( Min( MLU ,RCSe ),Min( MUR ,RRSe ) ) ) ) * ( Min( ( ( RRSe / CS ) * Max( RCSe,MUM ) ) ,( Max( MUC,RMSe ) - ( MLU * RMSe ) ) ) - ( Min( ( RRSe + CS ) ,Min( MLU ,RMSe ) ) / Min( ( RRSe / MUC ) ,Min( DS ,RRSe ) ) ) ) ) ) + ( ( Max( ( ( ( MUC - CS ) - Max( MUC,MUC ) ) + ( ( DS - CS ) * Min( MUR ,MUR ) ) ),( Max( ( CS / CS ),Max( MUR,RRSe ) ) + ( ( MUC / RCSe ) / Max( MUC,MUM ) ) ) ) - Min( ( Min( Min( MUM ,RRSe ) ,( RRSe - CS ) ) / ( Max( MLU,MUC ) / ( DS + MUR ) ) ) ,( ( ( MUM + MUR ) - Min( MUM ,MLU ) ) - ( ( DS - RCSe ) * ( DS + RMSe ) ) ) ) ) * Min( Min( Max( Min( ( MUR + RCSe ) ,Max( MUM,DS ) ),( ( MUR / MLU ) / ( RCSe + MUC ) ) ) ,Max( Min( Min( MLU ,MLU ) ,( MUR * MUR ) ),Max( ( DS - MUR ),( RRSe + RMSe ) ) ) ) ,Max( ( ( ( MUM / DS ) / Max( MUC,RRSe ) ) + ( Max( CS,RRSe ) + ( MUR / RCSe ) ) ),( ( ( DS + RRSe ) * ( MUM - MUC ) ) - ( ( MUC * RCSe ) + ( MLU * CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08897423179566386}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( FirstVNF_CPU_Server / BR ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( RMSe / ( ( RCSe + RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 0.41875, "obj2": 0.49243989398004395}, {"determining": "( Min( PN ,FirstVNF_Mem_Server ) * Min( MRS ,MDR ) )", "choosing": "( ( RRSe / ( ( RCSe + RMSe ) * ( MUC - MUR ) ) ) / ( CS - DS ) )", "obj1": 0.4, "obj2": 0.5078801011836057}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( ( FirstVNF_RAM * BR ) / ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Min( ( MUM / CS ) ,( RMSe - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Min( MRS ,MDR ) * ( ( ARS - MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RMSe ,DS ) / Max( CS,DS ) ) / ( DS + RCSe ) )", "obj1": 0.5041666666666667, "obj2": 0.40975683077798003}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - PN ) ) ) )", "choosing": "( Min( CS ,( ( RMSe * MUM ) / ( ( Min( CS ,( ( RMSe * MUM ) / ( RCSe - MUC ) ) ) / ( RMSe + MUC ) ) - MUC ) ) ) / ( RMSe + MUC ) )", "obj1": 0.9770833333333333, "obj2": 0.02524488679477437}, {"determining": "( ( PN - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ,MDR ) )", "choosing": "( ( MUR + MUC ) + Max( MUC,MUR ) )", "obj1": 0.99375, "obj2": 0.003226863950338326}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ARS - Min( ( ( PN - PN ) - ( CRS - FirstVNF_Mem ) ) ,MDR ) ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MUC ) + ( RCSe - MUR ) )", "obj1": 0.98125, "obj2": 0.008482915544012643}], "26": [{"determining": "( Min( BR ,ACS ) + ( ( MDR - FirstVNF_Mem_Server ) / Const ) )", "choosing": "( Max( Min( MUR ,MUM ),Max( DS,MUC ) ) / Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ACS ) + ( ( MDR - FirstVNF_Mem_Server ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08897423179566386}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( FirstVNF_CPU_Server / BR ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( RMSe / ( ( RCSe + RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 0.41875, "obj2": 0.49243989398004395}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / CS ) ,( Min( ( CS / CS ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5054015546609808}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / CS ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "Min( ( Max( AMS,Const ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( RCSe - RRSe ) ) )", "obj1": 0.4666666666666667, "obj2": 0.4627423981322708}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Min( MRS ,MDR ) * ( ( ARS - MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RMSe ,DS ) / Max( CS,DS ) ) / ( DS + RCSe ) )", "obj1": 0.5041666666666667, "obj2": 0.40975683077798003}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( AMS / Const ) / ( ( AMS / Const ) / Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUM ) / ( ( RMSe / MUM ) / ( DS - MUR ) ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.4708333333333333, "obj2": 0.44348142521406203}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( Max( FirstVNF_CPU,AMS ) + ARS ) )", "choosing": "( ( MUR * MUC ) / MUM )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / Max( DS,RRSe ) )", "obj1": 0.475, "obj2": 0.43525061091998046}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - PN ) ) ) )", "choosing": "( Min( CS ,( ( RMSe * MUM ) / ( ( Min( CS ,( ( RMSe * MUM ) / ( RCSe - MUC ) ) ) / ( RMSe + MUC ) ) - MUC ) ) ) / ( RMSe + MUC ) )", "obj1": 0.9770833333333333, "obj2": 0.02524488679477437}, {"determining": "( ( PN - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ,MDR ) )", "choosing": "( ( MUR + MUC ) + Max( MUC,MUR ) )", "obj1": 0.99375, "obj2": 0.003226863950338326}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ARS - Min( ( ( PN - PN ) - ( CRS - FirstVNF_Mem ) ) ,MDR ) ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MUC ) + ( RCSe - MUR ) )", "obj1": 0.98125, "obj2": 0.008482915544012643}], "27": [{"determining": "( Min( BR ,ACS ) + ( ( MDR - FirstVNF_Mem_Server ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ACS ) + ( ( MDR - FirstVNF_Mem_Server ) / Const ) )", "choosing": "( Max( Min( MUR ,MUM ),Max( DS,MUC ) ) / Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08897423179566386}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / CS ) ,( Min( ( CS / CS ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5054015546609808}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RCSe * MUR ) - Min( RRSe ,RRSe ) ) ,( DS - CS ) )", "obj1": 0.4666666666666667, "obj2": 0.4348240229470469}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( DS - CS ) ,( DS - CS ) )", "obj1": 0.45208333333333334, "obj2": 0.4640123607937954}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( AMS / ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) / ARS ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + ( ( RMSe / MUM ) / ( DS - RRSe ) ) ) / Min( ( ( RMSe / MUM ) / ( DS - RRSe ) ) ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5691529555234837}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( FirstVNF_CPU_Server / BR ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( RMSe / ( ( RCSe + RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 0.41875, "obj2": 0.49243989398004395}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( Min( MRS ,MDR ) * ( ( ARS - MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RMSe ,DS ) / Max( CS,DS ) ) / ( DS + RCSe ) )", "obj1": 0.5041666666666667, "obj2": 0.40975683077798003}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_CPU ) )", "choosing": "Max( ( MUM * MUC ),Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4819194172302824}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( Min( AMS ,AMS ) + Max( CRS,Const ) )", "choosing": "Max( ( RRSe / RMSe ),MUR )", "obj1": 0.32083333333333336, "obj2": 0.5962206346879654}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR - PN ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.6354166666666666, "obj2": 0.30299736752850964}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - PN ) ) ) )", "choosing": "( Min( CS ,( ( RMSe * MUM ) / ( ( Min( CS ,( ( RMSe * MUM ) / ( RCSe - MUC ) ) ) / ( RMSe + MUC ) ) - MUC ) ) ) / ( RMSe + MUC ) )", "obj1": 0.9770833333333333, "obj2": 0.02524488679477437}, {"determining": "( ( PN - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ,MDR ) )", "choosing": "( ( MUR + MUC ) + Max( MUC,MUR ) )", "obj1": 0.99375, "obj2": 0.003226863950338326}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ARS - Min( ( ( PN - PN ) - ( CRS - FirstVNF_Mem ) ) ,MDR ) ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MUC ) + ( RCSe - MUR ) )", "obj1": 0.98125, "obj2": 0.008482915544012643}], "28": [{"determining": "( Min( BR ,ACS ) + ( ( MDR - FirstVNF_Mem_Server ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ACS ) + ( ( MDR - FirstVNF_Mem_Server ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08897423179566386}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / MUM ) / ( ( DS + RCSe ) + MUR ) )", "obj1": 0.31666666666666665, "obj2": 0.5516254490311687}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( Min( ( CS / RCSe ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5015366110647257}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RCSe * MUR ) - Min( RRSe ,RRSe ) ) ,( DS - CS ) )", "obj1": 0.4666666666666667, "obj2": 0.4348240229470469}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( DS - CS ) ,( DS - CS ) )", "obj1": 0.45208333333333334, "obj2": 0.4640123607937954}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( CS * Max( MUM,MUC ) ) * ( Min( MUM ,( RMSe / ( MLU - ( Max( Min( RCSe ,RRSe ),RRSe ) - ( RMSe * Min( MUM ,MUR ) ) ) ) ) ) / RMSe ) )", "obj1": 0.9708333333333333, "obj2": 0.028719630252985805}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( FirstVNF_CPU_Server / BR ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( RMSe / ( ( RCSe + RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 0.41875, "obj2": 0.49243989398004395}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_CPU ) )", "choosing": "Max( ( MUM * MUC ),Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4819194172302824}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( Min( MRS ,MDR ) * ( ( ARS - MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RMSe ,DS ) / Max( CS,DS ) ) / ( DS + RCSe ) )", "obj1": 0.5041666666666667, "obj2": 0.40975683077798003}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR - PN ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.6354166666666666, "obj2": 0.30299736752850964}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - PN ) ) ) )", "choosing": "( Min( CS ,( ( RMSe * MUM ) / ( ( Min( CS ,( ( RMSe * MUM ) / ( RCSe - MUC ) ) ) / ( RMSe + MUC ) ) - MUC ) ) ) / ( RMSe + MUC ) )", "obj1": 0.9770833333333333, "obj2": 0.02524488679477437}, {"determining": "( ( PN - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ,MDR ) )", "choosing": "( ( MUR + MUC ) + Max( MUC,MUR ) )", "obj1": 0.99375, "obj2": 0.003226863950338326}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.50625, "obj2": 0.40562759813793403}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( ARS - Min( ( ( PN - PN ) - ( CRS - FirstVNF_Mem ) ) ,MDR ) ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MUC ) + ( RCSe - MUR ) )", "obj1": 0.98125, "obj2": 0.008482915544012643}], "29": [{"determining": "( Min( BR ,ACS ) + ( ( MDR - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( CRS * FirstVNF_RAM_Server ) ) ) / Const ) )", "choosing": "Max( Min( ( MLU / MUM ) ,Max( MUR,CS ) ),( MLU / ( Max( Min( RMSe ,MUM ),Max( DS,MUC ) ) / Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ACS ) + ( ( MDR - FirstVNF_Mem_Server ) / Const ) )", "choosing": "Max( Max( ( MLU / MUM ),Max( MUR,CS ) ),( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( FirstVNF_RAM_Server / ( FirstVNF_Mem - ACS ) )", "choosing": "Min( ( ( RRSe + RMSe ) + RMSe ) ,Max( DS,RCSe ) )", "obj1": 0.8916666666666667, "obj2": 0.08460786629351236}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( Min( ( CS / RCSe ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5015366110647257}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RCSe * MUR ) - Min( RRSe ,RRSe ) ) ,( DS - CS ) )", "obj1": 0.4666666666666667, "obj2": 0.4348240229470469}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( DS - CS ) ,( DS - CS ) )", "obj1": 0.45208333333333334, "obj2": 0.4640123607937954}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) * FirstVNF_Mem_Server )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3104166666666667, "obj2": 0.5627524336525076}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe + RMSe ) ,MUC )", "obj1": 0.9666666666666667, "obj2": 0.02696431618394898}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / MUM ) / ( ( DS + RCSe ) + MUR ) )", "obj1": 0.31666666666666665, "obj2": 0.5516254490311687}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( ( DS - CS ) - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.4879652888678589}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_CPU ) )", "choosing": "Max( ( MUM * MUC ),Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4819194172302824}, {"determining": "( Min( MRS ,MDR ) * ( ( ARS - MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RMSe ,DS ) / Max( CS,DS ) ) / ( DS + RCSe ) )", "obj1": 0.5041666666666667, "obj2": 0.40975683077798003}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR - PN ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.6354166666666666, "obj2": 0.30299736752850964}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - PN ) ) ) )", "choosing": "( Min( CS ,( ( RMSe * MUM ) / ( ( Min( CS ,( ( RMSe * MUM ) / ( RCSe - MUC ) ) ) / ( RMSe + MUC ) ) - MUC ) ) ) / ( RMSe + MUC ) )", "obj1": 0.9770833333333333, "obj2": 0.02524488679477437}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( ( PN - FirstVNF_CPU ) + Min( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) ,MDR ) )", "choosing": "( ( MUR + MUC ) + Max( MUC,MUR ) )", "obj1": 0.99375, "obj2": 0.003226863950338326}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.50625, "obj2": 0.40562759813793403}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}], "30": [{"determining": "( Min( FirstVNF_CPU_Server ,MRS ) / ( MDR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) + DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ACS ) + ( ( MDR - ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( CRS * FirstVNF_RAM_Server ) ) ) / Const ) )", "choosing": "Max( Min( ( MLU / MUM ) ,Max( MUR,CS ) ),( MLU / ( Max( Min( RMSe ,MUM ),Max( DS,MUC ) ) / Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( FirstVNF_RAM_Server / ( FirstVNF_Mem - ACS ) )", "choosing": "Min( ( ( RRSe + RMSe ) + RMSe ) ,Max( DS,RCSe ) )", "obj1": 0.8916666666666667, "obj2": 0.08460786629351236}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( Min( ( CS / RCSe ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5015366110647257}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( DS - CS ) ,( DS - CS ) )", "obj1": 0.45208333333333334, "obj2": 0.4640123607937954}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) * FirstVNF_Mem_Server )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3104166666666667, "obj2": 0.5627524336525076}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RCSe * MUR ) - Min( RRSe ,RRSe ) ) ,( DS - CS ) )", "obj1": 0.4666666666666667, "obj2": 0.4348240229470469}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe + RMSe ) ,MUC )", "obj1": 0.9666666666666667, "obj2": 0.02696431618394898}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / MUM ) / ( ( DS + RCSe ) + MUR ) )", "obj1": 0.31666666666666665, "obj2": 0.5516254490311687}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( ( DS - CS ) - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.4879652888678589}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_CPU ) )", "choosing": "Max( ( MUM * MUC ),Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4819194172302824}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "( Min( MRS ,MDR ) * ( ( ARS - MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RMSe ,DS ) / Max( CS,DS ) ) / ( DS + RCSe ) )", "obj1": 0.5041666666666667, "obj2": 0.40975683077798003}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR - PN ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.6354166666666666, "obj2": 0.30299736752850964}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - PN ) ) ) )", "choosing": "( Min( CS ,( ( RMSe * MUM ) / ( ( Min( CS ,( ( RMSe * MUM ) / ( RCSe - MUC ) ) ) / ( RMSe + MUC ) ) - MUC ) ) ) / ( RMSe + MUC ) )", "obj1": 0.9770833333333333, "obj2": 0.02524488679477437}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46875, "obj2": 0.4244976716743767}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.50625, "obj2": 0.40562759813793403}], "31": [{"determining": "( ( BR / FirstVNF_CPU ) * ( DDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RRSe ) / ( CS - ( ( RMSe * MUR ) / ( RCSe - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) / ( MDR - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) + DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( FirstVNF_RAM_Server / ( FirstVNF_Mem - ACS ) )", "choosing": "Min( ( ( RRSe + RMSe ) + RMSe ) ,Max( DS,RCSe ) )", "obj1": 0.8916666666666667, "obj2": 0.08460786629351236}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( Min( ( CS / RCSe ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5015366110647257}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) * FirstVNF_Mem_Server )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3104166666666667, "obj2": 0.5627524336525076}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe + RMSe ) ,MUC )", "obj1": 0.9666666666666667, "obj2": 0.02696431618394898}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / MUM ) / ( ( DS + RCSe ) + MUR ) )", "obj1": 0.31666666666666665, "obj2": 0.5516254490311687}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( ( DS - CS ) - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.4879652888678589}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "Min( Min( ( CS / MUC ) ,( DS - CS ) ) ,( MUM - MLU ) )", "obj1": 0.44583333333333336, "obj2": 0.4523912628011549}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_CPU ) )", "choosing": "Max( ( MUM * MUC ),Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4819194172302824}, {"determining": "( Min( MRS ,MDR ) * ( ( ARS - MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RMSe ,DS ) / Max( CS,DS ) ) / ( DS + RCSe ) )", "obj1": 0.5041666666666667, "obj2": 0.40975683077798003}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46458333333333335, "obj2": 0.4473237706530805}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( BR / Const ) * ( ( BR / Const ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / MUR )", "obj1": 0.9791666666666666, "obj2": 0.009798538663140038}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR - PN ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.6354166666666666, "obj2": 0.30299736752850964}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( Const * FirstVNF_RAM ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUM * MUC ) + RCSe )", "obj1": 0.99375, "obj2": 0.007110951164682919}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( DDR - PN ) ) ) )", "choosing": "( Min( CS ,( ( RMSe * MUM ) / ( ( Min( CS ,( ( RMSe * MUM ) / ( RCSe - MUC ) ) ) / ( RMSe + MUC ) ) - MUC ) ) ) / ( RMSe + MUC ) )", "obj1": 0.9770833333333333, "obj2": 0.02524488679477437}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46875, "obj2": 0.4244976716743767}], "32": [{"determining": "Min( ( ( FirstVNF_CPU - FirstVNF_Mem ) - FirstVNF_Mem ) ,( MRS * ( PN * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Max( MUM,RRSe ) + RCSe ) * DS ) ) - ( ( Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) + DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) - MLU ) ) ) ) * CS ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_CPU ) * ( DDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RRSe ) / ( CS - ( ( RMSe * MUR ) / ( RCSe - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( FirstVNF_RAM_Server / ( FirstVNF_Mem - ACS ) )", "choosing": "Min( ( ( RRSe + RMSe ) + RMSe ) ,Max( DS,RCSe ) )", "obj1": 0.8916666666666667, "obj2": 0.08460786629351236}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( Min( ( CS / RCSe ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5015366110647257}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe + RMSe ) ,MUC )", "obj1": 0.9666666666666667, "obj2": 0.02696431618394898}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) * FirstVNF_Mem_Server )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3104166666666667, "obj2": 0.5627524336525076}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / MUM ) / ( ( DS + RCSe ) + MUR ) )", "obj1": 0.31666666666666665, "obj2": 0.5516254490311687}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( ( DS - CS ) - CS ) )", "obj1": 0.41458333333333336, "obj2": 0.4879652888678589}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "Min( Min( ( CS / MUC ) ,( DS - CS ) ) ,( MUM - MLU ) )", "obj1": 0.44583333333333336, "obj2": 0.4523912628011549}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46875, "obj2": 0.4244976716743767}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46458333333333335, "obj2": 0.4473237706530805}, {"determining": "( Min( MRS ,MDR ) * ( ( ARS - MDR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RMSe ,DS ) / Max( CS,DS ) ) / ( DS + RCSe ) )", "obj1": 0.5041666666666667, "obj2": 0.40975683077798003}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_CPU ) )", "choosing": "Max( ( MUM * MUC ),Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4819194172302824}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) + MDR )", "choosing": "Max( Min( ( DS / MUM ) ,Max( MUR,CS ) ),( DS * MUM ) )", "obj1": 0.49375, "obj2": 0.419206460489656}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR - PN ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.6354166666666666, "obj2": 0.30299736752850964}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( ( Min( ( ( ( ( Const / CRS ) - ( DDR * DDR ) ) - ( ( FirstVNF_RAM / ARS ) + ( BR * FirstVNF_Mem_Server ) ) ) * Max( ( ( BR + FirstVNF_CPU_Server ) + ( AMS - ACS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) ,( ( Min( ( ACS / FirstVNF_CPU ) ,( MRS - CRS ) ) * ( Max( AMS,Const ) + Min( Const ,ARS ) ) ) * Min( Min( ( FirstVNF_Mem_Server * ARS ) ,( FirstVNF_CPU_Server - RRS ) ) ,( Max( PN,AMS ) / ( CRS * FirstVNF_Mem_Server ) ) ) ) ) - ( ( Max( Max( ( BR - FirstVNF_CPU ),( BR / FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem - AMS ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) / Min( Min( ( FirstVNF_RAM + Const ) ,( CRS / FirstVNF_RAM ) ) ,Min( ( AMS * DDR ) ,Max( ACS,ACS ) ) ) ) / ( Max( ( ( ARS + AMS ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ),Min( ( RRS * RRS ) ,Min( BR ,Const ) ) ) - ( ( ( AMS - CRS ) * ( CRS - FirstVNF_Mem ) ) + ( Max( ARS,FirstVNF_CPU ) - ( ACS + FirstVNF_RAM ) ) ) ) ) ) * ( ( Min( Max( Min( Min( ACS ,RRS ) ,Max( CRS,ACS ) ),Max( ( FirstVNF_RAM + MRS ),( FirstVNF_Mem_Server - DDR ) ) ) ,Max( ( Max( Const,MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( ( MDR * MRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) ) + ( Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,Min( CRS ,AMS ) ),Min( ( CRS / ARS ) ,( Const - FirstVNF_Mem ) ) ) / Min( ( ( DDR / ARS ) - Max( CRS,AMS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MRS,MRS ) ) ) ) ) / ( Max( ( ( ( DDR * Const ) - ( Const / ARS ) ) * Max( ( FirstVNF_CPU + MRS ),( FirstVNF_RAM_Server / Const ) ) ),( ( Min( FirstVNF_RAM ,Const ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,ACS ) ) ) ) + Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,ARS ) ) - ( Max( CRS,CRS ) / ( FirstVNF_CPU * BR ) ) ),( Min( Max( ACS,FirstVNF_Mem_Server ) ,( FirstVNF_CPU / MDR ) ) / Max( ( DDR / MDR ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) ) - ( ( Max( ( ( ( Min( Const ,PN ) + ( FirstVNF_RAM - BR ) ) * ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( FirstVNF_RAM - MRS ) ) ) - ( ( ( Const + ARS ) - ( BR + AMS ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) + ( RRS * MRS ) ) ) ),( ( ( ( MRS * ACS ) / ( FirstVNF_RAM_Server - Const ) ) - Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) + Max( ( ( DDR / ARS ) - Min( MRS ,Const ) ),( ( ARS + ACS ) - ( MDR - Const ) ) ) ) ) + Min( ( ( Min( ( RRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) * ( Max( ACS,PN ) / ( ACS / BR ) ) ) + Min( ( ( BR - PN ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server * PN ) * ( FirstVNF_CPU / Const ) ) ) ) ,Min( ( ( ( MRS + FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) / Max( Const,ACS ) ) ) ,( Min( Max( FirstVNF_CPU_Server,PN ) ,( RRS - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - Min( ACS ,CRS ) ) ) ) ) ) + ( ( Min( ( ( Max( FirstVNF_CPU,Const ) - ( CRS + MRS ) ) + ( ( ARS - Const ) * ( BR + Const ) ) ) ,Max( Max( ( FirstVNF_RAM_Server + MRS ),Min( FirstVNF_RAM_Server ,ACS ) ),Max( Min( ARS ,FirstVNF_RAM ),Min( FirstVNF_RAM ,CRS ) ) ) ) / Min( ( ( ( RRS - RRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( Max( MDR,Const ) + Max( FirstVNF_RAM_Server,RRS ) ) ) ,Max( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( ( MDR * FirstVNF_RAM ) * ( PN * MRS ) ) ) ) ) / ( ( Min( ( Max( FirstVNF_Mem_Server,Const ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( ( FirstVNF_RAM * ARS ) / ( CRS + MRS ) ) ) / Max( ( Max( FirstVNF_Mem_Server,CRS ) * Min( DDR ,Const ) ),( Min( RRS ,MDR ) - Max( ACS,FirstVNF_CPU ) ) ) ) * Min( ( ( ( MDR / RRS ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( Min( ACS ,FirstVNF_RAM ) ,( DDR + Const ) ) ) ,( ( ( ARS - ARS ) / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( ( CRS - MRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUC / MUR ) - ( MUC * DS ) ) * Max( ( RRSe - RRSe ),Min( RCSe ,MUM ) ) ) / ( ( Max( MLU,DS ) / ( MUC - DS ) ) - ( Min( CS ,DS ) / ( DS - RRSe ) ) ) ) + Max( ( ( ( MLU / RCSe ) / ( RRSe / DS ) ) + Min( Max( MUR,DS ) ,( CS - CS ) ) ),( ( ( CS / MUR ) / ( MUM * RCSe ) ) + ( ( MUM / RCSe ) + Max( CS,MUR ) ) ) ) ) - ( Max( ( Min( ( RRSe * RMSe ) ,( RMSe - RMSe ) ) - ( ( MUC - MUM ) - Min( RMSe ,RCSe ) ) ),( ( ( RMSe - MLU ) - ( CS - MUR ) ) * Max( ( MUC * MUC ),Max( RCSe,RRSe ) ) ) ) + ( ( ( ( DS / MUM ) * ( MUM + RMSe ) ) * ( ( MLU / MLU ) * Max( RCSe,RMSe ) ) ) * Max( Max( ( CS * MUC ),( RCSe / MUR ) ),( ( RMSe * MUM ) / Max( MUC,RCSe ) ) ) ) ) ) + ( Max( ( ( Min( ( RMSe - MUC ) ,( MUR / MUR ) ) + Max( Max( MUM,CS ),( MUC * DS ) ) ) * Max( ( Max( RRSe,CS ) / Min( MUR ,MUC ) ),( ( MUM * MUC ) + ( CS + RRSe ) ) ) ),Min( ( Max( Min( MUC ,DS ),( MUR / MLU ) ) / ( Min( RMSe ,MLU ) - Max( RRSe,RMSe ) ) ) ,( ( ( RRSe + MUR ) + ( MUM * DS ) ) / ( ( DS * MUR ) + ( MUC + CS ) ) ) ) ) - ( Max( ( ( ( RMSe * MLU ) + ( CS - RCSe ) ) + ( ( MLU + MUC ) - Max( RMSe,MUC ) ) ),( ( Max( RRSe,RRSe ) / ( MUR - MLU ) ) - ( ( RRSe / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( Max( Min( MUR ,DS ),Max( RCSe,RMSe ) ),( ( RRSe / MLU ) / ( RRSe - RRSe ) ) ) * ( ( ( RMSe / CS ) / ( RCSe - RCSe ) ) - Max( ( RCSe * CS ),( MUR * MUR ) ) ) ) ) ) ) - ( ( Min( ( Min( ( ( MUC / CS ) * ( CS + RCSe ) ) ,( ( MLU / RRSe ) * Min( CS ,DS ) ) ) / ( ( ( RRSe + MUC ) + Max( MUC,RCSe ) ) - ( Max( CS,RRSe ) + ( MUR / DS ) ) ) ) ,( Max( Min( ( RCSe * RRSe ) ,( RMSe * RRSe ) ),( ( DS / MLU ) + ( RMSe * RMSe ) ) ) * ( ( Min( MUC ,RRSe ) / ( DS * MUC ) ) / ( Max( MLU,RRSe ) - ( MLU / CS ) ) ) ) ) + ( Max( Max( ( ( MUR * DS ) * Min( DS ,RCSe ) ),( Max( RMSe,MUM ) / Max( RMSe,MUR ) ) ),( ( ( DS / MLU ) + ( DS + RMSe ) ) - Min( ( MUC - MUM ) ,Min( RCSe ,DS ) ) ) ) - ( ( ( ( DS - RRSe ) + ( RMSe / MLU ) ) / ( ( DS - DS ) - ( MLU * DS ) ) ) - ( Min( ( CS * MUR ) ,( RCSe + DS ) ) / Max( ( MUR + MUM ),Min( RRSe ,RCSe ) ) ) ) ) ) - ( ( Max( ( ( ( DS / RRSe ) + Max( RCSe,MUR ) ) - ( ( DS - MLU ) + ( RCSe + RRSe ) ) ),Max( ( Max( MUM,RCSe ) * ( DS - RCSe ) ),( ( RRSe + MUR ) / ( CS + MLU ) ) ) ) / ( Min( ( ( RCSe - DS ) / ( RMSe / RCSe ) ) ,( ( MUC / DS ) * ( MUC * CS ) ) ) / ( ( ( MLU * DS ) + Min( RMSe ,DS ) ) / ( Min( CS ,MLU ) - ( DS / RCSe ) ) ) ) ) * Max( Max( ( Max( Max( MUM,DS ),( RRSe * CS ) ) + ( Min( CS ,RCSe ) / Max( RRSe,MUC ) ) ),Min( ( ( MUR / RMSe ) - Max( MUC,DS ) ) ,Min( ( MLU / RMSe ) ,( RMSe - MUC ) ) ) ),( Max( ( ( CS / MUM ) * Min( RRSe ,MLU ) ),( Max( RCSe,RMSe ) + ( MUC * RMSe ) ) ) - Min( ( ( MUR / RRSe ) * ( DS - DS ) ) ,( ( CS - RCSe ) + ( MUM + MUC ) ) ) ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.009961722174192387}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR + RRSe ) )", "obj1": 0.48125, "obj2": 0.42148825972761067}, {"determining": "( ( Const * FirstVNF_RAM ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUM * MUC ) + RCSe )", "obj1": 0.99375, "obj2": 0.007110951164682919}], "33": [{"determining": "( Min( CRS ,MRS ) / ( MDR - ACS ) )", "choosing": "Min( ( CS / RMSe ) ,( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU - FirstVNF_Mem ) - FirstVNF_Mem ) ,( MRS * ( PN * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Max( MUM,RRSe ) + RCSe ) * DS ) ) - ( ( Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) + DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) - MLU ) ) ) ) * CS ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( FirstVNF_RAM_Server / ( FirstVNF_Mem - ACS ) )", "choosing": "Min( ( ( RRSe + RMSe ) + RMSe ) ,Max( DS,RCSe ) )", "obj1": 0.8916666666666667, "obj2": 0.08460786629351236}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( Min( ( CS / RCSe ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5015366110647257}, {"determining": "( ( CRS - FirstVNF_CPU ) + Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS * Max( DS,RMSe ) ) + Max( DS,RMSe ) )", "obj1": 0.68125, "obj2": 0.2709390418884648}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe + RMSe ) ,MUC )", "obj1": 0.9666666666666667, "obj2": 0.02696431618394898}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) * FirstVNF_Mem_Server )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3104166666666667, "obj2": 0.5627524336525076}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / MUM ) / ( ( DS + RCSe ) + MUR ) )", "obj1": 0.31666666666666665, "obj2": 0.5516254490311687}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "( ( ( Min( ( ( ( ( Const / CRS ) - ( DDR * DDR ) ) - ( ( FirstVNF_RAM / ARS ) + ( BR * FirstVNF_Mem_Server ) ) ) * Max( ( ( BR + FirstVNF_CPU_Server ) + ( AMS - ACS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) ,( ( Min( ( ACS / FirstVNF_CPU ) ,( MRS - CRS ) ) * ( Max( AMS,Const ) + Min( Const ,ARS ) ) ) * Min( Min( ( FirstVNF_Mem_Server * ARS ) ,( FirstVNF_CPU_Server - RRS ) ) ,( Max( PN,AMS ) / ( CRS * FirstVNF_Mem_Server ) ) ) ) ) - ( ( Max( Max( ( BR - FirstVNF_CPU ),( BR / FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem - AMS ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) / Min( Min( ( FirstVNF_RAM + Const ) ,( CRS / FirstVNF_RAM ) ) ,Min( ( AMS * DDR ) ,Max( ACS,ACS ) ) ) ) / ( Max( ( ( ARS + AMS ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ),Min( ( RRS * RRS ) ,Min( BR ,Const ) ) ) - ( ( ( AMS - CRS ) * ( CRS - FirstVNF_Mem ) ) + ( Max( ARS,FirstVNF_CPU ) - ( ACS + FirstVNF_RAM ) ) ) ) ) ) * ( ( Min( Max( Min( Min( ACS ,RRS ) ,Max( CRS,ACS ) ),Max( ( FirstVNF_RAM + MRS ),( FirstVNF_Mem_Server - DDR ) ) ) ,Max( ( Max( Const,MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( ( MDR * MRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) ) + ( Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,Min( CRS ,AMS ) ),Min( ( CRS / ARS ) ,( Const - FirstVNF_Mem ) ) ) / Min( ( ( DDR / ARS ) - Max( CRS,AMS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MRS,MRS ) ) ) ) ) / ( Max( ( ( ( DDR * Const ) - ( Const / ARS ) ) * Max( ( FirstVNF_CPU + MRS ),( FirstVNF_RAM_Server / Const ) ) ),( ( Min( FirstVNF_RAM ,Const ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,ACS ) ) ) ) + Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,ARS ) ) - ( Max( CRS,CRS ) / ( FirstVNF_CPU * BR ) ) ),( Min( Max( ACS,FirstVNF_Mem_Server ) ,( FirstVNF_CPU / MDR ) ) / Max( ( DDR / MDR ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) ) - ( ( Max( ( ( ( Min( Const ,PN ) + ( FirstVNF_RAM - BR ) ) * ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( FirstVNF_RAM - MRS ) ) ) - ( ( ( Const + ARS ) - ( BR + AMS ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) + ( RRS * MRS ) ) ) ),( ( ( ( MRS * ACS ) / ( FirstVNF_RAM_Server - Const ) ) - Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) + Max( ( ( DDR / ARS ) - Min( MRS ,Const ) ),( ( ARS + ACS ) - ( MDR - Const ) ) ) ) ) + Min( ( ( Min( ( RRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) * ( Max( ACS,PN ) / ( ACS / BR ) ) ) + Min( ( ( BR - PN ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server * PN ) * ( FirstVNF_CPU / Const ) ) ) ) ,Min( ( ( ( MRS + FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) / Max( Const,ACS ) ) ) ,( Min( Max( FirstVNF_CPU_Server,PN ) ,( RRS - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - Min( ACS ,CRS ) ) ) ) ) ) + ( ( Min( ( ( Max( FirstVNF_CPU,Const ) - ( CRS + MRS ) ) + ( ( ARS - Const ) * ( BR + Const ) ) ) ,Max( Max( ( FirstVNF_RAM_Server + MRS ),Min( FirstVNF_RAM_Server ,ACS ) ),Max( Min( ARS ,FirstVNF_RAM ),Min( FirstVNF_RAM ,CRS ) ) ) ) / Min( ( ( ( RRS - RRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( Max( MDR,Const ) + Max( FirstVNF_RAM_Server,RRS ) ) ) ,Max( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( ( MDR * FirstVNF_RAM ) * ( PN * MRS ) ) ) ) ) / ( ( Min( ( Max( FirstVNF_Mem_Server,Const ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( ( FirstVNF_RAM * ARS ) / ( CRS + MRS ) ) ) / Max( ( Max( FirstVNF_Mem_Server,CRS ) * Min( DDR ,Const ) ),( Min( RRS ,MDR ) - Max( ACS,FirstVNF_CPU ) ) ) ) * Min( ( ( ( MDR / RRS ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( Min( ACS ,FirstVNF_RAM ) ,( DDR + Const ) ) ) ,( ( ( ARS - ARS ) / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( ( CRS - MRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUC / MUR ) - ( MUC * DS ) ) * Max( ( RRSe - RRSe ),Min( RCSe ,MUM ) ) ) / ( ( Max( MLU,DS ) / ( MUC - DS ) ) - ( Min( CS ,DS ) / ( DS - RRSe ) ) ) ) + Max( ( ( ( MLU / RCSe ) / ( RRSe / DS ) ) + Min( Max( MUR,DS ) ,( CS - CS ) ) ),( ( ( CS / MUR ) / ( MUM * RCSe ) ) + ( ( MUM / RCSe ) + Max( CS,MUR ) ) ) ) ) - ( Max( ( Min( ( RRSe * RMSe ) ,( RMSe - RMSe ) ) - ( ( MUC - MUM ) - Min( RMSe ,RCSe ) ) ),( ( ( RMSe - MLU ) - ( CS - MUR ) ) * Max( ( MUC * MUC ),Max( RCSe,RRSe ) ) ) ) + ( ( ( ( DS / MUM ) * ( MUM + RMSe ) ) * ( ( MLU / MLU ) * Max( RCSe,RMSe ) ) ) * Max( Max( ( CS * MUC ),( RCSe / MUR ) ),( ( RMSe * MUM ) / Max( MUC,RCSe ) ) ) ) ) ) + ( Max( ( ( Min( ( RMSe - MUC ) ,( MUR / MUR ) ) + Max( Max( MUM,CS ),( MUC * DS ) ) ) * Max( ( Max( RRSe,CS ) / Min( MUR ,MUC ) ),( ( MUM * MUC ) + ( CS + RRSe ) ) ) ),Min( ( Max( Min( MUC ,DS ),( MUR / MLU ) ) / ( Min( RMSe ,MLU ) - Max( RRSe,RMSe ) ) ) ,( ( ( RRSe + MUR ) + ( MUM * DS ) ) / ( ( DS * MUR ) + ( MUC + CS ) ) ) ) ) - ( Max( ( ( ( RMSe * MLU ) + ( CS - RCSe ) ) + ( ( MLU + MUC ) - Max( RMSe,MUC ) ) ),( ( Max( RRSe,RRSe ) / ( MUR - MLU ) ) - ( ( RRSe / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( Max( Min( MUR ,DS ),Max( RCSe,RMSe ) ),( ( RRSe / MLU ) / ( RRSe - RRSe ) ) ) * ( ( ( RMSe / CS ) / ( RCSe - RCSe ) ) - Max( ( RCSe * CS ),( MUR * MUR ) ) ) ) ) ) ) - ( ( Min( ( Min( ( ( MUC / CS ) * ( CS + RCSe ) ) ,( ( MLU / RRSe ) * Min( CS ,DS ) ) ) / ( ( ( RRSe + MUC ) + Max( MUC,RCSe ) ) - ( Max( CS,RRSe ) + ( MUR / DS ) ) ) ) ,( Max( Min( ( RCSe * RRSe ) ,( RMSe * RRSe ) ),( ( DS / MLU ) + ( RMSe * RMSe ) ) ) * ( ( Min( MUC ,RRSe ) / ( DS * MUC ) ) / ( Max( MLU,RRSe ) - ( MLU / CS ) ) ) ) ) + ( Max( Max( ( ( MUR * DS ) * Min( DS ,RCSe ) ),( Max( RMSe,MUM ) / Max( RMSe,MUR ) ) ),( ( ( DS / MLU ) + ( DS + RMSe ) ) - Min( ( MUC - MUM ) ,Min( RCSe ,DS ) ) ) ) - ( ( ( ( DS - RRSe ) + ( RMSe / MLU ) ) / ( ( DS - DS ) - ( MLU * DS ) ) ) - ( Min( ( CS * MUR ) ,( RCSe + DS ) ) / Max( ( MUR + MUM ),Min( RRSe ,RCSe ) ) ) ) ) ) - ( ( Max( ( ( ( DS / RRSe ) + Max( RCSe,MUR ) ) - ( ( DS - MLU ) + ( RCSe + RRSe ) ) ),Max( ( Max( MUM,RCSe ) * ( DS - RCSe ) ),( ( RRSe + MUR ) / ( CS + MLU ) ) ) ) / ( Min( ( ( RCSe - DS ) / ( RMSe / RCSe ) ) ,( ( MUC / DS ) * ( MUC * CS ) ) ) / ( ( ( MLU * DS ) + Min( RMSe ,DS ) ) / ( Min( CS ,MLU ) - ( DS / RCSe ) ) ) ) ) * Max( Max( ( Max( Max( MUM,DS ),( RRSe * CS ) ) + ( Min( CS ,RCSe ) / Max( RRSe,MUC ) ) ),Min( ( ( MUR / RMSe ) - Max( MUC,DS ) ) ,Min( ( MLU / RMSe ) ,( RMSe - MUC ) ) ) ),( Max( ( ( CS / MUM ) * Min( RRSe ,MLU ) ),( Max( RCSe,RMSe ) + ( MUC * RMSe ) ) ) - Min( ( ( MUR / RRSe ) * ( DS - DS ) ) ,( ( CS - RCSe ) + ( MUM + MUC ) ) ) ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.009961722174192387}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "Min( Min( ( CS / MUC ) ,( DS - CS ) ) ,( MUM - MLU ) )", "obj1": 0.44583333333333336, "obj2": 0.4523912628011549}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46875, "obj2": 0.4244976716743767}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_CPU ) )", "choosing": "Max( ( MUM * MUC ),Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4819194172302824}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( Const * FirstVNF_RAM ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUM * MUC ) + RCSe )", "obj1": 0.99375, "obj2": 0.007110951164682919}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) + MDR )", "choosing": "Max( Min( ( DS / MUM ) ,Max( MUR,CS ) ),( DS * MUM ) )", "obj1": 0.49375, "obj2": 0.419206460489656}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR - PN ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.6354166666666666, "obj2": 0.30299736752850964}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46458333333333335, "obj2": 0.4473237706530805}, {"determining": "( ( RRS / DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / CS ) / ( RMSe + RRSe ) )", "obj1": 0.37083333333333335, "obj2": 0.5357070967960863}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) + ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - CS ) + ( ( ( RRSe - MUR ) + Min( MUR ,MLU ) ) * MUC ) )", "obj1": 0.4125, "obj2": 0.49136336532836317}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}], "34": [{"determining": "( Min( CRS ,MRS ) / ( MDR - ACS ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - ( ( Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( RMSe + DS ) ) ),( Min( ( ( RRSe - CS ) + DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) - MLU ) ) ) ) * MUC ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,MRS ) / ( MDR - ACS ) )", "choosing": "Min( ( CS / RMSe ) ,( CS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( FirstVNF_RAM_Server / ( FirstVNF_Mem - ACS ) )", "choosing": "Min( ( ( RRSe + RMSe ) + RMSe ) ,Max( DS,RCSe ) )", "obj1": 0.8916666666666667, "obj2": 0.08460786629351236}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( Min( ( CS / RCSe ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5015366110647257}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) + MDR )", "choosing": "Max( Min( ( DS / MUM ) ,Max( MUR,CS ) ),( DS * MUM ) )", "obj1": 0.49375, "obj2": 0.419206460489656}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe + RMSe ) ,MUC )", "obj1": 0.9666666666666667, "obj2": 0.02696431618394898}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) * FirstVNF_Mem_Server )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3104166666666667, "obj2": 0.5627524336525076}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46875, "obj2": 0.4244976716743767}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / MUM ) / ( ( DS + RCSe ) + MUR ) )", "obj1": 0.31666666666666665, "obj2": 0.5516254490311687}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( CRS - FirstVNF_CPU ) + Max( MRS,AMS ) )", "choosing": "( ( MUC / MUM ) + Max( DS,RMSe ) )", "obj1": 0.4125, "obj2": 0.4870514890960576}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "Min( Min( ( CS / MUC ) ,( DS - CS ) ) ,( MUM - MLU ) )", "obj1": 0.44583333333333336, "obj2": 0.4523912628011549}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "( ( ( Min( ( ( ( ( Const / CRS ) - ( DDR * DDR ) ) - ( ( FirstVNF_RAM / ARS ) + ( BR * FirstVNF_Mem_Server ) ) ) * Max( ( ( BR + FirstVNF_CPU_Server ) + ( AMS - ACS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) ,( ( Min( ( ACS / FirstVNF_CPU ) ,( MRS - CRS ) ) * ( Max( AMS,Const ) + Min( Const ,ARS ) ) ) * Min( Min( ( FirstVNF_Mem_Server * ARS ) ,( FirstVNF_CPU_Server - RRS ) ) ,( Max( PN,AMS ) / ( CRS * FirstVNF_Mem_Server ) ) ) ) ) - ( ( Max( Max( ( BR - FirstVNF_CPU ),( BR / FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem - AMS ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) / Min( Min( ( FirstVNF_RAM + Const ) ,( CRS / FirstVNF_RAM ) ) ,Min( ( AMS * DDR ) ,Max( ACS,ACS ) ) ) ) / ( Max( ( ( ARS + AMS ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ),Min( ( RRS * RRS ) ,Min( BR ,Const ) ) ) - ( ( ( AMS - CRS ) * ( CRS - FirstVNF_Mem ) ) + ( Max( ARS,FirstVNF_CPU ) - ( ACS + FirstVNF_RAM ) ) ) ) ) ) * ( ( Min( Max( Min( Min( ACS ,RRS ) ,Max( CRS,ACS ) ),Max( ( FirstVNF_RAM + MRS ),( FirstVNF_Mem_Server - DDR ) ) ) ,Max( ( Max( Const,MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( ( MDR * MRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) ) + ( Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,Min( CRS ,AMS ) ),Min( ( CRS / ARS ) ,( Const - FirstVNF_Mem ) ) ) / Min( ( ( DDR / ARS ) - Max( CRS,AMS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MRS,MRS ) ) ) ) ) / ( Max( ( ( ( DDR * Const ) - ( Const / ARS ) ) * Max( ( FirstVNF_CPU + MRS ),( FirstVNF_RAM_Server / Const ) ) ),( ( Min( FirstVNF_RAM ,Const ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,ACS ) ) ) ) + Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,ARS ) ) - ( Max( CRS,CRS ) / ( FirstVNF_CPU * BR ) ) ),( Min( Max( ACS,FirstVNF_Mem_Server ) ,( FirstVNF_CPU / MDR ) ) / Max( ( DDR / MDR ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) ) - ( ( Max( ( ( ( Min( Const ,PN ) + ( FirstVNF_RAM - BR ) ) * ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( FirstVNF_RAM - MRS ) ) ) - ( ( ( Const + ARS ) - ( BR + AMS ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) + ( RRS * MRS ) ) ) ),( ( ( ( MRS * ACS ) / ( FirstVNF_RAM_Server - Const ) ) - Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) + Max( ( ( DDR / ARS ) - Min( MRS ,Const ) ),( ( ARS + ACS ) - ( MDR - Const ) ) ) ) ) + Min( ( ( Min( ( RRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) * ( Max( ACS,PN ) / ( ACS / BR ) ) ) + Min( ( ( BR - PN ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server * PN ) * ( FirstVNF_CPU / Const ) ) ) ) ,Min( ( ( ( MRS + FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) / Max( Const,ACS ) ) ) ,( Min( Max( FirstVNF_CPU_Server,PN ) ,( RRS - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - Min( ACS ,CRS ) ) ) ) ) ) + ( ( Min( ( ( Max( FirstVNF_CPU,Const ) - ( CRS + MRS ) ) + ( ( ARS - Const ) * ( BR + Const ) ) ) ,Max( Max( ( FirstVNF_RAM_Server + MRS ),Min( FirstVNF_RAM_Server ,ACS ) ),Max( Min( ARS ,FirstVNF_RAM ),Min( FirstVNF_RAM ,CRS ) ) ) ) / Min( ( ( ( RRS - RRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( Max( MDR,Const ) + Max( FirstVNF_RAM_Server,RRS ) ) ) ,Max( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( ( MDR * FirstVNF_RAM ) * ( PN * MRS ) ) ) ) ) / ( ( Min( ( Max( FirstVNF_Mem_Server,Const ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( ( FirstVNF_RAM * ARS ) / ( CRS + MRS ) ) ) / Max( ( Max( FirstVNF_Mem_Server,CRS ) * Min( DDR ,Const ) ),( Min( RRS ,MDR ) - Max( ACS,FirstVNF_CPU ) ) ) ) * Min( ( ( ( MDR / RRS ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( Min( ACS ,FirstVNF_RAM ) ,( DDR + Const ) ) ) ,( ( ( ARS - ARS ) / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( ( CRS - MRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUC / MUR ) - ( MUC * DS ) ) * Max( ( RRSe - RRSe ),Min( RCSe ,MUM ) ) ) / ( ( Max( MLU,DS ) / ( MUC - DS ) ) - ( Min( CS ,DS ) / ( DS - RRSe ) ) ) ) + Max( ( ( ( MLU / RCSe ) / ( RRSe / DS ) ) + Min( Max( MUR,DS ) ,( CS - CS ) ) ),( ( ( CS / MUR ) / ( MUM * RCSe ) ) + ( ( MUM / RCSe ) + Max( CS,MUR ) ) ) ) ) - ( Max( ( Min( ( RRSe * RMSe ) ,( RMSe - RMSe ) ) - ( ( MUC - MUM ) - Min( RMSe ,RCSe ) ) ),( ( ( RMSe - MLU ) - ( CS - MUR ) ) * Max( ( MUC * MUC ),Max( RCSe,RRSe ) ) ) ) + ( ( ( ( DS / MUM ) * ( MUM + RMSe ) ) * ( ( MLU / MLU ) * Max( RCSe,RMSe ) ) ) * Max( Max( ( CS * MUC ),( RCSe / MUR ) ),( ( RMSe * MUM ) / Max( MUC,RCSe ) ) ) ) ) ) + ( Max( ( ( Min( ( RMSe - MUC ) ,( MUR / MUR ) ) + Max( Max( MUM,CS ),( MUC * DS ) ) ) * Max( ( Max( RRSe,CS ) / Min( MUR ,MUC ) ),( ( MUM * MUC ) + ( CS + RRSe ) ) ) ),Min( ( Max( Min( MUC ,DS ),( MUR / MLU ) ) / ( Min( RMSe ,MLU ) - Max( RRSe,RMSe ) ) ) ,( ( ( RRSe + MUR ) + ( MUM * DS ) ) / ( ( DS * MUR ) + ( MUC + CS ) ) ) ) ) - ( Max( ( ( ( RMSe * MLU ) + ( CS - RCSe ) ) + ( ( MLU + MUC ) - Max( RMSe,MUC ) ) ),( ( Max( RRSe,RRSe ) / ( MUR - MLU ) ) - ( ( RRSe / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( Max( Min( MUR ,DS ),Max( RCSe,RMSe ) ),( ( RRSe / MLU ) / ( RRSe - RRSe ) ) ) * ( ( ( RMSe / CS ) / ( RCSe - RCSe ) ) - Max( ( RCSe * CS ),( MUR * MUR ) ) ) ) ) ) ) - ( ( Min( ( Min( ( ( MUC / CS ) * ( CS + RCSe ) ) ,( ( MLU / RRSe ) * Min( CS ,DS ) ) ) / ( ( ( RRSe + MUC ) + Max( MUC,RCSe ) ) - ( Max( CS,RRSe ) + ( MUR / DS ) ) ) ) ,( Max( Min( ( RCSe * RRSe ) ,( RMSe * RRSe ) ),( ( DS / MLU ) + ( RMSe * RMSe ) ) ) * ( ( Min( MUC ,RRSe ) / ( DS * MUC ) ) / ( Max( MLU,RRSe ) - ( MLU / CS ) ) ) ) ) + ( Max( Max( ( ( MUR * DS ) * Min( DS ,RCSe ) ),( Max( RMSe,MUM ) / Max( RMSe,MUR ) ) ),( ( ( DS / MLU ) + ( DS + RMSe ) ) - Min( ( MUC - MUM ) ,Min( RCSe ,DS ) ) ) ) - ( ( ( ( DS - RRSe ) + ( RMSe / MLU ) ) / ( ( DS - DS ) - ( MLU * DS ) ) ) - ( Min( ( CS * MUR ) ,( RCSe + DS ) ) / Max( ( MUR + MUM ),Min( RRSe ,RCSe ) ) ) ) ) ) - ( ( Max( ( ( ( DS / RRSe ) + Max( RCSe,MUR ) ) - ( ( DS - MLU ) + ( RCSe + RRSe ) ) ),Max( ( Max( MUM,RCSe ) * ( DS - RCSe ) ),( ( RRSe + MUR ) / ( CS + MLU ) ) ) ) / ( Min( ( ( RCSe - DS ) / ( RMSe / RCSe ) ) ,( ( MUC / DS ) * ( MUC * CS ) ) ) / ( ( ( MLU * DS ) + Min( RMSe ,DS ) ) / ( Min( CS ,MLU ) - ( DS / RCSe ) ) ) ) ) * Max( Max( ( Max( Max( MUM,DS ),( RRSe * CS ) ) + ( Min( CS ,RCSe ) / Max( RRSe,MUC ) ) ),Min( ( ( MUR / RMSe ) - Max( MUC,DS ) ) ,Min( ( MLU / RMSe ) ,( RMSe - MUC ) ) ) ),( Max( ( ( CS / MUM ) * Min( RRSe ,MLU ) ),( Max( RCSe,RMSe ) + ( MUC * RMSe ) ) ) - Min( ( ( MUR / RRSe ) * ( DS - DS ) ) ,( ( CS - RCSe ) + ( MUM + MUC ) ) ) ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.009961722174192387}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_CPU ) )", "choosing": "Max( ( MUM * MUC ),Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4819194172302824}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46458333333333335, "obj2": 0.4473237706530805}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( ( CRS - FirstVNF_CPU ) + Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS * Max( DS,RMSe ) ) + Max( DS,RMSe ) )", "obj1": 0.68125, "obj2": 0.2709390418884648}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( Const * FirstVNF_RAM ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUM * MUC ) + RCSe )", "obj1": 0.99375, "obj2": 0.007110951164682919}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR - PN ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.6354166666666666, "obj2": 0.30299736752850964}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,RRSe ) / ( CS + DS ) )", "obj1": 0.675, "obj2": 0.27094330555300583}, {"determining": "( ( RRS / DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / CS ) / ( RMSe + RRSe ) )", "obj1": 0.37083333333333335, "obj2": 0.5357070967960863}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}], "35": [{"determining": "( Min( CRS ,MRS ) / ( MDR - ACS ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - ( ( Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( RMSe + DS ) ) ),( Min( ( ( RRSe - CS ) + DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) - MLU ) ) ) ) * MUC ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,MRS ) / ( MDR - ACS ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - ( ( Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( RMSe + DS ) ) ),( Min( ( ( RRSe - CS ) + DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) - MLU ) ) ) ) * MUC ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / Min( ( DS - MLU ) ,MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.73926468174184}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) + Min( PN ,DDR ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( ( MUM / CS ) ,DS ) )", "obj1": 0.7166666666666667, "obj2": 0.12382601479289403}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( ( MUC / MUC ) + ( DS / MUR ) )", "obj1": 0.6833333333333333, "obj2": 0.2396263750599078}, {"determining": "( ( FirstVNF_RAM * MDR ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( ( DS / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + ( ( DS / RCSe ) + RMSe ) )", "obj1": 0.79375, "obj2": 0.09068665708112082}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - ACS ) ,( ( DDR - BR ) + ( FirstVNF_Mem * DDR ) ) )", "choosing": "( ( DS * CS ) / ( MUR / ( ( RCSe - RMSe ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6456523308548606}, {"determining": "( ( BR / Const ) * ( Const / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( DS ,MLU ),( DS - MLU ) ) / ( DS - MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.7232459044120828}, {"determining": "( FirstVNF_RAM_Server / ( FirstVNF_Mem - ACS ) )", "choosing": "Min( ( ( RRSe + RMSe ) + RMSe ) ,Max( DS,RCSe ) )", "obj1": 0.8916666666666667, "obj2": 0.08460786629351236}, {"determining": "( ( BR / Const ) * ( Max( PN,CRS ) - MDR ) )", "choosing": "( Min( MUC ,Max( MUC,MUR ) ) / ( RMSe - MUR ) )", "obj1": 0.7583333333333333, "obj2": 0.10874751349281322}, {"determining": "( ( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( MLU * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.03675026204928716}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( Min( ( CS / RCSe ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3958333333333333, "obj2": 0.5015366110647257}, {"determining": "Min( ( ARS + Max( CRS,DDR ) ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS * DS ) / Min( MLU ,CS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.26666666666666666, "obj2": 0.6250780529722397}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) + MDR )", "choosing": "Max( Min( ( DS / MUM ) ,Max( MUR,CS ) ),( DS * MUM ) )", "obj1": 0.49375, "obj2": 0.419206460489656}, {"determining": "( Min( MRS ,MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,DS ) / Max( CS,DS ) )", "obj1": 0.56875, "obj2": 0.34648790022165854}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe + RMSe ) ,MUC )", "obj1": 0.9666666666666667, "obj2": 0.02696431618394898}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( ( CS - CS ) ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.30625, "obj2": 0.6021724320462264}, {"determining": "( ( BR / Const ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ) ) / ( DS - MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6355596263462047}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) * FirstVNF_Mem_Server )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3104166666666667, "obj2": 0.5627524336525076}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe / DS ),Max( Max( DS,RRSe ),Max( MLU,RMSe ) ) )", "obj1": 0.5125, "obj2": 0.39659089755125193}, {"determining": "( ( FirstVNF_CPU_Server / Const ) * ( Const / ARS ) )", "choosing": "( Max( Min( DS ,RMSe ),( DS - MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.5479166666666667, "obj2": 0.3689275249432119}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( ( MUM * MUC ),( ( Min( RMSe ,DS ) + RCSe ) * DS ) ) - Max( ( ( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ) + ( Min( ( ( RRSe / CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( MUR,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) * CS ),RMSe ) )", "obj1": 0.29583333333333334, "obj2": 0.6105521870657158}, {"determining": "( ( DDR + PN ) + Max( CRS,DDR ) )", "choosing": "Max( ( Min( Min( ( Max( ( ( MLU + RMSe ) - Max( DS,RCSe ) ),( ( CS * RCSe ) - ( RCSe * MUR ) ) ) / ( ( ( DS / RCSe ) * Min( MLU ,MUC ) ) * ( ( DS * RRSe ) - ( RCSe + DS ) ) ) ) ,( ( Min( ( MUM / DS ) ,( MUM - MUR ) ) - ( Max( RMSe,CS ) * ( MUR - MUR ) ) ) * ( ( Max( RMSe,DS ) / Max( RCSe,CS ) ) / ( ( RRSe / DS ) * Min( MUM ,MLU ) ) ) ) ) ,( ( ( ( Min( MUC ,RCSe ) - ( DS - DS ) ) + ( ( RCSe / RRSe ) - ( MUM + MUM ) ) ) - Min( Min( Min( RMSe ,MLU ) ,( RCSe - MUC ) ) ,Min( Min( DS ,MUR ) ,Max( RCSe,RRSe ) ) ) ) * ( ( ( ( MUM + MUM ) + ( RRSe + RCSe ) ) * ( ( CS * DS ) / Min( MLU ,CS ) ) ) * ( ( ( CS + MUC ) + ( RMSe + RMSe ) ) - Min( Min( MUM ,RCSe ) ,( RCSe / DS ) ) ) ) ) ) * MUC ),( DS - RRSe ) )", "obj1": 0.3770833333333333, "obj2": 0.5260845365769261}, {"determining": "( ( ( FirstVNF_RAM - CRS ) / ( FirstVNF_CPU - CRS ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + ( MLU * ( DS / RMSe ) ) )", "obj1": 0.5979166666666667, "obj2": 0.3224861096121468}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46875, "obj2": 0.4244976716743767}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) * ( Const / ARS ) )", "choosing": "( Max( MUR,( DS + MUR ) ) / Max( DS,RRSe ) )", "obj1": 0.61875, "obj2": 0.3109156917627763}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / MUM ) / ( ( DS + RCSe ) + MUR ) )", "obj1": 0.31666666666666665, "obj2": 0.5516254490311687}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + Const ) )", "choosing": "Max( DS,( DS - MLU ) )", "obj1": 0.5875, "obj2": 0.33731220049554395}, {"determining": "( Min( PN ,DDR ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / ( MLU - ( ( MUC * RMSe ) * RCSe ) ) ) + CS ) )", "obj1": 0.7770833333333333, "obj2": 0.10341120351434803}, {"determining": "( ( BR / MDR ) * ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) / ( RMSe - MUR ) ) ) / ( DS - MUR ) )", "obj1": 0.3458333333333333, "obj2": 0.5435984272778023}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / MUC ) ,( DS - CS ) )", "obj1": 0.46458333333333335, "obj2": 0.4473237706530805}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "Min( Min( ( CS / MUC ) ,( DS - CS ) ) ,( MUM - MLU ) )", "obj1": 0.44583333333333336, "obj2": 0.4523912628011549}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( RMSe + Min( ( RMSe + MUC ) ,RMSe ) ) + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.90625, "obj2": 0.04551454570974845}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( DS - CS ) )", "obj1": 0.43333333333333335, "obj2": 0.4655783612275118}, {"determining": "( ( ( Min( ( ( ( ( Const / CRS ) - ( DDR * DDR ) ) - ( ( FirstVNF_RAM / ARS ) + ( BR * FirstVNF_Mem_Server ) ) ) * Max( ( ( BR + FirstVNF_CPU_Server ) + ( AMS - ACS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) ,( ( Min( ( ACS / FirstVNF_CPU ) ,( MRS - CRS ) ) * ( Max( AMS,Const ) + Min( Const ,ARS ) ) ) * Min( Min( ( FirstVNF_Mem_Server * ARS ) ,( FirstVNF_CPU_Server - RRS ) ) ,( Max( PN,AMS ) / ( CRS * FirstVNF_Mem_Server ) ) ) ) ) - ( ( Max( Max( ( BR - FirstVNF_CPU ),( BR / FirstVNF_CPU_Server ) ),Min( ( FirstVNF_Mem - AMS ) ,Min( RRS ,FirstVNF_Mem_Server ) ) ) / Min( Min( ( FirstVNF_RAM + Const ) ,( CRS / FirstVNF_RAM ) ) ,Min( ( AMS * DDR ) ,Max( ACS,ACS ) ) ) ) / ( Max( ( ( ARS + AMS ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ),Min( ( RRS * RRS ) ,Min( BR ,Const ) ) ) - ( ( ( AMS - CRS ) * ( CRS - FirstVNF_Mem ) ) + ( Max( ARS,FirstVNF_CPU ) - ( ACS + FirstVNF_RAM ) ) ) ) ) ) * ( ( Min( Max( Min( Min( ACS ,RRS ) ,Max( CRS,ACS ) ),Max( ( FirstVNF_RAM + MRS ),( FirstVNF_Mem_Server - DDR ) ) ) ,Max( ( Max( Const,MDR ) - Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( ( MDR * MRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) ) + ( Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,Min( CRS ,AMS ) ),Min( ( CRS / ARS ) ,( Const - FirstVNF_Mem ) ) ) / Min( ( ( DDR / ARS ) - Max( CRS,AMS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MRS,MRS ) ) ) ) ) / ( Max( ( ( ( DDR * Const ) - ( Const / ARS ) ) * Max( ( FirstVNF_CPU + MRS ),( FirstVNF_RAM_Server / Const ) ) ),( ( Min( FirstVNF_RAM ,Const ) + Max( BR,AMS ) ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,ACS ) ) ) ) + Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,ARS ) ) - ( Max( CRS,CRS ) / ( FirstVNF_CPU * BR ) ) ),( Min( Max( ACS,FirstVNF_Mem_Server ) ,( FirstVNF_CPU / MDR ) ) / Max( ( DDR / MDR ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) ) - ( ( Max( ( ( ( Min( Const ,PN ) + ( FirstVNF_RAM - BR ) ) * ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( FirstVNF_RAM - MRS ) ) ) - ( ( ( Const + ARS ) - ( BR + AMS ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) + ( RRS * MRS ) ) ) ),( ( ( ( MRS * ACS ) / ( FirstVNF_RAM_Server - Const ) ) - Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) + Max( ( ( DDR / ARS ) - Min( MRS ,Const ) ),( ( ARS + ACS ) - ( MDR - Const ) ) ) ) ) + Min( ( ( Min( ( RRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) * ( Max( ACS,PN ) / ( ACS / BR ) ) ) + Min( ( ( BR - PN ) * ( Const - MDR ) ) ,( ( FirstVNF_CPU_Server * PN ) * ( FirstVNF_CPU / Const ) ) ) ) ,Min( ( ( ( MRS + FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) / Max( Const,ACS ) ) ) ,( Min( Max( FirstVNF_CPU_Server,PN ) ,( RRS - FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - Min( ACS ,CRS ) ) ) ) ) ) + ( ( Min( ( ( Max( FirstVNF_CPU,Const ) - ( CRS + MRS ) ) + ( ( ARS - Const ) * ( BR + Const ) ) ) ,Max( Max( ( FirstVNF_RAM_Server + MRS ),Min( FirstVNF_RAM_Server ,ACS ) ),Max( Min( ARS ,FirstVNF_RAM ),Min( FirstVNF_RAM ,CRS ) ) ) ) / Min( ( ( ( RRS - RRS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( Max( MDR,Const ) + Max( FirstVNF_RAM_Server,RRS ) ) ) ,Max( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( ( MDR * FirstVNF_RAM ) * ( PN * MRS ) ) ) ) ) / ( ( Min( ( Max( FirstVNF_Mem_Server,Const ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( ( FirstVNF_RAM * ARS ) / ( CRS + MRS ) ) ) / Max( ( Max( FirstVNF_Mem_Server,CRS ) * Min( DDR ,Const ) ),( Min( RRS ,MDR ) - Max( ACS,FirstVNF_CPU ) ) ) ) * Min( ( ( ( MDR / RRS ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( Min( ACS ,FirstVNF_RAM ) ,( DDR + Const ) ) ) ,( ( ( ARS - ARS ) / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( ( CRS - MRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MUC / MUR ) - ( MUC * DS ) ) * Max( ( RRSe - RRSe ),Min( RCSe ,MUM ) ) ) / ( ( Max( MLU,DS ) / ( MUC - DS ) ) - ( Min( CS ,DS ) / ( DS - RRSe ) ) ) ) + Max( ( ( ( MLU / RCSe ) / ( RRSe / DS ) ) + Min( Max( MUR,DS ) ,( CS - CS ) ) ),( ( ( CS / MUR ) / ( MUM * RCSe ) ) + ( ( MUM / RCSe ) + Max( CS,MUR ) ) ) ) ) - ( Max( ( Min( ( RRSe * RMSe ) ,( RMSe - RMSe ) ) - ( ( MUC - MUM ) - Min( RMSe ,RCSe ) ) ),( ( ( RMSe - MLU ) - ( CS - MUR ) ) * Max( ( MUC * MUC ),Max( RCSe,RRSe ) ) ) ) + ( ( ( ( DS / MUM ) * ( MUM + RMSe ) ) * ( ( MLU / MLU ) * Max( RCSe,RMSe ) ) ) * Max( Max( ( CS * MUC ),( RCSe / MUR ) ),( ( RMSe * MUM ) / Max( MUC,RCSe ) ) ) ) ) ) + ( Max( ( ( Min( ( RMSe - MUC ) ,( MUR / MUR ) ) + Max( Max( MUM,CS ),( MUC * DS ) ) ) * Max( ( Max( RRSe,CS ) / Min( MUR ,MUC ) ),( ( MUM * MUC ) + ( CS + RRSe ) ) ) ),Min( ( Max( Min( MUC ,DS ),( MUR / MLU ) ) / ( Min( RMSe ,MLU ) - Max( RRSe,RMSe ) ) ) ,( ( ( RRSe + MUR ) + ( MUM * DS ) ) / ( ( DS * MUR ) + ( MUC + CS ) ) ) ) ) - ( Max( ( ( ( RMSe * MLU ) + ( CS - RCSe ) ) + ( ( MLU + MUC ) - Max( RMSe,MUC ) ) ),( ( Max( RRSe,RRSe ) / ( MUR - MLU ) ) - ( ( RRSe / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( Max( Min( MUR ,DS ),Max( RCSe,RMSe ) ),( ( RRSe / MLU ) / ( RRSe - RRSe ) ) ) * ( ( ( RMSe / CS ) / ( RCSe - RCSe ) ) - Max( ( RCSe * CS ),( MUR * MUR ) ) ) ) ) ) ) - ( ( Min( ( Min( ( ( MUC / CS ) * ( CS + RCSe ) ) ,( ( MLU / RRSe ) * Min( CS ,DS ) ) ) / ( ( ( RRSe + MUC ) + Max( MUC,RCSe ) ) - ( Max( CS,RRSe ) + ( MUR / DS ) ) ) ) ,( Max( Min( ( RCSe * RRSe ) ,( RMSe * RRSe ) ),( ( DS / MLU ) + ( RMSe * RMSe ) ) ) * ( ( Min( MUC ,RRSe ) / ( DS * MUC ) ) / ( Max( MLU,RRSe ) - ( MLU / CS ) ) ) ) ) + ( Max( Max( ( ( MUR * DS ) * Min( DS ,RCSe ) ),( Max( RMSe,MUM ) / Max( RMSe,MUR ) ) ),( ( ( DS / MLU ) + ( DS + RMSe ) ) - Min( ( MUC - MUM ) ,Min( RCSe ,DS ) ) ) ) - ( ( ( ( DS - RRSe ) + ( RMSe / MLU ) ) / ( ( DS - DS ) - ( MLU * DS ) ) ) - ( Min( ( CS * MUR ) ,( RCSe + DS ) ) / Max( ( MUR + MUM ),Min( RRSe ,RCSe ) ) ) ) ) ) - ( ( Max( ( ( ( DS / RRSe ) + Max( RCSe,MUR ) ) - ( ( DS - MLU ) + ( RCSe + RRSe ) ) ),Max( ( Max( MUM,RCSe ) * ( DS - RCSe ) ),( ( RRSe + MUR ) / ( CS + MLU ) ) ) ) / ( Min( ( ( RCSe - DS ) / ( RMSe / RCSe ) ) ,( ( MUC / DS ) * ( MUC * CS ) ) ) / ( ( ( MLU * DS ) + Min( RMSe ,DS ) ) / ( Min( CS ,MLU ) - ( DS / RCSe ) ) ) ) ) * Max( Max( ( Max( Max( MUM,DS ),( RRSe * CS ) ) + ( Min( CS ,RCSe ) / Max( RRSe,MUC ) ) ),Min( ( ( MUR / RMSe ) - Max( MUC,DS ) ) ,Min( ( MLU / RMSe ) ,( RMSe - MUC ) ) ) ),( Max( ( ( CS / MUM ) * Min( RRSe ,MLU ) ),( Max( RCSe,RMSe ) + ( MUC * RMSe ) ) ) - Min( ( ( MUR / RRSe ) * ( DS - DS ) ) ,( ( CS - RCSe ) + ( MUM + MUC ) ) ) ) ) ) ) )", "obj1": 0.9708333333333333, "obj2": 0.009961722174192387}, {"determining": "( ( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM - CRS ) / ( PN + CRS ) ) ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( RMSe + Min( ( RMSe + MUC ) ,RMSe ) )", "obj1": 0.8979166666666667, "obj2": 0.049113849467190246}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ARS - FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( Min( DS ,MUM ) / ( Max( Min( DS ,RMSe ),( DS - MLU ) ) + RRSe ) )", "obj1": 0.5145833333333333, "obj2": 0.37841254136953517}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / MUC ) / MUC ) + RCSe )", "obj1": 0.8958333333333334, "obj2": 0.0804036879538984}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_CPU ) )", "choosing": "Max( ( MUM * MUC ),Max( ( MUM / ( ( RCSe - ( RCSe * MLU ) ) * ( MUR + DS ) ) ),( Min( ( ( RRSe - CS ) - DS ) ,RRSe ) / ( Max( ( MLU / MUR ),Max( RRSe,MUM ) ) - ( Max( MUM,RRSe ) * MLU ) ) ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4819194172302824}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( CRS - FirstVNF_CPU ) + Max( MRS,FirstVNF_RAM ) )", "choosing": "( ( DS * Max( DS,RMSe ) ) + Max( DS,RMSe ) )", "obj1": 0.68125, "obj2": 0.2709390418884648}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( MRS,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( MUC + RCSe )", "obj1": 0.6708333333333333, "obj2": 0.29350261486428275}, {"determining": "( ( BR / ( ( BR / Const ) * ( Const - MDR ) ) ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + ( Min( RMSe ,MUM ) / DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.2, "obj2": 0.7328935668096683}, {"determining": "( ( Const * FirstVNF_RAM ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUM * MUC ) + RCSe )", "obj1": 0.99375, "obj2": 0.007110951164682919}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR - PN ) )", "choosing": "( Min( RMSe ,DS ) / ( CS - DS ) )", "obj1": 0.6354166666666666, "obj2": 0.30299736752850964}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / FirstVNF_CPU_Server )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.6583333333333333, "obj2": 0.2936053506557423}, {"determining": "( ( RRS / DDR ) * ( Const / ARS ) )", "choosing": "( ( MUC / CS ) / ( RMSe + RRSe ) )", "obj1": 0.37083333333333335, "obj2": 0.5357070967960863}, {"determining": "( Max( AMS,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( MUC / CS ) ) * ( DS - MLU ) ) * Max( Min( ( MUM * MUC ) ,Min( MUC ,CS ) ),( ( MLU + DS ) * ( RCSe - MUM ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.5359377145557177}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( ( ( ( FirstVNF_RAM - MDR ) * Max( ( FirstVNF_RAM - CRS ),Max( PN,CRS ) ) ) - MDR ),CRS ) ) )", "choosing": "( DS + ( ( RMSe + DS ) + DS ) )", "obj1": 0.6375, "obj2": 0.2953957116263994}, {"determining": "( ( CRS - FirstVNF_CPU ) + Max( MRS,AMS ) )", "choosing": "( ( MUC / MUM ) + Max( DS,RMSe ) )", "obj1": 0.4125, "obj2": 0.4870514890960576}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,RRSe ) / ( CS + DS ) )", "obj1": 0.675, "obj2": 0.27094330555300583}]}