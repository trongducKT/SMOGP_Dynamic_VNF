{"1": [{"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,MDR ) )", "choosing": "( Max( CS,CS ) + Max( DS,RRSe ) )", "obj1": 0.3916349809885932, "obj2": 0.53206415341532}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / Min( DDR ,FirstVNF_CPU ) )", "choosing": "( ( MUM + MUC ) - Max( CS,RRSe ) )", "obj1": 0.33840304182509506, "obj2": 0.5282021160581946}, {"determining": "( Min( Const ,BR ) * ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUC / MUM ) )", "obj1": 0.2661596958174905, "obj2": 0.6044022406983866}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MLU + RMSe ) * ( RRSe - RCSe ) )", "obj1": 0.20342205323193915, "obj2": 0.6359040663046145}, {"determining": "Min( ( ( RRS * ( Min( FirstVNF_RAM_Server ,MRS ) * MDR ) ) / RRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( ( ( MLU + MLU ) * MUC ) / DS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) )", "choosing": "( ( MUM * RCSe ) + ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) * Max( RRS,DDR ) )", "choosing": "( Max( CS,MUR ) - Max( MUM,CS ) )", "obj1": 0.18631178707224336, "obj2": 0.6927009661836504}, {"determining": "Min( Min( BR ,Const ) ,Min( FirstVNF_CPU ,MDR ) )", "choosing": "Max( ( MUM * RCSe ),Max( MLU,MUR ) )", "obj1": 0.2376425855513308, "obj2": 0.6503490104874169}, {"determining": "( ( CRS + Const ) / Min( ACS ,Const ) )", "choosing": "( Max( CS,MUM ) * ( RMSe + MUC ) )", "obj1": 0.33460076045627374, "obj2": 0.5450151042129463}, {"determining": "( Max( BR,AMS ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Min( CS ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.3688212927756654, "obj2": 0.5630389131564496}, {"determining": "Min( Max( ACS,ACS ) ,( PN + ARS ) )", "choosing": "( ( MUM + MUM ) + ( MLU + DS ) )", "obj1": 0.49809885931558934, "obj2": 0.3938677624793064}, {"determining": "( Min( DDR ,PN ) * Min( AMS ,AMS ) )", "choosing": "Min( ( MUM * MUR ) ,Min( MUC ,MUR ) )", "obj1": 0.3612167300380228, "obj2": 0.5269831427509714}, {"determining": "Max( Min( FirstVNF_RAM ,PN ),( ( FirstVNF_CPU / ( ACS / Max( FirstVNF_Mem_Server,( MRS / ( MRS * AMS ) ) ) ) ) * ( ARS / BR ) ) )", "choosing": "( Min( RRSe ,RCSe ) - Max( MUM,RRSe ) )", "obj1": 0.34600760456273766, "obj2": 0.5674277774259607}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( Max( DS,RRSe ) - ( RCSe * MLU ) )", "obj1": 0.20532319391634982, "obj2": 0.6163455720359576}, {"determining": "( ( ARS * ( RRS / BR ) ) + Max( CRS,MDR ) )", "choosing": "( ( ( CS * MLU ) - MUM ) + ( RRSe * CS ) )", "obj1": 0.3155893536121673, "obj2": 0.6496702836124384}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( MDR * BR ) )", "choosing": "Min( ( MUR * MLU ) ,( MLU - RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.7200485983857587}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( FirstVNF_CPU - MRS ) )", "choosing": "( ( MUC + RCSe ) + Min( RCSe ,RMSe ) )", "obj1": 0.38783269961977185, "obj2": 0.50560473759055}, {"determining": "( Min( FirstVNF_CPU ,AMS ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( RMSe - RRSe ) / ( RCSe + RRSe ) )", "obj1": 0.1844106463878327, "obj2": 0.7315048892035482}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( RRS - FirstVNF_Mem ) )", "choosing": "( Min( DS ,RCSe ) - ( RCSe / RRSe ) )", "obj1": 0.435361216730038, "obj2": 0.45534782498683873}, {"determining": "Min( Max( CRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( RCSe * MUC ) / ( RMSe * MLU ) )", "obj1": 0.2414448669201521, "obj2": 0.6382391932460308}, {"determining": "( ( BR / Const ) / ( ARS - AMS ) )", "choosing": "( Min( MUM ,RRSe ) / ( MUC - MUC ) )", "obj1": 0.7490494296577946, "obj2": 0.216987299938036}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "( ( DDR * ACS ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / Min( ( Min( MUM ,RCSe ) - RCSe ) ,RCSe ) )", "obj1": 0.2224334600760456, "obj2": 0.7407401249423816}, {"determining": "( Max( MRS,MDR ) + ( MDR * MDR ) )", "choosing": "Min( Min( MUM ,RRSe ) ,Max( RRSe,RCSe ) )", "obj1": 0.3612167300380228, "obj2": 0.5251246081527591}, {"determining": "Max( Max( ( Min( ARS ,Max( FirstVNF_CPU_Server,Max( DDR,( ( BR / MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_CPU / Const ) ),AMS ),( ARS + Const ) )", "choosing": "Max( ( MUR / ( Max( ( MUM + MLU ),MLU ) - MLU ) ),( RRSe / MUM ) )", "obj1": 0.6501901140684411, "obj2": 0.28543299096972985}, {"determining": "( ( ARS * ARS ) / Max( ARS,MDR ) )", "choosing": "( Min( MUM ,MUR ) / ( RRSe - MUC ) )", "obj1": 0.21292775665399238, "obj2": 0.6398122164347079}, {"determining": "Max( ( FirstVNF_RAM + BR ),Min( CRS ,Const ) )", "choosing": "Max( ( RRSe * CS ),( MLU * MUR ) )", "obj1": 0.3688212927756654, "obj2": 0.515190872084069}, {"determining": "( ( CRS / MDR ) + ( FirstVNF_CPU - CRS ) )", "choosing": "( ( MUC - MUR ) + ( CS * MUM ) )", "obj1": 0.3574144486692015, "obj2": 0.5894739699797548}, {"determining": "( Max( MRS,Const ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( CS * RMSe ) )", "obj1": 0.09505703422053231, "obj2": 0.7514671410524674}, {"determining": "Max( ( ARS / PN ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUM + DS ) )", "obj1": 0.11787072243346007, "obj2": 0.7090900269543777}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RMSe + RMSe ) + ( MUC / RRSe ) )", "obj1": 0.3688212927756654, "obj2": 0.5241631588908442}, {"determining": "( Min( ARS ,DDR ) + ( FirstVNF_RAM - ARS ) )", "choosing": "( ( RMSe + RCSe ) - Max( CS,MUC ) )", "obj1": 0.4429657794676806, "obj2": 0.47316466255870165}, {"determining": "( ( Const * Const ) / ( BR - PN ) )", "choosing": "( ( MUM - MLU ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( Min( ( RRS / PN ) ,Min( RRS ,FirstVNF_CPU ) ) / Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( AMS / DDR ) ) )", "choosing": "( ( Max( MUR,MUC ) / ( RMSe / MUM ) ) * ( Max( DS,CS ) - Min( MUM ,RCSe ) ) )", "obj1": 0.2585551330798479, "obj2": 0.6974859191023647}, {"determining": "( ( Const * FirstVNF_CPU ) / Max( AMS,Max( MRS,RRS ) ) )", "choosing": "( ( MUR + Max( RCSe,MLU ) ) - ( DS + DS ) )", "obj1": 0.09695817490494296, "obj2": 0.7417442998275375}, {"determining": "Max( Max( Min( FirstVNF_RAM ,AMS ),( ACS - ACS ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "Max( Min( Max( MUM,MUR ) ,( MLU * MUR ) ),( Min( RCSe ,RMSe ) / Min( MUR ,RCSe ) ) )", "obj1": 0.20912547528517111, "obj2": 0.6884786147295153}, {"determining": "( ( MDR - CRS ) + ( DDR - ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( ( RRSe - RCSe ),Max( RMSe,RCSe ) ) / ( ( MUR - RMSe ) - RMSe ) )", "obj1": 0.19391634980988592, "obj2": 0.6884632249351783}, {"determining": "( ( ( CRS / MDR ) * ( FirstVNF_CPU - FirstVNF_CPU ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - RRSe ) + CS ) )", "obj1": 0.25665399239543724, "obj2": 0.7187716879108921}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "Min( ( ( ACS - RRS ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( BR * MRS ) ) )", "choosing": "Min( Max( ( CS + MUC ),DS ) ,( RMSe / MLU ) )", "obj1": 0.2509505703422053, "obj2": 0.6210701520274051}, {"determining": "( ( MRS / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( Max( DS,Min( MUR ,CS ) ) + ( MUC - ( MUR * MUR ) ) )", "obj1": 0.3041825095057034, "obj2": 0.6466517642863954}, {"determining": "Max( ( ( RRS / PN ) - Min( ARS ,RRS ) ),Max( ( BR - FirstVNF_Mem_Server ),Min( AMS ,MDR ) ) )", "choosing": "( ( ( CS / MLU ) - Min( RMSe ,RCSe ) ) + ( ( MLU * MUM ) + ( MUC - DS ) ) )", "obj1": 0.155893536121673, "obj2": 0.760695237778769}, {"determining": "Max( ( Min( ARS ,FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU ) ),Max( Min( FirstVNF_Mem ,Const ),Max( FirstVNF_RAM,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + CS ) ,Max( DS,RCSe ) )", "obj1": 0.34220532319391633, "obj2": 0.5362084387525785}, {"determining": "Max( Max( AMS,MDR ),( ( DDR * BR ) * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "Min( Max( RCSe,RCSe ) ,Max( RMSe,( RCSe * MUR ) ) )", "obj1": 0.35361216730038025, "obj2": 0.5288907968490822}, {"determining": "Max( ( DDR * ARS ),( ARS * Const ) )", "choosing": "( ( RRSe / RRSe ) - ( ( MUR * MUM ) / MUR ) )", "obj1": 0.15399239543726237, "obj2": 0.7106436091952932}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( ( FirstVNF_RAM_Server + BR ) * MDR ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( MUC ,( MUR + RCSe ) ) ) )", "obj1": 0.2224334600760456, "obj2": 0.5685836437516011}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS / MRS ) ,Min( Max( FirstVNF_CPU,ARS ) ,( Min( FirstVNF_Mem_Server ,AMS ) * FirstVNF_RAM ) ) )", "choosing": "Max( ( RCSe * ( Min( ( CS + MUM ) ,RCSe ) / DS ) ),( ( RCSe - RRSe ) + Min( MLU ,MUC ) ) )", "obj1": 0.3593155893536122, "obj2": 0.5229315234943914}, {"determining": "( ( Max( BR,( Min( ( ( MDR + ( FirstVNF_RAM - MDR ) ) * PN ) ,FirstVNF_CPU_Server ) + MRS ) ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Min( Max( MUR,CS ) ,MUR ) ,( MUC * MUR ) )", "obj1": 0.34980988593155893, "obj2": 0.5382842723904917}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( ( PN * FirstVNF_CPU_Server ) / Max( CRS,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MUR ) / Min( ( ( DS / RRSe ) * DS ) ,MUR ) )", "obj1": 0.20912547528517111, "obj2": 0.6913346538855292}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) * ( Max( ( MRS / Min( Min( ( FirstVNF_Mem * PN ) ,RRS ) ,ARS ) ),BR ) - ACS ) )", "choosing": "Max( ( ( CS + RCSe ) / Max( MLU,( MLU + Max( ( ( RMSe / MUR ) / DS ),DS ) ) ) ),Max( ( MLU - MUR ),( MUM - MUR ) ) )", "obj1": 0.3060836501901141, "obj2": 0.6270283456218636}, {"determining": "Min( ( ( PN + BR ) / ( FirstVNF_Mem * ARS ) ) ,( ( ACS - Const ) + ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS + MLU ) - DS ) / ( RRSe * RCSe ) )", "obj1": 0.19391634980988592, "obj2": 0.6953536499283332}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( ACS / CRS ) )", "choosing": "( ( RRSe - MLU ) + ( ( DS + DS ) - MLU ) )", "obj1": 0.5456273764258555, "obj2": 0.3633506397707358}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) - ( RRS * FirstVNF_Mem_Server ) ) + ( Max( ACS,FirstVNF_Mem_Server ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RRSe * MLU ),( DS / MUR ) ) - ( DS + Min( MUM ,DS ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7475102924181666}, {"determining": "( Max( Min( FirstVNF_CPU ,MDR ),( FirstVNF_Mem - FirstVNF_RAM_Server ) ) + ( Max( RRS,FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + MLU ) * Max( MLU,MUR ) ) * Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) )", "obj1": 0.3726235741444867, "obj2": 0.5083904550170687}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,( FirstVNF_Mem_Server * MRS ) ) ,( PN / PN ) )", "choosing": "( ( MUM * RMSe ) / ( Max( MLU,MUC ) + ( MUC - RRSe ) ) )", "obj1": 0.2965779467680608, "obj2": 0.5722721992311458}, {"determining": "Max( ( BR - ( FirstVNF_CPU - PN ) ),Max( MRS,ACS ) )", "choosing": "( ( ( CS + RRSe ) * Min( RMSe ,MLU ) ) - ( Min( MUR ,MLU ) - ( MUR + DS ) ) )", "obj1": 0.48098859315589354, "obj2": 0.43032316689312217}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( Const / CRS ) * Max( ARS,Max( ARS,CRS ) ) )", "choosing": "Min( Max( Max( CS,MUC ),Max( MUR,DS ) ) ,Max( ( RMSe * MUR ),( MUC - MUR ) ) )", "obj1": 0.3593155893536122, "obj2": 0.519865406070218}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( Const / ARS ) ) * Max( ( FirstVNF_RAM_Server - PN ),Max( PN,ACS ) ) )", "choosing": "( ( RMSe + ( MUC * DS ) ) / Max( CS,MLU ) )", "obj1": 0.45627376425855515, "obj2": 0.4487999953527112}, {"determining": "( ( ( FirstVNF_CPU_Server + RRS ) / ( MRS + CRS ) ) - ( ( AMS * FirstVNF_CPU ) * ( ARS - ARS ) ) )", "choosing": "( ( ( CS - MUC ) + ( DS * RMSe ) ) * ( Max( RCSe,MUC ) + ( RMSe + CS ) ) )", "obj1": 0.35551330798479086, "obj2": 0.6146902157706293}, {"determining": "( ( ( ARS - DDR ) / ( FirstVNF_RAM_Server + MDR ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( PN * BR ) ) )", "choosing": "( ( MLU + ( MUR * CS ) ) * ( RCSe * RRSe ) )", "obj1": 0.34600760456273766, "obj2": 0.5520349695998634}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( PN,MDR ) + Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( ( ( MUM / RMSe ) * Min( RMSe ,MLU ) ) + ( ( MLU + MUC ) + Min( MUM ,CS ) ) )", "obj1": 0.3688212927756654, "obj2": 0.5366952093126082}, {"determining": "( Max( ( Min( ARS ,FirstVNF_CPU ) * ( AMS - RRS ) ),Min( ( BR * FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) / Max( Min( ( CRS - MDR ) ,Max( FirstVNF_Mem_Server,CRS ) ),( Min( FirstVNF_RAM ,ACS ) + Max( Const,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM / RRSe ) ,Max( MUR,CS ) ) / Min( ( MUR * RMSe ) ,Min( MUM ,RMSe ) ) ) - ( ( ( RMSe - RRSe ) + ( RMSe / DS ) ) + ( ( MLU - MUC ) - ( RCSe / RCSe ) ) ) )", "obj1": 0.5608365019011406, "obj2": 0.3690335787009061}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,Max( RRS,( FirstVNF_CPU * Const ) ) ) ) )", "choosing": "( ( ( RRSe + MUC ) / ( ( MUR + Max( CS,MUR ) ) - DS ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( ( Max( ( MDR / DDR ),( FirstVNF_CPU - DDR ) ) - ( ( DDR - AMS ) * ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) + Min( ( ( AMS + MDR ) + Max( RRS,Const ) ) ,Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,Max( ARS,AMS ) ) ) )", "choosing": "Max( ( RMSe / Min( MLU ,( RCSe - MUM ) ) ),Max( ( Max( RMSe,CS ) / MUR ),( ( MUC - MLU ) * CS ) ) )", "obj1": 0.1520912547528517, "obj2": 0.7384991077695822}, {"determining": "( ( Const / Max( FirstVNF_CPU,( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( FirstVNF_RAM_Server ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,RMSe ) )", "obj1": 0.3231939163498099, "obj2": 0.6370823394448578}, {"determining": "( Max( ( CRS / Const ),ACS ) + ( Const - FirstVNF_RAM ) )", "choosing": "Max( Max( MUR,RRSe ),( ( DS / Max( RCSe,MUC ) ) / Max( MUR,( MUR / DS ) ) ) )", "obj1": 0.35551330798479086, "obj2": 0.5157733841558596}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( MLU / MLU ) ) ) )", "obj1": 0.49049429657794674, "obj2": 0.42153181865061773}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( ( ( Max( AMS,MRS ) * ( FirstVNF_CPU / BR ) ) * Max( ( ARS / Const ),( FirstVNF_Mem_Server - RRS ) ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Max( ( Max( Min( RMSe ,MUC ),( RRSe / RMSe ) ) / Min( Max( MUR,MUC ) ,( MUM * MUR ) ) ),Min( ( ( RCSe - RMSe ) + Min( MUR ,RCSe ) ) ,( ( CS / MUC ) / ( MLU - MUR ) ) ) )", "obj1": 0.16159695817490494, "obj2": 0.7030171024116068}, {"determining": "( ( BR / Min( ARS ,MDR ) ) + ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( ( CS / ( MUM + RMSe ) ) + ( RRSe - MLU ) ) / ( ( Max( RCSe,MUR ) + ( CS / RMSe ) ) * MUR ) )", "obj1": 0.24334600760456274, "obj2": 0.6701455979513626}, {"determining": "( Max( ACS,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) ) * Min( MRS ,ARS ) )", "choosing": "( ( Max( Max( DS,MUR ),( RMSe * RRSe ) ) - ( ( RRSe + MUC ) / Max( MUM,MUR ) ) ) + Min( ( ( RRSe + RRSe ) / Max( MUR,RMSe ) ) ,( ( MLU - MUC ) / ( RRSe - RRSe ) ) ) )", "obj1": 0.22813688212927757, "obj2": 0.6474959019518738}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - ( ( ARS + FirstVNF_RAM ) / ( AMS + FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / ( MLU - RRSe ) ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 0.4923954372623574, "obj2": 0.41564888231735636}, {"determining": "Min( Min( ( PN * DDR ) ,RRS ) ,Min( ( ACS * ARS ) ,( ( MRS + DDR ) / ARS ) ) )", "choosing": "( Min( ( CS / ( CS - RCSe ) ) ,Max( RRSe,RMSe ) ) - ( RMSe / DS ) )", "obj1": 0.41254752851711024, "obj2": 0.45759651024612663}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( ( ARS * AMS ) ,( Min( ( ( MDR + AMS ) * PN ) ,RRS ) * Const ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,( ( MUC / ( ( MUR - ( CS * DS ) ) - MUR ) ) + MUM ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( ( MUR * RCSe ) / MLU ) ,Max( ( RCSe * MUM ),MUM ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) )", "obj1": 0.8231939163498099, "obj2": 0.14280437030831059}, {"determining": "( ( ( ( DDR - ACS ) / ( DDR * Const ) ) / ( ( ARS + ACS ) * ( ARS + FirstVNF_Mem_Server ) ) ) + Max( ( ( FirstVNF_Mem_Server / MRS ) / Max( FirstVNF_CPU,BR ) ),( ( MRS / CRS ) - Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Max( RCSe,RCSe ) ) * ( ( RCSe / MLU ) * ( MLU - RMSe ) ) ) + Max( Max( ( MUR - RMSe ),( MLU - RMSe ) ),( Max( RRSe,DS ) + ( CS + MLU ) ) ) )", "obj1": 0.3821292775665399, "obj2": 0.5525169470928731}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( MUR - ( MLU * RCSe ) ) / Min( RMSe ,Max( CS,MLU ) ) )", "obj1": 0.13498098859315588, "obj2": 0.6875816395594728}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Const ,ACS ) / ( RRS * FirstVNF_CPU_Server ) ),( ( CRS + DDR ) * ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) - ( Min( ( PN - MDR ) ,Min( MDR ,FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( Const / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( DS,MUM ) - Min( MLU ,MUM ) ) - Max( ( MUR + RRSe ),( MUM * CS ) ) ) / ( ( ( RRSe / MUR ) - Min( RRSe ,MUC ) ) * ( Max( MLU,MUC ) + Max( RRSe,RRSe ) ) ) )", "obj1": 0.2984790874524715, "obj2": 0.6044696700020057}, {"determining": "( Max( RRS,RRS ) + ( MRS + ( PN / MRS ) ) )", "choosing": "( ( ( Max( MUM,DS ) / RCSe ) / ( MUC - MUC ) ) - Max( RMSe,( MUC / RCSe ) ) )", "obj1": 0.11596958174904944, "obj2": 0.7370391298738883}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * MUM ) / Max( DS,RRSe ) )", "obj1": 0.8536121673003803, "obj2": 0.11911139587479602}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + RCSe ),( CS - MUR ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / ( CS + RCSe ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.47338403041825095, "obj2": 0.37707603778918275}, {"determining": "Max( ( CRS - BR ),( Const - CRS ) )", "choosing": "( ( MUR + ( MUM * ( RCSe * RRSe ) ) ) * ( RMSe - MLU ) )", "obj1": 0.24904942965779467, "obj2": 0.624523682977377}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Max( MUR,( MLU / RCSe ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) * ( ( FirstVNF_RAM / ACS ) + ( FirstVNF_Mem + AMS ) ) ) * ( ( Max( ARS,Const ) - ( RRS - FirstVNF_Mem ) ) - ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "Max( ( ( ( DS * MUC ) * Min( MUR ,MUR ) ) + Max( ( MUC + CS ),( CS - RMSe ) ) ),( ( ( RCSe - RCSe ) * Max( CS,RCSe ) ) - Min( Max( MUC,RRSe ) ,( DS + RRSe ) ) ) )", "obj1": 0.5931558935361216, "obj2": 0.347911300402542}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( ( ( ( RRS + BR ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) / ( FirstVNF_CPU * ( MDR - BR ) ) ) ,AMS ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( ( MUM / ( Max( ( ( MUM * Max( MUC,CS ) ) * ( MUC / Max( RCSe,DS ) ) ),RRSe ) + MUC ) ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.376425855513308, "obj2": 0.482286733828622}, {"determining": "( Max( FirstVNF_RAM,MDR ) - Max( MRS,( BR / DDR ) ) )", "choosing": "( Max( ( ( MUM * CS ) + Max( MUC,DS ) ),( Min( RCSe ,RCSe ) + ( MUM / RCSe ) ) ) / ( ( RMSe / DS ) * ( Max( MUM,RMSe ) * Max( RRSe,RRSe ) ) ) )", "obj1": 0.9334600760456274, "obj2": 0.07109620781881243}], "2": [{"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) + FirstVNF_CPU )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + Max( ( Max( Min( RMSe ,MUC ),( RRSe / RMSe ) ) / Min( Max( MUR,MUC ) ,( MUM * MUR ) ) ),Min( ( ( RCSe - RMSe ) + Min( MUR ,RCSe ) ) ,( ( CS / MUC ) / ( MLU - MUR ) ) ) ) ) ) )", "obj1": 0.8041825095057035, "obj2": 0.09583203600986287}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - Max( ACS,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / MUR ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 0.7813688212927756, "obj2": 0.15380233554509973}, {"determining": "Max( ( RRS - MRS ),( ( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6196167509925867}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( Max( DS,RRSe ) - ( RCSe * MLU ) )", "obj1": 0.20532319391634982, "obj2": 0.6163455720359576}, {"determining": "( Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( PN - RRS ) )", "choosing": "( Min( ( RRSe - MUM ) ,( DS - CS ) ) + ( MUR + CS ) )", "obj1": 0.5684410646387833, "obj2": 0.3388740737740315}, {"determining": "( ( Max( PN,MDR ) + Min( FirstVNF_CPU_Server ,PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * Min( RMSe ,MLU ) ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - ( CS + MUC ) ) / Max( RRSe,MLU ) ) )", "obj1": 0.903041825095057, "obj2": 0.06754515519933141}, {"determining": "Max( Const,( ARS * CRS ) )", "choosing": "( ( Max( ( ( MUR + ( MUM * ( RCSe * RRSe ) ) ) * ( RMSe - MLU ) ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5466022781434292}, {"determining": "Max( ( ARS / PN ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUM + DS ) )", "obj1": 0.11787072243346007, "obj2": 0.7090900269543777}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - Min( ( ( ( RRS + BR ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) / ( FirstVNF_CPU * ( MDR - BR ) ) ) ,AMS ) ) )", "choosing": "( ( MUM * Max( MUC,CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.9942965779467681, "obj2": 0.0036184425623965104}, {"determining": "Max( Max( ( Min( ARS ,Max( FirstVNF_CPU_Server,Max( DDR,( ( BR / MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_CPU / Const ) ),AMS ),( ARS + Const ) )", "choosing": "Max( ( MUR / ( Max( ( MUM + MLU ),MLU ) - MLU ) ),( RRSe / MUM ) )", "obj1": 0.7281368821292775, "obj2": 0.2027022500226861}, {"determining": "Min( Max( ( PN - RRS ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUC ) ,( DS - CS ) )", "obj1": 0.39923954372623577, "obj2": 0.4012912091324719}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( MUR - ( MLU * RCSe ) ) / Min( RMSe ,Min( ( MLU * RMSe ) ,Max( RCSe,RCSe ) ) ) )", "obj1": 0.5893536121673004, "obj2": 0.32638061350944614}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "( Min( ( ARS / PN ) ,DDR ) + ( FirstVNF_RAM - ARS ) )", "choosing": "( ( RMSe + ( MUM + DS ) ) - Max( CS,MUC ) )", "obj1": 0.629277566539924, "obj2": 0.3026447763958552}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "Max( ( ( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) ),( ARS * CRS ) )", "choosing": "( ( Max( ( MUR + RCSe ),( CS - MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5256637629210941}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( FirstVNF_RAM_Server + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * MUM ) / Max( DS,RRSe ) )", "obj1": 0.6996197718631179, "obj2": 0.2238763917474676}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( MUM,Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6825095057034221, "obj2": 0.23258123014406068}, {"determining": "( ( CRS / MDR ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( ( MUC - MUR ) * RMSe ) )", "obj1": 0.07034220532319392, "obj2": 0.7652490888920669}, {"determining": "( CRS + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( CS ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / ( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) ) ),( CS + MUC ) ) )", "obj1": 0.32129277566539927, "obj2": 0.48304295815987996}, {"determining": "( Min( Max( ( Max( ( CRS / Const ),ACS ) + ( Const - FirstVNF_RAM ) ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( ( ( DS / Max( RCSe,MUC ) ) / Max( MUR,( MUR / DS ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.30228136882129275, "obj2": 0.4920238659054082}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ,MDR )", "choosing": "( Min( RRSe ,( MUR - ( DS + RRSe ) ) ) + ( MLU + DS ) )", "obj1": 0.7243346007604563, "obj2": 0.20570391211488392}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( ARS * Const ) )", "choosing": "( ( RRSe / RRSe ) - ( ( MUR * Max( CS,DS ) ) / MUR ) )", "obj1": 0.279467680608365, "obj2": 0.4951597441792029}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( PN * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,( ( DS * MUM ) / Max( DS,RRSe ) ) ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7113740338056513}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) )", "obj1": 0.3821292775665399, "obj2": 0.42124908133015093}, {"determining": "( ( CRS - ( Const * MDR ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( ( FirstVNF_Mem_Server + CRS ),ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( ( RMSe + ( Max( RMSe,DS ) - DS ) ) - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5156231690521214}, {"determining": "Min( ( ( RRS * ( Min( FirstVNF_RAM_Server ,MRS ) * MDR ) ) / RRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( ( ( MLU + MLU ) * MUC ) / DS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( Max( ( Min( ARS ,FirstVNF_CPU ) * ( AMS - RRS ) ),Min( ( BR * FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) / Max( Min( ( CRS - Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) ) ,Max( FirstVNF_Mem_Server,CRS ) ),( Min( FirstVNF_RAM ,ACS ) + Max( Const,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Min( CS ,RCSe ),( DS / MLU ) ) - ( ( ( RMSe - RRSe ) + ( RMSe / DS ) ) + ( ( MLU - MUC ) - ( RCSe / RCSe ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.2880084814517101}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,Max( RRS,( FirstVNF_CPU * Const ) ) ) ) )", "choosing": "( ( ( RRSe + MUC ) / ( ( MUR + Max( CS,MUR ) ) - DS ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( ( ( ( RRS + BR ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) / ( FirstVNF_CPU * ( MDR - BR ) ) ) ,AMS ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( ( MUM / ( Max( ( ( MUM * Max( MUC,CS ) ) * ( MUC / Max( RCSe,DS ) ) ),RRSe ) + MUC ) ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.376425855513308, "obj2": 0.482286733828622}, {"determining": "Max( Max( ( Min( ARS ,Max( FirstVNF_CPU_Server,Max( DDR,( ( BR / MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_CPU / Const ) ),AMS ),( ARS + Const ) )", "choosing": "Max( ( MUR / ( Max( ( MUM + MLU ),MLU ) - MLU ) ),( RRSe / MUM ) )", "obj1": 0.6501901140684411, "obj2": 0.28543299096972985}, {"determining": "Min( ( ARS * AMS ) ,( Min( ( ( MDR + AMS ) * PN ) ,RRS ) * Const ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,( ( MUC / ( ( MUR - ( CS * DS ) ) - MUR ) ) + MUM ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( ( CRS / MDR ) + ( FirstVNF_CPU - CRS ) ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( MUC - MUR ) )", "obj1": 0.06844106463878327, "obj2": 0.765789090300763}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( Max( ( Min( ARS ,FirstVNF_CPU ) * ( AMS - RRS ) ),Min( ( BR * FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / ( Min( ( MUM / RRSe ) ,Max( MUR,CS ) ) / Min( ( MUR * RMSe ) ,Min( MUM ,RMSe ) ) ) ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( ( Const * Const ) / ( BR - PN ) )", "choosing": "( ( MUM - MLU ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / RRS ) ) / ( BR - PN ) )", "choosing": "( RMSe + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) )", "choosing": "( ( MUM * RCSe ) + ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Max( MUR,( MLU / RCSe ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,ACS ) ,( ( RRS - FirstVNF_CPU ) * ( ACS - Max( FirstVNF_RAM,RRS ) ) ) )", "choosing": "Min( ( RRSe - ( ( DS / MLU ) / Min( Max( RCSe,MLU ) ,( Max( RRSe,MUR ) * ( ( ( RMSe - RCSe ) + Min( MLU ,RCSe ) ) + Max( RCSe,RCSe ) ) ) ) ) ) ,( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / ( FirstVNF_Mem * CRS ) ) ,DDR ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( Max( MUR,RMSe ),RMSe ) / ( DS / DS ) ) / ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) + ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * BR ) - RRS ) - Max( ( Const + Const ),( ( ( AMS - BR ) / FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( Min( MLU ,( Max( MUR,MUM ) * ( ( CS + CS ) - RCSe ) ) ) + MLU ) / ( RCSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),RRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( RMSe - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( Min( MUC ,CS ) / ( MUM / ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR + ( ( AMS + FirstVNF_Mem ) - Max( FirstVNF_CPU,( Max( MDR,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ,( RRS - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,Min( MUM ,RMSe ) ) - Max( MUM,( RRSe * MUC ) ) ) - CS ) / Min( RRSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) / Max( AMS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Max( RCSe,MUM ) * MUM ) ,RRSe ) / ( CS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "( MUM + ( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - Min( ( MUM + RCSe ) ,( MLU + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) ) )", "choosing": "( RMSe / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( RRS - FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( Max( DS,Min( MUR ,CS ) ) + ( Min( Max( ( CS + MUC ),DS ) ,( RMSe / MLU ) ) - ( MUR * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( DDR * ARS ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),( ( RRSe / RRSe ) - ( ( MUR * MUM ) / MUR ) ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - Max( Min( FirstVNF_CPU ,MDR ),( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Max( FirstVNF_CPU,( RRS * RRS ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( Max( MUR,( MUR / DS ) ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( BR / Min( ARS ,MDR ) ) + ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Max( RCSe,MUR ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) ) + ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( ( CS / ( MUM + RMSe ) ) + ( RRSe - MLU ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) - ( ACS / AMS ) ) - ( ( ARS + FirstVNF_RAM ) / ( AMS + FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( RMSe * ( ( MUR / ( MLU - RRSe ) ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - ( ( MUR / ( MLU - RRSe ) ) * ( ( CS / MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,RRS ) + ( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Max( MUM,DS ) / RCSe ) / ( Min( MLU ,MUC ) * Max( RMSe,RRSe ) ) ) - Max( RMSe,( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / CRS ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MUR,RRSe ) / MUC ) / RMSe ),( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Max( MUR,( MLU / RCSe ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) - Max( MRS,ARS ) )", "choosing": "( Max( ( ( MUM * CS ) + Max( MUC,DS ) ),( Min( RCSe ,RCSe ) + ( MUM / RCSe ) ) ) / ( ( ( RRSe / MUR ) - ( CS / MUM ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( Min( RRS ,RRS ) - ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,DDR ) ) ) * FirstVNF_CPU ) / Max( AMS,Max( MRS,( DDR - Min( PN ,( PN + ( ( CRS / MDR ) * ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( DS / Max( ( RCSe / Min( RCSe ,RMSe ) ),RMSe ) ) - ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,Min( ACS ,MDR ) ) ,MDR )", "choosing": "( Min( RRSe ,( MUR - ( DS + RRSe ) ) ) + ( MUM / MUM ) )", "obj1": 0.057034220532319393, "obj2": 0.7710911321163512}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / ( ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) - MRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( MUR / Max( RRSe,MLU ) ) ) ),( CS + MUC ) ) )", "obj1": 0.7908745247148289, "obj2": 0.0943664532086176}, {"determining": "Max( ( RRS - MRS ),( ( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6196167509925867}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - Max( ACS,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / MUR ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 0.7813688212927756, "obj2": 0.15380233554509973}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( Max( DS,RRSe ) - ( RCSe * MLU ) )", "obj1": 0.20532319391634982, "obj2": 0.6163455720359576}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "Max( ( ARS / PN ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUM + DS ) )", "obj1": 0.11787072243346007, "obj2": 0.7090900269543777}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,Max( ( PN - RRS ),ACS ) ) ) * ( PN - RRS ) )", "choosing": "( Min( ( RRSe - MUM ) ,Min( ( RRSe - MUC ) ,( DS - CS ) ) ) + ( MUR + CS ) )", "obj1": 0.5475285171102662, "obj2": 0.35708046169610574}, {"determining": "Min( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( Max( Max( DS,MUR ),( RMSe * RRSe ) ) - ( ( RRSe + MUC ) / Max( MUM,MUR ) ) ) + Min( ( ( RRSe + RRSe ) / Max( MUR,RMSe ) ) ,( ( MLU - MUC ) / ( RRSe - RRSe ) ) ) ),DS ) ,( RMSe / ( Max( DS,Min( MUR ,CS ) ) + ( MUC - ( MUR * MUR ) ) ) ) )", "obj1": 0.9011406844106464, "obj2": 0.08386776327675734}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - Min( ( ( ( RRS + BR ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) / ( FirstVNF_CPU * ( MDR - BR ) ) ) ,AMS ) ) )", "choosing": "( ( MUM * Max( MUC,CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.9942965779467681, "obj2": 0.0036184425623965104}, {"determining": "( ( Min( Max( MRS,( ACS + ARS ) ) ,( ( PN * FirstVNF_CPU_Server ) / Max( Min( ( FirstVNF_Mem * PN ) ,RRS ),FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Min( Max( MUR,CS ) ,MUR ) ,( ( ( DS / RRSe ) * DS ) * MUR ) )", "obj1": 0.7243346007604563, "obj2": 0.20229658437550113}, {"determining": "Min( ( Max( ( ( BR / FirstVNF_CPU ) / PN ),( FirstVNF_Mem_Server - CRS ) ) / CRS ) ,Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MLU + RRSe ) * ( RRSe - ( Max( Max( RCSe,( Min( RMSe ,CS ) * ( RRSe - CS ) ) ),DS ) - ( RRSe + MUM ) ) ) ) ,( DS - ( DS / RCSe ) ) )", "obj1": 0.3973384030418251, "obj2": 0.39901496369708417}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( ( ( ARS * ARS ) / ( FirstVNF_CPU - CRS ) ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( ( ( CS * MUM ) / ( RRSe - MUC ) ) ,RCSe ) ) )", "obj1": 0.21292775665399238, "obj2": 0.5537018699335596}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "Min( Max( ( PN - ( RRS - FirstVNF_CPU ) ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) ,( DS - CS ) )", "obj1": 0.3669201520912547, "obj2": 0.421703482885927}, {"determining": "( Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( PN - RRS ) )", "choosing": "( Min( ( RRSe - MUM ) ,( DS - CS ) ) + ( MUR + CS ) )", "obj1": 0.5684410646387833, "obj2": 0.3388740737740315}, {"determining": "Max( ( ( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) ),( ARS * CRS ) )", "choosing": "( ( Max( ( MUR + RCSe ),( CS - MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5256637629210941}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( MUM,Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6825095057034221, "obj2": 0.23258123014406068}, {"determining": "( ( BR / Const ) / Min( ( FirstVNF_Mem_Server / PN ) ,( ARS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU / DS ) * ( Min( RMSe ,DS ) * MLU ) ) / ( ( MLU / DS ) * ( MUC * MLU ) ) )", "obj1": 0.6045627376425855, "obj2": 0.31301034084936113}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( MUR - ( MLU * RCSe ) ) / Min( RMSe ,Min( ( MLU * RMSe ) ,Max( RCSe,RCSe ) ) ) )", "obj1": 0.5893536121673004, "obj2": 0.32638061350944614}, {"determining": "( FirstVNF_RAM_Server + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * MUM ) / Max( DS,RRSe ) )", "obj1": 0.6996197718631179, "obj2": 0.2238763917474676}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( ( PN * FirstVNF_CPU_Server ) / Max( Min( ( Max( Min( ( FirstVNF_Mem * PN ) ,RRS ),FirstVNF_CPU ) * PN ) ,RRS ),FirstVNF_CPU ) ) )", "choosing": "( MUR / Min( ( ( DS / RRSe ) * DS ) ,( ( DS / RRSe ) * DS ) ) )", "obj1": 0.0741444866920152, "obj2": 0.754026322024561}, {"determining": "( Min( ( ARS / PN ) ,DDR ) + ( FirstVNF_RAM - ARS ) )", "choosing": "( ( RMSe + ( MUM + DS ) ) - Max( CS,MUC ) )", "obj1": 0.629277566539924, "obj2": 0.3026447763958552}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "( ( Max( PN,MDR ) + Min( FirstVNF_CPU_Server ,PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * Min( RMSe ,MLU ) ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Min( Max( ( Max( ( CRS / Const ),ACS ) + ( Const - FirstVNF_RAM ) ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( ( ( DS / Max( RCSe,MUC ) ) / Max( MUR,( MUR / DS ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.30228136882129275, "obj2": 0.4920238659054082}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) - PN ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( ( RCSe - ( MUM - RMSe ) ) - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.23574144486692014, "obj2": 0.5458544684163168}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - ( CS + MUC ) ) / Max( RRSe,MLU ) ) )", "obj1": 0.903041825095057, "obj2": 0.06754515519933141}, {"determining": "Min( Max( ACS,ACS ) ,MDR )", "choosing": "( ( MLU + DS ) + ( MLU + DS ) )", "obj1": 0.7186311787072244, "obj2": 0.20836307262021644}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( MRS,( ACS + ARS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( ( RCSe - MUR ) / Min( ( ( DS / RRSe ) * DS ) ,MUR ) ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( Min( Min( ( ACS / MRS ) ,Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ,( MDR / Max( CRS,FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( ( MLU * Min( RCSe ,RRSe ) ) * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07984790874524715, "obj2": 0.7096701821965884}, {"determining": "Min( Min( ( ACS / MRS ) ,Min( Max( FirstVNF_CPU,ARS ) ,( ( FirstVNF_Mem_Server - AMS ) * FirstVNF_RAM ) ) ) ,( MDR / Max( CRS,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MUR ) / Min( ( MLU * Min( RCSe ,( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) ) ) ) ,MUR ) )", "obj1": 0.33079847908745247, "obj2": 0.4817889657579619}, {"determining": "( ( CRS - PN ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,MRS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + RRSe ) )", "obj1": 0.26996197718631176, "obj2": 0.5108190618622689}, {"determining": "( Max( ( PN - RRS ),ACS ) * ( PN - RRS ) )", "choosing": "( Min( ( RRSe - MUM ) ,( DS - CS ) ) + Min( ( RRSe - MUC ) ,( DS - CS ) ) )", "obj1": 0.38783269961977185, "obj2": 0.4072701330224359}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / ( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) ) ),( CS + MUC ) ) )", "obj1": 0.32129277566539927, "obj2": 0.48304295815987996}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) )", "obj1": 0.3821292775665399, "obj2": 0.42124908133015093}, {"determining": "Max( Const,( ARS * CRS ) )", "choosing": "( ( Max( ( ( MUR + ( MUM * ( RCSe * RRSe ) ) ) * ( RMSe - MLU ) ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5466022781434292}, {"determining": "( ( CRS - ( Const * MDR ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( ( FirstVNF_Mem_Server + CRS ),ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( ( RMSe + ( Max( RMSe,DS ) - DS ) ) - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5108087440960821}, {"determining": "( Max( ( Min( ARS ,FirstVNF_CPU ) * ( AMS - RRS ) ),Min( ( BR * FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) / Max( Min( ( CRS - Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) ) ,Max( FirstVNF_Mem_Server,CRS ) ),( Min( FirstVNF_RAM ,ACS ) + Max( Const,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Min( CS ,RCSe ),( DS / MLU ) ) - ( ( ( RMSe - RRSe ) + ( RMSe / DS ) ) + ( ( MLU - MUC ) - ( RCSe / RCSe ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.2880084814517101}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( ARS * Const ) )", "choosing": "( ( RRSe / RRSe ) - ( ( MUR * Max( CS,DS ) ) / MUR ) )", "obj1": 0.279467680608365, "obj2": 0.4951597441792029}, {"determining": "( Max( BR,( ARS + Const ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + ( MLU * MUR ) ) )", "obj1": 0.2813688212927757, "obj2": 0.4932865568649459}, {"determining": "Max( Max( ( Min( ARS ,Max( FirstVNF_CPU_Server,Max( DDR,( ( BR / MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_CPU / Const ) ),AMS ),( ARS + Const ) )", "choosing": "Max( ( MUR / ( Max( ( MUM + MLU ),MLU ) - MLU ) ),( RRSe / MUM ) )", "obj1": 0.6501901140684411, "obj2": 0.28543299096972985}, {"determining": "( ( CRS / ( ( CRS / MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( ( MUC - MUR ) * RMSe ) )", "obj1": 0.07034220532319392, "obj2": 0.7649719316044802}, {"determining": "Min( ( ARS * AMS ) ,( Min( ( ( MDR + AMS ) * PN ) ,RRS ) * Const ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,( ( MUC / ( ( MUR - ( CS * DS ) ) - MUR ) ) + MUM ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( ( CRS / MDR ) + FirstVNF_CPU ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( MUC - ( MUC - MUR ) ) )", "obj1": 0.06463878326996197, "obj2": 0.7681281783681527}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem_Server ) / MDR ) + ( FirstVNF_CPU - CRS ) ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / DS ) + ( ( MUC - MUR ) * RMSe ) ) / DS ) + ( MUC - MUR ) )", "obj1": 0.060836501901140684, "obj2": 0.7692697737392544}, {"determining": "( CRS + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( CS ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( ( CRS / MDR ) + ( FirstVNF_CPU - CRS ) ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( MUC - MUR ) )", "obj1": 0.06844106463878327, "obj2": 0.765789090300763}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / RRS ) ) / ( BR - PN ) )", "choosing": "( RMSe + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( Min( ( MRS / ( FirstVNF_Mem * CRS ) ) ,DDR ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( Max( MUR,RMSe ),RMSe ) / ( DS / DS ) ) / ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) + ( RRSe / CS ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0027310955792997716}, {"determining": "( ( Const * Const ) / ( BR - PN ) )", "choosing": "( ( MUM - MLU ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( Min( ( MRS / ( FirstVNF_Mem * CRS ) ) ,DDR ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( Max( MUR,RMSe ),RMSe ) / ( DS / DS ) ) / ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) + ( RRSe / CS ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0027310955792997716}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) )", "choosing": "( ( MUM * RCSe ) + ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Max( MUR,( MLU / RCSe ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,ACS ) ,( ( RRS - FirstVNF_CPU ) * ( ACS - Max( FirstVNF_RAM,RRS ) ) ) )", "choosing": "Min( ( RRSe - ( ( DS / MLU ) / Min( Max( RCSe,MLU ) ,( Max( RRSe,MUR ) * ( ( ( RMSe - RCSe ) + Min( MLU ,RCSe ) ) + Max( RCSe,RCSe ) ) ) ) ) ) ,( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / ( FirstVNF_Mem * CRS ) ) ,DDR ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( Max( MUR,RMSe ),RMSe ) / ( DS / DS ) ) / ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) + ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * BR ) - RRS ) - Max( ( Const + Const ),( ( ( AMS - BR ) / FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( Min( MLU ,( Max( MUR,MUM ) * ( ( CS + CS ) - RCSe ) ) ) + MLU ) / ( RCSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),RRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( RMSe - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( Min( MUC ,CS ) / ( MUM / ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR + ( ( AMS + FirstVNF_Mem ) - Max( FirstVNF_CPU,( Max( MDR,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ,( RRS - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,Min( MUM ,RMSe ) ) - Max( MUM,( RRSe * MUC ) ) ) - CS ) / Min( RRSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) / Max( AMS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Max( RCSe,MUM ) * MUM ) ,RRSe ) / ( CS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "( MUM + ( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - Min( ( MUM + RCSe ) ,( MLU + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) ) )", "choosing": "( RMSe / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( RRS - FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( Max( DS,Min( MUR ,CS ) ) + ( Min( Max( ( CS + MUC ),DS ) ,( RMSe / MLU ) ) - ( MUR * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( DDR * ARS ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),( ( RRSe / RRSe ) - ( ( MUR * MUM ) / MUR ) ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - Max( Min( FirstVNF_CPU ,MDR ),( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Max( FirstVNF_CPU,( RRS * RRS ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( Max( MUR,( MUR / DS ) ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( BR / Min( ARS ,MDR ) ) + ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Max( RCSe,MUR ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) ) + ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( ( CS / ( MUM + RMSe ) ) + ( RRSe - MLU ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) - ( ACS / AMS ) ) - ( ( ARS + FirstVNF_RAM ) / ( AMS + FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( RMSe * ( ( MUR / ( MLU - RRSe ) ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - ( ( MUR / ( MLU - RRSe ) ) * ( ( CS / MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,RRS ) + ( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Max( MUM,DS ) / RCSe ) / ( Min( MLU ,MUC ) * Max( RMSe,RRSe ) ) ) - Max( RMSe,( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / CRS ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MUR,RRSe ) / MUC ) / RMSe ),( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Max( MUR,( MLU / RCSe ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) - Max( MRS,ARS ) )", "choosing": "( Max( ( ( MUM * CS ) + Max( MUC,DS ) ),( Min( RCSe ,RCSe ) + ( MUM / RCSe ) ) ) / ( ( ( RRSe / MUR ) - ( CS / MUM ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,ACS ) ,( ( RRS - FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * ( RRSe - RCSe ) ) - MUM ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,( MDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( Max( MUM,MUR ) - RCSe ) ) ,( DS - Min( ( RRSe - MUM ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ACS,Max( Min( FirstVNF_Mem ,PN ),RRS ) ) ,Min( AMS ,FirstVNF_Mem ) ) ,( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) ) )", "choosing": "Min( ( ( ( MLU * RCSe ) / ( ( DS * MLU ) / MUC ) ) - ( ( MUM / RMSe ) * Min( Max( MUC,CS ) ,MUC ) ) ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,( PN + MDR ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( ( RRSe - ( Max( MUM,MUC ) - RMSe ) ) - RCSe ) ) ,( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,( MRS - Min( FirstVNF_RAM_Server ,Min( ( BR - DDR ) ,( DDR / AMS ) ) ) ) ) ,( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) ) )", "choosing": "Min( Max( ( RMSe * ( CS / MUC ) ),DS ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( RRS - FirstVNF_CPU ) ) * ( PN - ( FirstVNF_RAM_Server / BR ) ) )", "choosing": "( RRSe + ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * Max( ( PN - RRS ),ACS ) )", "choosing": "( ( MUR + MUC ) + ( Max( ( CS + DS ),MUC ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + ARS ) - ( PN - Max( MRS,BR ) ) ) * ( PN - ( FirstVNF_RAM_Server / BR ) ) )", "choosing": "( ( ( ( ( MUC * ( RRSe * MLU ) ) - Min( MLU ,( RRSe - ( MUC * ( RCSe + RRSe ) ) ) ) ) - ( RRSe / CS ) ) + MUC ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,ACS ) ,( ( PN - ( FirstVNF_RAM_Server / BR ) ) + ARS ) )", "choosing": "( ( MUM + MUM ) + Max( ( RCSe + DS ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ARS )", "choosing": "( ( MUR + MUC ) + ( ( MUM + MUM ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * Max( ACS,ACS ) )", "choosing": "( ( MUR + MUC ) + ( Max( ( RMSe + Max( CS,MUR ) ),MUC ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( Min( Max( ACS,Min( DDR ,PN ) ) ,( PN + ARS ) ) ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MLU + ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ARS ) * Min( ( RRS - FirstVNF_Mem ) ,AMS ) )", "choosing": "Min( ( MUM * MUR ) ,Min( DS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( CRS - PN ) )", "choosing": "( ( MUR - Max( CS,MLU ) ) / Min( RMSe ,Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,RRS ) - ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,DDR ) ) ) * FirstVNF_CPU ) / Max( AMS,Max( MRS,( DDR - Min( PN ,( PN + ( ( CRS / MDR ) * ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( DS / Max( ( RCSe / Min( RCSe ,RMSe ) ),RMSe ) ) - ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,Min( ACS ,MDR ) ) ,MDR )", "choosing": "( Min( RRSe ,( MUR - ( DS + RRSe ) ) ) + ( MUM / MUM ) )", "obj1": 0.057034220532319393, "obj2": 0.7710911321163512}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / ( ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) - MRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( MUR / Max( RRSe,MLU ) ) ) ),( CS + MUC ) ) )", "obj1": 0.7908745247148289, "obj2": 0.0943664532086176}, {"determining": "Max( ( RRS - MRS ),( ( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6196167509925867}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( ACS,( AMS + FirstVNF_RAM_Server ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) - ( ( FirstVNF_RAM_Server + ( Max( ACS,( AMS + FirstVNF_RAM_Server ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( ( ( RMSe - ( ( Max( DS,MLU ) / Max( MUR,RMSe ) ) / DS ) ) / ( ( ( MUC * MUC ) / ( CS * CS ) ) + RRSe ) ) - ( ( Max( DS,MLU ) / Max( MUR,RMSe ) ) / DS ) ) / ( ( ( MUC * MUC ) / ( CS * CS ) ) + RRSe ) )", "obj1": 0.5399239543726235, "obj2": 0.3303892010415362}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - Max( ACS,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / MUR ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 0.7813688212927756, "obj2": 0.15380233554509973}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( Max( DS,RRSe ) - ( RCSe * MLU ) )", "obj1": 0.20532319391634982, "obj2": 0.6163455720359576}, {"determining": "Max( ( ARS / PN ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUM + DS ) )", "obj1": 0.11787072243346007, "obj2": 0.7090900269543777}, {"determining": "Min( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( Max( Max( DS,MUR ),( RMSe * RRSe ) ) - ( ( RRSe + MUC ) / Max( MUM,MUR ) ) ) + Min( ( ( RRSe + RRSe ) / Max( MUR,RMSe ) ) ,( ( MLU - MUC ) / ( RRSe - RRSe ) ) ) ),DS ) ,( RMSe / ( Max( DS,Min( MUR ,CS ) ) + ( MUC - ( MUR * MUR ) ) ) ) )", "obj1": 0.9011406844106464, "obj2": 0.08386776327675734}, {"determining": "( ( Max( PN,MDR ) + Min( FirstVNF_CPU_Server ,PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * Min( RMSe ,MLU ) ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( ( ( ACS + FirstVNF_Mem ) - ( MDR * BR ) ) - Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) ) ) )", "choosing": "( Max( DS,Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) ) ) - Min( RCSe ,( MLU - RRSe ) ) )", "obj1": 0.9619771863117871, "obj2": 0.03392733572208452}, {"determining": "Min( ( Max( ( ( BR / FirstVNF_CPU ) / PN ),( FirstVNF_Mem_Server - CRS ) ) / CRS ) ,Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MLU + RRSe ) * ( RRSe - ( Max( Max( RCSe,( Min( RMSe ,CS ) * ( RRSe - CS ) ) ),DS ) - ( RRSe + MUM ) ) ) ) ,( DS - ( DS / RCSe ) ) )", "obj1": 0.3973384030418251, "obj2": 0.39901496369708417}, {"determining": "Max( Max( FirstVNF_Mem,Min( FirstVNF_RAM ,FirstVNF_Mem ) ),FirstVNF_Mem )", "choosing": "Max( DS,Min( DS ,MUR ) )", "obj1": 0.7357414448669202, "obj2": 0.19448263749560327}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( ( ( ARS * ARS ) / ( FirstVNF_CPU - CRS ) ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( ( ( CS * MUM ) / ( RRSe - MUC ) ) ,RCSe ) ) )", "obj1": 0.21292775665399238, "obj2": 0.5537018699335596}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( Min( Min( FirstVNF_Mem ,MRS ) ,( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_Mem_Server / BR ) ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Min( Max( Max( Min( Max( MUM,MUR ) ,( MLU * MUR ) ),( Min( RCSe ,RMSe ) / Min( MUR ,RCSe ) ) ),( MLU + RCSe ) ) ,( ( RCSe - RRSe ) + CS ) ) )", "obj1": 0.344106463878327, "obj2": 0.457296543192426}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( MUR - ( MLU * RCSe ) ) / Min( RMSe ,Min( ( MLU * RMSe ) ,Max( RCSe,RCSe ) ) ) )", "obj1": 0.5893536121673004, "obj2": 0.32638061350944614}, {"determining": "Min( Max( ( PN - ( RRS - FirstVNF_CPU ) ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) ,( DS - CS ) )", "obj1": 0.3669201520912547, "obj2": 0.421703482885927}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - Min( ( ( ( RRS + BR ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) / ( FirstVNF_CPU * ( MDR - BR ) ) ) ,AMS ) ) )", "choosing": "( ( MUM * Max( MUC,CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.9942965779467681, "obj2": 0.0036184425623965104}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( MUM,Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6825095057034221, "obj2": 0.23258123014406068}, {"determining": "Min( Max( Max( ACS,Max( FirstVNF_CPU_Server,MDR ) ),Max( FirstVNF_CPU_Server,MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RRSe ) * ( RRSe - RCSe ) ) ,( Min( ( ( MLU + RRSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3193916349809886, "obj2": 0.46347582532526393}, {"determining": "( FirstVNF_RAM_Server + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * MUM ) / Max( DS,RRSe ) )", "obj1": 0.6996197718631179, "obj2": 0.2238763917474676}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( ( PN * FirstVNF_CPU_Server ) / Max( Min( ( Max( Min( ( FirstVNF_Mem * PN ) ,RRS ),FirstVNF_CPU ) * PN ) ,RRS ),FirstVNF_CPU ) ) )", "choosing": "( MUR / Min( ( ( DS / RRSe ) * DS ) ,( ( DS / RRSe ) * DS ) ) )", "obj1": 0.0741444866920152, "obj2": 0.754026322024561}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU_Server,MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RRSe ) * Min( ( ( MLU + RRSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) ) ) ,( DS - CS ) )", "obj1": 0.3060836501901141, "obj2": 0.48263433649504833}, {"determining": "Max( Min( FirstVNF_RAM ,PN ),( ( FirstVNF_CPU / ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + Const ) * BR ) ) - AMS ) ) * ( ARS / BR ) ) )", "choosing": "( DS - Max( ( MUM / DS ),Min( DS ,MUR ) ) )", "obj1": 0.6539923954372624, "obj2": 0.26160998238399497}, {"determining": "Max( ( ( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) ),( ARS * CRS ) )", "choosing": "( ( Max( ( MUR + RCSe ),( CS - MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5256637629210941}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - CS ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.23574144486692014, "obj2": 0.5440826342820119}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - ( CS + MUC ) ) / Max( RRSe,MLU ) ) )", "obj1": 0.903041825095057, "obj2": 0.06754515519933141}, {"determining": "Min( Max( ACS,ACS ) ,MDR )", "choosing": "( ( MLU + DS ) + ( MLU + DS ) )", "obj1": 0.7186311787072244, "obj2": 0.20836307262021644}, {"determining": "( Min( ( ARS / PN ) ,DDR ) + ( FirstVNF_RAM - ARS ) )", "choosing": "( ( RMSe + ( MUM + DS ) ) - Max( CS,MUC ) )", "obj1": 0.629277566539924, "obj2": 0.3026447763958552}, {"determining": "( CRS + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( CS ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( Min( Min( ( ACS / MRS ) ,Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ,( MDR / Max( CRS,FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( ( MLU * Min( RCSe ,RRSe ) ) * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07984790874524715, "obj2": 0.7096701821965884}, {"determining": "( ( BR / Const ) / Min( ( FirstVNF_Mem_Server / PN ) ,( ARS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU / DS ) * ( Min( RMSe ,DS ) * MLU ) ) / ( ( MLU / DS ) * ( MUC * MLU ) ) )", "obj1": 0.6045627376425855, "obj2": 0.31301034084936113}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "( ( ( MRS * Max( BR,( ARS + Const ) ) ) + ( CRS + CRS ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Max( ( MLU * MUR ),Min( DS ,MUR ) ) ) )", "obj1": 0.2889733840304182, "obj2": 0.4879778796295974}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) * ( ( ( ACS + FirstVNF_CPU_Server ) - ( CRS / MDR ) ) - Min( ACS ,MDR ) ) )", "choosing": "( Max( DS,RRSe ) - ( ( ( RCSe / DS ) * MLU ) - MUM ) )", "obj1": 0.6159695817490495, "obj2": 0.3113440609625451}, {"determining": "Max( Const,( ARS * CRS ) )", "choosing": "( ( Max( ( ( MUR + ( MUM * ( RCSe * RRSe ) ) ) * ( RMSe - MLU ) ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5466022781434292}, {"determining": "( ( Max( BR,( Min( ( ( MDR + ( FirstVNF_RAM - MRS ) ) * PN ) ,FirstVNF_CPU_Server ) + MRS ) ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Min( Max( MUR,CS ) ,MUR ) ,( DS / RRSe ) )", "obj1": 0.6349809885931559, "obj2": 0.28539646826589654}, {"determining": "( Max( ( PN - RRS ),ACS ) * ( PN - RRS ) )", "choosing": "( Min( ( RRSe - MUM ) ,( DS - CS ) ) + Min( ( RRSe - MUC ) ,( DS - CS ) ) )", "obj1": 0.38783269961977185, "obj2": 0.4072701330224359}, {"determining": "( ( CRS - PN ) + PN )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + ( MLU * RCSe ) ) )", "obj1": 0.2623574144486692, "obj2": 0.5202037574064782}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) )", "obj1": 0.3821292775665399, "obj2": 0.42124908133015093}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( ARS * Const ) )", "choosing": "( ( RRSe / RRSe ) - ( ( MUR * Max( CS,DS ) ) / MUR ) )", "obj1": 0.279467680608365, "obj2": 0.4951597441792029}, {"determining": "Min( FirstVNF_CPU ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( RRSe ,( DS - CS ) )", "obj1": 0.3840304182509506, "obj2": 0.41422784486335634}, {"determining": "( ( Min( Max( MRS,( ACS + ARS ) ) ,( ( PN * FirstVNF_CPU_Server ) / Max( Min( ( FirstVNF_Mem * PN ) ,RRS ),FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Min( Max( MUR,CS ) ,MUR ) ,( ( ( DS / RRSe ) * DS ) * MUR ) )", "obj1": 0.7243346007604563, "obj2": 0.20229658437550113}, {"determining": "Max( BR,( ( ARS + Const ) + Const ) )", "choosing": "Max( DS,Min( DS ,MUR ) )", "obj1": 0.7300380228136882, "obj2": 0.19934188151401677}, {"determining": "( ( CRS - PN ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,MRS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + RRSe ) )", "obj1": 0.26996197718631176, "obj2": 0.5108190618622689}, {"determining": "( ( CRS - PN ) + ( Max( FirstVNF_CPU,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2661596958174905, "obj2": 0.5164872373947567}, {"determining": "( Max( BR,( ARS + Const ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + ( MLU * MUR ) ) )", "obj1": 0.2813688212927757, "obj2": 0.4932865568649459}, {"determining": "( ( CRS / MDR ) / FirstVNF_Mem_Server )", "choosing": "( ( ( RCSe / DS ) + ( MUC - MUR ) ) + ( ( MUC - MUR ) * RMSe ) )", "obj1": 0.07224334600760456, "obj2": 0.7632266835787339}, {"determining": "( ( CRS - ( Const * MDR ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( ( FirstVNF_Mem_Server + CRS ),ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( ( RMSe + ( Max( RMSe,DS ) - DS ) ) - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5048844049658265}, {"determining": "Min( ( ARS * AMS ) ,( Min( ( ( MDR + AMS ) * PN ) ,RRS ) * Const ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,( ( MUC / ( ( MUR - ( CS * DS ) ) - MUR ) ) + MUM ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( CRS - ( Const * MDR ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( ( FirstVNF_Mem_Server + CRS ),ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( ( RMSe + ( Max( RMSe,DS ) - DS ) ) - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5048844049658265}, {"determining": "( ( ( CRS / MDR ) + FirstVNF_CPU ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( MUC - ( MUC - MUR ) ) )", "obj1": 0.06463878326996197, "obj2": 0.7681281783681527}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( ( Max( ( ( ARS + Const ) * Max( FirstVNF_Mem,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ARS + Const ) ) * FirstVNF_CPU_Server ) / Max( Min( ( FirstVNF_Mem * PN ) ,RRS ),FirstVNF_CPU ) ) )", "choosing": "( MUR / Min( ( ( DS / Max( ( MUM / Min( DS ,MUR ) ),Min( DS ,MUR ) ) ) * DS ) ,MUR ) )", "obj1": 0.060836501901140684, "obj2": 0.7690085473890016}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( MRS,( ACS + ARS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( ( RCSe - MUR ) / Min( ( ( DS / RRSe ) * DS ) ,MUR ) ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( CRS / ( ( CRS / MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( ( MUC - MUR ) * RMSe ) )", "obj1": 0.07034220532319392, "obj2": 0.7649719316044802}, {"determining": "( ( ( CRS / MDR ) + ( FirstVNF_CPU - CRS ) ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( MUC - MUR ) )", "obj1": 0.06844106463878327, "obj2": 0.765789090300763}, {"determining": "( ( ( CRS / MDR ) + ( FirstVNF_CPU - CRS ) ) / Min( ACS ,( ( ( CRS / MDR ) + ( FirstVNF_CPU - CRS ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / DS ) + ( MUC - MUR ) )", "obj1": 0.06844106463878327, "obj2": 0.765789090300763}, {"determining": "( ( Const * Const ) / ( BR - PN ) )", "choosing": "( ( MUM - MLU ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( Min( ( MRS / ( FirstVNF_Mem * CRS ) ) ,DDR ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( Max( MUR,RMSe ),RMSe ) / ( DS / DS ) ) / ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) + ( RRSe / CS ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0027310955792997716}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / RRS ) ) / ( BR - PN ) )", "choosing": "( RMSe + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( Min( ( MRS / ( FirstVNF_Mem * CRS ) ) ,DDR ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( Max( MUR,RMSe ),RMSe ) / ( DS / DS ) ) / ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) + ( RRSe / CS ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0027310955792997716}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) )", "choosing": "( ( MUM * RCSe ) + ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Max( MUR,( MLU / RCSe ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,ACS ) ,( ( RRS - FirstVNF_CPU ) * ( ACS - Max( FirstVNF_RAM,RRS ) ) ) )", "choosing": "Min( ( RRSe - ( ( DS / MLU ) / Min( Max( RCSe,MLU ) ,( Max( RRSe,MUR ) * ( ( ( RMSe - RCSe ) + Min( MLU ,RCSe ) ) + Max( RCSe,RCSe ) ) ) ) ) ) ,( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / ( FirstVNF_Mem * CRS ) ) ,DDR ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( Max( MUR,RMSe ),RMSe ) / ( DS / DS ) ) / ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) + ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * BR ) - RRS ) - Max( ( Const + Const ),( ( ( AMS - BR ) / FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( Min( MLU ,( Max( MUR,MUM ) * ( ( CS + CS ) - RCSe ) ) ) + MLU ) / ( RCSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),RRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( RMSe - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( Min( MUC ,CS ) / ( MUM / ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR + ( ( AMS + FirstVNF_Mem ) - Max( FirstVNF_CPU,( Max( MDR,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ,( RRS - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,Min( MUM ,RMSe ) ) - Max( MUM,( RRSe * MUC ) ) ) - CS ) / Min( RRSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) / Max( AMS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Max( RCSe,MUM ) * MUM ) ,RRSe ) / ( CS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "( MUM + ( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - Min( ( MUM + RCSe ) ,( MLU + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) ) )", "choosing": "( RMSe / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( RRS - FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( Max( DS,Min( MUR ,CS ) ) + ( Min( Max( ( CS + MUC ),DS ) ,( RMSe / MLU ) ) - ( MUR * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( DDR * ARS ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),( ( RRSe / RRSe ) - ( ( MUR * MUM ) / MUR ) ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - Max( Min( FirstVNF_CPU ,MDR ),( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Max( FirstVNF_CPU,( RRS * RRS ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( Max( MUR,( MUR / DS ) ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( BR / Min( ARS ,MDR ) ) + ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Max( RCSe,MUR ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) ) + ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( ( CS / ( MUM + RMSe ) ) + ( RRSe - MLU ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) - ( ACS / AMS ) ) - ( ( ARS + FirstVNF_RAM ) / ( AMS + FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( RMSe * ( ( MUR / ( MLU - RRSe ) ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - ( ( MUR / ( MLU - RRSe ) ) * ( ( CS / MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,RRS ) + ( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Max( MUM,DS ) / RCSe ) / ( Min( MLU ,MUC ) * Max( RMSe,RRSe ) ) ) - Max( RMSe,( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / CRS ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MUR,RRSe ) / MUC ) / RMSe ),( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Max( MUR,( MLU / RCSe ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) - Max( MRS,ARS ) )", "choosing": "( Max( ( ( MUM * CS ) + Max( MUC,DS ) ),( Min( RCSe ,RCSe ) + ( MUM / RCSe ) ) ) / ( ( ( RRSe / MUR ) - ( CS / MUM ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,ACS ) ,( ( RRS - FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * ( RRSe - RCSe ) ) - MUM ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,( MDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( Max( MUM,MUR ) - RCSe ) ) ,( DS - Min( ( RRSe - MUM ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ACS,Max( Min( FirstVNF_Mem ,PN ),RRS ) ) ,Min( AMS ,FirstVNF_Mem ) ) ,( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) ) )", "choosing": "Min( ( ( ( MLU * RCSe ) / ( ( DS * MLU ) / MUC ) ) - ( ( MUM / RMSe ) * Min( Max( MUC,CS ) ,MUC ) ) ) ,CS )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( ARS - ( FirstVNF_Mem_Server / Max( ( Min( ARS ,MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ),AMS ) ) ) / Const ) / ( ARS - ( FirstVNF_Mem_Server / PN ) ) )", "choosing": "( ( ( MLU / Min( DS ,MUR ) ) * ( MUC * MLU ) ) / ( ( MLU / DS ) * ( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( CRS - PN ) )", "choosing": "( ( MUR - Max( CS,MLU ) ) / Min( RMSe ,Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,Min( ACS ,MDR ) ) ,MDR )", "choosing": "( Min( RRSe ,( MUR - ( DS + RRSe ) ) ) + ( MUM / MUM ) )", "obj1": 0.057034220532319393, "obj2": 0.7710911321163512}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / ( ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) - MRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( MUR / Max( RRSe,MLU ) ) ) ),( CS + MUC ) ) )", "obj1": 0.7908745247148289, "obj2": 0.0943664532086176}, {"determining": "( ( ( FirstVNF_RAM_Server + ( Max( ACS,( AMS + FirstVNF_RAM_Server ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) - ( ( FirstVNF_RAM_Server + ( Max( ACS,( AMS + FirstVNF_RAM_Server ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( ( ( RMSe - ( ( Max( DS,MLU ) / Max( MUR,RMSe ) ) / DS ) ) / ( ( ( MUC * MUC ) / ( CS * CS ) ) + RRSe ) ) - ( ( Max( DS,MLU ) / Max( MUR,RMSe ) ) / DS ) ) / ( ( ( MUC * MUC ) / ( CS * CS ) ) + RRSe ) )", "obj1": 0.5399239543726235, "obj2": 0.3303892010415362}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - Max( ACS,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / MUR ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 0.7813688212927756, "obj2": 0.15380233554509973}, {"determining": "Max( ( RRS - MRS ),( ( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6196167509925867}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) - ( RRS * FirstVNF_Mem_Server ) ) + ( Max( ACS,( ( ( CRS / MDR ) + ( FirstVNF_CPU - CRS ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RRSe * MLU ),( DS / MUR ) ) - ( DS + Min( MUM ,( ( RCSe / DS ) + ( MUC - MUR ) ) ) ) )", "obj1": 0.09885931558935361, "obj2": 0.7004545638129879}, {"determining": "Min( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( Max( Max( DS,MUR ),( RMSe * RRSe ) ) - ( ( RRSe + MUC ) / Max( MUM,MUR ) ) ) + Min( ( ( RRSe + RRSe ) / Max( MUR,RMSe ) ) ,( ( MLU - MUC ) / ( RRSe - RRSe ) ) ) ),DS ) ,( RMSe / ( Max( DS,Min( MUR ,CS ) ) + ( MUC - ( MUR * MUR ) ) ) ) )", "obj1": 0.9011406844106464, "obj2": 0.08386776327675734}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( Max( DS,RRSe ) - ( RCSe * MLU ) )", "obj1": 0.20532319391634982, "obj2": 0.6163455720359576}, {"determining": "Min( ( Max( ( ( BR / FirstVNF_CPU ) / PN ),( FirstVNF_Mem_Server - CRS ) ) / CRS ) ,Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MLU + RRSe ) * ( RRSe - ( Max( Max( RCSe,( Min( RMSe ,CS ) * ( RRSe - CS ) ) ),DS ) - ( RRSe + MUM ) ) ) ) ,( DS - ( DS / RCSe ) ) )", "obj1": 0.3973384030418251, "obj2": 0.39901496369708417}, {"determining": "Max( Max( FirstVNF_Mem,Min( FirstVNF_RAM ,FirstVNF_Mem ) ),FirstVNF_Mem )", "choosing": "Max( DS,Min( DS ,MUR ) )", "obj1": 0.7357414448669202, "obj2": 0.19448263749560327}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( ( ( ARS * ARS ) / ( FirstVNF_CPU - CRS ) ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( ( ( CS * MUM ) / ( RRSe - MUC ) ) ,RCSe ) ) )", "obj1": 0.21292775665399238, "obj2": 0.5537018699335596}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( Min( Min( FirstVNF_Mem ,MRS ) ,( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_Mem_Server / BR ) ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Min( Max( Max( Min( Max( MUM,MUR ) ,( MLU * MUR ) ),( Min( RCSe ,RMSe ) / Min( MUR ,RCSe ) ) ),( MLU + RCSe ) ) ,( ( RCSe - RRSe ) + CS ) ) )", "obj1": 0.344106463878327, "obj2": 0.457296543192426}, {"determining": "Min( Max( PN,AMS ) ,( Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / PN ) ) ) ) - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / PN ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( DS - RCSe ) ) ,( ( DS - RCSe ) / Max( ( ( MLU / DS ) * ( MUC * MLU ) ),MLU ) ) )", "obj1": 0.17110266159695817, "obj2": 0.6194053851880721}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / ( Min( Min( FirstVNF_Mem ,MRS ) ,( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_Mem_Server / BR ) ) ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,Max( RRS,( FirstVNF_CPU * Const ) ) ) ) )", "choosing": "( ( ( RRSe + MUC ) / ( ( MUR + Max( CS,MUR ) ) - DS ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( Min( Max( MUM,MUR ) ,( MLU * MUR ) ) ,MUR ) ) ) )", "obj1": 0.9619771863117871, "obj2": 0.0328771193022052}, {"determining": "( ( Max( PN,MDR ) + Min( FirstVNF_CPU_Server ,PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * Min( RMSe ,MLU ) ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( MUR - ( MLU * RCSe ) ) / Min( RMSe ,Min( ( MLU * RMSe ) ,Max( RCSe,RCSe ) ) ) )", "obj1": 0.5893536121673004, "obj2": 0.32638061350944614}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( MUM,Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6825095057034221, "obj2": 0.23258123014406068}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - Min( ( ( ( RRS + BR ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) / ( FirstVNF_CPU * ( MDR - BR ) ) ) ,AMS ) ) )", "choosing": "( ( MUM * Max( MUC,CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.9942965779467681, "obj2": 0.0036184425623965104}, {"determining": "Min( Max( Max( ACS,Max( FirstVNF_CPU_Server,MDR ) ),Max( FirstVNF_CPU_Server,MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RRSe ) * ( RRSe - RCSe ) ) ,( Min( ( ( MLU + RRSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3193916349809886, "obj2": 0.46347582532526393}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,( PN + MDR ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( ( RRSe - ( Max( MUM,MUC ) - RMSe ) ) - RCSe ) ) ,( DS - CS ) )", "obj1": 0.3650190114068441, "obj2": 0.4258268918696823}, {"determining": "( ( BR / Const ) / ( ARS - ( FirstVNF_Mem_Server / ( ( BR / Const ) / ( ARS - ( FirstVNF_Mem_Server / PN ) ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) / ( ( MLU / DS ) * ( MUC * MLU ) ) )", "obj1": 0.6977186311787072, "obj2": 0.2164737295815232}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( ( ARS - ( FirstVNF_Mem_Server / PN ) ) / Const ) / ( ARS - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU,MRS ) ) ) )", "choosing": "( ( ( MLU / DS ) * ( MUC * MLU ) ) / ( CS * ( MUC * MLU ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7195436775587958}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU_Server,MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RRSe ) * Min( ( ( MLU + RRSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) ) ) ,( DS - CS ) )", "obj1": 0.3060836501901141, "obj2": 0.48263433649504833}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) - ( RRS * FirstVNF_Mem_Server ) ) + ( Max( ACS,FirstVNF_Mem_Server ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / DS ) + ( MUC - MUR ) ) - ( DS + Min( MUM ,DS ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7629532717840065}, {"determining": "Max( Min( FirstVNF_RAM ,PN ),( ( FirstVNF_CPU / ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + Const ) * BR ) ) - AMS ) ) * ( ARS / BR ) ) )", "choosing": "( DS - Max( ( MUM / DS ),Min( DS ,MUR ) ) )", "obj1": 0.6539923954372624, "obj2": 0.26160998238399497}, {"determining": "Max( ( ( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) ),( ARS * CRS ) )", "choosing": "( ( Max( ( MUR + RCSe ),( CS - MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5256637629210941}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - CS ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.23574144486692014, "obj2": 0.5440826342820119}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - ( CS + MUC ) ) / Max( RRSe,MLU ) ) )", "obj1": 0.903041825095057, "obj2": 0.06754515519933141}, {"determining": "( Min( ( ARS / PN ) ,DDR ) + ( FirstVNF_RAM - ARS ) )", "choosing": "( ( RMSe + ( MUM + DS ) ) - Max( CS,MUC ) )", "obj1": 0.629277566539924, "obj2": 0.3026447763958552}, {"determining": "( ( BR / Const ) / Min( ( FirstVNF_Mem_Server / PN ) ,( ARS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU / DS ) * ( Min( RMSe ,DS ) * MLU ) ) / ( ( MLU / DS ) * ( MUC * MLU ) ) )", "obj1": 0.6045627376425855, "obj2": 0.31301034084936113}, {"determining": "Min( Max( ACS,ACS ) ,MDR )", "choosing": "( ( MLU + DS ) + ( MLU + DS ) )", "obj1": 0.7186311787072244, "obj2": 0.20836307262021644}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),RRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( RMSe - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( Min( MUC ,CS ) / ( MUM / ( MUM + RCSe ) ) ) )", "obj1": 0.9562737642585551, "obj2": 0.045387088689575604}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( Min( Min( ( ACS / MRS ) ,Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ,( MDR / Max( CRS,FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( ( MLU * Min( RCSe ,RRSe ) ) * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07984790874524715, "obj2": 0.7096701821965884}, {"determining": "( ( ( MRS * Max( BR,( ARS + Const ) ) ) + ( CRS + CRS ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Max( ( MLU * MUR ),Min( DS ,MUR ) ) ) )", "obj1": 0.2889733840304182, "obj2": 0.4879778796295974}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) * ( ( ( ACS + FirstVNF_CPU_Server ) - ( CRS / MDR ) ) - Min( ACS ,MDR ) ) )", "choosing": "( Max( DS,RRSe ) - ( ( ( RCSe / DS ) * MLU ) - MUM ) )", "obj1": 0.6159695817490495, "obj2": 0.3113440609625451}, {"determining": "Max( Const,( ARS * CRS ) )", "choosing": "( ( Max( ( ( MUR + ( MUM * ( RCSe * RRSe ) ) ) * ( RMSe - MLU ) ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5466022781434292}, {"determining": "( ( Max( BR,( Min( ( ( MDR + ( FirstVNF_RAM - MRS ) ) * PN ) ,FirstVNF_CPU_Server ) + MRS ) ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Min( Max( MUR,CS ) ,MUR ) ,( DS / RRSe ) )", "obj1": 0.6349809885931559, "obj2": 0.28539646826589654}, {"determining": "( ( CRS - PN ) + PN )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + ( MLU * RCSe ) ) )", "obj1": 0.2623574144486692, "obj2": 0.5202037574064782}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),RRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( RMSe - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( Min( MUC ,CS ) / ( MUM / ( MUM + RCSe ) ) ) )", "obj1": 0.9562737642585551, "obj2": 0.045387088689575604}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) )", "obj1": 0.3821292775665399, "obj2": 0.42124908133015093}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( ARS * Const ) )", "choosing": "( ( RRSe / RRSe ) - ( ( MUR * Max( CS,DS ) ) / MUR ) )", "obj1": 0.279467680608365, "obj2": 0.4951597441792029}, {"determining": "Min( FirstVNF_CPU ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( RRSe ,( DS - CS ) )", "obj1": 0.3840304182509506, "obj2": 0.41422784486335634}, {"determining": "Min( Max( ( PN - ( RRS - FirstVNF_CPU ) ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) ,( DS - CS ) )", "obj1": 0.3669201520912547, "obj2": 0.421703482885927}, {"determining": "( ( Min( Max( MRS,( ACS + ARS ) ) ,( ( PN * FirstVNF_CPU_Server ) / Max( Min( ( FirstVNF_Mem * PN ) ,RRS ),FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Min( Max( MUR,CS ) ,MUR ) ,( ( ( DS / RRSe ) * DS ) * MUR ) )", "obj1": 0.7243346007604563, "obj2": 0.20229658437550113}, {"determining": "( ( CRS - PN ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,MRS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + RRSe ) )", "obj1": 0.26996197718631176, "obj2": 0.5108190618622689}, {"determining": "Min( Max( ACS,BR ) ,( PN + MDR ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( ( ( RRSe + ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) ) - ( Max( MUM,MUC ) - RMSe ) ) - RCSe ) ) ,( DS - CS ) )", "obj1": 0.3935361216730038, "obj2": 0.406511405259288}, {"determining": "( ( CRS - PN ) + ( Max( FirstVNF_CPU,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2661596958174905, "obj2": 0.5164872373947567}, {"determining": "( Max( ( PN - RRS ),ACS ) * ( PN - RRS ) )", "choosing": "( Min( ( RRSe - MUM ) ,( DS - CS ) ) + Min( ( RRSe - MUC ) ,( DS - CS ) ) )", "obj1": 0.38783269961977185, "obj2": 0.4072701330224359}, {"determining": "( Max( BR,( ARS + Const ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + ( MLU * MUR ) ) )", "obj1": 0.2813688212927757, "obj2": 0.4932865568649459}, {"determining": "( ( CRS - ( Const * MDR ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( ( FirstVNF_Mem_Server + CRS ),ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( ( RMSe + ( Max( RMSe,DS ) - DS ) ) - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5048844049658265}, {"determining": "Min( ( ARS * AMS ) ,( Min( ( ( MDR + AMS ) * PN ) ,RRS ) * Const ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,( ( MUC / ( ( MUR - ( CS * DS ) ) - MUR ) ) + MUM ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( CRS - ( Const * MDR ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( ( FirstVNF_Mem_Server + CRS ),ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( ( RMSe + ( Max( RMSe,DS ) - DS ) ) - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5048844049658265}, {"determining": "( ( ( CRS / MDR ) + FirstVNF_CPU ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( MUC - ( MUC - MUR ) ) )", "obj1": 0.06463878326996197, "obj2": 0.7681281783681527}, {"determining": "Max( BR,( ( ARS + Const ) + Const ) )", "choosing": "Max( DS,Min( DS ,MUR ) )", "obj1": 0.7300380228136882, "obj2": 0.19934188151401677}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( ( Max( ( ( ARS + Const ) * Max( FirstVNF_Mem,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ARS + Const ) ) * FirstVNF_CPU_Server ) / Max( Min( ( FirstVNF_Mem * PN ) ,RRS ),FirstVNF_CPU ) ) )", "choosing": "( MUR / Min( ( ( DS / Max( ( MUM / Min( DS ,MUR ) ),Min( DS ,MUR ) ) ) * DS ) ,MUR ) )", "obj1": 0.060836501901140684, "obj2": 0.7690085473890016}, {"determining": "( ( BR / Const ) / FirstVNF_Mem_Server )", "choosing": "( Min( MUM ,RRSe ) / ( ( Min( MUM ,RRSe ) / ( ( MLU / DS ) * ( MUC * MLU ) ) ) * ( MUC * MLU ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7639386854507793}, {"determining": "( CRS + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( CS ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( Max( ( Min( ARS ,MDR ) + ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ),AMS ),( ARS + Const ) )", "choosing": "Max( ( Min( DS ,MUR ) - CS ),Min( DS ,MUR ) )", "obj1": 0.7300380228136882, "obj2": 0.19934188151401677}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( MRS,( ACS + ARS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( ( RCSe - MUR ) / Min( ( ( DS / RRSe ) * DS ) ,MUR ) ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( FirstVNF_Mem_Server / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( RRSe * MLU ),( DS / MUR ) ) - ( DS + Min( MUM ,DS ) ) ) / DS ) + ( MUC - MUR ) )", "obj1": 0.07034220532319392, "obj2": 0.763702316695491}, {"determining": "( BR - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( Min( RMSe ,Min( RCSe ,CS ) ) / ( ( MLU + RMSe ) * ( ( Max( CS,DS ) - MUM ) - RCSe ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001680082196040208}, {"determining": "( ( Const * Const ) / ( BR - PN ) )", "choosing": "( ( MUM - MLU ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / RRS ) ) / ( BR - PN ) )", "choosing": "( RMSe + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( ( Min( RRS ,RRS ) - ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,DDR ) ) ) * FirstVNF_CPU ) / Max( AMS,Max( MRS,( DDR - Min( PN ,( PN + ( ( CRS / MDR ) * ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( DS / Max( ( RCSe / Min( RCSe ,RMSe ) ),RMSe ) ) - ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) )", "choosing": "( ( MUM * RCSe ) + ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Max( MUR,( MLU / RCSe ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,ACS ) ,( ( RRS - FirstVNF_CPU ) * ( ACS - Max( FirstVNF_RAM,RRS ) ) ) )", "choosing": "Min( ( RRSe - ( ( DS / MLU ) / Min( Max( RCSe,MLU ) ,( Max( RRSe,MUR ) * ( ( ( RMSe - RCSe ) + Min( MLU ,RCSe ) ) + Max( RCSe,RCSe ) ) ) ) ) ) ,( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / ( FirstVNF_Mem * CRS ) ) ,DDR ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( Max( MUR,RMSe ),RMSe ) / ( DS / DS ) ) / ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) + ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * BR ) - RRS ) - Max( ( Const + Const ),( ( ( AMS - BR ) / FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( Min( MLU ,( Max( MUR,MUM ) * ( ( CS + CS ) - RCSe ) ) ) + MLU ) / ( RCSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),RRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( RMSe - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( Min( MUC ,CS ) / ( MUM / ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR + ( ( AMS + FirstVNF_Mem ) - Max( FirstVNF_CPU,( Max( MDR,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ,( RRS - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,Min( MUM ,RMSe ) ) - Max( MUM,( RRSe * MUC ) ) ) - CS ) / Min( RRSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) / Max( AMS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Max( RCSe,MUM ) * MUM ) ,RRSe ) / ( CS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "( MUM + ( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - Min( ( MUM + RCSe ) ,( MLU + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) ) )", "choosing": "( RMSe / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( RRS - FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( Max( DS,Min( MUR ,CS ) ) + ( Min( Max( ( CS + MUC ),DS ) ,( RMSe / MLU ) ) - ( MUR * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( DDR * ARS ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),( ( RRSe / RRSe ) - ( ( MUR * MUM ) / MUR ) ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - Max( Min( FirstVNF_CPU ,MDR ),( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Max( FirstVNF_CPU,( RRS * RRS ) ) ) / ( Const - FirstVNF_RAM ) )", "choosing": "( Max( MUR,( MUR / DS ) ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( BR / Min( ARS ,MDR ) ) + ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Max( RCSe,MUR ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) ) + ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( ( CS / ( MUM + RMSe ) ) + ( RRSe - MLU ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) - ( ACS / AMS ) ) - ( ( ARS + FirstVNF_RAM ) / ( AMS + FirstVNF_CPU_Server ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( RMSe * ( ( MUR / ( MLU - RRSe ) ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - ( ( MUR / ( MLU - RRSe ) ) * ( ( CS / MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,RRS ) + ( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Max( MUM,DS ) / RCSe ) / ( Min( MLU ,MUC ) * Max( RMSe,RRSe ) ) ) - Max( RMSe,( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / CRS ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MUR,RRSe ) / MUC ) / RMSe ),( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / PN ) ) / FirstVNF_Mem_Server )", "choosing": "( Min( MUM ,RRSe ) / ( ( MUM * RRSe ) * ( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - ( FirstVNF_Mem_Server / Max( ( Min( ARS ,MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ),AMS ) ) ) / Const ) / ( ARS - ( FirstVNF_Mem_Server / PN ) ) )", "choosing": "( ( ( MLU / Min( DS ,MUR ) ) * ( MUC * MLU ) ) / ( ( MLU / DS ) * ( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,Min( ACS ,MDR ) ) ,MDR )", "choosing": "( Min( RRSe ,( MUR - ( DS + RRSe ) ) ) + ( MUM / MUM ) )", "obj1": 0.057034220532319393, "obj2": 0.7710911321163512}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) * ( ( ( ACS + FirstVNF_CPU_Server ) - ( MDR * ( ( CRS / MDR ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - Min( ACS ,MDR ) ) )", "choosing": "( Max( DS,RRSe ) - ( ( CS * ( RCSe / DS ) ) - MUM ) )", "obj1": 0.5342205323193916, "obj2": 0.3227332171540648}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / ( ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) - MRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( MUR / Max( RRSe,MLU ) ) ) ),( CS + MUC ) ) )", "obj1": 0.7908745247148289, "obj2": 0.0943664532086176}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / RRS ) ) - Max( ACS,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) ) ) ,Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) * ( ( MUR / MUR ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 0.7813688212927756, "obj2": 0.15380233554509973}, {"determining": "Max( ( RRS - MRS ),( ( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6196167509925867}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) - ( RRS * FirstVNF_Mem_Server ) ) + ( Max( ACS,( ( ( CRS / MDR ) + ( FirstVNF_CPU - CRS ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RRSe * MLU ),( DS / MUR ) ) - ( DS + Min( MUM ,( ( RCSe / DS ) + ( MUC - MUR ) ) ) ) )", "obj1": 0.09885931558935361, "obj2": 0.7004545638129879}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( ( ( MLU / DS ) * ( Min( MUM ,RRSe ) * MLU ) ),MLU ) ) )", "obj1": 0.8935361216730038, "obj2": 0.09020497932315981}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( Max( DS,RRSe ) - ( RCSe * MLU ) )", "obj1": 0.20532319391634982, "obj2": 0.6163455720359576}, {"determining": "( ( Max( PN,MDR ) + Min( FirstVNF_CPU_Server ,PN ) ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * Min( RMSe ,MLU ) ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "Max( Max( FirstVNF_Mem,Min( FirstVNF_RAM ,FirstVNF_Mem ) ),FirstVNF_Mem )", "choosing": "Max( DS,Min( DS ,MUR ) )", "obj1": 0.7357414448669202, "obj2": 0.19448263749560327}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( ( ( ARS * ARS ) / ( FirstVNF_CPU - CRS ) ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( ( ( CS * MUM ) / ( RRSe - MUC ) ) ,RCSe ) ) )", "obj1": 0.21292775665399238, "obj2": 0.5537018699335596}, {"determining": "Min( Max( ACS,Min( Min( Max( ACS,Max( Min( FirstVNF_Mem ,PN ),RRS ) ) ,Min( AMS ,FirstVNF_Mem ) ) ,( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) ) ) ) ,( PN + MDR ) )", "choosing": "Min( ( ( ( ( MLU * RCSe ) / ( ( DS * MLU ) / MUC ) ) + RMSe ) * ( ( RRSe - ( Max( MUM,MUC ) - RMSe ) ) - RCSe ) ) ,( DS - CS ) )", "obj1": 0.43346007604562736, "obj2": 0.3843083604545076}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( Min( Min( FirstVNF_Mem ,MRS ) ,( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_Mem_Server / BR ) ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Min( Max( Max( Min( Max( MUM,MUR ) ,( MLU * MUR ) ),( Min( RCSe ,RMSe ) / Min( MUR ,RCSe ) ) ),( MLU + RCSe ) ) ,( ( RCSe - RRSe ) + CS ) ) )", "obj1": 0.344106463878327, "obj2": 0.457296543192426}, {"determining": "Min( Max( PN,AMS ) ,( Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / PN ) ) ) ) - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / PN ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( DS - RCSe ) ) ,( ( DS - RCSe ) / Max( ( ( MLU / DS ) * ( MUC * MLU ) ),MLU ) ) )", "obj1": 0.17110266159695817, "obj2": 0.6194053851880721}, {"determining": "( ( ( ( AMS + FirstVNF_Mem ) - Max( FirstVNF_CPU,( Max( MDR,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) - FirstVNF_CPU ) * Max( ( PN - RRS ),FirstVNF_CPU ) )", "choosing": "( ( MUR + Max( MUC,Min( MUM ,RMSe ) ) ) + MUC )", "obj1": 0.596958174904943, "obj2": 0.3201467948861282}, {"determining": "Min( Max( Max( ACS,Max( FirstVNF_CPU_Server,MDR ) ),Max( FirstVNF_CPU_Server,MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RRSe ) * ( RRSe - RCSe ) ) ,( Min( ( ( MLU + RRSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) ) - CS ) )", "obj1": 0.3193916349809886, "obj2": 0.46347582532526393}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,( PN + MDR ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( ( RRSe - ( Max( MUM,MUC ) - RMSe ) ) - RCSe ) ) ,( DS - CS ) )", "obj1": 0.3650190114068441, "obj2": 0.4258268918696823}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( BR / Const ) - ( ( PN + ARS ) - FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,( Min( ( Max( RCSe,MUM ) * MUM ) ,RRSe ) / ( CS - DS ) ) ) / ( MUM / MLU ) )", "obj1": 0.9847908745247148, "obj2": 0.010060137766051028}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU_Server,MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RRSe ) * Min( ( ( MLU + RRSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) ) ) ,( DS - CS ) )", "obj1": 0.3060836501901141, "obj2": 0.48263433649504833}, {"determining": "Min( ( Max( ( ( BR / FirstVNF_CPU ) / PN ),( FirstVNF_Mem_Server - CRS ) ) / CRS ) ,Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MLU + RRSe ) * ( RRSe - ( Max( Max( RCSe,( Min( RMSe ,CS ) * ( RRSe - CS ) ) ),DS ) - ( RRSe + MUM ) ) ) ) ,( DS - ( DS / RCSe ) ) )", "obj1": 0.3973384030418251, "obj2": 0.39901496369708417}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "Max( ( ( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) ),( ARS * CRS ) )", "choosing": "( ( Max( ( MUR + RCSe ),( CS - MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5256637629210941}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( MUM,Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6825095057034221, "obj2": 0.23258123014406068}, {"determining": "( ( BR / Const ) / FirstVNF_Mem_Server )", "choosing": "( ( ( MLU / DS ) * ( MUC * MLU ) ) / ( ( Min( MUM ,RRSe ) / ( ( MLU / DS ) * ( MUC * MLU ) ) ) * ( MUC * MLU ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7527266833776682}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - CS ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.23574144486692014, "obj2": 0.5440826342820119}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - ( CS + MUC ) ) / Max( RRSe,MLU ) ) )", "obj1": 0.903041825095057, "obj2": 0.06754515519933141}, {"determining": "( ( BR / Const ) / ( ARS - ( FirstVNF_Mem_Server / ( ( BR / Const ) / ( ARS - ( FirstVNF_Mem_Server / PN ) ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) / ( ( MLU / DS ) * ( MUC * MLU ) ) )", "obj1": 0.6977186311787072, "obj2": 0.2164737295815232}, {"determining": "( Min( ( ARS / PN ) ,DDR ) + ( FirstVNF_RAM - ARS ) )", "choosing": "( ( RMSe + ( MUM + DS ) ) - Max( CS,MUC ) )", "obj1": 0.629277566539924, "obj2": 0.3026447763958552}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( BR ,Max( FirstVNF_CPU_Server,RRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( MLU - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( ( ( Min( MUC ,Min( MUM ,Min( DS ,Max( DS,RCSe ) ) ) ) * MUC ) / ( CS * CS ) ) + RRSe ) )", "obj1": 0.967680608365019, "obj2": 0.03173238262673028}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),MRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) / ( Min( MUC ,CS ) / ( MUM / ( MUM + RCSe ) ) ) )", "obj1": 0.9391634980988594, "obj2": 0.0541217562329576}, {"determining": "( ( ( ARS - ( FirstVNF_Mem_Server / PN ) ) / Const ) / ( ARS - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU,MRS ) ) ) )", "choosing": "( ( ( MLU / DS ) * ( MUC * MLU ) ) / ( CS * ( MUC * MLU ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7195436775587958}, {"determining": "Min( Max( ACS,ACS ) ,MDR )", "choosing": "( ( MLU + DS ) + ( MLU + DS ) )", "obj1": 0.7186311787072244, "obj2": 0.20836307262021644}, {"determining": "( ( BR / Const ) / ( ARS - ( ( ARS - ( FirstVNF_Mem_Server / PN ) ) / PN ) ) )", "choosing": "( Min( ( Min( MUM ,RRSe ) / ( ( MLU / DS ) * ( MUC * MLU ) ) ) ,RRSe ) / ( ( MLU / DS ) * ( MUC * MLU ) ) )", "obj1": 0.6387832699619772, "obj2": 0.26217448780775415}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( Min( Min( ( ACS / MRS ) ,Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ,( MDR / Max( CRS,FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( ( MLU * Min( RCSe ,RRSe ) ) * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07984790874524715, "obj2": 0.7096701821965884}, {"determining": "Max( Min( FirstVNF_RAM ,PN ),( ( FirstVNF_CPU / ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + Const ) * BR ) ) - AMS ) ) * ( ARS / BR ) ) )", "choosing": "( DS - Max( ( MUM / DS ),Min( DS ,MUR ) ) )", "obj1": 0.6539923954372624, "obj2": 0.26160998238399497}, {"determining": "( ( ( MRS * Max( BR,( ARS + Const ) ) ) + ( CRS + CRS ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Max( ( MLU * MUR ),Min( DS ,MUR ) ) ) )", "obj1": 0.2889733840304182, "obj2": 0.4879778796295974}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) * ( ( ( ACS + FirstVNF_CPU_Server ) - ( CRS / MDR ) ) - Min( ACS ,MDR ) ) )", "choosing": "( Max( DS,RRSe ) - ( ( ( RCSe / DS ) * MLU ) - MUM ) )", "obj1": 0.6159695817490495, "obj2": 0.3113440609625451}, {"determining": "Min( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( AMS + MDR ) ) + ( RRS - FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( Max( Max( DS,MUR ),( RMSe * RRSe ) ) - ( ( RRSe + MUC ) / Max( MUM,MUR ) ) ) + Min( ( ( RRSe + RRSe ) / Max( MUR,RMSe ) ) ,( ( MLU - MUC ) / ( RRSe - RRSe ) ) ) ),DS ) ,( RMSe / ( Max( DS,Min( MUR ,CS ) ) + ( MUC - ( MUR * MUR ) ) ) ) )", "obj1": 0.9011406844106464, "obj2": 0.08386776327675734}, {"determining": "Max( ( Const * Max( FirstVNF_Mem,( FirstVNF_CPU / ( ( ( Const + FirstVNF_CPU_Server ) - ( MDR * BR ) ) - AMS ) ) ) ),( ARS + Const ) )", "choosing": "Max( ( DS / ( RRSe / RMSe ) ),Min( DS ,MUR ) )", "obj1": 0.6958174904942965, "obj2": 0.23187328291519016}, {"determining": "Max( Const,( ARS * CRS ) )", "choosing": "( ( Max( ( ( MUR + ( MUM * ( RCSe * RRSe ) ) ) * ( RMSe - MLU ) ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5466022781434292}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),RRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( RMSe - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( Min( MUC ,CS ) / ( MUM / ( MUM + RCSe ) ) ) )", "obj1": 0.9562737642585551, "obj2": 0.045387088689575604}, {"determining": "Min( ( ARS * AMS ) ,( Min( ( ( MDR + AMS ) * PN ) ,RRS ) * Const ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,( ( MUC / ( ( MUR - ( CS * DS ) ) - MUR ) ) + MUM ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( Max( BR,( Min( ( ( MDR + ( FirstVNF_RAM - MRS ) ) * PN ) ,FirstVNF_CPU_Server ) + MRS ) ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Min( Max( MUR,CS ) ,MUR ) ,( DS / RRSe ) )", "obj1": 0.6349809885931559, "obj2": 0.28539646826589654}, {"determining": "( ( CRS - PN ) + PN )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + ( MLU * RCSe ) ) )", "obj1": 0.2623574144486692, "obj2": 0.5202037574064782}, {"determining": "( ( BR / Const ) / Min( ( FirstVNF_Mem_Server / PN ) ,( ARS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU / DS ) * ( Min( RMSe ,DS ) * MLU ) ) / ( ( MLU / DS ) * ( MUC * MLU ) ) )", "obj1": 0.6045627376425855, "obj2": 0.31301034084936113}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / ( Min( Min( FirstVNF_Mem ,MRS ) ,( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_Mem_Server / BR ) ) ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,Max( RRS,( FirstVNF_CPU * Const ) ) ) ) )", "choosing": "( ( ( RRSe + MUC ) / ( ( MUR + Max( CS,MUR ) ) - DS ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( Min( Max( MUM,MUR ) ,( MLU * MUR ) ) ,MUR ) ) ) )", "obj1": 0.9619771863117871, "obj2": 0.0328771193022052}, {"determining": "Max( ( ARS / PN ),MDR )", "choosing": "( ( ( RCSe / DS ) + ( MUC - MUR ) ) / ( MUM + DS ) )", "obj1": 0.06653992395437262, "obj2": 0.758487014352332}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( RRSe - RCSe ) ) ,( DS - CS ) )", "obj1": 0.3821292775665399, "obj2": 0.42124908133015093}, {"determining": "Max( ( FirstVNF_CPU - AMS ),( ARS * Const ) )", "choosing": "( ( RRSe / RRSe ) - ( ( MUR * Max( CS,DS ) ) / MUR ) )", "obj1": 0.279467680608365, "obj2": 0.4951597441792029}, {"determining": "Min( FirstVNF_CPU ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( RRSe ,( DS - CS ) )", "obj1": 0.3840304182509506, "obj2": 0.41422784486335634}, {"determining": "Min( Max( ( PN - ( RRS - FirstVNF_CPU ) ),ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) ,( DS - CS ) )", "obj1": 0.3669201520912547, "obj2": 0.421703482885927}, {"determining": "( ( Min( Max( MRS,( ACS + ARS ) ) ,( ( PN * FirstVNF_CPU_Server ) / Max( Min( ( FirstVNF_Mem * PN ) ,RRS ),FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Min( Max( MUR,CS ) ,MUR ) ,( ( ( DS / RRSe ) * DS ) * MUR ) )", "obj1": 0.7243346007604563, "obj2": 0.20229658437550113}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - Min( ( ( ( RRS + BR ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) / ( FirstVNF_CPU * ( MDR - BR ) ) ) ,AMS ) ) )", "choosing": "( ( MUM * Max( MUC,CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 0.9942965779467681, "obj2": 0.0036184425623965104}, {"determining": "( ( CRS - PN ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( FirstVNF_CPU,MRS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + RRSe ) )", "obj1": 0.26996197718631176, "obj2": 0.5108190618622689}, {"determining": "( ( CRS - PN ) + ( Max( FirstVNF_CPU,MRS ) / Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( MUM - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2661596958174905, "obj2": 0.5164872373947567}, {"determining": "( Max( ( PN - RRS ),ACS ) * ( PN - RRS ) )", "choosing": "( Min( ( RRSe - MUM ) ,( DS - CS ) ) + Min( ( RRSe - MUC ) ,( DS - CS ) ) )", "obj1": 0.38783269961977185, "obj2": 0.4072701330224359}, {"determining": "( ( ( CRS / MDR ) + FirstVNF_CPU ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + ( MUC - ( MUC - MUR ) ) )", "obj1": 0.06463878326996197, "obj2": 0.7681281783681527}, {"determining": "( Max( BR,( ARS + Const ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + ( MLU * MUR ) ) )", "obj1": 0.2813688212927757, "obj2": 0.4932865568649459}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,( ( AMS - BR ) / FirstVNF_Mem ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( RMSe - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( ( ( ( DS / Max( MLU,MUM ) ) * MUC ) / ( CS * CS ) ) + RRSe ) )", "obj1": 0.9562737642585551, "obj2": 0.045387088689575604}, {"determining": "( ( CRS - ( Const * MDR ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( ( FirstVNF_Mem_Server + CRS ),ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( ( RMSe + ( Max( RMSe,DS ) - DS ) ) - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5048844049658265}, {"determining": "Min( Max( ACS,BR ) ,( PN + MDR ) )", "choosing": "Min( ( ( MLU + RMSe ) * ( ( ( RRSe + ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) ) - ( Max( MUM,MUC ) - RMSe ) ) - RCSe ) ) ,( DS - CS ) )", "obj1": 0.3935361216730038, "obj2": 0.406511405259288}, {"determining": "( ( CRS - ( Const * MDR ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / Min( Max( ( FirstVNF_Mem_Server + CRS ),ARS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Max( CS,MLU ) + Min( RCSe ,RRSe ) ),( ( RCSe - ( ( RMSe + ( Max( RMSe,DS ) - DS ) ) - RMSe ) ) + Min( MLU ,MUC ) ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5048844049658265}, {"determining": "Min( Max( ACS,Max( FirstVNF_CPU_Server,RRS ) ) ,MDR )", "choosing": "Min( ( MLU - ( MUR * ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) * RRSe ) ) ) ,( DS - CS ) )", "obj1": 0.39543726235741444, "obj2": 0.4021854213760669}, {"determining": "Max( BR,( ( ARS + Const ) + Const ) )", "choosing": "Max( DS,Min( DS ,MUR ) )", "obj1": 0.7300380228136882, "obj2": 0.19934188151401677}, {"determining": "Min( Max( MRS,( ACS + ARS ) ) ,( ( Max( ( ( ARS + Const ) * Max( FirstVNF_Mem,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ARS + Const ) ) * FirstVNF_CPU_Server ) / Max( Min( ( FirstVNF_Mem * PN ) ,RRS ),FirstVNF_CPU ) ) )", "choosing": "( MUR / Min( ( ( DS / Max( ( MUM / Min( DS ,MUR ) ),Min( DS ,MUR ) ) ) * DS ) ,MUR ) )", "obj1": 0.060836501901140684, "obj2": 0.7690085473890016}, {"determining": "( CRS + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( CS ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( Max( ( Min( ARS ,MDR ) + ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ),AMS ),( ARS + Const ) )", "choosing": "Max( ( Min( DS ,MUR ) - CS ),Min( DS ,MUR ) )", "obj1": 0.7300380228136882, "obj2": 0.19934188151401677}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( MRS,( ACS + ARS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( ( RCSe - MUR ) / Min( ( ( DS / RRSe ) * DS ) ,MUR ) ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( BR - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( Min( RMSe ,Min( RCSe ,CS ) ) / ( ( MLU + RMSe ) * ( ( Max( CS,DS ) - MUM ) - RCSe ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001680082196040208}, {"determining": "( ( Const * Const ) / ( BR - PN ) )", "choosing": "( ( MUM - MLU ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / RRS ) ) / ( BR - PN ) )", "choosing": "( RMSe + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( CRS - PN ) )", "choosing": "( ( MUR - Max( CS,MLU ) ) / Min( RMSe ,Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,RRS ) - ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,DDR ) ) ) * FirstVNF_CPU ) / Max( AMS,Max( MRS,( DDR - Min( PN ,( PN + ( ( CRS / MDR ) * ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( DS / Max( ( RCSe / Min( RCSe ,RMSe ) ),RMSe ) ) - ( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( RRS - PN ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( ( ( RMSe / MUR ) + CS ) / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) )", "choosing": "( ( MUM * RCSe ) + ( Max( ( RCSe + DS ),MUC ) - Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Max( MUR,( MLU / RCSe ) ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,ACS ) ,( ( RRS - FirstVNF_CPU ) * ( ACS - Max( FirstVNF_RAM,RRS ) ) ) )", "choosing": "Min( ( RRSe - ( ( DS / MLU ) / Min( Max( RCSe,MLU ) ,( Max( RRSe,MUR ) * ( ( ( RMSe - RCSe ) + Min( MLU ,RCSe ) ) + Max( RCSe,RCSe ) ) ) ) ) ) ,( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / ( FirstVNF_Mem * CRS ) ) ,DDR ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( Max( MUR,RMSe ),RMSe ) / ( DS / DS ) ) / ( Min( ( ( Min( CS ,MUC ) * ( RMSe - MLU ) ) + Max( RCSe,CS ) ) ,( MUR + CS ) ) + ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * BR ) - RRS ) - Max( ( Const + Const ),( ( ( AMS - BR ) / FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( Min( MLU ,( Max( MUR,MUM ) * ( ( CS + CS ) - RCSe ) ) ) + MLU ) / ( RCSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - ( ( FirstVNF_RAM_Server + ( Max( ( RRS / FirstVNF_Mem ),Min( CRS ,Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),RRS ) ) ) - DDR ) ) / ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( RMSe - ( ( ( ( RRSe + ( MLU / RCSe ) ) * RRSe ) / Max( MUR,RMSe ) ) / Min( Max( MUM,Min( ( CS + MLU ) ,RMSe ) ) ,RCSe ) ) ) / ( Min( MUC ,CS ) / ( MUM / ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR + ( ( AMS + FirstVNF_Mem ) - Max( FirstVNF_CPU,( Max( MDR,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ,( RRS - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,Min( MUM ,RMSe ) ) - Max( MUM,( RRSe * MUC ) ) ) - CS ) / Min( RRSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) / Max( AMS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Max( RCSe,MUM ) * MUM ) ,RRSe ) / ( CS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "( MUM + ( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - Min( ( MUM + RCSe ) ,( MLU + MUM ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) ) )", "choosing": "( RMSe / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( RRS - FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( Max( DS,Min( MUR ,CS ) ) + ( Min( Max( ( CS + MUC ),DS ) ,( RMSe / MLU ) ) - ( MUR * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( DDR * ARS ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),( ( RRSe / RRSe ) - ( ( MUR * MUM ) / MUR ) ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - MRS ) ) + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - Max( Min( FirstVNF_CPU ,MDR ),( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Min( MUM ,Max( CS,MLU ) ),Min( Max( RRSe,DS ) ,( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}]}