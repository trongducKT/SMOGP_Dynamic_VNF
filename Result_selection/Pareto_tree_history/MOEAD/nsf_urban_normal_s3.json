{"1": [{"determining": "Max( ( ( FirstVNF_Mem_Server - ( RRS * Min( ACS ,Max( ( Min( ARS ,ARS ) / FirstVNF_CPU ),( MRS + RRS ) ) ) ) ) / ARS ),( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * ( Min( RMSe ,RMSe ) / ( MUC / ( RCSe - Min( ( ( RRSe * RMSe ) / ( CS * MUR ) ) ,( ( RRSe - CS ) - ( MLU - RRSe ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.2571428571428571, "obj2": 0.7580306241445819}, {"determining": "Max( ( AMS * DDR ),( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS * MUR ) + ( RMSe / MUR ) )", "obj1": 0.29591836734693877, "obj2": 0.7181741320914827}, {"determining": "( ( ( FirstVNF_CPU * ( FirstVNF_Mem / Min( ACS ,Max( FirstVNF_Mem_Server,RRS ) ) ) ) / Max( Max( DDR,CRS ),RRS ) ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( RMSe / MUR ) ) / ( Min( ( RCSe / ( Max( MUC,DS ) / RCSe ) ) ,( MUR - RRSe ) ) * ( RRSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( Min( Const ,ARS ) + MDR ) / ( Min( Const ,ARS ) * ACS ) ) / FirstVNF_RAM ),BR ) + AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,MUR ) / Min( MUM ,MUM ) ) - MUC ) )", "obj1": 0.2612244897959184, "obj2": 0.731483621792225}, {"determining": "( Min( ( Const + CRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "Min( Min( CS ,MUC ) ,( RMSe / MLU ) )", "obj1": 0.3469387755102041, "obj2": 0.6476358777271467}, {"determining": "Max( ( ACS * RRS ),( BR - CRS ) )", "choosing": "( Max( DS,CS ) * ( RMSe - DS ) )", "obj1": 0.29591836734693877, "obj2": 0.739299325639368}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.4122448979591837, "obj2": 0.5769961549327478}, {"determining": "( ( MDR + FirstVNF_RAM ) + ( FirstVNF_CPU_Server * ACS ) )", "choosing": "Min( ( MLU * MUM ) ,Max( RMSe,DS ) )", "obj1": 0.29183673469387755, "obj2": 0.7161425435697549}, {"determining": "( Max( FirstVNF_CPU_Server,ARS ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Min( ( CS * RCSe ) ,( MLU - RCSe ) )", "obj1": 0.27755102040816326, "obj2": 0.7484060919789054}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe - RRSe ) ,( CS + RRSe ) )", "obj1": 0.28775510204081634, "obj2": 0.7164061859096151}, {"determining": "( Max( FirstVNF_CPU_Server,DDR ) * ( FirstVNF_Mem_Server * MRS ) )", "choosing": "Min( ( RRSe * RMSe ) ,( MUC - MUR ) )", "obj1": 0.27755102040816326, "obj2": 0.7558588143617982}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.2857142857142857, "obj2": 0.7138157751293404}, {"determining": "( ( RRS + FirstVNF_Mem ) + Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + RMSe ) * ( RCSe * MLU ) )", "obj1": 0.3224489795918367, "obj2": 0.6812060240418226}, {"determining": "( ( ACS * AMS ) + ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,MUR ) - ( MUC - RMSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6703306407070746}, {"determining": "( ( FirstVNF_CPU_Server - AMS ) - ( RRS + ( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( ( ( MUR / RMSe ) - ( CS - ( MUR - MUC ) ) ) - ( MUC * ( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( ACS - ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) ) ) / DDR ) + Const ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),( BR * MDR ) ) )", "choosing": "Max( ( CS * Max( ( Max( MUC,DS ) / DS ),CS ) ),( ( Min( ( MUR / Max( Max( MUR,CS ),( ( MUC / CS ) - Max( CS,MLU ) ) ) ) ,RRSe ) / MUR ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "Min( ( MUC - MUR ) ,Max( RMSe,RCSe ) )", "obj1": 0.29183673469387755, "obj2": 0.7324375772307773}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS / FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU - RMSe ),( RCSe * CS ) )", "obj1": 0.2979591836734694, "obj2": 0.711381391117959}, {"determining": "( ( ACS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - RRS ) )", "choosing": "( ( CS * MUM ) + ( MLU * RCSe ) )", "obj1": 0.35306122448979593, "obj2": 0.6513815899487768}, {"determining": "( Min( MRS ,CRS ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RCSe / MUM ),( MLU * MLU ) )", "obj1": 0.27755102040816326, "obj2": 0.758287326415162}, {"determining": "( Min( ( ACS * FirstVNF_CPU ) ,( Min( FirstVNF_RAM_Server ,MDR ) - CRS ) ) - ( ( MRS - ( DDR - BR ) ) - ( ACS / MDR ) ) )", "choosing": "Min( Max( MUR,( MUM + DS ) ) ,Min( ( ( ( ( ( ( MLU + RRSe ) - CS ) / RMSe ) - ( ( ( RMSe + RCSe ) + MLU ) * ( Max( MUR,MUR ) / MUR ) ) ) - MUR ) / RCSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - CRS ) / ( AMS * FirstVNF_Mem ) )", "choosing": "Max( ( MUC + RRSe ),( Min( MLU ,MLU ) / MUM ) )", "obj1": 0.32040816326530613, "obj2": 0.679507858163337}, {"determining": "( Max( DDR,PN ) / ( MRS + PN ) )", "choosing": "( Min( CS ,MUC ) * ( MUM / MUC ) )", "obj1": 0.39387755102040817, "obj2": 0.6179375959782993}, {"determining": "( Max( FirstVNF_CPU,MRS ) - ( MRS * MDR ) )", "choosing": "( Max( RCSe,DS ) * ( MUM - RMSe ) )", "obj1": 0.23673469387755103, "obj2": 0.7780149375163854}, {"determining": "( Min( MDR ,MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( ( DS / DS ) ,( CS / RRSe ) )", "obj1": 0.24897959183673468, "obj2": 0.7726994872629743}, {"determining": "( ( DDR * BR ) * ( BR / AMS ) )", "choosing": "( Min( CS ,RCSe ) * ( MLU - DS ) )", "obj1": 0.2755102040816326, "obj2": 0.7583028028154429}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_Mem / ARS ) )", "choosing": "( ( MUR / RMSe ) * ( MLU * MUC ) )", "obj1": 0.3081632653061224, "obj2": 0.7197953023091256}, {"determining": "( ( Const - MRS ) - Min( MDR ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( MUR - MUM ) )", "obj1": 0.2530612244897959, "obj2": 0.7581572500101221}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) - ( RRS * FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,RMSe ) ,( MUC - RRSe ) )", "obj1": 0.2857142857142857, "obj2": 0.7320269784086555}, {"determining": "( Min( DDR ,BR ) * Min( DDR ,ARS ) )", "choosing": "Min( Min( MLU ,RMSe ) ,Max( RCSe,RCSe ) )", "obj1": 0.32448979591836735, "obj2": 0.7087902890657376}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) * ( DDR / MDR ) )", "choosing": "Max( ( RRSe / RCSe ),( MUR + RCSe ) )", "obj1": 0.363265306122449, "obj2": 0.6726169061095127}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) * Max( ARS,BR ) )", "choosing": "( ( RCSe / RCSe ) + ( RMSe + MLU ) )", "obj1": 0.4122448979591837, "obj2": 0.583143195062048}, {"determining": "( Min( BR ,RRS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "Min( ( CS / RRSe ) ,( MLU / MUM ) )", "obj1": 0.24489795918367346, "obj2": 0.7846500252699795}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) + ( CRS + FirstVNF_CPU ) )", "choosing": "( Max( MUM,MLU ) - ( RMSe - DS ) )", "obj1": 0.27755102040816326, "obj2": 0.7497075534912309}, {"determining": "Max( ( Min( MRS ,MRS ) * FirstVNF_CPU ),Min( FirstVNF_RAM ,( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,Min( RMSe ,MUM ) ) - Max( ( RCSe * RMSe ),( MLU + RRSe ) ) )", "obj1": 0.23265306122448978, "obj2": 0.7639669457164687}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) * Min( DDR ,MRS ) ) * ( Max( RRS,BR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUR ) * ( DS - RCSe ) ) * ( ( MLU + CS ) + ( RRSe / RMSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7609788562093004}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( MUM + RRSe ) ) + ( ( MUC + Min( ( MUC - MLU ) ,RRSe ) ) + DS ) )", "obj1": 0.35306122448979593, "obj2": 0.6313385806013163}, {"determining": "( ( PN * MDR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * FirstVNF_CPU ) )", "choosing": "( ( ( DS * MUM ) + ( RMSe - RRSe ) ) + ( Max( RMSe,DS ) - ( MUC + MUR ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7334519917658044}, {"determining": "Max( ( ARS / DDR ),( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( ( RCSe / RRSe ) * Min( RCSe ,RRSe ) ) * Min( Max( MLU,DS ) ,Min( MUR ,RRSe ) ) )", "obj1": 0.35918367346938773, "obj2": 0.6602120559048881}, {"determining": "( ( Max( AMS,FirstVNF_Mem ) / ( Const - MDR ) ) * ( ( BR - Const ) + ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MUC ) * Min( MUM ,CS ) ) / ( ( CS - RMSe ) + Max( DS,RCSe ) ) )", "obj1": 0.826530612244898, "obj2": 0.19541268082783428}, {"determining": "( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) )", "choosing": "( ( MLU + ( RCSe + MUR ) ) * ( DS * MUC ) )", "obj1": 0.41836734693877553, "obj2": 0.5762777385606136}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe + CS ) - MUM ) + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.29591836734693877, "obj2": 0.7413707417456212}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( ( Const - ( ARS - AMS ) ),CRS ) ,PN ) )", "choosing": "( ( ( ( MUM / DS ) * ( RRSe - ( RCSe * MLU ) ) ) * MUC ) * Min( Max( RCSe,RMSe ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( ( FirstVNF_Mem_Server / BR ) - ( Max( ( DDR + ( ( ARS - ACS ) / AMS ) ),FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RCSe / CS ) - ( ( Min( Min( RRSe ,( Min( MUR ,CS ) - RRSe ) ) ,Max( RRSe,RRSe ) ) / ( ( MUR * MUC ) / ( ( ( RCSe - MUR ) + ( RMSe + CS ) ) + MUM ) ) ) / MLU ) ),Min( Min( MUR ,RCSe ) ,( Min( DS ,Max( CS,MUM ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS + ARS ) ,Max( MDR,MDR ) ) ,( ( Const / AMS ) * ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( RMSe / RCSe ) ) * Min( RMSe ,( RMSe / CS ) ) )", "obj1": 0.3653061224489796, "obj2": 0.6567832197829322}, {"determining": "( ( Min( CRS ,ACS ) - FirstVNF_RAM_Server ) / ( DDR + BR ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,Min( MUR ,( RMSe + ( RMSe - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + RRS ) * Min( ( Const / FirstVNF_Mem_Server ) ,Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS + RCSe ) * ( CS - ( CS * RCSe ) ) )", "obj1": 0.32448979591836735, "obj2": 0.743484265102712}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( ( ( FirstVNF_RAM * DDR ) + ( ACS * FirstVNF_RAM_Server ) ) / ( ( DDR + CRS ) / ( FirstVNF_CPU_Server - DDR ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( ( RCSe + DS ) / ( MUM * MUR ) ) )", "obj1": 0.3346938775510204, "obj2": 0.6813873490618453}, {"determining": "( ( ( ACS + ARS ) / ( BR / ARS ) ) * ( Min( PN ,FirstVNF_RAM ) + Min( MDR ,Const ) ) )", "choosing": "Min( ( ( CS / DS ) + Max( RCSe,CS ) ) ,( ( RCSe - MUM ) + Max( MUM,DS ) ) )", "obj1": 0.35918367346938773, "obj2": 0.6681785183191622}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - ( MRS / FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * ( AMS + ACS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) )", "obj1": 0.2979591836734694, "obj2": 0.708856877481066}, {"determining": "( Max( ( FirstVNF_RAM_Server / CRS ),FirstVNF_Mem ) * ( Max( FirstVNF_CPU,FirstVNF_RAM ) + Const ) )", "choosing": "Max( Min( ( MLU + DS ) ,( MUR * MUR ) ),Min( ( RRSe - MLU ) ,( MUM * RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.6062195419492848}, {"determining": "Min( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ,( PN + ( FirstVNF_Mem + DDR ) ) )", "choosing": "Min( Max( Min( RMSe ,MUM ),( MUR - MLU ) ) ,( RCSe / MUC ) )", "obj1": 0.3346938775510204, "obj2": 0.6642770629559295}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( FirstVNF_Mem * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem * PN ) * Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( ( Max( MUR,DS ) - Max( DS,MLU ) ) + Max( ( MUR * RRSe ),( RRSe * DS ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6939638117238858}, {"determining": "( ( ( CRS + FirstVNF_CPU ) + ( FirstVNF_RAM * MDR ) ) - ( ( AMS * FirstVNF_CPU ) + ( ACS + PN ) ) )", "choosing": "Min( Max( ( CS - RCSe ),Max( CS,MUR ) ) ,( ( RCSe + MUC ) * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) ,( MRS / ( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / MRS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem + ARS ) + ARS ) ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * ( ( Max( RCSe,RCSe ) + RMSe ) + MUC ) ) ) * ( Max( MLU,RCSe ) * ( RCSe + RRSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.62928827668898}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.705999793123216}, {"determining": "( ( ( MRS * DDR ) * RRS ) + Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU / PN ) + PN ) ) )", "choosing": "( Max( MLU,Max( MLU,Max( MUM,( ( Max( MUR,Max( MLU,CS ) ) - CS ) - MLU ) ) ) ) - Max( MLU,MUC ) )", "obj1": 0.2612244897959184, "obj2": 0.752506936672358}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,RRS ) )", "choosing": "Max( ( Min( MUM ,( ( MUC - RRSe ) + RRSe ) ) + CS ),( ( MUR * RMSe ) * ( RRSe * CS ) ) )", "obj1": 0.3326530612244898, "obj2": 0.6949930296858058}, {"determining": "( ( ( FirstVNF_RAM + DDR ) - ( FirstVNF_Mem_Server * ARS ) ) * ( ( FirstVNF_Mem + PN ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,MUM ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MLU ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7388626364282068}, {"determining": "Min( ( ( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server - ( Max( AMS,FirstVNF_Mem_Server ) * MRS ) ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe + RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( Min( MUC ,( ( ( RMSe - RRSe ) + ( CS / RCSe ) ) / Min( RRSe ,( DS * MUR ) ) ) ) - ( RMSe / ( RRSe / MUC ) ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7703570906622464}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),Max( ( Const + FirstVNF_Mem ),( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( DS * Min( Max( ( RCSe - MUC ),CS ) ,Max( ( MUM * RCSe ),MUM ) ) ),DS ) ) * Max( MUM,MLU ) ),( ( MUR - ( Min( Max( RMSe,RCSe ) ,RCSe ) / Max( ( ( RMSe * ( MUM - RRSe ) ) + ( Min( MUR ,MUC ) / Min( RMSe ,RCSe ) ) ),Min( MUC ,MLU ) ) ) ) - ( RRSe * MUR ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7344430886675821}, {"determining": "( Max( Min( FirstVNF_Mem ,Max( ( MDR - ( FirstVNF_Mem + AMS ) ),Const ) ),Const ) / ( DDR / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( MLU * MUM ) ) * ( ( MUM - ( ( Min( Min( CS ,Min( MUC ,CS ) ) ,RRSe ) / MUR ) + MUR ) ) + Min( Max( ( Min( CS ,DS ) - MLU ),RRSe ) ,( Min( MUR ,RRSe ) + ( DS / Min( ( CS * ( RCSe - RRSe ) ) ,Max( DS,RMSe ) ) ) ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.7263444519542365}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Min( RRS ,ARS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,MLU ) )", "obj1": 0.3224489795918367, "obj2": 0.6806902894905398}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( RRS * AMS ) ) + ( ( AMS - FirstVNF_Mem_Server ) / Min( BR ,AMS ) ) )", "choosing": "( ( ( RRSe * RRSe ) - ( MUR - RCSe ) ) * ( Min( MUC ,MUR ) / ( MLU + MUM ) ) )", "obj1": 0.31020408163265306, "obj2": 0.7016670689809765}, {"determining": "Min( ( MDR / ( MRS + Const ) ) ,( DDR + FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUC ,DS ) + ( RMSe / CS ) ),( Max( RCSe,DS ) + ( MLU / RCSe ) ) )", "obj1": 0.28775510204081634, "obj2": 0.7075363129037302}, {"determining": "( ( ARS / DDR ) / ( ( RRS - Max( ( ( CRS + AMS ) / ( ARS - RRS ) ),Max( ACS,Min( MRS ,Min( MRS ,ACS ) ) ) ) ) - DDR ) )", "choosing": "( ( Max( Min( MUR ,RMSe ),( MLU * Max( RRSe,( RCSe * ( ( RCSe * RRSe ) / CS ) ) ) ) ) + MUC ) * Max( MLU,Min( MLU ,( MUM / MLU ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7255109018546934}, {"determining": "Min( ( ( ( MRS + CRS ) + ( FirstVNF_RAM_Server / DDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( DDR + FirstVNF_Mem ) ) ) ,( ( Min( RRS ,FirstVNF_Mem ) * ( FirstVNF_Mem_Server + AMS ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( RMSe / DS ) ,( MUR - RCSe ) ) - ( Max( RMSe,MUR ) / ( DS / MUM ) ) ) + ( ( ( MLU + MUR ) - ( DS + MUR ) ) - Min( ( RMSe / RRSe ) ,( RRSe + RMSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.6318773081605965}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + Max( DDR,( Max( ( FirstVNF_Mem_Server / Max( ( MDR / FirstVNF_CPU ),FirstVNF_CPU_Server ) ),BR ) / PN ) ) )", "choosing": "( ( ( Max( MUC,MLU ) / Max( MUM,MUR ) ) / Max( ( ( MUM + RCSe ) * ( RMSe - MUM ) ),( ( ( Min( DS ,MUC ) - Min( RRSe ,RRSe ) ) / Max( MUR,RRSe ) ) - ( DS - ( Min( CS ,( MUM / RMSe ) ) * MUM ) ) ) ) ) - ( MLU / MLU ) )", "obj1": 0.17346938775510204, "obj2": 0.8363640352822592}, {"determining": "( ( AMS - Min( Max( MDR,FirstVNF_Mem_Server ) ,BR ) ) - Min( ( DDR - ( CRS * FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe * ( Max( RRSe,Max( Max( MLU,( RMSe / Max( MUM,DS ) ) ),( MUR + MUC ) ) ) - ( ( MUM + DS ) + Max( MLU,MLU ) ) ) ) ,( ( ( MUM / RCSe ) * ( MLU + CS ) ) + Min( ( RRSe + RMSe ) ,( RCSe - RMSe ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.7123134639628852}, {"determining": "Min( ( ( MRS / ACS ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( CRS ,AMS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU + Const ) ) * ( ARS / ACS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( MUR ,MUC ),( RCSe - DS ) ) / ( Max( MUC,( MLU / MUM ) ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),( Min( RMSe ,( ( MUC * MLU ) + DS ) ) - ( DS * ( RCSe + ( MUC + MUR ) ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.733946253708759}, {"determining": "Min( Max( Max( ( AMS - MDR ),( FirstVNF_CPU_Server * MDR ) ),( ( CRS - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) ,Min( ( ( BR - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,( ( PN / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR * MUM ),Min( CS ,RRSe ) ) * Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) - Min( ( ( RCSe + CS ) + Max( MUC,RMSe ) ) ,( Max( DS,DS ) + ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( ( Const * FirstVNF_Mem ) + MRS ) ) / Max( ARS,ACS ) )", "choosing": "( ( ( Max( DS,MUR ) + Max( RMSe,RMSe ) ) - ( ( RMSe / RMSe ) + ( CS * MUC ) ) ) / ( Min( ( DS / RMSe ) ,( RMSe / MUM ) ) * ( ( MUC / MUR ) - ( RMSe * DS ) ) ) )", "obj1": 0.2979591836734694, "obj2": 0.7088515475177324}, {"determining": "( Min( ( ( MRS / AMS ) + Min( AMS ,CRS ) ) ,( Max( PN,PN ) / ( ACS + DDR ) ) ) / ( Min( ( Const / FirstVNF_RAM ) ,( PN * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,CRS ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * Min( RMSe ,Max( RCSe,MUC ) ) )", "obj1": 0.3469387755102041, "obj2": 0.6698405105354982}, {"determining": "Max( ( CRS / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( Max( ( ( RCSe * RCSe ) * RMSe ),RCSe ) ,( Max( ( CS / RCSe ),( RRSe / RRSe ) ) * MUR ) )", "obj1": 0.33877551020408164, "obj2": 0.6550653286851691}, {"determining": "( ( AMS + CRS ) * ( ARS / AMS ) )", "choosing": "( Min( ( ( MLU / RRSe ) + Min( DS ,MUR ) ) ,Min( ( MUR - MUC ) ,Min( CS ,MLU ) ) ) + ( ( ( RCSe / CS ) + ( MUC + MUC ) ) * ( ( RMSe + RRSe ) + ( MLU + RRSe ) ) ) )", "obj1": 0.3142857142857143, "obj2": 0.6771874355028494}, {"determining": "Max( ( ( Max( Max( ( ACS / DDR ),FirstVNF_RAM_Server ),CRS ) + ( BR * ( CRS / FirstVNF_Mem ) ) ) / FirstVNF_CPU ),Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * PN ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + RMSe ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( CS / MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Max( ( MUC + RCSe ),MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + ( RCSe + ( MUR * RCSe ) ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8453558821653566}, {"determining": "Max( Min( Min( ( BR + ( Min( ( RRS / Max( Const,FirstVNF_Mem_Server ) ) ,MDR ) / MRS ) ) ,DDR ) ,( ( Const + MRS ) + ( FirstVNF_CPU_Server - DDR ) ) ),Min( Min( Min( DDR ,RRS ) ,( FirstVNF_CPU_Server / ARS ) ) ,( ( FirstVNF_RAM * FirstVNF_RAM ) * ( ARS + DDR ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUM ),Min( ( ( RRSe / ( CS + ( MUR - MUR ) ) ) / Min( ( MUR - CS ) ,MUC ) ) ,RRSe ) ) / ( ( RMSe / RRSe ) / Min( MUC ,DS ) ) ) ,Max( ( Min( RCSe ,CS ) - Max( MUR,CS ) ),( ( MUM + MLU ) / ( DS - DS ) ) ) )", "obj1": 0.24081632653061225, "obj2": 0.7720211483662245}, {"determining": "( Min( AMS ,Max( ( MRS * FirstVNF_CPU_Server ),ACS ) ) - ( DDR + ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( RMSe ,MUC ) * ( CS + RCSe ) ),( Min( RCSe ,MLU ) + ( RMSe + MUM ) ) ) + ( ( ( MUM * RRSe ) / ( RMSe - RCSe ) ) + Max( ( MUM / MUC ),( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9040816326530612, "obj2": 0.10708593906179054}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.032707000000884036}, {"determining": "( ( BR * AMS ) + ( Min( AMS ,( MDR * FirstVNF_CPU ) ) / CRS ) )", "choosing": "( ( RRSe * MUC ) - Min( ( MUM / ( MLU / MLU ) ) ,MUC ) )", "obj1": 0.2897959183673469, "obj2": 0.7140865368053174}, {"determining": "Max( ( ( ( ARS * CRS ) - BR ) * Min( ( BR / PN ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * FirstVNF_RAM ),Min( RRS ,( DDR + FirstVNF_Mem ) ) ) - ( Min( RRS ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Max( RMSe,( ( Max( ( Max( MUR,( MUR / MUC ) ) / MLU ),MLU ) / RRSe ) - MUR ) ) ,Max( ( ( RMSe / CS ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.7934650455047144}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( RMSe + RCSe ) )", "obj1": 0.4204081632653061, "obj2": 0.5837398210822248}, {"determining": "Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.45102040816326533, "obj2": 0.5314139222303402}, {"determining": "Max( ( CRS - DDR ),( CRS - RRS ) )", "choosing": "Max( Max( ( Max( DS,RRSe ) + ( MUC + MUM ) ),( ( RRSe - MUM ) * ( DS / CS ) ) ),( Max( Max( RCSe,CS ),( CS - MUR ) ) - ( Max( CS,MUM ) + ( MUM - RRSe ) ) ) )", "obj1": 0.40408163265306124, "obj2": 0.6366478883106627}, {"determining": "Min( ( FirstVNF_CPU - MDR ) ,( FirstVNF_RAM * ACS ) )", "choosing": "Max( ( ( ( RCSe * MUC ) + Max( RRSe,CS ) ) - ( Min( RMSe ,MUC ) + ( CS - DS ) ) ),Min( ( Max( MLU,MLU ) + ( CS - RRSe ) ) ,Max( ( DS * DS ),( CS - MLU ) ) ) )", "obj1": 0.28775510204081634, "obj2": 0.709582590622428}, {"determining": "( ( ( ( DDR / ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * Max( ( ACS * BR ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) ,Max( ( ACS + RRS ),( PN / MRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUC ) * ( RCSe - MLU ) ) - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + MUR ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( AMS,AMS ),( Max( FirstVNF_Mem_Server,MDR ) * Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM / RRSe ) + ( CS + RRSe ) )", "obj1": 0.31020408163265306, "obj2": 0.7065202983718794}, {"determining": "Min( ( FirstVNF_CPU / Max( DDR,CRS ) ) ,( DDR + BR ) )", "choosing": "( Max( ( RMSe + ( MLU + MLU ) ),MLU ) - ( ( ( MUR / MUM ) - MUR ) + RMSe ) )", "obj1": 0.27346938775510204, "obj2": 0.7373504140216708}, {"determining": "( Min( ( ( FirstVNF_RAM * MDR ) * ( FirstVNF_Mem / ARS ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( FirstVNF_Mem + DDR ) ) ) + Min( ( Max( CRS,FirstVNF_CPU ) / Max( MRS,Const ) ) ,( ( DDR * ARS ) / ( ACS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,MUR ),( RCSe + DS ) ) * ( ( RCSe + RCSe ) * Min( CS ,RRSe ) ) ) ,Max( ( ( RRSe * MUM ) + ( DS / RRSe ) ),Max( Min( RRSe ,MUM ),Min( MLU ,MLU ) ) ) )", "obj1": 0.7714285714285715, "obj2": 0.2029867791558344}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM * MUR ) + ( MLU - RMSe ) ) / ( ( CS * RRSe ) / Max( CS,MLU ) ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.7342116462494738}, {"determining": "( ( ( Const / PN ) * Max( ( BR - ( BR - Max( FirstVNF_CPU_Server,RRS ) ) ),( BR + CRS ) ) ) + ( ( ARS * MDR ) / MRS ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8763076861929563}, {"determining": "( ( FirstVNF_RAM_Server + PN ) - Min( Min( Max( ( ( ( CRS * AMS ) - FirstVNF_RAM_Server ) * ( CRS - Const ) ),Const ) ,( MRS * CRS ) ) ,Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUM + RMSe ) * ( RMSe + RCSe ) ) + Min( ( MUR - CS ) ,( MLU / MUC ) ) ) - Max( ( ( CS / RRSe ) / ( RCSe * MLU ) ),( ( DS + DS ) - ( Max( CS,Min( MUM ,MUM ) ) + MUR ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7573989373589528}, {"determining": "( ( ( ( CRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + Min( Const ,PN ) ) ) - ( ( ( FirstVNF_RAM_Server * PN ) / ( AMS + ACS ) ) + ( ( AMS + ARS ) - ( FirstVNF_Mem - ACS ) ) ) )", "choosing": "( ( ( Max( CS,DS ) + ( MUC + RCSe ) ) / ( ( RCSe * RCSe ) * Min( MUR ,RMSe ) ) ) / ( Max( ( MUM - CS ),( MUR - RMSe ) ) - ( Max( RRSe,CS ) - ( DS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) )", "choosing": "Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) )", "obj1": 0.3163265306122449, "obj2": 0.6947177206004338}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,AMS ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( ( MUM + RMSe ) ,( MLU / CS ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7399316002969256}], "2": [{"determining": "( ( ( ( DDR / ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * Max( ( ACS * BR ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) ,Max( ( ACS + RRS ),( PN / MRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUC ) * ( RCSe - MLU ) ) - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + MUR ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( FirstVNF_Mem / Min( ACS ,Max( FirstVNF_Mem_Server,RRS ) ) ) ) / Max( Max( DDR,CRS ),RRS ) ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( RMSe / MUR ) ) / ( Min( ( RCSe / ( Max( MUC,DS ) / RCSe ) ) ,( MUR - RRSe ) ) * ( RRSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ) * ( Min( PN ,FirstVNF_RAM ) + Min( MDR ,Const ) ) )", "choosing": "Min( ( ( Max( RCSe,MUC ) / DS ) + Max( RCSe,CS ) ) ,( ( RCSe - MUM ) + Max( MUM,DS ) ) )", "obj1": 0.7428571428571429, "obj2": 0.22980469686587623}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + Min( ( Max( CRS,FirstVNF_CPU ) / Max( MRS,Const ) ) ,( ( DDR * ARS ) / ( ACS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,MUR ),( RCSe + DS ) ) * ( ( RCSe + RCSe ) * Min( CS ,RRSe ) ) ) ,Max( ( ( RRSe * MUM ) + ( ( MUM * MUR ) + ( MLU - RMSe ) ) ),Max( Min( RRSe ,MUM ),Min( MLU ,MLU ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.17250325863275695}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) * Max( ARS,BR ) )", "choosing": "Max( ( RRSe / RCSe ),( MUR + RCSe ) )", "obj1": 0.6469387755102041, "obj2": 0.33627558835988924}, {"determining": "( ( DDR + BR ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( ( RMSe - MUR ) - ( CS * MUR ) ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8714285714285714, "obj2": 0.1242938136205346}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) * ( ( AMS - FirstVNF_RAM_Server ) * Max( ARS,BR ) ) )", "choosing": "Max( ( RMSe + MLU ),( MUR + RCSe ) )", "obj1": 0.5653061224489796, "obj2": 0.41123270626089586}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) * Max( Min( DDR ,BR ),BR ) )", "choosing": "( RCSe + ( RMSe + MLU ) )", "obj1": 0.6428571428571429, "obj2": 0.3403523833407665}, {"determining": "( FirstVNF_CPU * ( FirstVNF_RAM - ACS ) )", "choosing": "Min( RMSe ,( MLU / MUM ) )", "obj1": 0.926530612244898, "obj2": 0.07744212590210364}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( ( CS - MUM ) * Max( RMSe,RCSe ) ),( ( DS - RMSe ) - ( RMSe - RMSe ) ) ) ,Max( ( ( RMSe + MUR ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.8324570264140353}, {"determining": "( ( BR * AMS ) + ( Min( AMS ,( MDR * FirstVNF_CPU ) ) / CRS ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7903449872682864}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "Min( Max( ( Min( AMS ,Max( ( MRS * FirstVNF_CPU_Server ),ACS ) ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( ( ( MUM * RRSe ) / ( RMSe - RCSe ) ) + Max( ( MUM / MUC ),( MUC + RRSe ) ) ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9040816326530612, "obj2": 0.10698498223265857}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * ( ( RMSe + RCSe ) / ( MUR / DS ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.4142857142857143, "obj2": 0.5670149585005649}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.5183777922491151}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( ( DDR / ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * Max( ( Min( ( FirstVNF_CPU - MDR ) ,( FirstVNF_RAM * ACS ) ) * BR ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) ,Max( ( ACS + RRS ),( PN / MRS ) ) ) )", "choosing": "Min( ( RRSe - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + MUR ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) )", "obj1": 0.9877551020408163, "obj2": 0.013839587487518614}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.5265306122448979, "obj2": 0.4449432871607335}, {"determining": "( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MLU + ( RCSe + MUR ) ) * ( DS * ( ( ( RCSe + CS ) - MUM ) + ( ( MUR / MLU ) - MUR ) ) ) )", "obj1": 0.37142857142857144, "obj2": 0.619661142055343}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( ( Const - ( ARS - AMS ) ),CRS ) ,PN ) )", "choosing": "( ( ( ( MUM / DS ) * ( RRSe - ( RCSe * MLU ) ) ) * MUC ) * Min( Max( RCSe,RMSe ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( Min( ( ( MRS / AMS ) + Min( AMS ,CRS ) ) ,( Max( PN,PN ) / ( ACS + DDR ) ) ) / ( AMS + CRS ) )", "choosing": "( Max( RCSe,RRSe ) * Min( RMSe ,Max( ( Min( ( ( MLU / RRSe ) + Min( DS ,MUR ) ) ,Min( ( MUR - MUC ) ,Min( CS ,MLU ) ) ) + ( ( ( RCSe / CS ) + ( MUC + MUC ) ) * ( ( RMSe + RRSe ) + ( MLU + RRSe ) ) ) ),MUC ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6579244290286579}, {"determining": "Max( ( ( Max( Max( ( ACS / DDR ),FirstVNF_RAM_Server ),CRS ) + ( BR * ( CRS / FirstVNF_Mem ) ) ) / FirstVNF_CPU ),Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * PN ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + RMSe ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( CS / MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Max( ( MUC + RCSe ),MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + ( RCSe + ( MUR * RCSe ) ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8453558821653566}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS / FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS + DS ),Max( CS,RRSe ) )", "obj1": 0.3836734693877551, "obj2": 0.6131050371730737}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( FirstVNF_CPU,MDR ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,RMSe ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.5265306122448979, "obj2": 0.4449432871607335}, {"determining": "Max( Min( RRS ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_Mem * ( BR / ARS ) ) ) )", "choosing": "( ( Max( ( MUM + ( ( RCSe * RCSe ) - MUC ) ),RCSe ) * ( Min( CS ,DS ) + ( DS / Min( RMSe ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.44081632653061226, "obj2": 0.5392189470861759}, {"determining": "( ( AMS * DDR ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.9061224489795918, "obj2": 0.08803075623619178}, {"determining": "Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( DS * MUR ) + Min( MLU ,RMSe ) )", "obj1": 0.39387755102040817, "obj2": 0.597108717900343}, {"determining": "( ( Const + Const ) + Min( ( AMS - Min( Max( MDR,FirstVNF_Mem_Server ) ,BR ) ) ,DDR ) )", "choosing": "( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( ( MLU * MUR ) ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.7690359508695002}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8453558821653566}, {"determining": "( ( MRS / AMS ) + ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * CS ) + Max( MUR,MUR ) )", "obj1": 0.2979591836734694, "obj2": 0.6918051113156514}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.44081632653061226, "obj2": 0.5392189470861759}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * FirstVNF_Mem ) + MRS ) ) / Max( ARS,ACS ) )", "choosing": "( ( ( Max( DS,MUR ) + ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * Min( ( RRSe / RCSe ) ,MUR ) ) ) ) - ( ( RMSe / RMSe ) + ( CS * MUC ) ) ) / ( Min( ( DS / RMSe ) ,( RMSe / MUM ) ) * ( ( MUC / MUR ) - ( RMSe * DS ) ) ) )", "obj1": 0.24897959183673468, "obj2": 0.7433833448692085}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) + ( Min( MRS ,MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( RCSe * RMSe ),( MLU + RRSe ) ) - ( RMSe - DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7180826263814087}, {"determining": "( ( AMS * DDR ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( CS * ( MLU / CS ) ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.9204081632653062, "obj2": 0.08526322374403916}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),( Min( PN ,FirstVNF_RAM ) + Min( MDR ,Const ) ) )", "choosing": "( Min( ( ( CS / DS ) + Max( RCSe,CS ) ) ,( ( RCSe - MUM ) + Max( MUM,DS ) ) ) / Max( RCSe,MUC ) )", "obj1": 0.24081632653061225, "obj2": 0.7544465299627227}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.45918367346938777, "obj2": 0.5252153293318094}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( ( MDR - MDR ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.7053135738047492}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "Max( ( ARS / DDR ),Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / RRSe ) * Min( RCSe ,RRSe ) ) * Min( Max( ( ( ( DS * MUM ) + ( RMSe - RRSe ) ) + ( Max( RMSe,DS ) - ( MUC + MUR ) ) ),DS ) ,Min( MUR ,RRSe ) ) )", "obj1": 0.41020408163265304, "obj2": 0.5866576907994938}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.62928827668898}, {"determining": "Max( Min( Const ,( MDR + FirstVNF_RAM ) ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + ( DS / Min( MLU ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.39591836734693875, "obj2": 0.5884201862024611}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( Max( RRS,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RCSe - CS ) ,( MUR * RMSe ) ) * Max( MUR,( MLU * RMSe ) ) )", "obj1": 0.2714285714285714, "obj2": 0.7106882180806977}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( RMSe / CS ) )", "obj1": 0.3020408163265306, "obj2": 0.6813031109128075}, {"determining": "Max( ( Min( MRS ,MRS ) * FirstVNF_CPU ),Min( FirstVNF_RAM ,( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR - MUR ) * ( DS - RCSe ) ) * ( ( MLU + CS ) + ( RRSe / RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.7865574106688655}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ( FirstVNF_Mem * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),( MUR - MLU ) ) - Max( DS,MLU ) ) + Max( ( MUR * RRSe ),( RRSe * DS ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6685746984454869}, {"determining": "( ( ( Const / PN ) * Max( ( BR - ( BR - Max( FirstVNF_CPU_Server,RRS ) ) ),( BR + CRS ) ) ) + ( ( ARS * MDR ) / MRS ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8763076861929563}, {"determining": "( Min( BR ,RRS ) / ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 0.3469387755102041, "obj2": 0.6340491852061206}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) * Min( DDR ,MRS ) ) * ( Max( RRS,BR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUR ) * ( DS - RCSe ) ) * ( ( MLU + CS ) + ( RRSe / RMSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7609788562093004}, {"determining": "Max( ( MRS / FirstVNF_Mem_Server ),Min( ( MRS * Min( FirstVNF_Mem_Server ,CRS ) ) ,PN ) )", "choosing": "Max( ( MUR / RCSe ),( MLU - ( ( MUR * Max( DS,MUR ) ) * CS ) ) )", "obj1": 0.3122448979591837, "obj2": 0.679852407455091}, {"determining": "Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.45102040816326533, "obj2": 0.5314139222303402}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.45102040816326533, "obj2": 0.5314139222303402}, {"determining": "( ( RRS - FirstVNF_RAM ) / ( ( ( AMS * DDR ) - Min( AMS ,FirstVNF_CPU ) ) + BR ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - Min( MUR ,RCSe ) ) - ( CS * MUR ) ) )", "obj1": 0.3142857142857143, "obj2": 0.6763912315311388}, {"determining": "Max( ( Min( MRS ,MRS ) * FirstVNF_CPU ),Min( FirstVNF_RAM ,( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,Min( RMSe ,MUM ) ) - Max( ( RCSe * RMSe ),( MLU + RRSe ) ) )", "obj1": 0.23265306122448978, "obj2": 0.7639669457164687}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),Max( ( Min( RMSe ,RCSe ) / ( MLU - DS ) ),( ( DS - MUM ) + ( MUC / MUM ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.4122448979591837, "obj2": 0.5769961549327478}, {"determining": "( Max( Const,DDR ) - Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,MUM ) )", "obj1": 0.4122448979591837, "obj2": 0.5769961549327478}, {"determining": "( ( ( MRS / MRS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem + ARS ) + ARS ) ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * ( ( Max( RCSe,RCSe ) + RMSe ) + MUC ) ) ) * ( Max( MLU,RCSe ) * ( RCSe + RRSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.62928827668898}, {"determining": "Min( ( ( MRS / ACS ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( CRS ,AMS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU + Const ) ) * ( ARS / ACS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( MUR ,MUC ),( RCSe - DS ) ) / ( Max( MUC,( MLU / MUM ) ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),( Min( RMSe ,( ( MUC * MLU ) + DS ) ) - ( DS * ( RCSe + ( MUC + MUR ) ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( ( AMS - Min( Max( MDR,FirstVNF_Mem_Server ) ,BR ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( RRS / MDR ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * ( MLU - RCSe ) ) ),Max( ( Min( RMSe ,RRSe ) / ( MLU - DS ) ),( Min( ( RRSe + RMSe ) ,( RCSe - RMSe ) ) + ( MUC / MUM ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.7055668770870681}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.705999793123216}, {"determining": "Max( ( Min( MRS ,MRS ) * FirstVNF_CPU ),Min( FirstVNF_RAM ,( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,Min( RMSe ,MUM ) ) - Max( ( RCSe * RMSe ),( MLU + RRSe ) ) )", "obj1": 0.23265306122448978, "obj2": 0.7639669457164687}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RCSe - CS ) ,MUR ) * Max( MUR,( MLU * RMSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.705999793123216}, {"determining": "Max( ( Min( MRS ,MRS ) * FirstVNF_CPU ),Min( FirstVNF_RAM ,( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR - MUR ) * ( DS - RCSe ) ) * ( ( MLU + CS ) + ( RRSe / RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.7865574106688655}, {"determining": "( ( FirstVNF_CPU_Server - AMS ) - ( RRS + ( FirstVNF_CPU_Server + ARS ) ) )", "choosing": "( ( ( MUR / RMSe ) - ( CS - ( MUR - MUC ) ) ) - ( MUC * ( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( ACS - ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) ) ) / DDR ) + Const ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),( BR * MDR ) ) )", "choosing": "Max( ( CS * Max( ( Max( MUC,DS ) / DS ),CS ) ),( ( Min( ( MUR / Max( Max( MUR,CS ),( ( MUC / CS ) - Max( CS,MLU ) ) ) ) ,RRSe ) / MUR ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * FirstVNF_CPU ) ,( Min( FirstVNF_RAM_Server ,MDR ) - CRS ) ) - ( ( MRS - ( DDR - BR ) ) - ( ACS / MDR ) ) )", "choosing": "Min( Max( MUR,( MUM + DS ) ) ,Min( ( ( ( ( ( ( MLU + RRSe ) - CS ) / RMSe ) - ( ( ( RMSe + RCSe ) + MLU ) * ( Max( MUR,MUR ) / MUR ) ) ) - MUR ) / RCSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / BR ) - ( Max( ( DDR + ( ( ARS - ACS ) / AMS ) ),FirstVNF_RAM ) / MDR ) )", "choosing": "Max( ( ( RCSe / CS ) - ( ( Min( Min( RRSe ,( Min( MUR ,CS ) - RRSe ) ) ,Max( RRSe,RRSe ) ) / ( ( MUR * MUC ) / ( ( ( RCSe - MUR ) + ( RMSe + CS ) ) + MUM ) ) ) / MLU ) ),Min( Min( MUR ,RCSe ) ,( Min( DS ,Max( CS,MUM ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,ACS ) - FirstVNF_RAM_Server ) / ( DDR + BR ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,Min( MUR ,( RMSe + ( RMSe - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + FirstVNF_CPU ) + ( FirstVNF_RAM * MDR ) ) - ( ( AMS * FirstVNF_CPU ) + ( ACS + PN ) ) )", "choosing": "Min( Max( ( CS - RCSe ),Max( CS,MUR ) ) ,( ( RCSe + MUC ) * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) ,( MRS / ( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( AMS - MDR ),( FirstVNF_CPU_Server * MDR ) ),( ( CRS - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) ,Min( ( ( BR - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,( ( PN / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR * MUM ),Min( CS ,RRSe ) ) * Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) - Min( ( ( RCSe + CS ) + Max( MUC,RMSe ) ) ,( Max( DS,DS ) + ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Max( ( MRS * FirstVNF_CPU_Server ),ACS ) ) - ( DDR + ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( RMSe ,MUC ) * ( CS + RCSe ) ),( Min( RCSe ,MLU ) + ( RMSe + MUM ) ) ) + ( ( ( MUM * RRSe ) / ( RMSe - RCSe ) ) + Max( ( MUM / MUC ),( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * Max( ( ACS * BR ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) ,Max( ( ACS + RRS ),( PN / MRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUC ) * ( RCSe - MLU ) ) - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + MUR ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + Min( Const ,PN ) ) ) - ( ( ( FirstVNF_RAM_Server * PN ) / ( AMS + ACS ) ) + ( ( AMS + ARS ) - ( FirstVNF_Mem - ACS ) ) ) )", "choosing": "( ( ( Max( CS,DS ) + ( MUC + RCSe ) ) / ( ( RCSe * RCSe ) * Min( MUR ,RMSe ) ) ) / ( Max( ( MUM - CS ),( MUR - RMSe ) ) - ( Max( RRSe,CS ) - ( DS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) )", "choosing": "( Min( MUR ,Max( Min( MUM ,RRSe ),MUM ) ) / ( ( MUR * RRSe ) - Min( RMSe ,( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( BR + ( ( MDR * ( MRS * BR ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + RCSe ) / ( RRSe - ( RRSe * ( ( CS - RRSe ) * Min( ( MLU * ( ( RCSe * CS ) * Min( CS ,DS ) ) ) ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ARS ) / ( ( DDR * Max( DDR,PN ) ) * ( Const / Min( MRS ,Max( DDR,Max( ( PN * ACS ),( CRS / CRS ) ) ) ) ) ) ) - ( ACS - ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( RMSe * ( DS * Min( Max( MLU,( Max( ( MUC * DS ),RMSe ) - MUC ) ) ,( ( Max( RCSe,Max( RCSe,RRSe ) ) + ( MUR / DS ) ) - Min( ( Min( MUR ,MUC ) + DS ) ,MUR ) ) ) ) ) / ( ( ( MUC - DS ) / ( ( MUC - ( RMSe + CS ) ) + Max( RMSe,( MUR - RRSe ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( MDR / Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) - ( BR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( ( ( ( ( Min( DS ,MLU ) - CS ) / MLU ) / ( RRSe * CS ) ) / Max( RMSe,MUM ) ),CS ) - ( RMSe - CS ) ) ,( ( MUC - MUM ) * ( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ACS - RRS ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + ( RRSe + RCSe ) ),Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( AMS ,FirstVNF_RAM ) ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + DS ),Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( AMS + FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ),Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + DS ),Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS / FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + DS ),Max( ( MLU - RMSe ),( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_RAM ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - RMSe ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( AMS / MRS ) )", "choosing": "Min( ( RCSe + RCSe ) ,MLU )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) * ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * Max( ( ACS * BR ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) ,Max( ( ACS + RRS ),( PN / MRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUC ) * ( RCSe - MLU ) ) - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + MUR ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ) * ( Min( PN ,FirstVNF_RAM ) + Min( MDR ,Const ) ) )", "choosing": "Min( ( ( Max( RCSe,MUC ) / DS ) + Max( RCSe,CS ) ) ,( ( RCSe - MUM ) + Max( MUM,DS ) ) )", "obj1": 0.7428571428571429, "obj2": 0.22980469686587623}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) * Max( ARS,BR ) )", "choosing": "Max( ( RRSe / RCSe ),( MUR + RCSe ) )", "obj1": 0.6469387755102041, "obj2": 0.33627558835988924}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( ACS - ACS ) ) - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.789795918367347, "obj2": 0.1479295370698481}, {"determining": "( ( AMS * ( Max( ( Const - ( ARS - AMS ) ),CRS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( MUM / DS ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8959183673469387, "obj2": 0.08427414610864148}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) * Max( Min( DDR ,BR ),BR ) )", "choosing": "( RCSe + ( RMSe + MLU ) )", "obj1": 0.6428571428571429, "obj2": 0.3403523833407665}, {"determining": "( Min( Const ,( ACS * Const ) ) - Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( ( CRS + ( FirstVNF_CPU / MDR ) ) - Const ) ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.9530612244897959, "obj2": 0.05165599014930962}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( AMS * ( ( Const / AMS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Min( MUC ,RMSe ) / ( ( MUR + DS ) / MLU ) ) / MLU ) / MLU ) * ( MLU / CS ) ),Max( RCSe,( MUM / RCSe ) ) )", "obj1": 0.9142857142857143, "obj2": 0.06955729160493013}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + Min( ( Max( CRS,FirstVNF_CPU ) / Max( MRS,Const ) ) ,( ( DDR * ARS ) / ( ACS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,MUR ),( RCSe + DS ) ) * ( ( RCSe + RCSe ) * Min( CS ,RRSe ) ) ) ,Max( ( ( RRSe * MUM ) + ( ( MUM * MUR ) + ( MLU - RMSe ) ) ),Max( Min( RRSe ,MUM ),Min( MLU ,MLU ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.17250325863275695}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) * ( ( AMS - FirstVNF_RAM_Server ) * Max( ARS,BR ) ) )", "choosing": "Max( ( RMSe + MLU ),( MUR + RCSe ) )", "obj1": 0.5653061224489796, "obj2": 0.41123270626089586}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Min( ( ( MRS / AMS ) + Min( AMS ,CRS ) ) ,( Max( PN,PN ) / ( ACS + DDR ) ) ) / ( AMS + CRS ) )", "choosing": "( Max( RCSe,RRSe ) * Min( RMSe ,Max( ( Min( ( ( MLU / RRSe ) + Min( DS ,MUR ) ) ,Min( ( MUR - MUC ) ,Min( CS ,MLU ) ) ) + ( ( ( RCSe / CS ) + ( MUC + MUC ) ) * ( ( RMSe + RRSe ) + ( MLU + RRSe ) ) ) ),MUC ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6579244290286579}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( ( Const - ( ARS - AMS ) ),CRS ) ,PN ) )", "choosing": "( ( ( ( MUM / DS ) * ( RRSe - ( RCSe * MLU ) ) ) * MUC ) * Min( Max( RCSe,RMSe ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.7510204081632653, "obj2": 0.19735637203006964}, {"determining": "( ( RRS + ( Max( BR,ARS ) * ( BR + CRS ) ) ) + ACS )", "choosing": "( ( RMSe + RMSe ) * ( ( RMSe * DS ) - Min( CS ,RRSe ) ) )", "obj1": 0.23265306122448978, "obj2": 0.752599963291118}, {"determining": "( ( Const + Const ) + Min( ( AMS - Min( Max( MDR,FirstVNF_Mem_Server ) ,BR ) ) ,DDR ) )", "choosing": "( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( ( MLU * MUR ) ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.7690359508695002}, {"determining": "( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MLU + ( RCSe + MUR ) ) * ( DS * ( ( ( RCSe + CS ) - MUM ) + ( ( MUR / MLU ) - MUR ) ) ) )", "obj1": 0.37142857142857144, "obj2": 0.619661142055343}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( MUM + RRSe ) ) + ( ( MUC + Min( ( MUC - MLU ) ,RRSe ) ) + DS ) )", "obj1": 0.5510204081632653, "obj2": 0.42721223913912054}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) )", "choosing": "Max( DS,( MLU * MLU ) )", "obj1": 0.20612244897959184, "obj2": 0.7822554270280049}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( ( Const - ( ARS - AMS ) ),CRS ) ,PN ) )", "choosing": "( ( MLU + ( RCSe + MUR ) ) * ( DS * MUC ) )", "obj1": 0.5448979591836735, "obj2": 0.43340462658687195}, {"determining": "Min( Min( ( RRS + ARS ) ,( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * CRS ) ) ,( ( Const / AMS ) + ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( MUM / RCSe ) ) * Min( ( ( MUR + DS ) / MLU ) ,RCSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5050665322937229}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( FirstVNF_CPU,MDR ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,RMSe ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( Max( BR,( AMS / ( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS + RCSe ) * RCSe ) - MUR ) ,( RCSe + RCSe ) )", "obj1": 0.7551020408163265, "obj2": 0.19560550324081633}, {"determining": "( ( Max( AMS,FirstVNF_Mem ) / ( Const - MDR ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) )", "choosing": "( ( MUR / MUC ) * ( DS * MUC ) )", "obj1": 0.41836734693877553, "obj2": 0.5573876867203515}, {"determining": "Max( Min( ( FirstVNF_CPU + ( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ) ,( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( Max( BR,ARS ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.3836734693877551, "obj2": 0.6024321769698415}, {"determining": "( ( Max( ( ( ( Min( Const ,ARS ) + MDR ) / ( Min( Const ,ARS ) * ACS ) ) / FirstVNF_RAM ),BR ) + AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,MUR ) / Min( MUM ,MUM ) ) - MUC ) )", "obj1": 0.19795918367346937, "obj2": 0.8058861947870584}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * ( DS / Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5840878001516262}, {"determining": "Max( ( FirstVNF_RAM - Min( FirstVNF_Mem ,RRS ) ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.43673469387755104, "obj2": 0.546038199953306}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ACS / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8438951523025898}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( ( RCSe * MUC ) * MUC ) + Max( MLU,MUC ) )", "obj1": 0.28775510204081634, "obj2": 0.6978541930496199}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.5265306122448979, "obj2": 0.4449432871607335}, {"determining": "Max( Min( AMS ,FirstVNF_RAM ),( CRS / FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU - RMSe ),RRSe )", "obj1": 0.2979591836734694, "obj2": 0.6876801451384105}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( RMSe / CS ) )", "obj1": 0.3020408163265306, "obj2": 0.6813031109128075}, {"determining": "( Max( DDR,PN ) / ( ( Max( DDR,PN ) / ( MRS + PN ) ) + PN ) )", "choosing": "( Max( RCSe,DS ) * DS )", "obj1": 0.4, "obj2": 0.5781992299122534}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( RRS ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( ( ( RMSe + MUR ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.8075870320468659}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( Max( ( ( FirstVNF_RAM - BR ) - Max( AMS,CRS ) ),( ( Max( FirstVNF_CPU_Server,( ( Min( ACS ,FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + FirstVNF_CPU ) ) / Max( AMS,( ( DDR / RRS ) * BR ) ) ) + ( ( FirstVNF_CPU / ( ( ( DDR * RRS ) * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server + Const ) ) ) - Min( ( DDR + ( Min( MRS ,AMS ) / ( FirstVNF_CPU_Server + DDR ) ) ) ,( RRS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( PN - CRS ) ,( RRS / ( Const * ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7799110574767398}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "Max( ( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + MUR ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1836734693877551, "obj2": 0.8235933080752017}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.5183777922491151}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( Max( RRS,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RCSe - CS ) ,( MUR * RMSe ) ) * Max( MUR,( MLU * RMSe ) ) )", "obj1": 0.2714285714285714, "obj2": 0.7106882180806977}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5978821466687493}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.00790677505219948}, {"determining": "( Min( ( ACS * FirstVNF_CPU ) ,( Min( FirstVNF_RAM_Server ,MDR ) - CRS ) ) - ( ( MRS - ( DDR - BR ) ) - ( ACS / MDR ) ) )", "choosing": "Min( Max( MUR,( MUM + DS ) ) ,Min( ( ( ( ( ( ( MLU + RRSe ) - CS ) / RMSe ) - ( ( ( RMSe + RCSe ) + MLU ) * ( Max( MUR,MUR ) / MUR ) ) ) - MUR ) / RCSe ) ,RRSe ) )", "obj1": 0.9816326530612245, "obj2": 0.00790677505219948}, {"determining": "( ( ( Const / PN ) * Max( ( BR - ( BR - Max( FirstVNF_CPU_Server,RRS ) ) ),( BR + CRS ) ) ) + ( ( ARS * MDR ) / MRS ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8763076861929563}, {"determining": "( Min( BR ,RRS ) / ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 0.3469387755102041, "obj2": 0.6340491852061206}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.4122448979591837, "obj2": 0.5769961549327478}, {"determining": "( Max( BR,ARS ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8607515159974387}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * FirstVNF_Mem ) + MRS ) ) / Max( ARS,ACS ) )", "choosing": "( ( ( Max( DS,MUR ) + ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * Min( ( RRSe / RCSe ) ,MUR ) ) ) ) - ( ( RMSe / RMSe ) + ( CS * MUC ) ) ) / ( Min( ( DS / RMSe ) ,( RMSe / MUM ) ) * ( ( MUC / MUR ) - ( RMSe * DS ) ) ) )", "obj1": 0.24897959183673468, "obj2": 0.7433833448692085}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( Min( CS ,Max( MLU,MUC ) ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.3653061224489796, "obj2": 0.6280816362946644}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ) + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) ) ) + Min( DS ,MUM ) )", "obj1": 0.44285714285714284, "obj2": 0.5368834565679178}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.5265306122448979, "obj2": 0.4449432871607335}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( Min( MUR ,RMSe ) / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8359486720250934}, {"determining": "( ( PN + MDR ) / Max( MRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC - RCSe ) - Max( DS,RCSe ) ) * MLU )", "obj1": 0.25918367346938775, "obj2": 0.7215538467868116}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * ( ( RMSe + RCSe ) / ( MUR / DS ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.4142857142857143, "obj2": 0.5670149585005649}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) * ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.46122448979591835, "obj2": 0.5234622295493936}, {"determining": "( ( ( MRS / MRS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem + ARS ) + ARS ) ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * ( ( Max( RCSe,RCSe ) + RMSe ) + MUC ) ) ) * ( Max( MLU,RCSe ) * ( RCSe + RRSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.62928827668898}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.45102040816326533, "obj2": 0.5314139222303402}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( ( AMS - Min( Max( MDR,FirstVNF_Mem_Server ) ,BR ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( RRS / MDR ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * ( MLU - RCSe ) ) ),Max( ( Min( RMSe ,RRSe ) / ( MLU - DS ) ),( Min( ( RRSe + RMSe ) ,( RCSe - RMSe ) ) + ( MUC / MUM ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.7055668770870681}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU ) + ( Min( MRS ,MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( RCSe * RMSe ),( MLU + RRSe ) ) - ( RMSe - DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7180826263814087}, {"determining": "Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.45102040816326533, "obj2": 0.5314139222303402}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) + Max( MRS,AMS ) )", "choosing": "( ( ( RMSe * RRSe ) / ( RRSe * CS ) ) + Max( MUR,MUR ) )", "obj1": 0.35918367346938773, "obj2": 0.6291325995075606}, {"determining": "Max( ( ( Max( Max( ( ACS / DDR ),FirstVNF_RAM_Server ),CRS ) + ( BR * ( CRS / FirstVNF_Mem ) ) ) / FirstVNF_CPU ),Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * PN ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + RMSe ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( CS / MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Max( ( MUC + RCSe ),MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + ( RCSe + ( MUR * RCSe ) ) ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8654587969712894}, {"determining": "Min( ( ( MRS / ACS ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( CRS ,AMS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU + Const ) ) * ( ARS / ACS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( MUR ,MUC ),( RCSe - DS ) ) / ( Max( MUC,( MLU / MUM ) ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),( Min( RMSe ,( ( MUC * MLU ) + DS ) ) - ( DS * ( RCSe + ( MUC + MUR ) ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) )", "choosing": "( Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( MUR - MUM ) )", "obj1": 0.17755102040816326, "obj2": 0.826283411224185}, {"determining": "Max( ( ( ( DDR * MRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( AMS ,RRS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Max( ( ( CS - MUM ) * Max( RMSe,RCSe ) ),( ( DS - RMSe ) - ( RMSe - RMSe ) ) ) ,Max( ( ( RMSe + MUR ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.8324570264140353}, {"determining": "( Max( BR,ARS ) / ( DDR + BR ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( ( ( Min( CS ,RMSe ) - CS ) * ( MUC * CS ) ) * ( MUC - DS ) ) * ( ( RMSe * DS ) - Min( CS ,RRSe ) ) ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.7186675077960853}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),Max( ( Min( RMSe ,RCSe ) / ( MLU - DS ) ),( ( DS - MUM ) + ( MUC / MUM ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.4387755102040816, "obj2": 0.5437668519219611}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.17755102040816326, "obj2": 0.826283411224185}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.705999793123216}, {"determining": "Max( Min( RRS ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_Mem * ( BR / ARS ) ) ) )", "choosing": "( ( Max( ( MUM + ( ( RCSe * RCSe ) - MUC ) ),RCSe ) * ( Min( CS ,DS ) + ( DS / Min( RMSe ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.4163265306122449, "obj2": 0.5657701869839652}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( ( CS - MUM ) * Max( RMSe,RCSe ) ),( ( DS - RMSe ) - ( RMSe - RMSe ) ) ) ,Max( ( ( RMSe + MUR ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.8324570264140353}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8399206120311086}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.45918367346938777, "obj2": 0.5252153293318094}, {"determining": "( ( ( ( ( ARS - ACS ) - ( FirstVNF_RAM + DDR ) ) - ( Min( ( BR * ( ( ARS - FirstVNF_RAM_Server ) * ( PN + FirstVNF_Mem_Server ) ) ) ,( ACS * BR ) ) * ACS ) ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( ( MUR - MUR ) + ( MUC + RMSe ) ) + ( ( RMSe * CS ) * MLU ) )", "obj1": 0.19795918367346937, "obj2": 0.8058861947870584}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.45918367346938777, "obj2": 0.5252153293318094}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( FirstVNF_Mem * ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,RCSe ),CS ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8654587969712894}, {"determining": "Max( Min( AMS ,FirstVNF_RAM ),( CRS / ( FirstVNF_Mem_Server - CRS ) ) )", "choosing": "Max( ( MUM - RMSe ),RRSe )", "obj1": 0.36122448979591837, "obj2": 0.6282718037316289}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RCSe - CS ) ,MUR ) * Max( MUR,( MLU * RMSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.705999793123216}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.44081632653061226, "obj2": 0.5392189470861759}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8399206120311086}, {"determining": "Max( Min( RRS ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_Mem * ( BR / ARS ) ) ) )", "choosing": "( ( Max( ( MUM + ( ( RCSe * RCSe ) - MUC ) ),RCSe ) * ( Min( CS ,DS ) + ( DS / Min( RMSe ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.44081632653061226, "obj2": 0.5392189470861759}, {"determining": "Max( ( ( ( ARS * CRS ) - BR ) * Min( ( BR / PN ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * FirstVNF_RAM ),Min( RRS ,( DDR + FirstVNF_Mem ) ) ) - ( Min( RRS ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Max( RMSe,( ( Max( ( Max( MUR,( MUR / MUC ) ) / MLU ),MLU ) / RRSe ) - MUR ) ) ,Max( ( ( RMSe / CS ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.8075870320468659}], "4": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) * ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ) * ( Min( PN ,FirstVNF_RAM ) + Min( MDR ,Const ) ) )", "choosing": "Min( ( ( Max( RCSe,MUC ) / DS ) + Max( RCSe,CS ) ) ,( ( RCSe - MUM ) + Max( MUM,DS ) ) )", "obj1": 0.7428571428571429, "obj2": 0.22980469686587623}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ACS - ACS ) ) - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.789795918367347, "obj2": 0.1479295370698481}, {"determining": "( ( AMS * ( Max( ( Const - ( ARS - AMS ) ),CRS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( MUM / DS ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8959183673469387, "obj2": 0.08427414610864148}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + Min( ( Max( CRS,FirstVNF_CPU ) / Max( MRS,Const ) ) ,( ( DDR * ARS ) / ( ACS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,MUR ),( RCSe + DS ) ) * ( ( RCSe + RCSe ) * Min( CS ,RRSe ) ) ) ,Max( ( ( RRSe * MUM ) + ( ( MUM * MUR ) + ( MLU - RMSe ) ) ),Max( Min( RRSe ,MUM ),Min( MLU ,MLU ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.17250325863275695}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) * ( ( AMS - FirstVNF_RAM_Server ) * Max( ARS,BR ) ) )", "choosing": "Max( ( RMSe + MLU ),( MUR + RCSe ) )", "obj1": 0.5653061224489796, "obj2": 0.41123270626089586}, {"determining": "( ( AMS * ( ( Const / AMS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Min( MUC ,RMSe ) / ( ( MUR + DS ) / MLU ) ) / MLU ) / MLU ) * ( MLU / CS ) ),Max( RCSe,( MUM / RCSe ) ) )", "obj1": 0.9142857142857143, "obj2": 0.06955729160493013}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( ( Const - ( ARS - AMS ) ),CRS ) ,PN ) )", "choosing": "( ( ( ( MUM / DS ) * ( RRSe - ( RCSe * MLU ) ) ) * MUC ) * Min( Max( RCSe,RMSe ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.7510204081632653, "obj2": 0.19735637203006964}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( MUM + RRSe ) ) + ( ( MUC + Min( ( MUC - MLU ) ,RRSe ) ) + DS ) )", "obj1": 0.5510204081632653, "obj2": 0.42721223913912054}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( ( Const - ( ARS - AMS ) ),CRS ) ,PN ) )", "choosing": "( ( MLU + ( RCSe + MUR ) ) * ( DS * MUC ) )", "obj1": 0.5448979591836735, "obj2": 0.43340462658687195}, {"determining": "Min( Min( ( RRS + ARS ) ,( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * CRS ) ) ,( ( Const / AMS ) + ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( MUM / RCSe ) ) * Min( ( ( MUR + DS ) / MLU ) ,RCSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5050665322937229}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( FirstVNF_CPU,MDR ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,RMSe ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( Max( BR,( AMS / ( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS + RCSe ) * RCSe ) - MUR ) ,( RCSe + RCSe ) )", "obj1": 0.7551020408163265, "obj2": 0.19560550324081633}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),Const )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + ( DS / Min( ( RMSe - MUC ) ,( DS * Max( MUR,Min( MUR ,RRSe ) ) ) ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.3693877551020408, "obj2": 0.6161931106143003}, {"determining": "( ( ACS - RRS ) - ( ( ( ACS - ACS ) - Max( MRS,AMS ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe * RRSe ) / ( RRSe * CS ) ) - ( RRSe - MUC ) )", "obj1": 0.32857142857142857, "obj2": 0.6520320777633631}, {"determining": "( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,RRSe ) / ( RRSe / Max( ( Max( ( CS - RMSe ),RRSe ) - RMSe ),RRSe ) ) ) - MUC ) )", "obj1": 0.9102040816326531, "obj2": 0.07878172555239413}, {"determining": "( ( FirstVNF_Mem + BR ) * ( BR + CRS ) )", "choosing": "( ( RRSe - MUC ) - Min( CS ,RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7629823658882933}, {"determining": "Min( ( FirstVNF_RAM / ( MRS + Const ) ) ,( DDR + FirstVNF_CPU ) )", "choosing": "Max( Max( ( MLU - RMSe ),( RCSe * Min( ( MUC - MUR ) ,Max( RMSe,RCSe ) ) ) ),( Max( RCSe,DS ) + ( MLU / RCSe ) ) )", "obj1": 0.20204081632653062, "obj2": 0.7954828420167077}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.5265306122448979, "obj2": 0.4449432871607335}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * ( DS / Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5840878001516262}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( RMSe / CS ) )", "obj1": 0.3020408163265306, "obj2": 0.6813031109128075}, {"determining": "( ( ( ARS / FirstVNF_RAM ) / ( DDR - RRS ) ) + Min( MRS ,DDR ) )", "choosing": "( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - MLU ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7682382362251277}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( MUM + RRSe ) ) + ( ( MUC + Min( ( MUC - MLU ) ,RRSe ) ) + DS ) )", "obj1": 0.2816326530612245, "obj2": 0.7044595590454129}, {"determining": "( ( BR * AMS ) + ( Min( AMS ,( MDR * FirstVNF_CPU ) ) / CRS ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( ( ( RMSe + MUR ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.8075870320468659}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) )", "choosing": "Max( DS,( MLU * MLU ) )", "obj1": 0.20612244897959184, "obj2": 0.7822554270280049}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.5183777922491151}, {"determining": "Max( Min( AMS ,FirstVNF_RAM ),( CRS / FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU - RMSe ),RRSe )", "obj1": 0.2979591836734694, "obj2": 0.6876801451384105}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( Min( MUM ,DS ) * RCSe ) )", "obj1": 0.39591836734693875, "obj2": 0.5772930803427885}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( Max( BR,ARS ) / ( DDR + BR ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( ( ( Min( CS ,RMSe ) - CS ) * ( MUC * CS ) ) * ( MUC - DS ) ) * ( ( RMSe * DS ) - Min( CS ,RRSe ) ) ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.7186675077960853}, {"determining": "Max( Min( ( FirstVNF_Mem_Server + ( BR + MRS ) ) ,( Min( PN ,RRS ) - FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / ( CRS - Min( ( ( RRS * Max( PN,( AMS / AMS ) ) ) * ( ACS * FirstVNF_CPU_Server ) ) ,Min( PN ,MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( MLU - Min( ( RCSe * ( ( CS + DS ) - RMSe ) ) ,MUR ) ) / MUR ) ) + Max( RRSe,( Min( DS ,( RMSe + ( MUC * MLU ) ) ) + ( DS / ( MUR / RMSe ) ) ) ) )", "obj1": 0.1489795918367347, "obj2": 0.853949448867997}, {"determining": "( Max( ( ( FirstVNF_RAM - BR ) - Max( AMS,CRS ) ),( ( Max( FirstVNF_CPU_Server,( ( Min( ACS ,FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + FirstVNF_CPU ) ) / Max( AMS,( ( DDR / RRS ) * BR ) ) ) + ( ( FirstVNF_CPU / ( ( ( DDR * RRS ) * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server + Const ) ) ) - Min( ( DDR + ( Min( MRS ,AMS ) / ( FirstVNF_CPU_Server + DDR ) ) ) ,( RRS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( PN - CRS ) ,( RRS / ( Const * ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7799110574767398}, {"determining": "( ( ( Const / PN ) * Max( ( BR - ( BR - Max( FirstVNF_CPU_Server,RRS ) ) ),( BR + CRS ) ) ) + ( ( ARS * MDR ) / MRS ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8763076861929563}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.4306122448979592, "obj2": 0.5506278849673255}, {"determining": "( Min( BR ,RRS ) / ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 0.3469387755102041, "obj2": 0.6340491852061206}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "( Max( Min( Const ,( ACS * Const ) ),DDR ) - Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( ( ( CS * DS ) * RRSe ) + Min( DS ,MUM ) )", "obj1": 0.45102040816326533, "obj2": 0.5309601227437059}, {"determining": "( ( Max( ( ( ( Min( Const ,ARS ) + MDR ) / ( Min( Const ,ARS ) * ACS ) ) / FirstVNF_RAM ),BR ) + AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,MUR ) / Min( MUM ,MUM ) ) - MUC ) )", "obj1": 0.19795918367346937, "obj2": 0.8058861947870584}, {"determining": "Max( ( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + MUR ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1836734693877551, "obj2": 0.8235933080752017}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( ( RRS + ( Max( BR,ARS ) * ( BR + CRS ) ) ) + ACS )", "choosing": "( ( RMSe + RMSe ) * ( ( RMSe * DS ) - Min( CS ,RRSe ) ) )", "obj1": 0.23265306122448978, "obj2": 0.752599963291118}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * FirstVNF_Mem ) + MRS ) ) / Max( ARS,ACS ) )", "choosing": "( ( ( Max( DS,MUR ) + ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * Min( ( RRSe / RCSe ) ,MUR ) ) ) ) - ( ( RMSe / RMSe ) + ( CS * MUC ) ) ) / ( Min( ( DS / RMSe ) ,( RMSe / MUM ) ) * ( ( MUC / MUR ) - ( RMSe * DS ) ) ) )", "obj1": 0.24897959183673468, "obj2": 0.7433833448692085}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( RRS ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.2897959183673469, "obj2": 0.6955902996437474}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( Min( CS ,Max( MLU,MUC ) ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.3653061224489796, "obj2": 0.6280816362946644}, {"determining": "Max( Min( RRS ,FirstVNF_RAM_Server ),( MRS + Min( Const ,Const ) ) )", "choosing": "( ( Max( ( MUM + ( ( RCSe * RCSe ) - MUC ) ),RCSe ) * ( Min( CS ,Min( CS ,DS ) ) + ( DS / Min( RMSe ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.42448979591836733, "obj2": 0.557344654150488}, {"determining": "Max( Min( RRS ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_Mem * ( BR / ARS ) ) ) )", "choosing": "( ( Max( ( MUM + ( ( RCSe * RCSe ) - MUC ) ),RCSe ) * ( Min( CS ,DS ) + ( DS / Min( RMSe ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.40816326530612246, "obj2": 0.5760286975051134}, {"determining": "( Min( ( ( MRS / AMS ) + Min( AMS ,CRS ) ) ,( Max( PN,PN ) / ( ACS + DDR ) ) ) / ( AMS + CRS ) )", "choosing": "( Max( RCSe,RRSe ) * Min( RMSe ,Max( ( Min( ( ( MLU / RRSe ) + Min( DS ,MUR ) ) ,Min( ( MUR - MUC ) ,Min( CS ,MLU ) ) ) + ( ( ( RCSe / CS ) + ( MUC + MUC ) ) * ( ( RMSe + RRSe ) + ( MLU + RRSe ) ) ) ),MUC ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6579244290286579}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.5265306122448979, "obj2": 0.4449432871607335}, {"determining": "( Max( BR,ARS ) * ( ( FirstVNF_Mem + BR ) + RRS ) )", "choosing": "( ( RMSe / RCSe ) - Min( CS ,RRSe ) )", "obj1": 0.23469387755102042, "obj2": 0.7496560645751462}, {"determining": "Max( ( MRS / FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Max( ( MUR / RCSe ),( MLU - RMSe ) )", "obj1": 0.2571428571428571, "obj2": 0.7209169959451058}, {"determining": "( ( ( MRS / MRS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem + ARS ) + ARS ) ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * ( ( Max( RCSe,RCSe ) + RMSe ) + MUC ) ) ) * ( Max( MLU,RCSe ) * ( RCSe + RRSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.62928827668898}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( ( RCSe * MUC ) * MUC ) + Max( MLU,MUC ) )", "obj1": 0.28775510204081634, "obj2": 0.6978541930496199}, {"determining": "( ( Max( AMS,FirstVNF_Mem ) / ( Const - MDR ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) )", "choosing": "( ( MUR / MUC ) * ( DS * MUC ) )", "obj1": 0.41836734693877553, "obj2": 0.5573876867203515}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5978821466687493}, {"determining": "( Max( BR,ARS ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.3836734693877551, "obj2": 0.6024321769698415}, {"determining": "Max( ( FirstVNF_RAM - Min( FirstVNF_Mem ,RRS ) ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.43673469387755104, "obj2": 0.546038199953306}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) * ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.46122448979591835, "obj2": 0.5234622295493936}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "Max( ( ( Max( Max( ( ACS / DDR ),FirstVNF_RAM_Server ),CRS ) + ( BR * ( CRS / FirstVNF_Mem ) ) ) / FirstVNF_CPU ),Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * PN ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + RMSe ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( CS / MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Max( ( MUC + RCSe ),MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + ( RCSe + ( MUR * RCSe ) ) ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8654587969712894}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( ( ACS / FirstVNF_RAM_Server ) - PN ) ) ) ) ) ),Min( ( ACS * Const ) ,Const ) )", "choosing": "( ( RRSe * ( Min( Min( RRSe ,( DS - ( ( RRSe * RRSe ) + RCSe ) ) ) ,RRSe ) + ( DS / ( ( DS * MUR ) + ( ( MLU / DS ) - MLU ) ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8320271627134063}, {"determining": "Max( Min( RRS ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + ( BR * Min( Const ,Min( Const ,ARS ) ) ) ) ,( FirstVNF_Mem * ( BR / ARS ) ) ) )", "choosing": "( ( Max( Max( CS,RRSe ),RCSe ) * ( Min( CS ,DS ) + ( DS / Min( RMSe ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.44693877551020406, "obj2": 0.5356190480489743}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) + Max( MRS,AMS ) )", "choosing": "( ( ( RMSe * RRSe ) / ( RRSe * CS ) ) + Max( MUR,MUR ) )", "obj1": 0.35918367346938773, "obj2": 0.6291325995075606}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * ( ( RMSe + RCSe ) / ( MUR / DS ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.4142857142857143, "obj2": 0.5670149585005649}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),Max( ( Min( RMSe ,RCSe ) / ( MLU - DS ) ),( ( DS - MUM ) + ( MUC / MUM ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),Max( ( Const + FirstVNF_Mem ),( RRS - FirstVNF_Mem ) ) )", "choosing": "Max( ( Min( RCSe ,Max( ( DS * Min( Max( ( RCSe - MUC ),CS ) ,Max( ( MUM * RCSe ),MUM ) ) ),DS ) ) * Max( MUM,MLU ) ),( ( MUR - ( Min( Max( RMSe,RCSe ) ,RCSe ) / Max( ( ( RMSe * ( MUM - RRSe ) ) + ( Min( MUR ,MUC ) / Min( RMSe ,RCSe ) ) ),Min( MUC ,MLU ) ) ) ) - ( RRSe * MUR ) ) )", "obj1": 0.4122448979591837, "obj2": 0.5747764052606332}, {"determining": "Min( Min( ( RRS + ARS ) ,Max( MDR,MDR ) ) ,( ( Const / AMS ) * ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( RMSe / RCSe ) ) * Min( RMSe ,( RMSe / CS ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6584633445243913}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "Min( ( ( MRS / ACS ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( CRS ,AMS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU + Const ) ) * ( ARS / ACS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( MUR ,MUC ),( RCSe - DS ) ) / ( Max( MUC,( MLU / MUM ) ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),( Min( RMSe ,( ( MUC * MLU ) + DS ) ) - ( DS * ( RCSe + ( MUC + MUR ) ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( MLU * Max( RCSe,MUC ) ) + ( ( ( RRSe - ( ( Max( MUC,CS ) + ( MUC + MUR ) ) + ( RMSe / MUC ) ) ) / MLU ) + Min( DS ,( DS - ( ( DS - DS ) - Min( RMSe ,( MUM / DS ) ) ) ) ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8450002900998318}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.4387755102040816, "obj2": 0.5437668519219611}, {"determining": "Min( Min( ( RRS + ARS ) ,Max( MDR,MDR ) ) ,( ( Const / AMS ) * ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( RMSe / RCSe ) ) * Min( RMSe ,( RMSe / CS ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6584633445243913}, {"determining": "Max( Min( RRS ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_Mem * ( BR / ARS ) ) ) )", "choosing": "( ( Max( ( MUM + ( ( RCSe * RCSe ) - MUC ) ),RCSe ) * ( Min( CS ,DS ) + ( DS / Min( RMSe ,RMSe ) ) ) ) + Min( DS ,MUM ) )", "obj1": 0.4163265306122449, "obj2": 0.5657701869839652}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8450002900998318}, {"determining": "Max( Min( FirstVNF_Mem ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( DS * MUR ) + RCSe ) ,DS ) + ( DS / ( ( DS * MUR ) + RCSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.16326530612244897, "obj2": 0.836068070429181}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ACS + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) ),Min( ( AMS / ( FirstVNF_CPU_Server / BR ) ) ,Const ) )", "choosing": "( ( RMSe * ( ( DS / DS ) + Min( Min( RRSe ,( ( ( RRSe * RRSe ) + CS ) - DS ) ) ,RRSe ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.45918367346938777, "obj2": 0.5252153293318094}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.17755102040816326, "obj2": 0.826283411224185}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ) + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( Min( CS ,DS ) + Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) ) ) + Min( DS ,MUM ) )", "obj1": 0.44285714285714284, "obj2": 0.5368834565679178}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( ( ACS / FirstVNF_RAM_Server ) - PN ) ) ) ) ),Min( ( ACS * Const ) ,Const ) )", "choosing": "( ( RRSe * ( Min( Min( RRSe ,( DS - ( ( RRSe * RRSe ) + RCSe ) ) ) ,RRSe ) + ( DS / ( ( DS * MUR ) + ( Max( ( RRSe + MUR ),( MLU + RMSe ) ) - MLU ) ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8407438987440239}], "5": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Min( Max( ACS,( ( ACS - ACS ) - Max( MRS,AMS ) ) ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7285714285714285, "obj2": 0.19785166971485768}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( AMS * ( Max( ( Const - ( ARS - AMS ) ),CRS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( MUM / DS ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8959183673469387, "obj2": 0.08427414610864148}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.5183777922491151}, {"determining": "( ( AMS * ( ( Const / AMS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( Min( MUC ,RMSe ) / ( ( MUR + DS ) / MLU ) ) / MLU ) / MLU ) * ( MLU / CS ) ),Max( RCSe,( MUM / RCSe ) ) )", "obj1": 0.9142857142857143, "obj2": 0.06955729160493013}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + Min( ( Max( CRS,FirstVNF_CPU ) / Max( MRS,Const ) ) ,( ( DDR * ARS ) / ( ACS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,MUR ),( RCSe + DS ) ) * ( ( RCSe + RCSe ) * Min( CS ,RRSe ) ) ) ,Max( ( ( RRSe * MUM ) + ( ( MUM * MUR ) + ( MLU - RMSe ) ) ),Max( Min( RRSe ,MUM ),Min( MLU ,MLU ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.17250325863275695}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( CRS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * ( ( MLU * RCSe ) / CS ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.35306122448979593, "obj2": 0.6161097125757742}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( Min( MUM ,DS ) * RCSe ) )", "obj1": 0.39591836734693875, "obj2": 0.5772930803427885}, {"determining": "( ( ACS - RRS ) - ( ( ( ACS - ACS ) - Max( MRS,AMS ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe * RRSe ) / ( RRSe * CS ) ) - ( RRSe - MUC ) )", "obj1": 0.32857142857142857, "obj2": 0.6520320777633631}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * RMSe ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.2816326530612245, "obj2": 0.7033027477960233}, {"determining": "Min( Min( ( RRS + ARS ) ,( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * CRS ) ) ,( ( Const / AMS ) + ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( MUM / RCSe ) ) * Min( ( ( MUR + DS ) / MLU ) ,RCSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5050665322937229}, {"determining": "( Max( BR,( AMS / ( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS + RCSe ) * RCSe ) - MUR ) ,( RCSe + RCSe ) )", "obj1": 0.7551020408163265, "obj2": 0.19560550324081633}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.336734693877551, "obj2": 0.6353520697936033}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( BR * AMS ) + ( Min( AMS ,( MDR * FirstVNF_CPU ) ) / CRS ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( ( ( RMSe + MUR ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.8075870320468659}, {"determining": "( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,RRSe ) / ( RRSe / Max( ( Max( ( CS - RMSe ),RRSe ) - RMSe ),RRSe ) ) ) - MUC ) )", "obj1": 0.9102040816326531, "obj2": 0.07878172555239413}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "Min( ( MDR / ( MRS + Const ) ) ,( DDR - RRS ) )", "choosing": "Max( ( ( ( MLU * DS ) / CS ) + ( RMSe / CS ) ),( Max( RCSe,DS ) + ( MLU / RCSe ) ) )", "obj1": 0.19387755102040816, "obj2": 0.8006195196062982}, {"determining": "( ( Const + Const ) + ( ( ARS / FirstVNF_RAM ) / ( DDR - RRS ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( Max( MUM,( ( MLU * DS ) / CS ) ) * Max( Min( MLU ,( MUM / MLU ) ),MLU ) ) ) ) )", "obj1": 0.2, "obj2": 0.7910938645714125}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( RMSe / CS ) )", "obj1": 0.3020408163265306, "obj2": 0.6813031109128075}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.008612267316345939}, {"determining": "( ( ( PN + FirstVNF_RAM_Server ) - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,CS ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15306122448979592, "obj2": 0.8420523281277321}, {"determining": "( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.7510204081632653, "obj2": 0.19735637203006964}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( ( ACS / FirstVNF_RAM_Server ) - PN ) ) ) ) ) ),Min( ( ACS * Const ) ,Const ) )", "choosing": "( ( RRSe * ( Min( Min( RRSe ,( DS - ( ( RRSe * RRSe ) + RCSe ) ) ) ,RRSe ) + ( DS / ( ( DS * MUR ) + ( ( MLU / DS ) - MLU ) ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8320271627134063}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "Max( ( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + MUR ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1836734693877551, "obj2": 0.8235933080752017}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) )", "choosing": "Max( DS,( MLU * MLU ) )", "obj1": 0.20612244897959184, "obj2": 0.7822554270280049}, {"determining": "( Max( BR,ARS ) / ( DDR + BR ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( ( ( Min( CS ,RMSe ) - CS ) * ( MUC * CS ) ) * ( MUC - DS ) ) * ( ( RMSe * DS ) - Min( CS ,RRSe ) ) ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.7186675077960853}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "( ( FirstVNF_Mem + BR ) * ( BR + CRS ) )", "choosing": "( ( RRSe - MUC ) - Min( CS ,RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7629823658882933}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5978821466687493}, {"determining": "( Max( ( ( FirstVNF_RAM - BR ) - Max( AMS,CRS ) ),( ( Max( FirstVNF_CPU_Server,( ( Min( ACS ,FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + FirstVNF_CPU ) ) / Max( AMS,( ( DDR / RRS ) * BR ) ) ) + ( ( FirstVNF_CPU / ( ( ( DDR * RRS ) * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server + Const ) ) ) - Min( ( DDR + ( Min( MRS ,AMS ) / ( FirstVNF_CPU_Server + DDR ) ) ) ,( RRS - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) ) ) + Min( ( PN - CRS ) ,( RRS / ( Const * ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7799110574767398}, {"determining": "( ( ( MRS / MRS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem + ARS ) + ARS ) ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * ( ( Max( RCSe,RCSe ) + RMSe ) + MUC ) ) ) * ( Max( MLU,RCSe ) * ( RCSe + RRSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.62928827668898}, {"determining": "( ( ( Const / PN ) * Max( ( BR - ( BR - Max( FirstVNF_CPU_Server,RRS ) ) ),( BR + CRS ) ) ) + ( ( ARS * MDR ) / MRS ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8763076861929563}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * ( DS / Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5840878001516262}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( ( ( ARS / FirstVNF_RAM ) / ( DDR - RRS ) ) + Min( MRS ,DDR ) )", "choosing": "( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - MLU ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7682382362251277}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.17755102040816326, "obj2": 0.826283411224185}, {"determining": "( ( ACS - ACS ) - ( ( ( ACS - ACS ) - ( PN + FirstVNF_RAM_Server ) ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) / ( RRSe * CS ) ) * CS ) ) / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7359778098342614}, {"determining": "Max( Min( ( FirstVNF_Mem_Server + ( BR + MRS ) ) ,( Min( PN ,RRS ) - FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / ( CRS - Min( ( ( RRS * Max( PN,( AMS / AMS ) ) ) * ( ACS * FirstVNF_CPU_Server ) ) ,Min( PN ,MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( MLU - Min( ( RCSe * ( ( CS + DS ) - RMSe ) ) ,MUR ) ) / MUR ) ) + Max( RRSe,( Min( DS ,( RMSe + ( MUC * MLU ) ) ) + ( DS / ( MUR / RMSe ) ) ) ) )", "obj1": 0.1489795918367347, "obj2": 0.853949448867997}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "( Min( BR ,RRS ) / ( FirstVNF_Mem * FirstVNF_RAM ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 0.3469387755102041, "obj2": 0.6340491852061206}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),Max( ( Min( RMSe ,RCSe ) / ( MLU - DS ) ),( ( DS - MUM ) + ( MUC / MUM ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "Max( ( MRS / FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Max( ( MUR / RCSe ),( MLU - RMSe ) )", "obj1": 0.2571428571428571, "obj2": 0.7209169959451058}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "( Max( BR,ARS ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.3836734693877551, "obj2": 0.6024321769698415}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "Max( ( ( Max( Max( ( ACS / DDR ),FirstVNF_RAM_Server ),CRS ) + ( BR * ( CRS / FirstVNF_Mem ) ) ) / FirstVNF_CPU ),Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * PN ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + RMSe ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( CS / MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Max( ( MUC + RCSe ),MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + ( RCSe + ( MUR * RCSe ) ) ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8654587969712894}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * ( RRSe * CS ) ) )", "obj1": 0.39183673469387753, "obj2": 0.5807509337730526}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( Max( AMS,MRS ) - ACS ) - Min( RRS ,FirstVNF_Mem ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7635288686951923}, {"determining": "( ( ( ARS + CRS ) * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( RCSe * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( MLU * Max( RCSe,MUC ) ) + ( ( ( RRSe - ( ( Max( MUC,CS ) + ( MUC + MUR ) ) + ( RMSe / MUC ) ) ) / MLU ) + Min( DS ,( DS - ( ( DS - DS ) - Min( RMSe ,( MUM / DS ) ) ) ) ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( FirstVNF_Mem * ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,RCSe ),CS ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8654587969712894}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( Max( ( RRSe / CS ),MUR ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) - RMSe ) ,DS ) + ( DS / ( RMSe * ( MLU / DS ) ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.853949448867997}, {"determining": "Min( ( ( MRS / ACS ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( CRS ,AMS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU + Const ) ) * ( ARS / ACS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( MUR ,MUC ),( RCSe - DS ) ) / ( Max( MUC,( MLU / MUM ) ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),( Min( RMSe ,( ( MUC * MLU ) + DS ) ) - ( DS * ( RCSe + ( MUC + MUR ) ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR * ( ACS - ( ( DDR + ( MRS / FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) ) ) ) - ( MRS - MDR ) )", "choosing": "( ( MUC * RRSe ) / ( RMSe - DS ) )", "obj1": 0.22040816326530613, "obj2": 0.7635288686951923}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) * ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / AMS ) - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ACS )", "choosing": "( MUR / ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ACS )", "choosing": "( MUR / ( ( ( RMSe * RRSe ) / ( RRSe * CS ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,ACS ) - ( ( PN + ( AMS + DDR ) ) + ( FirstVNF_CPU_Server / AMS ) ) )", "choosing": "( MUR / ( Max( RRSe,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) ) - ACS ) - Max( MRS,AMS ) )", "choosing": "( ( ( Min( MUR ,MUM ) / RCSe ) * CS ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.6081632653061224, "obj2": 0.3475950156212663}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( AMS * ( Max( ( Const - ( ARS - AMS ) ),CRS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( MUM / DS ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8959183673469387, "obj2": 0.08427414610864148}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( MDR * CRS ) ) ) * FirstVNF_RAM_Server ) - Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "Min( ( ( Max( MUR,MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * MUM ) )", "obj1": 0.5265306122448979, "obj2": 0.43419026894544976}, {"determining": "( ( ACS - ( ( Max( Min( ( Const - FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - ( ( RMSe * DS ) - ( MLU - MUC ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13621591377752024}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.5183777922491151}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + Min( ( Max( CRS,FirstVNF_CPU ) / Max( MRS,Const ) ) ,( ( DDR * ARS ) / ( ACS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,MUR ),( RCSe + DS ) ) * ( ( RCSe + RCSe ) * Min( CS ,RRSe ) ) ) ,Max( ( ( RRSe * MUM ) + ( ( MUM * MUR ) + ( MLU - RMSe ) ) ),Max( Min( RRSe ,MUM ),Min( MLU ,MLU ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.17250325863275695}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( Min( MUM ,DS ) * RCSe ) )", "obj1": 0.39591836734693875, "obj2": 0.5772930803427885}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( ( ACS - AMS ) - ( FirstVNF_RAM / AMS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( RRSe * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19795918367346937, "obj2": 0.7873593987025589}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * RMSe ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.2816326530612245, "obj2": 0.7033027477960233}, {"determining": "Min( Min( ( RRS + ARS ) ,( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * CRS ) ) ,( ( Const / AMS ) + ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( MUM / RCSe ) ) * Min( ( ( MUR + DS ) / MLU ) ,RCSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5050665322937229}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.17755102040816326, "obj2": 0.826283411224185}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,RRSe ) / ( RRSe / Max( ( Max( ( CS - RMSe ),RRSe ) - RMSe ),RRSe ) ) ) - MUC ) )", "obj1": 0.9102040816326531, "obj2": 0.07878172555239413}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( RMSe / CS ) )", "obj1": 0.3020408163265306, "obj2": 0.6813031109128075}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.008612267316345939}, {"determining": "( ( ACS + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( MRS,AMS ) )", "choosing": "( Max( ( MUR * MLU ),RRSe ) / ( RRSe * MLU ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) )", "choosing": "Max( DS,( MLU * MLU ) )", "obj1": 0.20612244897959184, "obj2": 0.7822554270280049}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ( PN + FirstVNF_RAM_Server ) - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,CS ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15306122448979592, "obj2": 0.8420523281277321}, {"determining": "( Max( BR,ARS ) / ( DDR + BR ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( ( ( Min( CS ,RMSe ) - CS ) * ( MUC * CS ) ) * ( MUC - DS ) ) * ( ( RMSe * DS ) - Min( CS ,RRSe ) ) ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.7186675077960853}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5978821466687493}, {"determining": "Max( ( MRS / FirstVNF_Mem_Server ),Min( ( MRS * MRS ) ,PN ) )", "choosing": "Max( ( MUR / ( ( MUR * Max( DS,MUR ) ) * CS ) ),( MLU - ( ( MUR * Max( DS,MUR ) ) * CS ) ) )", "obj1": 0.21428571428571427, "obj2": 0.775004460264793}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * ( DS / Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5840878001516262}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + RMSe ) * ( RMSe + RCSe ) ) + Min( ( MUR * MUM ) ,( MLU / MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.8290965418471672}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( ( ACS - ACS ) - ( ( ( ACS - ACS ) - ( PN + FirstVNF_RAM_Server ) ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * CS ) / ( RRSe * CS ) ) * CS ) ) / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7359778098342614}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15918367346938775, "obj2": 0.8301818469882315}, {"determining": "( ( ( Const / PN ) * Max( ( BR - ( BR - Max( FirstVNF_CPU_Server,RRS ) ) ),( BR + CRS ) ) ) + ( ( ARS * MDR ) / MRS ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8763076861929563}, {"determining": "( ( ( ARS / FirstVNF_RAM ) / ( DDR - RRS ) ) + Min( MRS ,DDR ) )", "choosing": "( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - MLU ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7682382362251277}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),Max( ( Min( RMSe ,RCSe ) / ( MLU - DS ) ),( ( DS - MUM ) + ( MUC / MUM ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "Max( ( MRS / FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Max( ( MUR / RCSe ),( MLU - RMSe ) )", "obj1": 0.2571428571428571, "obj2": 0.7209169959451058}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "( Max( BR,ARS ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.3836734693877551, "obj2": 0.6024321769698415}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) - RMSe ) ,( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8505605184968625}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * ( RRSe * CS ) ) )", "obj1": 0.39183673469387753, "obj2": 0.5807509337730526}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + MUM ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8512670593952997}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( ( ARS + CRS ) * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( RCSe * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( Max( ACS,ACS ) - ( ( ( ACS - ACS ) - Max( MRS,AMS ) ) + ( FirstVNF_CPU_Server / AMS ) ) )", "choosing": "( MUR / ( Max( RRSe,RMSe ) * DS ) )", "obj1": 0.11224489795918367, "obj2": 0.8785678271677742}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "( Max( ( FirstVNF_RAM / ( ( Min( Min( FirstVNF_RAM_Server ,PN ) ,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / ( Min( Const ,ARS ) * ACS ) ) ),BR ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - RRSe ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.2897959183673469, "obj2": 0.683443981166757}, {"determining": "( ( Const + Const ) + Min( MRS ,DDR ) )", "choosing": "Max( ( Max( Min( RRSe ,MUC ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * Min( ( RRSe / RCSe ) ,MUR ) ) ),Max( ( Min( RMSe ,RCSe ) / ( MLU - DS ) ),( ( DS - MUM ) + ( MUC / MUM ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7330894590505711}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) * ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / AMS ) - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ACS )", "choosing": "( MUR / ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ACS )", "choosing": "( MUR / ( ( ( RMSe * RRSe ) / ( RRSe * CS ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,ACS ) - ( ( PN + ( AMS + DDR ) ) + ( FirstVNF_CPU_Server / AMS ) ) )", "choosing": "( MUR / ( Max( RRSe,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) ) - ACS ) - Max( MRS,AMS ) )", "choosing": "( ( ( Min( MUR ,MUM ) / RCSe ) * CS ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Max( ( Max( Max( Min( DS ,RMSe ),( MUC - MUM ) ),RCSe ) + RCSe ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( AMS * ( Max( ( Const - ( ARS - AMS ) ),CRS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( MUM / DS ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8959183673469387, "obj2": 0.08427414610864148}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( MDR * CRS ) ) ) * FirstVNF_RAM_Server ) - Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "Min( ( ( Max( MUR,MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * MUM ) )", "obj1": 0.5265306122448979, "obj2": 0.43419026894544976}, {"determining": "( Min( Max( ACS,( ( ( BR - ARS ) * FirstVNF_Mem ) - ( PN + RRS ) ) ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,( DS / MUC ) ) / RCSe ) * CS ) )", "obj1": 0.6142857142857143, "obj2": 0.3470339062885368}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( ACS - ( ( Max( Min( ( Const - FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - ( ( RMSe * DS ) - ( MLU - MUC ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13621591377752024}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.5183777922491151}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( ( ( ( FirstVNF_RAM / Min( PN ,CRS ) ) * ( PN / FirstVNF_Mem ) ) - Const ) / Max( FirstVNF_RAM_Server,MDR ) ) - ( ( DDR * DDR ) - RRS ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe * ( Max( RCSe,RRSe ) / MUC ) ) ,( RCSe - RCSe ) ) * Min( ( RCSe - MUM ) ,( ( RMSe - Min( RCSe ,RRSe ) ) * Min( Min( MUM ,MUM ) ,( MUC - CS ) ) ) ) ) ) + ( ( DS * RMSe ) - ( RCSe * ( Max( MUM,( CS - RRSe ) ) + ( MUC * RRSe ) ) ) ) ) / ( MUM * MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.3534309470481605}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( Min( MUM ,DS ) * RCSe ) )", "obj1": 0.39591836734693875, "obj2": 0.5772930803427885}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * RMSe ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.2816326530612245, "obj2": 0.7033027477960233}, {"determining": "Min( Min( ( RRS + ARS ) ,( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * CRS ) ) ,( ( Const / AMS ) + ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( MUM / RCSe ) ) * Min( ( ( MUR + DS ) / MLU ) ,RCSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5050665322937229}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.17755102040816326, "obj2": 0.826283411224185}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) )", "choosing": "Max( DS,( MLU * MLU ) )", "obj1": 0.20612244897959184, "obj2": 0.7822554270280049}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,RRSe ) / ( RRSe / Max( ( Max( ( CS - RMSe ),RRSe ) - RMSe ),RRSe ) ) ) - MUC ) )", "obj1": 0.9102040816326531, "obj2": 0.07878172555239413}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.008612267316345939}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( ( ACS - AMS ) - ( FirstVNF_RAM / AMS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( RRSe * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19795918367346937, "obj2": 0.7873593987025589}, {"determining": "( ( ( PN + FirstVNF_RAM_Server ) - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,CS ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15306122448979592, "obj2": 0.8420523281277321}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.6081632653061224, "obj2": 0.3475950156212663}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU + MRS ) ,FirstVNF_Mem ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5978821466687493}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8758472665180752}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * ( DS / Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5840878001516262}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( ( Max( ( RRSe / RMSe ),CS ) - MUM ) - MUR ),( MLU * DS ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8267656329869154}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15918367346938775, "obj2": 0.8301818469882315}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( ( ( DDR + MDR ) + ( FirstVNF_Mem_Server * ARS ) ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - MLU ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3040816326530612, "obj2": 0.6779352674364264}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( MRS,AMS ) )", "choosing": "( Max( ( MUR * MLU ),RRSe ) / ( RRSe * MLU ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( Max( ( FirstVNF_RAM / ( ( Min( Min( FirstVNF_RAM_Server ,PN ) ,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / ( Min( Const ,ARS ) * ACS ) ) ),BR ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - RRSe ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3020408163265306, "obj2": 0.6797628620118407}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "( Max( BR,ARS ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) )", "obj1": 0.3836734693877551, "obj2": 0.6024321769698415}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) - RMSe ) ,( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8505605184968625}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) ) - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUM - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8669682255677489}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * ( RRSe * CS ) ) )", "obj1": 0.39183673469387753, "obj2": 0.5807509337730526}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( ( CS * RCSe ),( ( RMSe * RRSe ) / ( RRSe * ( ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) - Min( MLU ,MUM ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "Max( Min( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( DS / Min( MUR ,RMSe ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8543016801282447}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + MUM ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8512670593952997}, {"determining": "( ( ( ARS + CRS ) * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( RCSe * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( Const + Min( Const ,( BR - ( FirstVNF_Mem + Const ) ) ) ) + Min( PN ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / MLU ) - MUM )", "obj1": 0.9979591836734694, "obj2": 0.0006704972556648238}, {"determining": "( Max( ( FirstVNF_RAM / ( ( Min( Min( FirstVNF_RAM_Server ,PN ) ,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / ( Min( Const ,ARS ) * ACS ) ) ),BR ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - RRSe ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.2897959183673469, "obj2": 0.683443981166757}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) * ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) + Min( ( ( MLU / DS ) / ( MLU - CS ) ) ,( ( RMSe / RRSe ) * ( ( ( DS / DS ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / AMS ) - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ACS )", "choosing": "( MUR / ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ACS )", "choosing": "( MUR / ( ( ( RMSe * RRSe ) / ( RRSe * CS ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUM * MUR ) + ( MLU - RMSe ) ) / ( ( CS * RRSe ) / Max( CS,MLU ) ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Max( ( Max( Max( Min( DS ,RMSe ),( MUC - MUM ) ),RCSe ) + RCSe ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "( ( AMS * ( Max( ( Const - ( ARS - AMS ) ),CRS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( MUM / DS ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8959183673469387, "obj2": 0.08427414610864148}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( MDR * CRS ) ) ) * FirstVNF_RAM_Server ) - Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "Min( ( ( Max( MUR,MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * MUM ) )", "obj1": 0.5265306122448979, "obj2": 0.43419026894544976}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.5183777922491151}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.3534309470481605}, {"determining": "( ( ACS - ACS ) - ( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) ) )", "choosing": "( ( RMSe * RRSe ) / ( MUM * CS ) )", "obj1": 0.39591836734693875, "obj2": 0.567204374530158}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * RMSe ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.2816326530612245, "obj2": 0.7033027477960233}, {"determining": "Min( Min( ( RRS + ARS ) ,( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * CRS ) ) ,( ( Const / AMS ) + ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( MUM / RCSe ) ) * Min( ( ( MUR + DS ) / MLU ) ,RCSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5050665322937229}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.17755102040816326, "obj2": 0.826283411224185}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) )", "choosing": "Max( DS,( MLU * MLU ) )", "obj1": 0.20612244897959184, "obj2": 0.7822554270280049}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( MUR - ( RCSe / DS ) ) )", "obj1": 0.3836734693877551, "obj2": 0.5934479217817413}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,RRSe ) / ( RRSe / Max( ( Max( ( CS - RMSe ),RRSe ) - RMSe ),RRSe ) ) ) - MUC ) )", "obj1": 0.9102040816326531, "obj2": 0.07878172555239413}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( ( ACS - AMS ) - ( FirstVNF_RAM / AMS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( RRSe * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19795918367346937, "obj2": 0.7873593987025589}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.3534309470481605}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * ( RRSe * CS ) ) )", "obj1": 0.39183673469387753, "obj2": 0.5807509337730526}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( ( Max( ( RRSe / RMSe ),CS ) - MUM ) - MUR ),( MLU * DS ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8267656329869154}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * ( DS / Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5840878001516262}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15918367346938775, "obj2": 0.8301818469882315}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( ( PN + FirstVNF_RAM_Server ) - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,CS ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15306122448979592, "obj2": 0.8420523281277321}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( ( ( DDR + MDR ) + ( FirstVNF_Mem_Server * ARS ) ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - MLU ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3040816326530612, "obj2": 0.6779352674364264}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) ) - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUM - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8669682255677489}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( ( CS * RCSe ),( ( RMSe * RRSe ) / ( RRSe * ( ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) - Min( MLU ,MUM ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8465797354173012}, {"determining": "( ( ( AMS / Min( DDR ,( FirstVNF_Mem_Server * PN ) ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( RCSe / ( ( ( DS * Max( Min( ( MUC + RCSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) * CS ) )", "obj1": 0.2938775510204082, "obj2": 0.6798306655459386}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "( Max( ( FirstVNF_RAM / ( ( Min( Min( FirstVNF_RAM_Server ,PN ) ,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / ( Min( Const ,ARS ) * ACS ) ) ),BR ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - RRSe ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3020408163265306, "obj2": 0.6797628620118407}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) - RMSe ) ,( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8505605184968625}, {"determining": "( ( ACS + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( MRS,AMS ) )", "choosing": "( Max( ( MUR * MLU ),RRSe ) / ( RRSe * MLU ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Min( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( DS / Min( MUR ,RMSe ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8543016801282447}, {"determining": "( ( ( ARS + CRS ) * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( RCSe * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "Max( ( ( Max( Max( ( ACS / DDR ),FirstVNF_RAM_Server ),DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * PN ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + RMSe ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( CS / MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RCSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8516540544261688}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( Const + Min( Const ,( BR - ( FirstVNF_Mem + Const ) ) ) ) + Min( PN ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / MLU ) - MUM )", "obj1": 0.9979591836734694, "obj2": 0.0006704972556648238}, {"determining": "( ( ( ( ( FirstVNF_RAM / Min( PN ,CRS ) ) * ( PN / FirstVNF_Mem ) ) - Const ) / Max( FirstVNF_RAM_Server,MDR ) ) - ( ( DDR * DDR ) - RRS ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe * ( Max( RCSe,RRSe ) / MUC ) ) ,( RCSe - RCSe ) ) * Min( ( RCSe - MUM ) ,( ( RMSe - Min( RCSe ,RRSe ) ) * Min( Min( MUM ,MUM ) ,( MUC - CS ) ) ) ) ) ) + ( ( DS * RMSe ) - ( RCSe * ( Max( MUM,( CS - RRSe ) ) + ( MUC * RRSe ) ) ) ) ) / ( MUM * MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.008612267316345939}, {"determining": "( Max( ( FirstVNF_RAM / ( ( Min( Min( FirstVNF_RAM_Server ,PN ) ,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / ( Min( Const ,ARS ) * ACS ) ) ),BR ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - RRSe ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.2897959183673469, "obj2": 0.683443981166757}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + MUM ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8512670593952997}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUM * MUR ) + ( MLU - RMSe ) ) / ( ( CS * RRSe ) / Max( CS,MLU ) ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "( ( AMS * ( Max( ( Const - ( ARS - AMS ) ),CRS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( MUM / DS ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8959183673469387, "obj2": 0.08427414610864148}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.5183777922491151}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( ( ACS - ACS ) - ( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) ) )", "choosing": "( ( RMSe * RRSe ) / ( MUM * CS ) )", "obj1": 0.39591836734693875, "obj2": 0.567204374530158}, {"determining": "( Max( PN,( PN / DDR ) ) - ( ( Min( CRS ,ACS ) * ACS ) / ( Max( ( MRS * BR ),PN ) + MRS ) ) )", "choosing": "( RRSe / ( RCSe * CS ) )", "obj1": 0.3448979591836735, "obj2": 0.6136564780964527}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.3534309470481605}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * RMSe ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.2816326530612245, "obj2": 0.7033027477960233}, {"determining": "Min( Min( ( RRS + ARS ) ,( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * CRS ) ) ,( ( Const / AMS ) + ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( MUM / RCSe ) ) * Min( ( ( MUR + DS ) / MLU ) ,RCSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5050665322937229}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( Const / ( PN * AMS ) ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( DS ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.17551020408163265, "obj2": 0.8174682526594979}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( MUR - ( RCSe / DS ) ) )", "obj1": 0.3836734693877551, "obj2": 0.5934479217817413}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,RRSe ) / ( RRSe / Max( ( Max( ( CS - RMSe ),RRSe ) - RMSe ),RRSe ) ) ) - MUC ) )", "obj1": 0.9102040816326531, "obj2": 0.07878172555239413}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) * ACS ) - Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.819361697395881}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( FirstVNF_CPU_Server - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * ( RRSe * CS ) ) )", "obj1": 0.39183673469387753, "obj2": 0.5807509337730526}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,( MUM * ( DS / Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5840878001516262}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.3534309470481605}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( ( PN + FirstVNF_RAM_Server ) - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,CS ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15306122448979592, "obj2": 0.8420523281277321}, {"determining": "( ( ( ( ( FirstVNF_RAM / Min( PN ,CRS ) ) * ( PN / FirstVNF_Mem ) ) - Const ) / Max( FirstVNF_RAM_Server,MDR ) ) - ( ( DDR * DDR ) - RRS ) )", "choosing": "( ( ( RMSe + ( Min( ( RRSe * ( Max( RCSe,RRSe ) / MUC ) ) ,( RCSe - RCSe ) ) * Min( ( RCSe - MUM ) ,( ( RMSe - Min( RCSe ,RRSe ) ) * Min( Min( MUM ,MUM ) ,( MUC - CS ) ) ) ) ) ) + ( ( DS * RMSe ) - ( RCSe * ( Max( MUM,( CS - RRSe ) ) + ( MUC * RRSe ) ) ) ) ) / ( MUM * MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( ( ( DDR + MDR ) + ( FirstVNF_Mem_Server * ARS ) ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - MLU ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3040816326530612, "obj2": 0.6779352674364264}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) ) - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUM - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8669682255677489}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15918367346938775, "obj2": 0.8301818469882315}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Max( MDR,ACS ) ) * Min( Max( ( ( ( ( ACS / BR ) + MDR ) / ( RRS / Max( AMS,BR ) ) ) / MDR ),FirstVNF_CPU_Server ) ,BR ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8465797354173012}, {"determining": "( ( ( AMS / Min( DDR ,( FirstVNF_Mem_Server * PN ) ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( RCSe / ( ( ( DS * Max( Min( ( MUC + RCSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) * CS ) )", "obj1": 0.2938775510204082, "obj2": 0.6798306655459386}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "( Max( ( FirstVNF_RAM / ( ( Min( Min( FirstVNF_RAM_Server ,PN ) ,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / ( Min( Const ,ARS ) * ACS ) ) ),BR ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - RRSe ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3020408163265306, "obj2": 0.6797628620118407}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( ( CS * RCSe ),( ( RMSe * RRSe ) / ( RRSe * ( ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) - Min( MLU ,MUM ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( PN + FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15918367346938775, "obj2": 0.8301818469882315}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) - RMSe ) ,( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8505605184968625}, {"determining": "( ( ACS + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( MRS,AMS ) )", "choosing": "( Max( ( MUR * MLU ),RRSe ) / ( RRSe * MLU ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Min( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( DS / Min( MUR ,RMSe ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8543016801282447}, {"determining": "( ( ( ARS + CRS ) * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( RCSe * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "Max( ( ( Max( Max( ( ACS / DDR ),FirstVNF_RAM_Server ),DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * PN ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + RMSe ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( CS / MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RCSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8516540544261688}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( Const + Min( Const ,( BR - ( FirstVNF_Mem + Const ) ) ) ) + Min( PN ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / MLU ) - MUM )", "obj1": 0.9979591836734694, "obj2": 0.0006704972556648238}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.008612267316345939}, {"determining": "( Max( ( FirstVNF_RAM / ( ( Min( Min( FirstVNF_RAM_Server ,PN ) ,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / ( Min( Const ,ARS ) * ACS ) ) ),BR ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - RRSe ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.2897959183673469, "obj2": 0.683443981166757}], "10": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( FirstVNF_RAM_Server * ( MRS + PN ) ) - Min( PN ,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RCSe / RCSe ) - ( MUR + RCSe ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "( ( AMS * ( Max( ( Const - ( ARS - AMS ) ),CRS ) - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Max( ( MUM / DS ),( Min( MUR ,RCSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8959183673469387, "obj2": 0.08427414610864148}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - ( ( FirstVNF_Mem + Max( DDR,ACS ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( Const * DDR ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( Min( ( MUM - DS ) ,Min( MLU ,RMSe ) ) ,( MUC / MLU ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.5183777922491151}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( PN,( PN / DDR ) ) - ( ( Min( CRS ,ACS ) * ACS ) / ( Max( ( MRS * BR ),PN ) + MRS ) ) )", "choosing": "( RRSe / ( RCSe * CS ) )", "obj1": 0.3448979591836735, "obj2": 0.6136564780964527}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.3534309470481605}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "Min( Min( ( RRS + ARS ) ,( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * CRS ) ) ,( ( Const / AMS ) + ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( MUM / RCSe ) ) * Min( ( ( MUR + DS ) / MLU ) ,RCSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5050665322937229}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( MUC * RCSe ) + ( ( Max( CS,RRSe ) / ( RRSe / Max( ( Max( ( CS - RMSe ),RRSe ) - RMSe ),RRSe ) ) ) - MUC ) )", "obj1": 0.9102040816326531, "obj2": 0.07878172555239413}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( ( ( CS + MUR ) / ( MUR / MLU ) ) * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7027200199276792}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) * ACS ) - Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.819361697395881}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.3534309470481605}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( ( PN + FirstVNF_RAM_Server ) - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,CS ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15306122448979592, "obj2": 0.8420523281277321}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - ( ( Const / ( PN * AMS ) ) - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.9897959183673469, "obj2": 0.004701599566423939}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "( ( ( DDR + MDR ) + ( FirstVNF_Mem_Server * ARS ) ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - MLU ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3040816326530612, "obj2": 0.6779352674364264}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / AMS ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * ( RRSe * CS ) ) )", "obj1": 0.16326530612244897, "obj2": 0.824354802655845}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) ) - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUM - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8669682255677489}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8465797354173012}, {"determining": "( ( ( AMS / Min( DDR ,( FirstVNF_Mem_Server * PN ) ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( RCSe / ( ( ( DS * Max( Min( ( MUC + RCSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) * CS ) )", "obj1": 0.2938775510204082, "obj2": 0.6798306655459386}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "( Max( ( FirstVNF_RAM / ( ( Min( Min( FirstVNF_RAM_Server ,PN ) ,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / ( Min( Const ,ARS ) * ACS ) ) ),BR ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - RRSe ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3020408163265306, "obj2": 0.6797628620118407}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) - CRS ) )", "choosing": "( Max( MUR,( MLU * RMSe ) ) * Min( ( RCSe - CS ) ,( MLU - ( ( DS * RCSe ) / RMSe ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6661546094394397}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) - RMSe ) ,( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8505605184968625}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Max( MDR,ACS ) ) * Min( Max( ( ( ( ( ACS / BR ) + MDR ) / ( RRS / Max( AMS,BR ) ) ) / MDR ),FirstVNF_CPU_Server ) ,BR ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "Max( ( ( Max( Max( ( ACS / DDR ),FirstVNF_RAM_Server ),DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * PN ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + RMSe ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( CS / MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RCSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8516540544261688}, {"determining": "( ( ACS + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( MRS,AMS ) )", "choosing": "( Max( ( MUR * MLU ),RRSe ) / ( RRSe * MLU ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15918367346938775, "obj2": 0.8301818469882315}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "Max( Min( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( DS / Min( MUR ,RMSe ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8543016801282447}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15918367346938775, "obj2": 0.8301818469882315}, {"determining": "( ( PN + FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.15714285714285714, "obj2": 0.8332041816145924}], "11": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( FirstVNF_RAM_Server * ( MRS + PN ) ) - ACS )", "choosing": "Min( ( ( RRSe * CS ) / ( RRSe * CS ) ) ,( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * ( MRS + PN ) ) - Min( PN ,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RCSe / RCSe ) - ( MUR + RCSe ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( ( RMSe + RCSe ) / ( MUR / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.4929795898966177}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "Min( Min( ( RRS + ARS ) ,( ( AMS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) * CRS ) ) ,( ( Const / AMS ) + ( MRS / PN ) ) )", "choosing": "( Max( RCSe,( MUM / RCSe ) ) * Min( ( ( MUR + DS ) / MLU ) ,RCSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5050665322937229}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( PN,( PN / DDR ) ) - ( ( Min( CRS ,ACS ) * ACS ) / ( Max( ( MRS * BR ),PN ) + MRS ) ) )", "choosing": "( RRSe / ( RCSe * CS ) )", "obj1": 0.3448979591836735, "obj2": 0.6136564780964527}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) + ( FirstVNF_CPU / MDR ) ) ) ),Min( Const ,( FirstVNF_RAM_Server * Const ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) - RMSe ) ,( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8505605184968625}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.3534309470481605}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( ( ( CS + MUR ) / ( MUR / MLU ) ) * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7027200199276792}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ( DDR + MDR ) + ( FirstVNF_Mem_Server * ARS ) ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - MLU ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3040816326530612, "obj2": 0.6779352674364264}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.3534309470481605}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( ACS - ( ( Const / ( PN * AMS ) ) - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.9897959183673469, "obj2": 0.004701599566423939}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) ) - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUM - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8669682255677489}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Max( MDR,ACS ) ) * Min( Max( ( ( ( ( ACS / BR ) + MDR ) / ( RRS / Max( AMS,BR ) ) ) / MDR ),FirstVNF_CPU_Server ) ,BR ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MUR ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6786830207174805}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "Max( ( ( Max( Max( ( ACS / DDR ),FirstVNF_RAM_Server ),DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * PN ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + RMSe ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( CS / MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RCSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8516540544261688}, {"determining": "( ( ACS + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( MRS,AMS ) )", "choosing": "( Max( ( MUR * MLU ),RRSe ) / ( RRSe * MLU ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ( AMS / Min( DDR ,( FirstVNF_Mem_Server * PN ) ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( RCSe / ( ( ( DS * Max( Min( ( MUC + RCSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) * CS ) )", "obj1": 0.2938775510204082, "obj2": 0.6798306655459386}, {"determining": "Max( Min( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( DS / Min( MUR ,RMSe ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8543016801282447}, {"determining": "( ( ACS - MDR ) - ( ( ( ACS * ( Const / ( PN * AMS ) ) ) * FirstVNF_RAM ) / AMS ) )", "choosing": "( ( RRSe * CS ) / ( ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) / ( CS * RRSe ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0011148495505251552}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( Const + Min( Const ,( BR - ( FirstVNF_Mem + Const ) ) ) ) + Min( MRS ,DDR ) )", "choosing": "Min( Max( RMSe,MLU ) ,( ( ( ( RMSe + RCSe ) - Max( MUR,RCSe ) ) + ( MLU * MUM ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * ( MRS + PN ) ) - ACS )", "choosing": "Min( ( ( RRSe * CS ) / ( RRSe * CS ) ) ,( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( PN,( PN / DDR ) ) - ( ( Min( CRS ,ACS ) * ACS ) / ( Max( ( MRS * BR ),PN ) + MRS ) ) )", "choosing": "( RRSe / ( RCSe * CS ) )", "obj1": 0.3448979591836735, "obj2": 0.6136564780964527}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe * DS ) - Min( CS ,RRSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7433920570727848}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( ( ( CS + MUR ) / ( MUR / MLU ) ) * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7027200199276792}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ( DDR + MDR ) + ( FirstVNF_Mem_Server * ARS ) ) + ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( RMSe - MUM ) + Min( Min( MUM ,( Min( ( RCSe + ( ( MUC + CS ) - MLU ) ) ,RMSe ) - CS ) ) ,MLU ) )", "obj1": 0.3040816326530612, "obj2": 0.6779352674364264}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( ACS - ( ( Const / ( PN * AMS ) ) - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.9897959183673469, "obj2": 0.004701599566423939}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) ) - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUM - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8669682255677489}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "Max( Min( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( DS / Min( MUR ,RMSe ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8543016801282447}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MUR ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6786830207174805}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Max( MDR,ACS ) ) * Min( Max( ( ( ( ( ACS / BR ) + MDR ) / ( RRS / Max( AMS,BR ) ) ) / MDR ),FirstVNF_CPU_Server ) ,BR ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "( ( ACS + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( MRS,AMS ) )", "choosing": "( Max( ( MUR * MLU ),RRSe ) / ( RRSe * MLU ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ( AMS / Min( DDR ,( FirstVNF_Mem_Server * PN ) ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( RCSe / ( ( ( DS * Max( Min( ( MUC + RCSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) * CS ) )", "obj1": 0.2938775510204082, "obj2": 0.6798306655459386}, {"determining": "( ( ACS - MDR ) - ( ( ( ACS * ( Const / ( PN * AMS ) ) ) * FirstVNF_RAM ) / AMS ) )", "choosing": "( ( RRSe * CS ) / ( ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) / ( CS * RRSe ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0011148495505251552}, {"determining": "( ( ( FirstVNF_RAM_Server * ( MRS + PN ) ) - Min( PN ,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RCSe / RCSe ) - ( MUR + RCSe ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * BR ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - ( ( PN + ( AMS + DDR ) ) + ( FirstVNF_CPU_Server / AMS ) ) )", "choosing": "( MUR / ( ( ( RMSe * RRSe ) / ( RRSe * CS ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - Max( MRS,AMS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ACS ) - Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * ( ( ( MUM * MUR ) + ( MLU - RMSe ) ) / ( ( CS * RRSe ) / Max( CS,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( Const ,( BR - ( FirstVNF_Mem + Const ) ) ) ) + Min( MRS ,DDR ) )", "choosing": "Min( Max( RMSe,MLU ) ,( ( ( ( RMSe + RCSe ) - Max( MUR,RCSe ) ) + ( MLU * MUM ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.47346938775510206, "obj2": 0.4801095312697442}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( PN,( PN / DDR ) ) - ( ( Min( CRS ,ACS ) * ACS ) / ( Max( ( MRS * BR ),PN ) + MRS ) ) )", "choosing": "( RRSe / ( RCSe * CS ) )", "obj1": 0.3448979591836735, "obj2": 0.6136564780964527}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( ( ( CS + MUR ) / ( MUR / MLU ) ) * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7027200199276792}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( Max( AMS,( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) - ACS ) - Min( RRS ,FirstVNF_Mem ) )", "choosing": "( Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) / ( MUM * CS ) )", "obj1": 0.23673469387755103, "obj2": 0.7408769437794277}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( ACS - ( ( Const / ( PN * AMS ) ) - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( Min( DS ,RRSe ) ,( RCSe * ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.9897959183673469, "obj2": 0.004701599566423939}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) ) - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUM - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8669682255677489}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Max( MDR,ACS ) ) * Min( Max( ( ( ( ( ACS / BR ) + MDR ) / ( RRS / Max( AMS,BR ) ) ) / MDR ),FirstVNF_CPU_Server ) ,BR ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "Max( Min( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( DS / Min( MUR ,RMSe ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8543016801282447}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8579727868926731}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( ( FirstVNF_CPU_Server * Const ) / MDR ) ) ) ),Min( Const ,( ACS * Const ) ) )", "choosing": "( ( ( CS / Max( ( CS * DS ),Min( MUM ,MLU ) ) ) - RMSe ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8592656470354328}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( BR - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * ( ( ( ( ( MUC * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ) / CS ) )", "obj1": 0.9959183673469387, "obj2": 0.002096521483622156}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MUR ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6786830207174805}, {"determining": "( ( ( MRS / PN ) + ( PN + ( PN - FirstVNF_Mem_Server ) ) ) - ( ACS - ACS ) )", "choosing": "( ( RRSe / CS ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.003541937821226448}, {"determining": "( ( ACS + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( MRS,AMS ) )", "choosing": "( Max( ( MUR * MLU ),RRSe ) / ( RRSe * MLU ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}], "14": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( FirstVNF_CPU * ( ( MRS - ACS ) + PN ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( ( ( ( ( ( ( RCSe - RCSe ) - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * ( MUR / DS ) ) / CS ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * ( ( ( MUM * MUR ) + ( MLU - RMSe ) ) / ( ( CS * RRSe ) / Max( CS,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( RRS * ( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,RMSe ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5346938775510204, "obj2": 0.4287612025897527}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( PN,( PN / DDR ) ) - ( ( Min( CRS ,ACS ) * ACS ) / ( Max( ( MRS * BR ),PN ) + MRS ) ) )", "choosing": "( RRSe / ( RCSe * CS ) )", "obj1": 0.3448979591836735, "obj2": 0.6136564780964527}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.47346938775510206, "obj2": 0.4801095312697442}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( ( ( CS + MUR ) / ( MUR / MLU ) ) * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7027200199276792}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - ( PN - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( Const / PN ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.052518900495963035}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "Max( Max( PN,FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7236035286193353}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ( DDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) ) * ( FirstVNF_RAM - ACS ) )", "choosing": "Max( ( Max( MUM,MLU ) * Min( RCSe ,Max( ( DS * Min( Max( ( CS + MUR ),RMSe ) ,Max( ( CS * RCSe ),MUM ) ) ),DS ) ) ),( ( MUR - ( Min( Max( RMSe,MUC ) ,RCSe ) / Max( ( Min( MUC ,( CS * RRSe ) ) - RRSe ),Min( MUC ,MLU ) ) ) ) - ( MLU * RRSe ) ) )", "obj1": 0.9408163265306122, "obj2": 0.058149135995693324}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MUR ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6786830207174805}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,MRS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_RAM / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MLU * DS ) ) ) ) ) * ( MLU * DS ) ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN * ( ( PN - ( CRS - ( RRS + Max( AMS,MDR ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "Max( Min( Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) ) ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( DS / Min( MUR ,RMSe ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8543016801282447}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Max( MDR,ACS ) ) * Min( Max( ( ( ( ( ACS / BR ) + MDR ) / ( RRS / Max( AMS,BR ) ) ) / MDR ),FirstVNF_CPU_Server ) ,BR ) ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.755932614511744}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}], "15": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( CS / RRSe ) / ( RCSe * MLU ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( ( MRS - ACS ) + PN ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( ( ( ( ( ( ( RCSe - RCSe ) - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * ( MUR / DS ) ) / CS ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RMSe * RRSe ) + ( ( RMSe * RRSe ) + Min( DS ,( MUM * MUM ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6032502765097305}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( RRS * ( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,RMSe ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5346938775510204, "obj2": 0.4287612025897527}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( PN,( PN / DDR ) ) - ( ( Min( CRS ,ACS ) * ACS ) / ( Max( ( MRS * BR ),PN ) + MRS ) ) )", "choosing": "( RRSe / ( RCSe * CS ) )", "obj1": 0.3448979591836735, "obj2": 0.6136564780964527}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.47346938775510206, "obj2": 0.4801095312697442}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - FirstVNF_RAM_Server ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - ( PN - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( Const / PN ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.052518900495963035}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( Min( ( ( FirstVNF_CPU_Server * PN ) + ( RRS * FirstVNF_Mem_Server ) ) ,ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Max( ( RRSe + Max( Max( Min( DS ,RMSe ),( DS / RMSe ) ),( DS / RMSe ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( RCSe - MUC ) * MUM ) )", "obj1": 0.9979591836734694, "obj2": 0.0006704972556648238}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( Min( FirstVNF_RAM ,BR ) * ( ( FirstVNF_RAM_Server / MRS ) / ( Const - MDR ) ) )", "choosing": "( Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( Max( MUM,Max( ( DS / Min( ( DS / MLU ) ,( RRSe * CS ) ) ),( ( MLU * ( DS - RCSe ) ) / RCSe ) ) ),Min( MUC ,CS ) ) ) * ( MUR - ( ( ( ( Min( MUM ,( DS - RRSe ) ) - Max( MUM,MUR ) ) - MUC ) + DS ) * MUM ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7037805744275537}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ( DDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) ) * ( FirstVNF_RAM - ACS ) )", "choosing": "Max( ( Max( MUM,MLU ) * Min( RCSe ,Max( ( DS * Min( Max( ( CS + MUR ),RMSe ) ,Max( ( CS * RCSe ),MUM ) ) ),DS ) ) ),( ( MUR - ( Min( Max( RMSe,MUC ) ,RCSe ) / Max( ( Min( MUC ,( CS * RRSe ) ) - RRSe ),Min( MUC ,MLU ) ) ) ) - ( MLU * RRSe ) ) )", "obj1": 0.9408163265306122, "obj2": 0.058149135995693324}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( ( ( CS + MUR ) / ( MUR / MLU ) ) * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7027200199276792}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MUR ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6786830207174805}], "16": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( FirstVNF_CPU * ( Min( BR ,( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( PN + FirstVNF_RAM_Server ) ) ) + PN ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( ( ( ( ( ( ( RCSe - RCSe ) - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * ( MUR / DS ) ) / CS ) ,Min( ( ( DS - ( ( DS / ( RCSe / MUR ) ) - MLU ) ) - ( Max( RRSe,Min( RCSe ,MUC ) ) + ( MLU - Max( ( MLU * Max( RCSe,RRSe ) ),Max( ( CS + RRSe ),CS ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( CS / RRSe ) / ( RCSe * MLU ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( ( ACS - ( RRS * ( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,RMSe ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5346938775510204, "obj2": 0.4287612025897527}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( Max( BR,( AMS / ( ( Min( ACS ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( Max( ( RCSe - ( CS + ( RRSe + DS ) ) ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3489795918367347, "obj2": 0.6059186409679297}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( PN,( PN / DDR ) ) - ( ( Min( CRS ,ACS ) * ACS ) / ( Max( ( MRS * BR ),PN ) + MRS ) ) )", "choosing": "( RRSe / ( RCSe * CS ) )", "obj1": 0.3448979591836735, "obj2": 0.6136564780964527}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.47346938775510206, "obj2": 0.4801095312697442}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - FirstVNF_RAM_Server ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - ( PN - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( Const / PN ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.052518900495963035}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( Min( FirstVNF_RAM ,BR ) * ( ( FirstVNF_RAM_Server / MRS ) / ( Const - MDR ) ) )", "choosing": "( Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( Max( MUM,Max( ( DS / Min( ( DS / MLU ) ,( RRSe * CS ) ) ),( ( MLU * ( DS - RCSe ) ) / RCSe ) ) ),Min( MUC ,CS ) ) ) * ( MUR - ( ( ( ( Min( MUM ,( DS - RRSe ) ) - Max( MUM,MUR ) ) - MUC ) + DS ) * MUM ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7037805744275537}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ( DDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) ) * ( FirstVNF_RAM - ACS ) )", "choosing": "Max( ( Max( MUM,MLU ) * Min( RCSe ,Max( ( DS * Min( Max( ( CS + MUR ),RMSe ) ,Max( ( CS * RCSe ),MUM ) ) ),DS ) ) ),( ( MUR - ( Min( Max( RMSe,MUC ) ,RCSe ) / Max( ( Min( MUC ,( CS * RRSe ) ) - RRSe ),Min( MUC ,MLU ) ) ) ) - ( MLU * RRSe ) ) )", "obj1": 0.9408163265306122, "obj2": 0.058149135995693324}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( ( ( CS + MUR ) / ( MUR / MLU ) ) * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7027200199276792}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MUR ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6786830207174805}], "17": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( RRS - ( ( ( ARS + ( ACS / MDR ) ) - Min( ACS ,ACS ) ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( MUM / ( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( BR ,( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( PN + FirstVNF_RAM_Server ) ) ) + PN ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( ( ( ( ( ( ( RCSe - RCSe ) - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * ( MUR / DS ) ) / CS ) ,Min( ( ( DS - ( ( DS / ( RCSe / MUR ) ) - MLU ) ) - ( Max( RRSe,Min( RCSe ,MUC ) ) + ( MLU - Max( ( MLU * Max( RCSe,RRSe ) ),Max( ( CS + RRSe ),CS ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( ( ACS - ( RRS * ( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,RMSe ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5346938775510204, "obj2": 0.4287612025897527}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.47346938775510206, "obj2": 0.4801095312697442}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - FirstVNF_RAM_Server ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - ( PN - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( Const / PN ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.052518900495963035}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( Min( FirstVNF_RAM ,BR ) * ( ( FirstVNF_RAM_Server / MRS ) / ( Const - MDR ) ) )", "choosing": "( Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( Max( MUM,Max( ( DS / Min( ( DS / MLU ) ,( RRSe * CS ) ) ),( ( MLU * ( DS - RCSe ) ) / RCSe ) ) ),Min( MUC ,CS ) ) ) * ( MUR - ( ( ( ( Min( MUM ,( DS - RRSe ) ) - Max( MUM,MUR ) ) - MUC ) + DS ) * MUM ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7037805744275537}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ( DDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) ) * ( FirstVNF_RAM - ACS ) )", "choosing": "Max( ( Max( MUM,MLU ) * Min( RCSe ,Max( ( DS * Min( Max( ( CS + MUR ),RMSe ) ,Max( ( CS * RCSe ),MUM ) ) ),DS ) ) ),( ( MUR - ( Min( Max( RMSe,MUC ) ,RCSe ) / Max( ( Min( MUC ,( CS * RRSe ) ) - RRSe ),Min( MUC ,MLU ) ) ) ) - ( MLU * RRSe ) ) )", "obj1": 0.9408163265306122, "obj2": 0.058149135995693324}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( ( ( CS + MUR ) / ( MUR / MLU ) ) * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.7027200199276792}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MUR ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6786830207174805}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( CS / RRSe ) / ( RCSe * MLU ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( Max( MDR,Min( ( Max( Min( FirstVNF_CPU ,MDR ),( PN - Const ) ) - Const ) ,RRS ) ) + ( RRS * FirstVNF_Mem_Server ) ) ,ACS ) - ( FirstVNF_Mem - ( MDR - ( DDR - BR ) ) ) )", "choosing": "Min( Max( MUR,( MUM + DS ) ) ,Min( ( Max( ( CS + ( ( MUR * ( CS * MLU ) ) * ( RCSe + MUR ) ) ),MUR ) / RCSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( ( ARS + ( ACS / MDR ) ) - Min( ACS ,ACS ) ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( MUM / ( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( ( ACS - ( RRS * ( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,RMSe ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5346938775510204, "obj2": 0.4287612025897527}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.47346938775510206, "obj2": 0.4801095312697442}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * ( ( FirstVNF_Mem * AMS ) - CRS ) ) ) - ARS ) + ( BR / ( FirstVNF_Mem_Server * ( BR * AMS ) ) ) ) - ( FirstVNF_RAM - ( Max( PN,AMS ) - FirstVNF_RAM ) ) )", "choosing": "( ( MLU * Min( ( ( ( Min( ( DS / RRSe ) ,DS ) - Min( MUM ,RRSe ) ) * DS ) - RCSe ) ,DS ) ) / Max( ( ( ( RRSe * ( ( RCSe - ( RCSe + MUR ) ) + Min( ( MLU - MUM ) ,RRSe ) ) ) * ( RRSe + ( Min( RRSe ,MUR ) + ( RRSe / ( MLU + DS ) ) ) ) ) + DS ),( MUR - MLU ) ) )", "obj1": 0.753061224489796, "obj2": 0.18252119223732197}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - FirstVNF_RAM_Server ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - ( PN - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( Const / PN ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.052518900495963035}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ( DDR + FirstVNF_RAM ) + ( FirstVNF_Mem_Server * ARS ) ) * ( FirstVNF_RAM - ACS ) )", "choosing": "Max( ( Max( MUM,MLU ) * Min( RCSe ,Max( ( DS * Min( Max( ( CS + MUR ),RMSe ) ,Max( ( CS * RCSe ),MUM ) ) ),DS ) ) ),( ( MUR - ( Min( Max( RMSe,MUC ) ,RCSe ) / Max( ( Min( MUC ,( CS * RRSe ) ) - RRSe ),Min( MUC ,MLU ) ) ) ) - ( MLU * RRSe ) ) )", "obj1": 0.9408163265306122, "obj2": 0.058149135995693324}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ( FirstVNF_CPU * Const ) / Max( Min( ARS ,FirstVNF_CPU_Server ),BR ) ) - ( ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,( ACS * Max( AMS,Max( RRS,ARS ) ) ) ) ) - ACS ) )", "choosing": "( ( DS * ( RCSe + MUR ) ) / ( RRSe * ( ( Max( RMSe,MLU ) * DS ) - MLU ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8742780777986475}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MUR ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6786830207174805}, {"determining": "( ( FirstVNF_CPU * ( Min( BR ,( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( PN + FirstVNF_RAM_Server ) ) ) + PN ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( ( ( ( ( ( ( RCSe - RCSe ) - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * ( MUR / DS ) ) / CS ) ,Min( ( ( DS - ( ( DS / ( RCSe / MUR ) ) - MLU ) ) - ( Max( RRSe,Min( RCSe ,MUC ) ) + ( MLU - Max( ( MLU * Max( RCSe,RRSe ) ),Max( ( CS + RRSe ),CS ) ) ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( BR / ARS ) - Max( ACS,ACS ) )", "choosing": "( ( RRSe * ( ( ( MUR * MLU ) / MUR ) * ( MUM / DS ) ) ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,Min( ( Max( Min( FirstVNF_CPU ,MDR ),( PN - Const ) ) - Const ) ,RRS ) ) + ( RRS * FirstVNF_Mem_Server ) ) ,ACS ) - ( FirstVNF_Mem - ( MDR - ( DDR - BR ) ) ) )", "choosing": "Min( Max( MUR,( MUM + DS ) ) ,Min( ( Max( ( CS + ( ( MUR * ( CS * MLU ) ) * ( RCSe + MUR ) ) ),MUR ) / RCSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.47346938775510206, "obj2": 0.4801095312697442}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - FirstVNF_RAM_Server ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - ( PN - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( Const / PN ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.052518900495963035}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( FirstVNF_CPU - ( ARS - RRS ) ) - ( RRS * Min( CRS ,AMS ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * Min( MUM ,( DS / ( Max( Min( MLU ,RCSe ),( Min( CS ,RCSe ) + RCSe ) ) - ( CS * MUM ) ) ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.05807333782174495}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ( FirstVNF_CPU * Const ) / Max( Min( ARS ,FirstVNF_CPU_Server ),BR ) ) - ( ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,( ACS * Max( AMS,Max( RRS,ARS ) ) ) ) ) - ACS ) )", "choosing": "( ( DS * ( RCSe + MUR ) ) / ( RRSe * ( ( Max( RMSe,MLU ) * DS ) - MLU ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8742780777986475}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( Max( RRSe,MUR ) * RCSe ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6786830207174805}, {"determining": "( ( RRS - ( ( ( ARS + ( ACS / MDR ) ) - Min( ACS ,ACS ) ) - ( MDR * CRS ) ) ) + ( ( DDR - BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( MUM / ( DS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( BR / ARS ) + ( ( AMS / FirstVNF_CPU_Server ) - ( BR / ARS ) ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ACS ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ARS ) - Max( ACS,ACS ) )", "choosing": "( ( RRSe * ( ( ( MUR * MLU ) / MUR ) * ( MUM / DS ) ) ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.47346938775510206, "obj2": 0.4801095312697442}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - FirstVNF_RAM_Server ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( Min( FirstVNF_CPU ,DDR ),Max( Min( CRS ,PN ),PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( Min( RCSe ,DS ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.746901694993175}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - ( PN - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( Const / PN ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.052518900495963035}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / ( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( RRS ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) ) )", "choosing": "( ( MUR - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7020408163265306, "obj2": 0.23835340879506414}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( BR - ARS ) * FirstVNF_Mem ) - ( ( ACS - ACS ) - ( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - MUR ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.21020408163265306, "obj2": 0.7634851176369545}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( FirstVNF_CPU - ( ARS - RRS ) ) - ( RRS * Min( CRS ,AMS ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * Min( MUM ,( DS / ( Max( Min( MLU ,RCSe ),( Min( CS ,RCSe ) + RCSe ) ) - ( CS * MUM ) ) ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.05807333782174495}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ( FirstVNF_CPU * Const ) / Max( Min( ARS ,FirstVNF_CPU_Server ),BR ) ) - ( ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,( ACS * Max( AMS,Max( RRS,ARS ) ) ) ) ) - ACS ) )", "choosing": "( ( DS * ( RCSe + MUR ) ) / ( RRSe * ( ( Max( RMSe,MLU ) * DS ) - MLU ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8742780777986475}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( ARS ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8824927931895122}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}], "21": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( BR / FirstVNF_RAM ) - Max( ACS,ACS ) )", "choosing": "( ( RRSe * ( ( Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) / MUR ) * ( MUM / ( DS + MUM ) ) ) ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ARS ) + ( ( AMS / FirstVNF_CPU_Server ) - ( BR / ARS ) ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ACS ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ( BR - ARS ) / Const ) - ( Max( ( Min( Max( ( FirstVNF_RAM_Server - MDR ),DDR ) ,( FirstVNF_RAM_Server - Max( ( AMS - DDR ),Max( FirstVNF_Mem_Server,RRS ) ) ) ) - Min( ( FirstVNF_RAM + ( ARS - Max( BR,MRS ) ) ) ,FirstVNF_RAM_Server ) ),MDR ) - Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM * MUC ) / Max( RCSe,Min( Min( DS ,( MUM / ( ( ( MUR / RCSe ) - ( RRSe / RCSe ) ) / MLU ) ) ) ,( ( MUM + RCSe ) + Max( ( ( MUR * MUM ) * MUR ),( MUM - Max( ( RCSe - RRSe ),MUM ) ) ) ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2667229097525268}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "Max( ( ( Max( CRS,DDR ) + ( MDR / FirstVNF_RAM ) ) / FirstVNF_CPU ),( ( ( FirstVNF_Mem_Server * PN ) + FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( DS - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( DS * Max( Min( ( MUC + RRSe ) ,MLU ),( ( RMSe * RCSe ) - Min( MUR ,RRSe ) ) ) ) - ( DS / MUC ) ) + RCSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8639209837913696}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,Max( Const,DDR ) ) )", "choosing": "( ( RRSe * ( Min( ( ( CS / ( ( CS * DS ) / Min( MUM ,MLU ) ) ) - RMSe ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RMSe * ( MLU / DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8550243591223387}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - FirstVNF_RAM_Server ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - ( PN - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( Const / PN ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.052518900495963035}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / ( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( RRS ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) ) )", "choosing": "( ( MUR - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7020408163265306, "obj2": 0.23835340879506414}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.689795918367347, "obj2": 0.2387869420682322}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ( FirstVNF_CPU * Const ) / Max( Min( ARS ,FirstVNF_CPU_Server ),BR ) ) - ( ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,( ACS * Max( AMS,Max( RRS,ARS ) ) ) ) ) - ACS ) )", "choosing": "( ( DS * ( RCSe + MUR ) ) / ( RRSe * ( ( Max( RMSe,MLU ) * DS ) - MLU ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8742780777986475}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}], "22": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ( Const - CRS ),DDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( ( MUM + RMSe ) * ( RMSe + RCSe ) ) + Min( ( MUR - CS ) ,( MLU / MUC ) ) ) - Max( ( ( CS / RRSe ) / ( RCSe * MLU ) ),( ( DS + DS ) - ( Max( CS,Min( MUM ,MUM ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - Max( ACS,ACS ) )", "choosing": "( ( RRSe * ( ( Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) / MUR ) * ( MUM / ( DS + MUM ) ) ) ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6061224489795919, "obj2": 0.32816769689398045}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,PN ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( RRSe ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5959183673469388, "obj2": 0.35214533558125405}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Max( FirstVNF_RAM,( BR / FirstVNF_RAM_Server ) ) - Max( Const,Min( Const ,Min( Min( ACS ,MRS ) ,BR ) ) ) )", "choosing": "( ( MLU / Min( ( CS * ( RCSe + Max( Min( MUC ,( RRSe - MLU ) ),RCSe ) ) ) ,( CS - CS ) ) ) / ( RMSe * ( MUM * Max( ( CS / Max( RMSe,RRSe ) ),RRSe ) ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2667229097525268}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( DS / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * ( ACS / FirstVNF_CPU_Server ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Max( CS,MLU ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8687551772251779}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / RRS ) ) ) )", "choosing": "( ( RCSe * CS ) / ( RRSe * DS ) )", "obj1": 0.14489795918367346, "obj2": 0.8466470678377129}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,( ACS - FirstVNF_RAM_Server ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.6122448979591837, "obj2": 0.3009364722639046}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( BR,( AMS / ( ACS + ( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( ACS - RRS ) ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( CRS - DDR ) ) ) ) ) - ( PN - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( Const / PN ) ) ) )", "choosing": "Min( Max( MUM,RRSe ) ,( RCSe + RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.052518900495963035}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - Max( RRS,ARS ) )", "choosing": "( ( ( ( MUM * MLU ) + ( ( ( RCSe / ( DS + ( RMSe - RMSe ) ) ) + ( MUM / ( RCSe + RCSe ) ) ) + ( ( MUM * ( RRSe * MUC ) ) + DS ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MUM * MLU ) ),RMSe ) ) )", "obj1": 0.9346938775510204, "obj2": 0.05807333782174496}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ( FirstVNF_CPU * Const ) / Max( Min( ARS ,FirstVNF_CPU_Server ),BR ) ) - ( ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,( ACS * Max( AMS,Max( RRS,ARS ) ) ) ) ) - ACS ) )", "choosing": "( ( DS * ( RCSe + MUR ) ) / ( RRSe * ( ( Max( RMSe,MLU ) * DS ) - MLU ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8742780777986475}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( ( ( BR - ARS ) / Const ) - ( Max( ( Min( Max( ( FirstVNF_RAM_Server - MDR ),DDR ) ,( FirstVNF_RAM_Server - Max( ( AMS - DDR ),Max( FirstVNF_Mem_Server,RRS ) ) ) ) - Min( ( FirstVNF_RAM + ( ARS - Max( BR,MRS ) ) ) ,FirstVNF_RAM_Server ) ),MDR ) - Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM * MUC ) / Max( RCSe,Min( Min( DS ,( MUM / ( ( ( MUR / RCSe ) - ( RRSe / RCSe ) ) / MLU ) ) ) ,( ( MUM + RCSe ) + Max( ( ( MUR * MUM ) * MUR ),( MUM - Max( ( RCSe - RRSe ),MUM ) ) ) ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2667229097525268}, {"determining": "( ( ( BR / ARS ) + ( ( AMS / FirstVNF_CPU_Server ) - ( BR / ARS ) ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ACS ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ( Const - CRS ),DDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( ( MLU / DS ) / ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUC ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( RMSe - CS ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const - CRS ),DDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( ( MUM + RMSe ) * ( RMSe + RCSe ) ) + Min( ( MUR - CS ) ,( MLU / MUC ) ) ) - Max( ( ( CS / RRSe ) / ( RCSe * MLU ) ),( ( DS + DS ) - ( Max( CS,Min( MUM ,MUM ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( CS * RRSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8929858082758008}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2667229097525268}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + ( AMS * FirstVNF_RAM ) ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RMSe * DS ) - ( MUR / MLU ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.9408163265306122, "obj2": 0.045396681635840874}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "Max( Min( ( FirstVNF_Mem_Server + ( BR + MRS ) ) ,( Min( PN ,RRS ) - FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / ( CRS - Min( ( ( RRS * Max( PN,( AMS / AMS ) ) ) * ( ACS * FirstVNF_CPU_Server ) ) ,Min( PN ,MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( MLU - Min( ( RCSe * ( ( CS + DS ) - RMSe ) ) ,MUR ) ) / MUR ) ) + Max( RRSe,( Min( DS ,( RMSe + ( MUC * MLU ) ) ) + ( DS / ( MUR / RMSe ) ) ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8460615528311062}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - Max( RRS,ARS ) )", "choosing": "( ( ( ( MUM * MLU ) + ( ( ( RCSe / ( DS + ( RMSe - RMSe ) ) ) + ( MUM / ( RCSe + RCSe ) ) ) + ( ( MUM * ( RRSe * MUC ) ) + DS ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MUM * MLU ) ),RMSe ) ) )", "obj1": 0.9346938775510204, "obj2": 0.05807333782174496}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2667229097525268}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Max( FirstVNF_RAM,( BR / FirstVNF_RAM_Server ) ) - Max( Const,Min( Const ,Min( Min( ACS ,MRS ) ,BR ) ) ) )", "choosing": "( ( MLU / Min( ( CS * ( RCSe + Max( Min( MUC ,( RRSe - MLU ) ),RCSe ) ) ) ,( CS - CS ) ) ) / ( RMSe * ( MUM * Max( ( CS / Max( RMSe,RRSe ) ),RRSe ) ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Min( PN ,ACS ) - ( RRS + Max( FirstVNF_CPU,( ( BR / DDR ) / ACS ) ) ) )", "choosing": "( ( Min( Min( CS ,( Min( MUM ,RRSe ) * MUM ) ) ,RCSe ) + ( MUR - DS ) ) / ( RMSe * RRSe ) )", "obj1": 0.9979591836734694, "obj2": 0.0006276619887356751}, {"determining": "Max( Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,( Const - ( CRS + ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / MDR ) ) ) ),Min( Const ,( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( Min( ( ( ( ( DS * CS ) / DS ) + Min( MUM ,( MUM * MUM ) ) ) - ( MUM - RMSe ) ) ,DS ) + ( DS / Min( MUR ,RMSe ) ) ) ) + ( RCSe * ( MLU / DS ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8460615528311062}, {"determining": "( ( BR / FirstVNF_RAM ) - Max( ACS,ACS ) )", "choosing": "( ( RRSe * ( ( Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) / MUR ) * ( MUM / ( DS + MUM ) ) ) ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ARS ) + ( ( AMS / FirstVNF_CPU_Server ) - ( BR / ARS ) ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ACS ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ( Const - CRS ),DDR ) - Max( ACS,ACS ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) ,RRSe ) - ( RMSe - CS ) ) ,( ( RCSe - MUC ) * ( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const - CRS ),DDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( ( MLU / DS ) / ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUC ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( RMSe - CS ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2667229097525268}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + ( AMS * FirstVNF_RAM ) ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RMSe * DS ) - ( MUR / MLU ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.9408163265306122, "obj2": 0.045396681635840874}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_CPU / BR ) ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - Max( RRS,ARS ) )", "choosing": "( ( ( ( MUM * MLU ) + ( ( ( RCSe / ( DS + ( RMSe - RMSe ) ) ) + ( MUM / ( RCSe + RCSe ) ) ) + ( ( MUM * ( RRSe * MUC ) ) + DS ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MUM * MLU ) ),RMSe ) ) )", "obj1": 0.9346938775510204, "obj2": 0.05807333782174496}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2667229097525268}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( Min( PN ,ACS ) - ( RRS + Max( FirstVNF_CPU,( ( BR / DDR ) / ACS ) ) ) )", "choosing": "( ( Min( Min( CS ,( Min( MUM ,RRSe ) * MUM ) ) ,RCSe ) + ( MUR - DS ) ) / ( RMSe * RRSe ) )", "obj1": 0.9979591836734694, "obj2": 0.0006276619887356751}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}], "25": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),( ARS + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( RMSe - CS ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const - CRS ),DDR ) - Max( ACS,ACS ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) ,RRSe ) - ( RMSe - CS ) ) ,( ( RCSe - MUC ) * ( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),AMS ) )", "choosing": "( ( ( Min( MLU ,MUM ) + Max( RMSe,( CS - Max( ( ( MUM + MLU ) + MUM ),CS ) ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MLU * MLU ) ),RMSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.48490040310765264}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / ( ( FirstVNF_Mem - AMS ) / AMS ) ) / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ) ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Min( CS ,Max( ( MUR * MUM ),Min( MLU ,Max( MLU,( MUM * DS ) ) ) ) ) * RCSe ) - CS ) ,( RCSe + RCSe ) )", "obj1": 0.9469387755102041, "obj2": 0.04107530596836981}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( ACS - ( ( RRS * ( Min( ( FirstVNF_Mem_Server / RRS ) ,( ( DDR * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / ARS ) ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + ( MLU - ( ( ( DS - MUC ) - RRSe ) - MUR ) ) ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.45510204081632655, "obj2": 0.49945079824958044}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.16936611429008466}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * CS ) - MUC ) )", "obj1": 0.44693877551020406, "obj2": 0.5042063202290021}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + ( AMS * FirstVNF_RAM ) ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RMSe * DS ) - ( MUR / MLU ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.9408163265306122, "obj2": 0.045396681635840874}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( ( FirstVNF_CPU - RRS ) - ( ( ARS * FirstVNF_RAM_Server ) / AMS ) )", "choosing": "( ( ( RMSe * ( DS - ( RRSe * Max( MUC,RCSe ) ) ) ) * DS ) / ( RRSe * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.05937200194844456}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RRSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8748272220477888}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - Max( RRS,ARS ) )", "choosing": "( ( ( ( MUM * MLU ) + ( ( ( RCSe / ( DS + ( RMSe - RMSe ) ) ) + ( MUM / ( RCSe + RCSe ) ) ) + ( ( MUM * ( RRSe * MUC ) ) + DS ) ) ) - MUR ) / ( ( RCSe / RRSe ) * Max( ( MLU + ( MUM * MLU ) ),RMSe ) ) )", "obj1": 0.9346938775510204, "obj2": 0.05807333782174496}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( ( FirstVNF_CPU * Const ) / Max( Min( ARS ,FirstVNF_CPU_Server ),BR ) ) - ( ACS - ACS ) )", "choosing": "( Min( MUR ,( Min( MUM ,RRSe ) * MUM ) ) / ( ( MUC - MUM ) - Min( RMSe ,( RRSe - RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6965333945149741}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}], "26": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),( ARS + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( RMSe - CS ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),( ARS + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( RMSe - CS ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,ACS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + ( ( MUM + MLU ) + MUM ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7142857142857143, "obj2": 0.21848173072089486}, {"determining": "( ( ACS - ACS ) - ( ( MRS - ACS ) - ( PN + ( MDR / ( FirstVNF_CPU * ( Min( BR ,Const ) + PN ) ) ) ) ) )", "choosing": "( ( RCSe * RCSe ) / ( RRSe * DS ) )", "obj1": 0.1489795918367347, "obj2": 0.8362043169918522}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RRSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8748272220477888}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( ( ( FirstVNF_CPU * Const ) / Max( Min( ARS ,FirstVNF_CPU_Server ),BR ) ) - ( ACS - ACS ) )", "choosing": "( Min( MUR ,( Min( MUM ,RRSe ) * MUM ) ) / ( ( MUC - MUM ) - Min( RMSe ,( RRSe - RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6965333945149741}, {"determining": "( ( ( Max( DDR,FirstVNF_CPU ) - MDR ) + Max( FirstVNF_CPU_Server,Const ) ) - ( RRS + MRS ) )", "choosing": "( Min( MUR ,( Min( MUM ,RRSe ) * MUM ) ) / ( ( MUC - MUM ) - Min( RMSe ,( RRSe - RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6965333945149741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( Max( ( Const - CRS ),DDR ) - Max( ACS,ACS ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) ,RRSe ) - ( RMSe - CS ) ) ,( ( RCSe - MUC ) * ( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( AMS / CRS ) ) ),( BR + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),( ARS + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( RMSe - CS ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ( Const / ( PN * AMS ) ) - ( Const / ACS ) ) - FirstVNF_RAM_Server )", "choosing": "( ( RCSe * RRSe ) / ( DS / ( Max( MUR,RMSe ) / ( DS * RMSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8746909368552737}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RRSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8748272220477888}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( ( MRS / PN ) + ( PN + ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( ACS - Max( RRS,CRS ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe + MUC ) - MUC ) / ( RMSe + RRSe ) )", "obj1": 0.9918367346938776, "obj2": 0.0038961680791096695}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / AMS ) ) - Max( Min( CRS ,BR ),( MDR * PN ) ) )", "choosing": "( ( ( ( ( ( MUC + Max( Max( RMSe,CS ),MUC ) ) - DS ) / Min( Max( Max( MUC,( RMSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + RRSe ) / ( RRSe / ( ( RMSe + ( ( MLU * ( DS - MUC ) ) * CS ) ) / CS ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6953933806342679}, {"determining": "Min( ( ( Max( ( ( FirstVNF_Mem + PN ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server - ( Max( AMS,FirstVNF_Mem_Server ) * MRS ) ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe + RCSe ) - ( Min( ( RCSe * DS ) ,( RMSe * MLU ) ) + MUM ) ) - ( Min( RCSe ,( Min( MUC ,( ( ( RMSe - RRSe ) + ( CS / RCSe ) ) / Min( RRSe ,( DS * MUR ) ) ) ) - ( RMSe / ( RRSe / MUC ) ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.9734693877551021, "obj2": 0.015779247260419023}, {"determining": "( ( ( Max( DDR,FirstVNF_CPU ) - MDR ) + Max( FirstVNF_CPU_Server,Const ) ) - ( RRS + MRS ) )", "choosing": "( Min( MUR ,( Min( MUM ,RRSe ) * MUM ) ) / ( ( MUC - MUM ) - Min( RMSe ,( RRSe - RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6965333945149741}], "28": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( AMS / CRS ) ) ),( BR + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( AMS / CRS ) ) ),( BR + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( ( ( Max( DDR,FirstVNF_CPU ) - MDR ) + Max( FirstVNF_CPU_Server,Const ) ) - ( RRS + MRS ) )", "choosing": "( Min( MUR ,( Min( MUM ,RRSe ) * MUM ) ) / ( ( MUC - MUM ) - Min( RMSe ,( RRSe - RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6965333945149741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / AMS ) ) - Max( Min( CRS ,BR ),( MDR * PN ) ) )", "choosing": "( ( ( ( ( ( MUC + Max( Max( RMSe,CS ),MUC ) ) - DS ) / Min( Max( Max( MUC,( RMSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + RRSe ) / ( RRSe / ( ( RMSe + ( ( MLU * ( DS - MUC ) ) * CS ) ) / CS ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6953933806342679}, {"determining": "Min( ( ( Max( ( ( FirstVNF_Mem + PN ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ),( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server - ( Max( AMS,FirstVNF_Mem_Server ) * MRS ) ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe + RCSe ) - ( Min( ( RCSe * DS ) ,( RMSe * MLU ) ) + MUM ) ) - ( Min( RCSe ,( Min( MUC ,( ( ( RMSe - RRSe ) + ( CS / RCSe ) ) / Min( RRSe ,( DS * MUR ) ) ) ) - ( RMSe / ( RRSe / MUC ) ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.9734693877551021, "obj2": 0.015779247260419023}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),( ARS + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( RMSe - CS ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( AMS / CRS ) ) ),( BR + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "Min( ( Min( Max( ( Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) + Min( ( ( CS - RMSe ) - CS ) ,MUM ) ),( DS * CS ) ) ,RRSe ) - ( RMSe - ( ( ( RMSe / RMSe ) * CS ) * ( MUC * DS ) ) ) ) ,( ( RCSe - MUC ) / ( MUC * Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( AMS / CRS ) ) ),( BR + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( Min( Max( ( AMS + DDR ),FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( MUR / ( Max( RRSe,MUC ) * DS ) ) ) * CS ) )", "obj1": 0.7163265306122449, "obj2": 0.19958469794471945}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( ( ( Max( DDR,FirstVNF_CPU ) - MDR ) + Max( FirstVNF_CPU_Server,Const ) ) - ( RRS + MRS ) )", "choosing": "( Min( MUR ,( Min( MUM ,RRSe ) * MUM ) ) / ( ( MUC - MUM ) - Min( RMSe ,( RRSe - RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6965333945149741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / AMS ) ) - Max( Min( CRS ,BR ),( MDR * PN ) ) )", "choosing": "( ( ( ( ( ( MUC + Max( Max( RMSe,CS ),MUC ) ) - DS ) / Min( Max( Max( MUC,( RMSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + RRSe ) / ( RRSe / ( ( RMSe + ( ( MLU * ( DS - MUC ) ) * CS ) ) / CS ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6953933806342679}], "30": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( ( FirstVNF_RAM - ( MRS / FirstVNF_RAM ) ),DDR ) - Max( ACS,ACS ) )", "choosing": "( ( RRSe * ( RCSe - MUC ) ) / Min( CS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( AMS / CRS ) ) ),( BR + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "Min( ( Min( Max( ( Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) + Min( ( ( CS - RMSe ) - CS ) ,MUM ) ),( DS * CS ) ) ,RRSe ) - ( RMSe - ( ( ( RMSe / RMSe ) * CS ) * ( MUC * DS ) ) ) ) ,( ( RCSe - MUC ) / ( MUC * Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( AMS / CRS ) ) ),( BR + CRS ) ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( DS,MUR ) ,( CS * MLU ) ) - Max( RMSe,( MUM + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + MUR ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "31": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( ARS - FirstVNF_Mem_Server ) * DDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( ( MLU - ( RCSe / RRSe ) ) ,MUC ),( MUC / ( ( ( CS * MUR ) / ( RMSe - ( CS - RRSe ) ) ) / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM - ( MRS / FirstVNF_RAM ) ),DDR ) - Max( ACS,ACS ) )", "choosing": "( ( RRSe * ( RCSe - MUC ) ) / Min( CS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Max( MDR,( ( ACS / MDR ) + RRS ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + MLU ) ) + DS ) * ( MUM / ( DS + MUM ) ) ) * CS ) / ( RRSe * CS ) )", "obj1": 0.24081632653061225, "obj2": 0.7401186405519945}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe + RCSe ) - ( ( MUM * ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.3, "obj2": 0.6769326260384473}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - MDR ) - ( ( ( ACS * ( ( AMS / Max( ( Const * CRS ),( FirstVNF_Mem + PN ) ) ) / Const ) ) - FirstVNF_RAM ) / ( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * Max( Max( MUC,( ( MUC / MUC ) * ( MUR - MLU ) ) ),Min( MUM ,DS ) ) ) / Min( ( MLU / ( ( DS * RMSe ) / Max( ( MLU - ( RCSe - Max( DS,RMSe ) ) ),RMSe ) ) ) ,( CS * RRSe ) ) )", "obj1": 0.2979591836734694, "obj2": 0.6771530848930847}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}], "32": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( ARS - FirstVNF_Mem_Server ) * DDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( ( MLU - ( RCSe / RRSe ) ) ,MUC ),( MUC / ( ( ( CS * MUR ) / ( RMSe - ( CS - RRSe ) ) ) / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_Mem_Server ) * DDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( ( MLU - ( RCSe / RRSe ) ) ,MUC ),( MUC / ( ( ( CS * MUR ) / ( RMSe - ( CS - RRSe ) ) ) / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ( ( Max( DDR,FirstVNF_CPU ) - MDR ) + Max( FirstVNF_CPU_Server,Const ) ) - ( RRS + MRS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) )", "choosing": "( Min( MUR ,Min( ( ( MUR - CS ) * MUM ) ,( ( MLU / MUR ) / RRSe ) ) ) / ( ( MUR * RRSe ) - Min( RMSe ,( RRSe - RMSe ) ) ) )", "obj1": 0.2938775510204082, "obj2": 0.6754296535299666}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( Min( FirstVNF_RAM ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + MUC ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8870414386435446}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( Max( Const,Min( Max( FirstVNF_RAM,PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( MDR / Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( Min( ( ( ( MUC * RRSe ) - CS ) / MLU ) ,( RRSe * CS ) ) / Max( RMSe,MUM ) ) - CS ) - ( RMSe - CS ) ) ,( ( MUR / ( MUC - Max( MUC,MUR ) ) ) * ( MUC * DS ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6934949317696623}], "33": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( ( PN * Const ) / CRS ) ) ),( BR + CRS ) ) ) + ( ( ARS * MDR ) / ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe * ( MLU / DS ) ) + ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_Mem_Server ) * DDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( ( MLU - ( RCSe / RRSe ) ) ,MUC ),( MUC / ( ( ( CS * MUR ) / ( RMSe - ( CS - RRSe ) ) ) / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Max( ACS,ACS ) - ( ( PN + Min( ( MRS / ( PN + Min( ( MRS / FirstVNF_Mem_Server ) ,AMS ) ) ) ,AMS ) ) + ( DDR / AMS ) ) )", "choosing": "( MUR / Min( DS ,Min( DS ,MUM ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7419430647410217}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ( ( Max( DDR,FirstVNF_CPU ) - MDR ) + Max( FirstVNF_CPU_Server,Const ) ) - ( RRS + MRS ) ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) )", "choosing": "( Min( MUR ,Min( ( ( MUR - CS ) * MUM ) ,( ( MLU / MUR ) / RRSe ) ) ) / ( ( MUR * RRSe ) - Min( RMSe ,( RRSe - RMSe ) ) ) )", "obj1": 0.2938775510204082, "obj2": 0.6754296535299666}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( ( Min( ( ARS / ( ARS / FirstVNF_Mem ) ) ,ACS ) - BR ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.10204081632653061, "obj2": 0.8820026216261557}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( ACS - ACS ) - Max( MRS,AMS ) ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6822091330865248}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( Max( Const,Min( Max( FirstVNF_RAM,PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( MDR / Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( Min( ( ( ( MUC * RRSe ) - CS ) / MLU ) ,( RRSe * CS ) ) / Max( RMSe,MUM ) ) - CS ) - ( RMSe - CS ) ) ,( ( MUR / ( MUC - Max( MUC,MUR ) ) ) * ( MUC * DS ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6934949317696623}], "34": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( ( PN * Const ) / CRS ) ) ),( BR + CRS ) ) ) + ( ( ARS * MDR ) / ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe * ( MLU / DS ) ) + ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * RRS ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6775510204081633, "obj2": 0.23618968908421337}, {"determining": "( ( ACS - ( RRS * ( Max( Min( Min( ARS ,Max( Const,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server - PN ) ),PN ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - Min( Max( Min( RCSe ,MUM ),Max( DS,MUC ) ) ,RRSe ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,Min( CS ,Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7061224489795919, "obj2": 0.23369339335909856}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Const - FirstVNF_RAM ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR )", "choosing": "( ( DS * Min( MUM ,Min( DS ,Min( ( DS * RRSe ) ,DS ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe - ( RMSe - CS ) ) ),MLU ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.07508791524292943}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Max( ( ( PN * ARS ) + ( Const - ( AMS / ( BR * ( DDR / FirstVNF_RAM_Server ) ) ) ) ),FirstVNF_Mem ) ) - ( MDR - Max( CRS,RRS ) ) )", "choosing": "( ( RRSe / Max( MUC,RCSe ) ) / ( RCSe * ( Max( RMSe,RMSe ) - CS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6707036164640703}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( CS * ( ( DS / MUR ) + MUR ) ) ) / MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.7345515058949376}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8579890959486619}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( ( Min( ( ARS / ( ARS / FirstVNF_Mem ) ) ,ACS ) - BR ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.10204081632653061, "obj2": 0.8820026216261557}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}], "35": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Const - FirstVNF_RAM ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR )", "choosing": "( ( DS * Min( MUM ,Min( DS ,Min( ( DS * RRSe ) ,DS ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe - ( RMSe - CS ) ) ),MLU ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.07508791524292943}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ( Max( CRS,( ( FirstVNF_Mem * ( ARS - ( FirstVNF_Mem - RRS ) ) ) - AMS ) ) - MDR ) - Const ) - ( Min( ( PN / Max( FirstVNF_RAM_Server,CRS ) ) ,MDR ) - ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe * ( Max( ( MLU - RCSe ),( Min( ( DS / MUM ) ,( RRSe * CS ) ) + DS ) ) + MUR ) ) + ( CS + DS ) ) / ( MLU * MUR ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Max( ( ( PN * ARS ) + ( Const - ( AMS / ( BR * ( DDR / FirstVNF_RAM_Server ) ) ) ) ),FirstVNF_Mem ) ) - ( MDR - Max( CRS,RRS ) ) )", "choosing": "( ( RRSe / Max( MUC,RCSe ) ) / ( RCSe * ( Max( RMSe,RMSe ) - CS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6707036164640703}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( CS * ( ( DS / MUR ) + MUR ) ) ) / MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.7345515058949376}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8579890959486619}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( ( Min( ( ARS / ( ARS / FirstVNF_Mem ) ) ,ACS ) - BR ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.10204081632653061, "obj2": 0.8820026216261557}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( ( Min( ( ARS / ( ARS / FirstVNF_Mem ) ) ,ACS ) - BR ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.10204081632653061, "obj2": 0.8820026216261557}], "36": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Const - FirstVNF_RAM ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR )", "choosing": "( ( DS * Min( MUM ,Min( DS ,Min( ( DS * RRSe ) ,DS ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe - ( RMSe - CS ) ) ),MLU ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.07508791524292943}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( ACS ,ACS ) )", "choosing": "( CS / ( RCSe * ( RCSe * Min( ( Min( Max( Min( DS ,RRSe ),RCSe ) ,( Min( CS ,CS ) * RMSe ) ) * MUC ) ,MUR ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5935950589074728}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Max( ( ( PN * ARS ) + ( Const - ( AMS / ( BR * ( DDR / FirstVNF_RAM_Server ) ) ) ) ),FirstVNF_Mem ) ) - ( MDR - Max( CRS,RRS ) ) )", "choosing": "( ( RRSe / Max( MUC,RCSe ) ) / ( RCSe * ( Max( RMSe,RMSe ) - CS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6707036164640703}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( CS * ( ( DS / MUR ) + MUR ) ) ) / MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.7345515058949376}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8579890959486619}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - MDR ) / AMS ) ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * CS ) * ( ( RRSe / CS ) * CS ) ) / ( RRSe * ( MUM * ( DS / Min( RRSe ,( MLU / ( RCSe / MUR ) ) ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.014682686953533228}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( Max( ( AMS / CRS ),BR ) / AMS ) * ( ( AMS / MDR ) - Min( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) ,MDR ) ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUC * RCSe ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7799146480101141}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( ( Min( ( ARS / ( ARS / FirstVNF_Mem ) ) ,ACS ) - BR ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.10204081632653061, "obj2": 0.8820026216261557}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( BR * Max( MDR,( ( ACS / MDR ) + RRS ) ) ) - RRS ) ) ,ACS ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( Max( ( DS / RCSe ),( ( MUM / MUR ) + Min( Max( MLU,MUM ) ,MLU ) ) ) + DS ) * ( MUM / ( DS + MUM ) ) )", "obj1": 0.9979591836734694, "obj2": 0.001192630883539367}], "37": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( ( PN * Const ) / CRS ) ) ),( BR + CRS ) ) ) + Max( Const,Min( ( FirstVNF_RAM * PN ) ,( ( PN + ( ACS + Max( MRS,ACS ) ) ) + ARS ) ) ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( ( MUR - RMSe ),Min( DS ,MLU ) ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Const - FirstVNF_RAM ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR )", "choosing": "( ( DS * Min( MUM ,Min( DS ,Min( ( DS * RRSe ) ,DS ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe - ( RMSe - CS ) ) ),MLU ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.07508791524292943}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( ACS ,ACS ) )", "choosing": "( CS / ( RCSe * ( RCSe * Min( ( Min( Max( Min( DS ,RRSe ),RCSe ) ,( Min( CS ,CS ) * RMSe ) ) * MUC ) ,MUR ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5935950589074728}, {"determining": "( Max( Min( ( AMS - Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) ) ,Min( ACS ,FirstVNF_Mem ) ),( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ) ) - Max( Min( FirstVNF_CPU ,( Max( FirstVNF_Mem_Server,DDR ) * CRS ) ),( RRS + DDR ) ) )", "choosing": "( ( RRSe * Min( MUM ,Min( DS ,Min( DS ,( DS * RRSe ) ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - ( ( DS / ( MUC - ( RMSe - CS ) ) ) + Max( MUC,CS ) ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.023639420225778043}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( Max( ( RRSe / CS ),MUR ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.12782541604994643}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Max( ( ( PN * ARS ) + ( Const - ( AMS / ( BR * ( DDR / FirstVNF_RAM_Server ) ) ) ) ),FirstVNF_Mem ) ) - ( MDR - Max( CRS,RRS ) ) )", "choosing": "( ( RRSe / Max( MUC,RCSe ) ) / ( RCSe * ( Max( RMSe,RMSe ) - CS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6707036164640703}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( CS * ( ( DS / MUR ) + MUR ) ) ) / MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.7345515058949376}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8579890959486619}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( ( Min( ( ARS / ( ARS / FirstVNF_Mem ) ) ,ACS ) - BR ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.10204081632653061, "obj2": 0.8820026216261557}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUM ) / ( Max( ( ( MUC / ( MUC / Max( Max( MUR,CS ),CS ) ) ) + RRSe ),MUM ) + ( MLU - CS ) ) )", "obj1": 0.8428571428571429, "obj2": 0.12028394278252534}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ACS - RRS ) - ( AMS + ( ( ACS - ( MDR * MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - MDR ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) ) - ( ( MUM * CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6931219811023445}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,RRS ) ) - ( ( Min( ARS ,RRS ) + MRS ) - Max( Const,Min( Const ,Min( FirstVNF_CPU_Server ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( ( ( MLU - Min( DS ,( MLU / RMSe ) ) ) / ( RCSe * RMSe ) ) - MUR ) ) / ( MUC + MUC ) )", "obj1": 0.18775510204081633, "obj2": 0.7929041824719603}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - PN ) )", "choosing": "( ( ( ( ( ( Max( CS,MLU ) + MUC ) - DS ) / Min( Max( MUC,Max( MUC,RCSe ) ) ,RCSe ) ) + RRSe ) + MUC ) / ( RMSe / MUC ) )", "obj1": 0.9918367346938776, "obj2": 0.0036343219788099236}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}], "38": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( ( PN * Const ) / CRS ) ) ),( BR + CRS ) ) ) + Max( Const,Min( ( FirstVNF_RAM * PN ) ,( ( PN + ( ACS + Max( MRS,ACS ) ) ) + ARS ) ) ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( ( MUR - RMSe ),Min( DS ,MLU ) ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Max( BR,( ( Min( DDR ,CRS ) / ( MDR / ARS ) ) / ( FirstVNF_Mem_Server / ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Min( DDR ,CRS ) / ( MDR / ARS ) ) ) + FirstVNF_Mem ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( ( CS + RCSe ) * RCSe ) - MUR ) - MUR ) / CS ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.8448979591836735, "obj2": 0.11995620321332036}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Const - FirstVNF_RAM ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR )", "choosing": "( ( DS * Min( MUM ,Min( DS ,Min( ( DS * RRSe ) ,DS ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe - ( RMSe - CS ) ) ),MLU ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.07508791524292943}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( ACS ,ACS ) )", "choosing": "( CS / ( RCSe * ( RCSe * Min( ( Min( Max( Min( DS ,RRSe ),RCSe ) ,( Min( CS ,CS ) * RMSe ) ) * MUC ) ,MUR ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5935950589074728}, {"determining": "( Max( Min( ( AMS - Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) ) ,Min( ACS ,FirstVNF_Mem ) ),( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ) ) - Max( Min( FirstVNF_CPU ,( Max( FirstVNF_Mem_Server,DDR ) * CRS ) ),( RRS + DDR ) ) )", "choosing": "( ( RRSe * Min( MUM ,Min( DS ,Min( DS ,( DS * RRSe ) ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - ( ( DS / ( MUC - ( RMSe - CS ) ) ) + Max( MUC,CS ) ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.023639420225778043}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( Max( ( RRSe / CS ),MUR ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.12782541604994643}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Max( ( ( PN * ARS ) + ( Const - ( AMS / ( BR * ( DDR / FirstVNF_RAM_Server ) ) ) ) ),FirstVNF_Mem ) ) - ( MDR - Max( CRS,RRS ) ) )", "choosing": "( ( RRSe / Max( MUC,RCSe ) ) / ( RCSe * ( Max( RMSe,RMSe ) - CS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6707036164640703}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( CS * ( ( DS / MUR ) + MUR ) ) ) / MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.7345515058949376}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( FirstVNF_Mem_Server + BR ) ),( ( Min( ACS ,( FirstVNF_CPU / MDR ) ) * ( ACS / ARS ) ) / Max( CRS,Const ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe + MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8080582289468352}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "Max( ( ( BR - BR ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( Min( FirstVNF_CPU_Server ,( ( CRS + ( AMS / BR ) ) + ( ( FirstVNF_Mem - AMS ) / AMS ) ) ) ,AMS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Max( RMSe,Max( RMSe,RMSe ) ) + ( ( CS * CS ) / ( RRSe - MUR ) ) ) / ( ( RCSe / RCSe ) / MLU ) ) - Max( MUC,RMSe ) ) ,( ( ( ( Max( MLU,MUR ) + ( MLU - RRSe ) ) - Min( Max( DS,CS ) ,( DS - MUM ) ) ) - ( Max( RCSe,( MUR + DS ) ) * RRSe ) ) - DS ) ) - MLU ) ,Max( Max( DS,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7985338146903556}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( Max( ( Max( ( Min( FirstVNF_CPU ,ARS ) / ( BR * MRS ) ),ARS ) + ( Min( FirstVNF_CPU_Server ,ARS ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ),ACS ) - ( Const - Const ) )", "choosing": "Min( ( ( Max( ( RCSe + Max( Max( Min( DS ,RMSe ),( MUM - MUM ) ),( ( MUC - RRSe ) / Min( CS ,MUR ) ) ) ),MUR ) / DS ) - ( RMSe - CS ) ) ,( ( ( ( MUR * RCSe ) + CS ) / CS ) * MUM ) )", "obj1": 0.30612244897959184, "obj2": 0.6654905214459326}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8579890959486619}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( ( Min( ( ARS / ( ARS / FirstVNF_Mem ) ) ,ACS ) - BR ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.10204081632653061, "obj2": 0.8820026216261557}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "Max( Min( ACS ,RRS ),( MRS * ACS ) )", "choosing": "( ( ( MLU - Max( ( Max( MUM,DS ) / RRSe ),RCSe ) ) * ( Min( ( RRSe / ( DS - ( ( MUM / RCSe ) + ( MUM * MUC ) ) ) ) ,RMSe ) + ( MUR - ( MLU + MUR ) ) ) ) - ( Min( Max( MUC,Min( MUC ,( RCSe - ( ( DS - MUC ) + ( MLU * MUR ) ) ) ) ) ,DS ) + Max( MLU,Max( RRSe,( ( Min( ( RCSe * DS ) ,( RMSe * MUM ) ) + MUM ) + ( RMSe + DS ) ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8031112056316492}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ( ( ( CRS - Max( ( Const / FirstVNF_RAM ),( ARS * Min( DDR ,DDR ) ) ) ) + BR ) * FirstVNF_CPU_Server ) + ( ( ACS + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) - ( ACS - Max( ( Max( Min( ( BR / ( CRS + MDR ) ) ,( ( ACS / FirstVNF_RAM ) * FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem ,Max( RRS,ARS ) ) * RRS ) ) * Min( Max( FirstVNF_RAM,( RRS - FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ),MDR ) ) )", "choosing": "( ( CS * MUM ) / Min( ( RCSe - MUC ) ,( ( RMSe - Min( RCSe ,RRSe ) ) * Min( Max( DS,RRSe ) ,( MUC - CS ) ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.003569878448031012}, {"determining": "( Min( Max( FirstVNF_RAM,AMS ) ,ACS ) - Min( RRS ,DDR ) )", "choosing": "( ( ( RMSe - MLU ) - CS ) / ( ( ( ( RCSe / MUM ) + Min( ( CS * ( ( DS / MUR ) + MUR ) ) ,RCSe ) ) + RRSe ) + MUR ) )", "obj1": 0.2857142857142857, "obj2": 0.6916597133766129}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,RRS ) ) - ( ( Min( ARS ,RRS ) + MRS ) - Max( Const,Min( Const ,Min( FirstVNF_CPU_Server ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( ( ( MLU - Min( DS ,( MLU / RMSe ) ) ) / ( RCSe * RMSe ) ) - MUR ) ) / ( MUC + MUC ) )", "obj1": 0.18775510204081633, "obj2": 0.7929041824719603}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUM ) / ( Max( ( ( MUC / ( MUC / Max( Max( MUR,CS ),CS ) ) ) + RRSe ),MUM ) + ( MLU - CS ) ) )", "obj1": 0.8428571428571429, "obj2": 0.12028394278252534}], "39": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUM ) / ( Max( ( ( MUC / ( MUC / Max( Max( MUR,CS ),CS ) ) ) + RRSe ),MUM ) + ( MLU - CS ) ) )", "obj1": 0.8448979591836735, "obj2": 0.11841270938223296}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - ( Min( Min( MRS ,Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( PN,FirstVNF_Mem ) ) + ( CRS - ACS ) ) ,( RRS + FirstVNF_RAM ) ) ) ,Min( DDR ,Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ,MDR ) ) ) + AMS ) )", "choosing": "( ( DS * MUR ) / ( ( MUR - Max( Min( Max( Max( ( MUM * RCSe ),( MUC * CS ) ),MUM ) ,DS ),RRSe ) ) - MLU ) )", "obj1": 0.1653061224489796, "obj2": 0.796906366033625}, {"determining": "( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Const - FirstVNF_RAM ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR )", "choosing": "( ( DS * Min( MUM ,Min( DS ,Min( ( DS * RRSe ) ,DS ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe - ( RMSe - CS ) ) ),MLU ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.07508791524292943}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( ACS ,ACS ) )", "choosing": "( CS / ( RCSe * ( RCSe * Min( ( Min( Max( Min( DS ,RRSe ),RCSe ) ,( Min( CS ,CS ) * RMSe ) ) * MUC ) ,MUR ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5935950589074728}, {"determining": "( Max( Min( ( AMS - Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) ) ,Min( ACS ,FirstVNF_Mem ) ),( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ) ) - Max( Min( FirstVNF_CPU ,( Max( FirstVNF_Mem_Server,DDR ) * CRS ) ),( RRS + DDR ) ) )", "choosing": "( ( RRSe * Min( MUM ,Min( DS ,Min( DS ,( DS * RRSe ) ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - ( ( DS / ( MUC - ( RMSe - CS ) ) ) + Max( MUC,CS ) ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.023639420225778043}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( Max( ( RRSe / CS ),MUR ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.12782541604994643}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( CS * ( ( DS / MUR ) + MUR ) ) ) / MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.7345515058949376}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Max( ( ( PN * ARS ) + ( Const - ( AMS / ( BR * ( DDR / FirstVNF_RAM_Server ) ) ) ) ),FirstVNF_Mem ) ) - ( MDR - Max( CRS,RRS ) ) )", "choosing": "( ( RRSe / Max( MUC,RCSe ) ) / ( RCSe * ( Max( RMSe,RMSe ) - CS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6707036164640703}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,RRS ) ) - ( ( Min( ARS ,RRS ) + MRS ) - Max( Const,Min( Const ,Min( FirstVNF_CPU_Server ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( ( ( MLU - Min( DS ,( MLU / RMSe ) ) ) / ( RCSe * RMSe ) ) - MUR ) ) / ( MUC + MUC ) )", "obj1": 0.18775510204081633, "obj2": 0.7929041824719603}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + ( AMS - FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.5755102040816327, "obj2": 0.36324040804556934}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - ( Min( Min( MRS ,Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( PN,FirstVNF_Mem ) ) + ( CRS - ACS ) ) ,( ACS + FirstVNF_RAM ) ) ) ,Min( DDR ,Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ,MDR ) ) ) + AMS ) )", "choosing": "( ( MUC * ( ( ( RMSe * ( ( ( MUR + DS ) + Max( RCSe,CS ) ) / CS ) ) * ( RCSe / RMSe ) ) / CS ) ) - Min( Max( RCSe,RMSe ) ,( MLU / RMSe ) ) )", "obj1": 0.3, "obj2": 0.665336092041821}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8579890959486619}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( ( Min( ( ARS / ( ARS / FirstVNF_Mem ) ) ,ACS ) - BR ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.10204081632653061, "obj2": 0.8820026216261557}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUM ) / ( Max( ( ( MUC / ( MUC / Max( Max( MUR,CS ),CS ) ) ) + RRSe ),MUM ) + ( MLU - CS ) ) )", "obj1": 0.8428571428571429, "obj2": 0.12028394278252534}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - AMS )", "choosing": "( ( MUM / ( ( CS * RRSe ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.18979591836734694, "obj2": 0.7923921099838002}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ( ( ( CRS - Max( ( Const / FirstVNF_RAM ),( ARS * Min( DDR ,DDR ) ) ) ) + BR ) * FirstVNF_CPU_Server ) + ( ( ACS + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) - ( ACS - Max( ( Max( Min( ( BR / ( CRS + MDR ) ) ,( ( ACS / FirstVNF_RAM ) * FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem ,Max( RRS,ARS ) ) * RRS ) ) * Min( Max( FirstVNF_RAM,( RRS - FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ),MDR ) ) )", "choosing": "( ( CS * MUM ) / Min( ( RCSe - MUC ) ,( ( RMSe - Min( RCSe ,RRSe ) ) * Min( Max( DS,RRSe ) ,( MUC - CS ) ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.003569878448031012}, {"determining": "( Min( Max( FirstVNF_RAM,AMS ) ,ACS ) - Min( RRS ,DDR ) )", "choosing": "( ( ( RMSe - MLU ) - CS ) / ( ( ( ( RCSe / MUM ) + Min( ( CS * ( ( DS / MUR ) + MUR ) ) ,RCSe ) ) + RRSe ) + MUR ) )", "obj1": 0.2857142857142857, "obj2": 0.6916597133766129}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( ( ( PN / Const ) - Max( ( BR - ( BR - ( ( PN * Const ) / CRS ) ) ),( BR + CRS ) ) ) + Max( Const,Min( ( FirstVNF_RAM * PN ) ,( ( PN + ( ACS + Max( MRS,ACS ) ) ) + ARS ) ) ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( ( MUR - RMSe ),Min( DS ,MLU ) ) + Min( ( ( RCSe / MUR ) * MLU ) ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( Max( ( ( Min( Max( MUR,DS ) ,( CS * MLU ) ) - ( RMSe * ( DS + RMSe ) ) ) - ( Max( DS,( DS / RCSe ) ) / RCSe ) ),MUM ) + ( RMSe / RRSe ) ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "40": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + BR ) ) ) - ( ( Max( Const,Min( ( MDR / ( CRS - FirstVNF_Mem ) ) ,( FirstVNF_CPU_Server / BR ) ) ) * FirstVNF_RAM ) - ( PN - DDR ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) + MUC ) - ( MUC - MUM ) ) / Min( Max( Max( MUC,( RCSe + DS ) ),MUC ) ,RCSe ) ) + RRSe ) + ( MUM - ( ( DS * MUC ) - Max( RCSe,MUM ) ) ) ) / ( RRSe / ( ( MLU * MUC ) / CS ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3615483844019463}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - ( Min( Min( MRS ,Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( PN,FirstVNF_Mem ) ) + ( CRS - ACS ) ) ,( RRS + FirstVNF_RAM ) ) ) ,Min( DDR ,Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ,MDR ) ) ) + AMS ) )", "choosing": "( ( DS * MUR ) / ( ( MUR - Max( Min( Max( Max( ( MUM * RCSe ),( MUC * CS ) ),MUM ) ,DS ),RRSe ) ) - MLU ) )", "obj1": 0.1653061224489796, "obj2": 0.796906366033625}, {"determining": "( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Const - FirstVNF_RAM ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR )", "choosing": "( ( DS * Min( MUM ,Min( DS ,Min( ( DS * RRSe ) ,DS ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe - ( RMSe - CS ) ) ),MLU ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.07508791524292943}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - Max( Max( Const,( FirstVNF_CPU / CRS ) ),RRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( ( DS / MUM ) / Max( ( Max( Max( ( RRSe / CS ),MUR ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8510204081632653, "obj2": 0.11070698024768541}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( ACS ,ACS ) )", "choosing": "( CS / ( RCSe * ( RCSe * Min( ( Min( Max( Min( DS ,RRSe ),RCSe ) ,( Min( CS ,CS ) * RMSe ) ) * MUC ) ,MUR ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5935950589074728}, {"determining": "( Max( Min( ( AMS - Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) ) ,Min( ACS ,FirstVNF_Mem ) ),( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ) ) - Max( Min( FirstVNF_CPU ,( Max( FirstVNF_Mem_Server,DDR ) * CRS ) ),( RRS + DDR ) ) )", "choosing": "( ( RRSe * Min( MUM ,Min( DS ,Min( DS ,( DS * RRSe ) ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - ( ( DS / ( MUC - ( RMSe - CS ) ) ) + Max( MUC,CS ) ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.023639420225778043}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( CS * ( ( DS / MUR ) + MUR ) ) ) / MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.7345515058949376}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,RRS ) ) - ( ( Min( ARS ,RRS ) + MRS ) - Max( Const,Min( Const ,Min( FirstVNF_CPU_Server ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( ( ( MLU - Min( DS ,( MLU / RMSe ) ) ) / ( RCSe * RMSe ) ) - MUR ) ) / ( MUC + MUC ) )", "obj1": 0.18775510204081633, "obj2": 0.7929041824719603}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( ACS - ACS ) - ( ACS - ACS ) )", "choosing": "( ( MUR / ( RRSe * CS ) ) / ( RRSe * CS ) )", "obj1": 0.21836734693877552, "obj2": 0.7606462155766045}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Max( ( ( PN * ARS ) + ( Const - ( AMS / ( BR * ( DDR / FirstVNF_RAM_Server ) ) ) ) ),FirstVNF_Mem ) ) - ( MDR - Max( CRS,RRS ) ) )", "choosing": "( ( RRSe / Max( MUC,RCSe ) ) / ( RCSe * ( Max( RMSe,RMSe ) - CS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6707036164640703}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - ( Min( Min( MRS ,Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( PN,FirstVNF_Mem ) ) + ( CRS - ACS ) ) ,( ACS + FirstVNF_RAM ) ) ) ,Min( DDR ,Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ,MDR ) ) ) + AMS ) )", "choosing": "( ( MUC * ( ( ( RMSe * ( ( ( MUR + DS ) + Max( RCSe,CS ) ) / CS ) ) * ( RCSe / RMSe ) ) / CS ) ) - Min( Max( RCSe,RMSe ) ,( MLU / RMSe ) ) )", "obj1": 0.3, "obj2": 0.665336092041821}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8579890959486619}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( Max( ( RRSe / CS ),MUR ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.12782541604994643}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( ( Min( ( ARS / ( ARS / FirstVNF_Mem ) ) ,ACS ) - BR ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.10204081632653061, "obj2": 0.8820026216261557}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( MRS + ( RRS + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( FirstVNF_RAM - PN ) - PN ) ) ) * ( ( ( Min( FirstVNF_RAM ,ARS ) + Const ) - AMS ) + ARS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUR - ( ( DS - DS ) - RRSe ) ) ) / ( ( Max( RMSe,Min( DS ,MUM ) ) + RMSe ) + CS ) ) / Min( Min( ( MLU + RRSe ) ,RCSe ) ,Min( ( MUC * MLU ) ,RCSe ) ) )", "obj1": 0.9714285714285714, "obj2": 0.018035376379966134}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUM ) / ( Max( ( ( MUC / ( MUC / Max( Max( MUR,CS ),CS ) ) ) + RRSe ),MUM ) + ( MLU - CS ) ) )", "obj1": 0.8428571428571429, "obj2": 0.12028394278252534}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ( RRS / RRS ) / ( Const / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),ARS ) ) ) - Max( ( DDR * DDR ),RRS ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( MUR * RRSe ) * ( ( Min( ( ( DS * MLU ) + MLU ) ,Min( MUC ,CS ) ) / RCSe ) + RCSe ) ) * RRSe ) )", "obj1": 0.18979591836734694, "obj2": 0.7847378779996591}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ( ( ( CRS - Max( ( Const / FirstVNF_RAM ),( ARS * Min( DDR ,DDR ) ) ) ) + BR ) * FirstVNF_CPU_Server ) + ( ( ACS + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) - ( ACS - Max( ( Max( Min( ( BR / ( CRS + MDR ) ) ,( ( ACS / FirstVNF_RAM ) * FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem ,Max( RRS,ARS ) ) * RRS ) ) * Min( Max( FirstVNF_RAM,( RRS - FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ),MDR ) ) )", "choosing": "( ( CS * MUM ) / Min( ( RCSe - MUC ) ,( ( RMSe - Min( RCSe ,RRSe ) ) * Min( Max( DS,RRSe ) ,( MUC - CS ) ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.003569878448031012}, {"determining": "( Min( Max( FirstVNF_RAM,AMS ) ,ACS ) - Min( RRS ,DDR ) )", "choosing": "( ( ( RMSe - MLU ) - CS ) / ( ( ( ( RCSe / MUM ) + Min( ( CS * ( ( DS / MUR ) + MUR ) ) ,RCSe ) ) + RRSe ) + MUR ) )", "obj1": 0.2857142857142857, "obj2": 0.6916597133766129}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / MUM ) / ( Max( ( ( MUC / ( MUC / Max( Max( MUR,CS ),CS ) ) ) + RRSe ),MUM ) + ( MLU - CS ) ) )", "obj1": 0.8448979591836735, "obj2": 0.11841270938223296}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( Max( ( RRSe / CS ),MUR ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.12782541604994643}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR - DS ) / ( Max( MLU,Max( RRSe,( ( RCSe / RRSe ) - MUC ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.7306122448979592, "obj2": 0.18734068404042034}], "41": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Max( Const,( Const - FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server + ( BR + MRS ) ) )", "choosing": "Min( ( Min( Max( ( RRSe / MLU ),( CS * DS ) ) ,RRSe ) - ( RMSe - ( ( ( DS / ( MUR / RMSe ) ) * CS ) * ( MUC * CS ) ) ) ) ,Max( ( RCSe - MUC ),( MUC * Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + BR ) ) ) - ( ( Max( Const,Min( ( MDR / ( CRS - FirstVNF_Mem ) ) ,( FirstVNF_CPU_Server / BR ) ) ) * FirstVNF_RAM ) - ( PN - DDR ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) + MUC ) - ( MUC - MUM ) ) / Min( Max( Max( MUC,( RCSe + DS ) ),MUC ) ,RCSe ) ) + RRSe ) + ( MUM - ( ( DS * MUC ) - Max( RCSe,MUM ) ) ) ) / ( RRSe / ( ( MLU * MUC ) / CS ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3615483844019463}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "( ( ( MRS * MDR ) * ARS ) - ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "Min( ( Min( Max( ( MLU / CS ),( ( RCSe - ( DS - MUR ) ) * ( Min( ( CS / MUR ) ,Max( RCSe,RCSe ) ) / RRSe ) ) ) ,MUC ) - ( RMSe - CS ) ) ,( Max( DS,( MLU / ( ( MUC * ( CS - DS ) ) - RMSe ) ) ) * ( RMSe * ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) ) )", "obj1": 0.8428571428571429, "obj2": 0.10673870342020296}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - ( Min( Min( MRS ,Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( PN,FirstVNF_Mem ) ) + ( CRS - ACS ) ) ,( RRS + FirstVNF_RAM ) ) ) ,Min( DDR ,Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ,MDR ) ) ) + AMS ) )", "choosing": "( ( DS * MUR ) / ( ( MUR - Max( Min( Max( Max( ( MUM * RCSe ),( MUC * CS ) ),MUM ) ,DS ),RRSe ) ) - MLU ) )", "obj1": 0.1653061224489796, "obj2": 0.796906366033625}, {"determining": "( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Const - FirstVNF_RAM ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR )", "choosing": "( ( DS * Min( MUM ,Min( DS ,Min( ( DS * RRSe ) ,DS ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe - ( RMSe - CS ) ) ),MLU ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.07508791524292943}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( ACS ,ACS ) )", "choosing": "( CS / ( RCSe * ( RCSe * Min( ( Min( Max( Min( DS ,RRSe ),RCSe ) ,( Min( CS ,CS ) * RMSe ) ) * MUC ) ,MUR ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5935950589074728}, {"determining": "( Max( Min( ( AMS - Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) ) ,Min( ACS ,FirstVNF_Mem ) ),( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ) ) - Max( Min( FirstVNF_CPU ,( Max( FirstVNF_Mem_Server,DDR ) * CRS ) ),( RRS + DDR ) ) )", "choosing": "( ( RRSe * Min( MUM ,Min( DS ,Min( DS ,( DS * RRSe ) ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - ( ( DS / ( MUC - ( RMSe - CS ) ) ) + Max( MUC,CS ) ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.023639420225778043}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( CS * ( ( DS / MUR ) + MUR ) ) ) / MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.7345515058949376}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,RRS ) ) - ( ( Min( ARS ,RRS ) + MRS ) - Max( Const,Min( Const ,Min( FirstVNF_CPU_Server ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( ( ( MLU - Min( DS ,( MLU / RMSe ) ) ) / ( RCSe * RMSe ) ) - MUR ) ) / ( MUC + MUC ) )", "obj1": 0.18775510204081633, "obj2": 0.7929041824719603}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( ( DS / MUR ) + MUR ) ) / MUM ) )", "obj1": 0.09183673469387756, "obj2": 0.8926087946064469}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( FirstVNF_RAM_Server + ( ( ACS - ( DDR * FirstVNF_Mem_Server ) ) * BR ) ) - ( MRS - MDR ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( MUR * RRSe ) * ( ( Min( ( ( DS * MLU ) + MLU ) ,Min( MUC ,CS ) ) / RCSe ) + RCSe ) ) * RRSe ) )", "obj1": 0.21428571428571427, "obj2": 0.7540602646334769}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Max( ( ( PN * ARS ) + ( Const - ( AMS / ( BR * ( DDR / FirstVNF_RAM_Server ) ) ) ) ),FirstVNF_Mem ) ) - ( MDR - Max( CRS,RRS ) ) )", "choosing": "( ( RRSe / Max( MUC,RCSe ) ) / ( RCSe * ( Max( RMSe,RMSe ) - CS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6707036164640703}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - ( Min( Min( MRS ,Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( PN,FirstVNF_Mem ) ) + ( CRS - ACS ) ) ,( ACS + FirstVNF_RAM ) ) ) ,Min( DDR ,Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ,MDR ) ) ) + AMS ) )", "choosing": "( ( MUC * ( ( ( RMSe * ( ( ( MUR + DS ) + Max( RCSe,CS ) ) / CS ) ) * ( RCSe / RMSe ) ) / CS ) ) - Min( Max( RCSe,RMSe ) ,( MLU / RMSe ) ) )", "obj1": 0.3, "obj2": 0.665336092041821}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( Max( ( RRSe / CS ),MUR ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.12782541604994643}, {"determining": "( ( ( Const + ( FirstVNF_Mem * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) - Max( MRS,AMS ) )", "choosing": "( ( ( ( Max( RMSe,DS ) - DS ) + ( RMSe - Max( CS,DS ) ) ) * RRSe ) / ( RRSe * CS ) )", "obj1": 0.28775510204081634, "obj2": 0.6840587815503465}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8579890959486619}, {"determining": "( ( FirstVNF_RAM * ( RRS / AMS ) ) - ( ( FirstVNF_CPU - ( Max( BR,FirstVNF_RAM ) + FirstVNF_RAM ) ) + ( ( Min( FirstVNF_RAM ,( BR * ARS ) ) - Max( ACS,CRS ) ) / ( Max( AMS,( RRS / AMS ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) - Min( Max( MLU,Min( Max( ( ( Max( MUC,MUM ) * MUR ) - MUR ),CS ) ,Min( MUR ,( RCSe - ( RCSe / RCSe ) ) ) ) ) ,( DS / Max( ( ( MLU + MLU ) * ( MUC + ( RCSe - MUC ) ) ),( MUR / ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7018838240168561}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( PN / Min( Max( Min( CRS ,Min( MDR ,FirstVNF_CPU ) ),DDR ) ,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU_Server,( ( ( ( MDR * ( Min( PN ,ACS ) / FirstVNF_Mem_Server ) ) * DDR ) - AMS ) / Min( Min( ACS ,Max( Min( CRS ,Min( MDR ,FirstVNF_CPU ) ),DDR ) ) ,( ( Min( Const ,( BR / DDR ) ) / RRS ) * CRS ) ) ) ) )", "choosing": "( Max( Min( ( MUC / Min( CS ,( DS / ( ( MUR - MUR ) * Max( RCSe,RRSe ) ) ) ) ) ,RMSe ),MUM ) / ( MUR - MUR ) )", "obj1": 0.9673469387755103, "obj2": 0.015857445149440475}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ACS - Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( ( ( RRSe * CS ) / ( RRSe * CS ) ) / MUR ) / CS ) * RCSe ) / CS ) ,( RRSe + RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7068129786246026}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( ( MDR * RRS ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( ( RCSe / RRSe ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.12791577755878236}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ( RRS / RRS ) / ( Const / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),ARS ) ) ) - Max( ( DDR * DDR ),RRS ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( MUR * RRSe ) * ( ( Min( ( ( DS * MLU ) + MLU ) ,Min( MUC ,CS ) ) / RCSe ) + RCSe ) ) * RRSe ) )", "obj1": 0.18979591836734694, "obj2": 0.7847378779996591}, {"determining": "Max( Max( PN,( ( ACS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) ),FirstVNF_CPU )", "choosing": "( ( ( MLU / DS ) - ( RRSe - CS ) ) * ( Min( Max( DS,MUC ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.7058286353955687}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ( ( ( CRS - Max( ( Const / FirstVNF_RAM ),( ARS * Min( DDR ,DDR ) ) ) ) + BR ) * FirstVNF_CPU_Server ) + ( ( ACS + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) - ( ACS - Max( ( Max( Min( ( BR / ( CRS + MDR ) ) ,( ( ACS / FirstVNF_RAM ) * FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem ,Max( RRS,ARS ) ) * RRS ) ) * Min( Max( FirstVNF_RAM,( RRS - FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ),MDR ) ) )", "choosing": "( ( CS * MUM ) / Min( ( RCSe - MUC ) ,( ( RMSe - Min( RCSe ,RRSe ) ) * Min( Max( DS,RRSe ) ,( MUC - CS ) ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.003569878448031012}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( MRS - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.1, "obj2": 0.8820611750497794}, {"determining": "( ( Max( ACS,( ( FirstVNF_CPU_Server / ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) * ARS ) ) - ( FirstVNF_Mem_Server + Const ) ) - ( Min( ( MDR * ARS ) ,Max( ACS,MDR ) ) / AMS ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Max( RCSe,MUC ) ) * MUC ) / Min( MUM ,( ( MUM + RMSe ) - ( MUC / Min( ( DS - MUC ) ,CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6941873293822995}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR - DS ) / ( Max( MLU,Max( RRSe,( ( RCSe / RRSe ) - MUC ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.7306122448979592, "obj2": 0.18734068404042034}, {"determining": "( Min( Max( FirstVNF_RAM,AMS ) ,ACS ) - Min( RRS ,DDR ) )", "choosing": "( ( ( RMSe - MLU ) - CS ) / ( ( ( ( RCSe / MUM ) + Min( ( CS * ( ( DS / MUR ) + MUR ) ) ,RCSe ) ) + RRSe ) + MUR ) )", "obj1": 0.2857142857142857, "obj2": 0.6916597133766129}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8762411554005588}], "42": [{"determining": "( ( ACS / FirstVNF_RAM_Server ) * ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "( Max( ( ( ( MLU + ( DS / MUC ) ) * RMSe ) / Min( RRSe ,RCSe ) ),( CS - Max( MUC,( ( RCSe + ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) / CS ) ) ) ) * ( Min( MLU ,RCSe ) - MUR ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( BR * ( Const / ( ACS / ACS ) ) ) ) ,MDR ) - Max( ACS,ACS ) )", "choosing": "( ( ( RCSe - MUC ) * RRSe ) / ( CS * Max( Min( MUC ,( ( DS * ( ( MUM + MUR ) - MUM ) ) - ( RCSe / RRSe ) ) ),( ( RRSe * Max( RMSe,RRSe ) ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( Const - FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server + ( BR + MRS ) ) )", "choosing": "Min( ( Min( Max( ( RRSe / MLU ),( CS * DS ) ) ,RRSe ) - ( RMSe - ( ( ( DS / ( MUR / RMSe ) ) * CS ) * ( MUC * CS ) ) ) ) ,Max( ( RCSe - MUC ),( MUC * Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( RRS / FirstVNF_RAM_Server ) / ( ( FirstVNF_Mem - AMS ) / AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Min( ( ( MUC - MUC ) / ( Min( DS ,( MUM + MUR ) ) - RCSe ) ) ,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( RMSe * DS ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * AMS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) / ( MUM * CS ) )", "obj1": 0.5959183673469388, "obj2": 0.29314196617808774}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_CPU_Server ) - CRS ),( ( BR - CRS ) - Max( ( RRS - AMS ),MRS ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( DS * ( ( ( MUM + MLU ) / ( CS * RCSe ) ) * ( DS * ( CS * MUC ) ) ) ) ) - MUR ),( MLU * DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5133681740452517}, {"determining": "( ( ( Max( CRS,( ( FirstVNF_Mem * ( ARS - ( FirstVNF_Mem - RRS ) ) ) - AMS ) ) - MDR ) - Const ) - ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe * ( Max( ( MLU - RCSe ),( Min( ( DS / MUM ) ,RRSe ) + DS ) ) + MUR ) ) + ( CS + DS ) ) / ( MLU * MUR ) )", "obj1": 0.5857142857142857, "obj2": 0.3417311289758083}, {"determining": "( Max( ACS,ACS ) - ( ( ( ARS * FirstVNF_RAM_Server ) / AMS ) + ( ( ( MDR - ( PN * ( ARS - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - MLU ) / MUR )", "obj1": 0.8571428571428571, "obj2": 0.07763776667153274}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.44693877551020406, "obj2": 0.47144592245328776}, {"determining": "( ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 0.25918367346938775, "obj2": 0.6775033870836241}, {"determining": "( ( ( PN / Const ) - Max( ( BR - FirstVNF_CPU ),DDR ) ) + Min( ( MRS * MDR ) ,MRS ) )", "choosing": "( ( ( ( MLU / DS ) / ( MLU - CS ) ) / ( ( RMSe / RRSe ) * ( ( Max( MUC,( ( MLU * RCSe ) * ( MUC - MLU ) ) ) + Min( MUM ,( RRSe - RMSe ) ) ) - MUC ) ) ) + ( ( ( ( ( RRSe * MLU ) / ( DS / MLU ) ) * ( MUM / ( DS + MUM ) ) ) + MUR ) / RRSe ) )", "obj1": 0.9285714285714286, "obj2": 0.03246787152437912}, {"determining": "( ( ( MRS * MDR ) * ARS ) - ( ( ( Min( ( BR * PN ) ,ARS ) * FirstVNF_RAM ) - Min( Min( Max( PN,FirstVNF_CPU ) ,MRS ) ,MRS ) ) / ( MDR - Const ) ) )", "choosing": "Min( ( Min( Max( ( MLU / CS ),( ( RCSe - ( DS - MUR ) ) * ( Min( ( CS / MUR ) ,Max( RCSe,RCSe ) ) / RRSe ) ) ) ,MUC ) - ( RMSe - CS ) ) ,( Max( DS,( MLU / ( ( MUC * ( CS - DS ) ) - RMSe ) ) ) * ( RMSe * ( Max( MLU,MUC ) + ( MLU * MUC ) ) ) ) )", "obj1": 0.8428571428571429, "obj2": 0.10673870342020296}, {"determining": "( ( ACS - ( ( Max( Min( ( Const / ( ACS / AMS ) ) ,CRS ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( RRSe / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( ( MLU - ( MUC - RMSe ) ),( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.35714285714285715, "obj2": 0.5668679372294921}, {"determining": "( ( ACS - ( ( Max( Min( ( ( BR + CRS ) - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MUC ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.37755102040816324, "obj2": 0.5431136702987932}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,ARS ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( ( MLU * RCSe ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.536734693877551, "obj2": 0.3919195604083443}, {"determining": "( ( ACS - ( ( Max( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( ACS / AMS ) ) ,( ACS - ( MDR - MRS ) ) ),MRS ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( MDR ,RRS ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe / Min( ( MUC / RRSe ) ,( RRSe + MUC ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RMSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5183673469387755, "obj2": 0.42238972315415174}, {"determining": "Max( ( ( CRS / ( AMS - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ),( CRS / ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe + MLU ),Min( ( Max( DS,DS ) / DS ) ,RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6331527670487366}, {"determining": "Max( Min( ( ( ACS - FirstVNF_RAM_Server ) + RRS ) ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( ( MUR - MUC ) / CS ) ) - Min( DS ,( ( DS - ( CS / ( Min( Max( RMSe,MUR ) ,Max( RRSe,MUR ) ) / ( MUC / ( RCSe * MUC ) ) ) ) ) / DS ) ) )", "obj1": 0.7122448979591837, "obj2": 0.20775682186754954}, {"determining": "( ( Max( FirstVNF_Mem_Server,BR ) / AMS ) + ( FirstVNF_RAM_Server + CRS ) )", "choosing": "( ( RMSe - RRSe ) + Min( ( ( Max( ( ( MUC / Min( CS ,RMSe ) ) / ( Max( MUC,DS ) * ( MUR / RCSe ) ) ),CS ) * RRSe ) - MUC ) ,MLU ) )", "obj1": 0.1510204081632653, "obj2": 0.8112872209670184}, {"determining": "Min( ( ( Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) - Max( ACS,PN ) ) / AMS ) ,( DDR + CRS ) )", "choosing": "( ( ( RRSe / RCSe ) - Min( MUM ,MUC ) ) - ( Min( RCSe ,( ( MUC * ( ( ( RMSe - RRSe ) + ( DS / RCSe ) ) / DS ) ) - ( RMSe / RCSe ) ) ) + ( RCSe * MUR ) ) )", "obj1": 0.3448979591836735, "obj2": 0.6041072568215311}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_CPU_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / ( ( ( ( ( DS - ( MUR + RCSe ) ) * RCSe ) / MUR ) / CS ) * RCSe ) ) ,( RCSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5210632771795836}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( MLU - ( ( ( DS / MUC ) - RRSe ) - MUR ) ) / ( RRSe * CS ) )", "obj1": 0.6510204081632653, "obj2": 0.24315773254369044}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - ( Min( Min( MRS ,Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( PN,FirstVNF_Mem ) ) + ( CRS - ACS ) ) ,( RRS + FirstVNF_RAM ) ) ) ,Min( DDR ,Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ,MDR ) ) ) + AMS ) )", "choosing": "( ( DS * MUR ) / ( ( MUR - Max( Min( Max( Max( ( MUM * RCSe ),( MUC * CS ) ),MUM ) ,DS ),RRSe ) ) - MLU ) )", "obj1": 0.1653061224489796, "obj2": 0.796906366033625}, {"determining": "( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Max( ( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ),Min( ( Const - FirstVNF_RAM ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) - MDR )", "choosing": "( ( DS * Min( MUM ,Min( DS ,Min( ( DS * RRSe ) ,DS ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe - ( RMSe - CS ) ) ),MLU ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.07508791524292943}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Max( ( ( PN * ARS ) + ( Const - ( AMS / ( BR * ( DDR / FirstVNF_RAM_Server ) ) ) ) ),FirstVNF_Mem ) ) - ( MDR - Max( CRS,RRS ) ) )", "choosing": "( ( RRSe / Max( MUC,RCSe ) ) / ( RCSe * ( Max( RMSe,RMSe ) - CS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6707036164640703}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,( FirstVNF_CPU * ACS ) ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( Min( Max( CS,MUC ) ,RRSe ) - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6122448979591837, "obj2": 0.26916004904881285}, {"determining": "( ( ACS - ACS ) - ( BR - ARS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.2571428571428571, "obj2": 0.7171883187536663}, {"determining": "( ( AMS - FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( RMSe * RRSe ) / Max( CS,( ( ( ( RRSe - MLU ) * RCSe ) - DS ) / RMSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.06280263874847647}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ) ,Min( DDR ,Min( FirstVNF_Mem ,MDR ) ) ) + AMS ) )", "choosing": "( ( RRSe / ( MUR - RCSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - CS ) )", "obj1": 0.47346938775510206, "obj2": 0.4659150375485951}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.40408163265306124, "obj2": 0.5419951474271273}, {"determining": "( Max( BR,( AMS / ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,( ( MLU * RCSe ) + RCSe ) )", "obj1": 0.48775510204081635, "obj2": 0.4428077333841261}, {"determining": "( Max( Min( ( AMS - Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) ) ,Min( ACS ,FirstVNF_Mem ) ),( ( ( CRS * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * CRS ) ) - FirstVNF_CPU ) ) - Max( Min( FirstVNF_CPU ,( Max( FirstVNF_Mem_Server,DDR ) * CRS ) ),( RRS + DDR ) ) )", "choosing": "( ( RRSe * Min( MUM ,Min( DS ,Min( DS ,( DS * RRSe ) ) ) ) ) / ( Max( ( ( MUC - ( ( Min( MUC ,CS ) * MUM ) - MUC ) ) - ( ( DS / ( MUC - ( RMSe - CS ) ) ) + Max( MUC,CS ) ) ),RRSe ) / ( ( MUC / MUC ) * ( DS + ( MUR * RMSe ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.023639420225778043}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - ( RRS * Min( FirstVNF_Mem ,CRS ) ) ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2453306767404716}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem * Max( ARS,( BR + FirstVNF_Mem ) ) ) - AMS ),ARS ) - MDR ) - Const ) - ( ( FirstVNF_CPU_Server * MDR ) - MDR ) )", "choosing": "( ( ( RCSe * Min( MUM ,Min( MUC ,( MUC - MUC ) ) ) ) + MUM ) / ( RRSe / Min( ( MUR * ( MUC - MUC ) ) ,( ( RRSe / RRSe ) - RCSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2261643442533418}, {"determining": "( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + BR ) ) ) - ( ( Max( Const,Min( ( MDR / ( CRS - FirstVNF_Mem ) ) ,( FirstVNF_CPU_Server / BR ) ) ) * FirstVNF_RAM ) - ( PN - DDR ) ) )", "choosing": "( ( ( ( ( ( Max( MLU,MUC ) + MUC ) - ( MUC - MUM ) ) / Min( Max( Max( MUC,( RCSe + DS ) ),MUC ) ,RCSe ) ) + RRSe ) + ( MUM - ( ( DS * MUC ) - Max( RCSe,MUM ) ) ) ) / ( RRSe / ( ( MLU * MUC ) / CS ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3615483844019463}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( RCSe + RCSe ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8333235364941444}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - ( ( ( ( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) + ARS ) * FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( RRSe + RCSe ) - ( RRSe - MUC ) ) - RCSe ) ) / ( MUM * CS ) )", "obj1": 0.6224489795918368, "obj2": 0.2617141000643045}, {"determining": "( ( ACS - ( ( FirstVNF_CPU_Server - ACS ) * MRS ) ) - ( Max( FirstVNF_RAM_Server,Min( ( BR - Min( Const ,ACS ) ) ,MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + RMSe ) + MUC ) - Min( RMSe ,( MUC + ( RRSe + ( ( CS * ( RCSe / MUC ) ) * ( Min( RRSe ,DS ) * DS ) ) ) ) ) ) / ( RRSe * ( MUM * ( DS / Min( ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * MLU ) ) ) ,( MLU / CS ) ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.1812236198708614}, {"determining": "( ( ACS - ( Max( FirstVNF_Mem,FirstVNF_CPU ) * RRS ) ) - Max( AMS,RRS ) )", "choosing": "( ( MLU * ( ( Max( MUR,( ( Min( MUC ,RRSe ) + MUR ) + RCSe ) ) - CS ) + RMSe ) ) / ( RRSe / RCSe ) )", "obj1": 0.8040816326530612, "obj2": 0.13741853215312533}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * MUM ) ,( MLU / MUC ) ) + ( ( MUM + RMSe ) / Min( ( RCSe / RCSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6504516864630508}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "Max( ( ( RCSe / CS ) * ( ( ( Min( MUC ,RMSe ) / ( ( Min( MUR ,DS ) - MUM ) + ( RMSe / RMSe ) ) ) / ( Max( MUR,MUC ) / CS ) ) / MLU ) ),( Min( MUR ,RCSe ) / ( MUM - RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.4583726604506383}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( CS * ( ( DS / MUR ) + MUR ) ) ) / MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.7345515058949376}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,RRS ) ) - ( ( Min( ARS ,RRS ) + MRS ) - Max( Const,Min( Const ,Min( FirstVNF_CPU_Server ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( ( ( MLU - Min( DS ,( MLU / RMSe ) ) ) / ( RCSe * RMSe ) ) - MUR ) ) / ( MUC + MUC ) )", "obj1": 0.18775510204081633, "obj2": 0.7929041824719603}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,MRS ) ) * ( ( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUC + ( ( MUR / MLU ) - MUR ) )", "obj1": 0.5693877551020409, "obj2": 0.36946430317691115}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / ( ( DS / MUR ) + MUR ) ) / MUM ) )", "obj1": 0.09183673469387756, "obj2": 0.8926087946064469}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( Max( ( RRSe / CS ),MUR ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.12782541604994643}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) * CS ) )", "obj1": 0.7877551020408163, "obj2": 0.14204877007234248}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.763265306122449, "obj2": 0.15896667949422505}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - Min( ACS ,ACS ) )", "choosing": "( CS / ( RCSe * ( RCSe * Min( ( Min( Max( Min( DS ,RRSe ),RCSe ) ,( Min( CS ,CS ) * RMSe ) ) * MUC ) ,MUR ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5935950589074728}, {"determining": "( ( ACS - ( RRS * ( Max( Min( ( DDR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server - PN ) ),Const ) / DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RCSe + MUR ) ,Max( MUC,DS ) ) ) ) ) + ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) ) ) / ( ( Min( MUM ,MLU ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.8163265306122449, "obj2": 0.13258272802569637}, {"determining": "( ( ACS - ( Min( Max( Min( ( RRS * DDR ) ,( FirstVNF_RAM_Server * BR ) ),( RRS * Min( FirstVNF_Mem ,CRS ) ) ) ,PN ) * MDR ) ) - Max( Min( Min( ARS ,Min( FirstVNF_CPU ,Max( ( ACS + FirstVNF_RAM ),( Const + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,( FirstVNF_RAM / Min( FirstVNF_CPU ,( ACS * DDR ) ) ) ) * PN ) ),AMS ) )", "choosing": "( ( ( RMSe + ( ( CS + Min( ( RCSe - ( MUC / MUM ) ) ,MUC ) ) - ( MUR * RMSe ) ) ) * ( DS - MUM ) ) / Min( MLU ,MLU ) )", "obj1": 0.7551020408163265, "obj2": 0.16795397053761674}, {"determining": "( ( FirstVNF_RAM_Server + ( ( ACS - ( DDR * FirstVNF_Mem_Server ) ) * BR ) ) - ( MRS - MDR ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( MUR * RRSe ) * ( ( Min( ( ( DS * MLU ) + MLU ) ,Min( MUC ,CS ) ) / RCSe ) + RCSe ) ) * RRSe ) )", "obj1": 0.21428571428571427, "obj2": 0.7540602646334769}, {"determining": "( ( FirstVNF_CPU_Server / MDR ) - Max( ACS,ACS ) )", "choosing": "( ( RCSe / RCSe ) / ( CS * CS ) )", "obj1": 0.22040816326530613, "obj2": 0.7459141931385778}, {"determining": "( Max( BR,( Min( Max( ( FirstVNF_CPU + MDR ),FirstVNF_CPU_Server ) ,BR ) / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( CS / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( Min( CS ,RMSe ) / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( Max( BR,( AMS / ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.3122448979591837, "obj2": 0.6564623681343139}, {"determining": "( Min( Max( ACS,MRS ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( RCSe / MLU ) * MUR ) )", "obj1": 0.5551020408163265, "obj2": 0.3898264282106812}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( ( ARS * ( MRS * FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + MUC ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8685830979685552}, {"determining": "( ( ( AMS / FirstVNF_CPU_Server ) + Min( CRS ,( ( ( MDR * RRS ) / FirstVNF_RAM_Server ) - DDR ) ) ) - ( FirstVNF_CPU_Server / ( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RMSe ,( RCSe / MLU ) ) / ( MUR - DS ) )", "obj1": 0.5653061224489796, "obj2": 0.3870599074041395}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - ( Min( Min( MRS ,Min( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( PN,FirstVNF_Mem ) ) + ( CRS - ACS ) ) ,( ACS + FirstVNF_RAM ) ) ) ,Min( DDR ,Min( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - CRS ) ,MDR ) ) ) + AMS ) )", "choosing": "( ( MUC * ( ( ( RMSe * ( ( ( MUR + DS ) + Max( RCSe,CS ) ) / CS ) ) * ( RCSe / RMSe ) ) / CS ) ) - Min( Max( RCSe,RMSe ) ,( MLU / RMSe ) ) )", "obj1": 0.3, "obj2": 0.665336092041821}, {"determining": "( Max( ACS,( AMS / ( ACS + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / CRS ) ) ) + ( Const - DDR ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( CS * RCSe ) / ( ( RMSe * RRSe ) / ( RRSe * ( ( RMSe - RMSe ) - ( CS / ( MUM / ( DS * MUC ) ) ) ) ) ) ) ,( RCSe + RCSe ) )", "obj1": 0.20204081632653062, "obj2": 0.7753268874475361}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8579890959486619}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + ( Min( MLU ,MUC ) / CS ) ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8386065711615227}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( MRS - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.1, "obj2": 0.8820611750497794}, {"determining": "( Min( FirstVNF_RAM ,ARS ) - ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ( Max( FirstVNF_RAM,Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ARS ) ,AMS ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( ( Max( CS,Min( ( RMSe - ( MLU + RRSe ) ) ,MUM ) ) + RMSe ) + CS ) )", "obj1": 0.9040816326530612, "obj2": 0.07058296306517642}, {"determining": "( ( PN / Min( Max( Min( CRS ,Min( MDR ,FirstVNF_CPU ) ),DDR ) ,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU_Server,( ( ( ( MDR * ( Min( PN ,ACS ) / FirstVNF_Mem_Server ) ) * DDR ) - AMS ) / Min( Min( ACS ,Max( Min( CRS ,Min( MDR ,FirstVNF_CPU ) ),DDR ) ) ,( ( Min( Const ,( BR / DDR ) ) / RRS ) * CRS ) ) ) ) )", "choosing": "( Max( Min( ( MUC / Min( CS ,( DS / ( ( MUR - MUR ) * Max( RCSe,RRSe ) ) ) ) ) ,RMSe ),MUM ) / ( MUR - MUR ) )", "obj1": 0.9673469387755103, "obj2": 0.015857445149440475}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8489098539404623}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( FirstVNF_RAM_Server - ACS ) ),Const ) / DDR ) * RRS ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( MDR * MDR ) ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( MLU * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( MUC,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( ( MUM * CS ) / ( RRSe * RRSe ) ) ) ) - MUR ) )", "obj1": 0.5081632653061224, "obj2": 0.4311572002857521}, {"determining": "( ( ACS - ( MRS - FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server / ( PN + FirstVNF_RAM_Server ) ) - ( PN + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM / ( Min( ( RRSe * CS ) ,( RCSe * RRSe ) ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.19591836734693877, "obj2": 0.7815949800629269}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( Const / Min( Min( ( AMS * CRS ) ,CRS ) ,MDR ) ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( RRSe * ( MUR / ( RCSe / ( Min( RCSe ,( MLU - MUM ) ) + ( CS - ( CS * ( MLU * RRSe ) ) ) ) ) ) ) / ( CS - ( RMSe / MUC ) ) )", "obj1": 0.2530612244897959, "obj2": 0.723207637392678}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( Const + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,MRS ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( Max( RRSe,( MUR / Max( MUR,RRSe ) ) ) - MUC ) ) ,RRSe ) - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7634574150965546}, {"determining": "( Max( Const,Min( Const ,( ( FirstVNF_RAM * FirstVNF_CPU ) / Max( ( DDR / CRS ),ACS ) ) ) ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - CS ) ,( ( RCSe - MUC ) * ( DS * MUC ) ) )", "obj1": 0.31020408163265306, "obj2": 0.665001404834059}, {"determining": "( ( MDR * RRS ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( CS / Max( ( Max( ( RCSe / RRSe ),RCSe ) * CS ),CS ) ) ) / ( MLU / ( ( MUC + MUM ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.12791577755878236}, {"determining": "( Max( ( ( MDR * RRS ) / FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ACS )", "choosing": "( ( MUR - DS ) / ( Max( MLU,Max( RRSe,( ( RCSe / RRSe ) - MUC ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.35306122448979593, "obj2": 0.5976580891642319}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - ACS ) ,( ACS - ( FirstVNF_RAM * ARS ) ) ),( FirstVNF_RAM - ( MDR / FirstVNF_CPU ) ) ) / DDR ) * RRS ) ) - Max( Min( Min( FirstVNF_CPU_Server ,PN ) ,Min( ARS ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),AMS ) )", "choosing": "( ( RRSe / CS ) / ( MUM * CS ) )", "obj1": 0.7326530612244898, "obj2": 0.18528546778812538}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.7224489795918367, "obj2": 0.1889329375816298}, {"determining": "( Min( PN ,FirstVNF_RAM ) - DDR )", "choosing": "( Min( CS ,RCSe ) * Max( MUM,CS ) )", "obj1": 0.963265306122449, "obj2": 0.01810318068954484}, {"determining": "( Max( ( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,ARS ) / FirstVNF_CPU ) / ( ( Min( ACS ,FirstVNF_RAM ) / AMS ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) ),BR ) - Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "Min( ( ( Max( ( ( CS + ( ( MUR - DS ) + MUR ) ) - RCSe ),MUM ) * RCSe ) / CS ) ,( RCSe + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.06797006298129689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / ( ARS * FirstVNF_RAM ) ) ) - ( ( ACS * ( Const / ( PN * AMS ) ) ) - ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( ( Max( MUR,RMSe ) / ( DS * RMSe ) ) / ( Min( Min( DS ,RRSe ) ,( RCSe * MUC ) ) * DS ) ) / ( RRSe * ( Min( MUR ,( CS + MUC ) ) - MUC ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006194592344777329}, {"determining": "( ( ( RRS / RRS ) / ( Const / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),ARS ) ) ) - Max( ( DDR * DDR ),RRS ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( MUR * RRSe ) * ( ( Min( ( ( DS * MLU ) + MLU ) ,Min( MUC ,CS ) ) / RCSe ) + RCSe ) ) * RRSe ) )", "obj1": 0.18979591836734694, "obj2": 0.7847378779996591}, {"determining": "Max( Min( Min( ACS ,RRS ) ,RRS ),( MRS * ACS ) )", "choosing": "( ( MUC - MUC ) - Min( ( RCSe / DS ) ,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8914088370402014}, {"determining": "( ( FirstVNF_RAM * ( ACS * BR ) ) - ( ( PN + ( ( FirstVNF_RAM_Server * MRS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / ( ACS - ( MRS / RRS ) ) ) ) ) ) * ( PN / DDR ) ) )", "choosing": "( RMSe / ( Max( CS,( ( Max( Min( ( MLU + MLU ) ,( MUC - RRSe ) ),MUR ) + MUM ) / ( MUM / MUR ) ) ) * Min( ( ( RRSe + MUC ) * DS ) ,DS ) ) )", "obj1": 0.7163265306122449, "obj2": 0.19942514849953596}, {"determining": "( Min( Max( ACS,FirstVNF_RAM_Server ) ,ACS ) - Max( AMS,MRS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUR ,MUM ) / RCSe ) * CS ) )", "obj1": 0.7775510204081633, "obj2": 0.14647087447799906}, {"determining": "( ( ( AMS / Min( DDR ,FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( ARS + CRS ) / ( ARS / MDR ) ) ) + ( ( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "( RCSe / ( RRSe * CS ) )", "obj1": 0.24285714285714285, "obj2": 0.7243695628458131}, {"determining": "( ( ( ( ( CRS - Max( ( Const / FirstVNF_RAM ),( ARS * Min( DDR ,DDR ) ) ) ) + BR ) * FirstVNF_CPU_Server ) + ( ( ACS + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) - ( ACS - Max( ( Max( Min( ( BR / ( CRS + MDR ) ) ,( ( ACS / FirstVNF_RAM ) * FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem ,Max( RRS,ARS ) ) * RRS ) ) * Min( Max( FirstVNF_RAM,( RRS - FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ),MDR ) ) )", "choosing": "( ( CS * MUM ) / Min( ( RCSe - MUC ) ,( ( RMSe - Min( RCSe ,RRSe ) ) * Min( Max( DS,RRSe ) ,( MUC - CS ) ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.003569878448031012}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( MUR / ( RRSe * CS ) )", "obj1": 0.6204081632653061, "obj2": 0.2654458106147891}, {"determining": "( ( ACS - ( ( Max( Min( ( CRS - RRS ) ,( ACS - ACS ) ),Const ) / DDR ) * Min( BR ,Min( RRS ,MDR ) ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( BR ,Min( RRS ,MDR ) ) ) + AMS ) )", "choosing": "( ( ( RRSe / RCSe ) * ( ( MUC + ( CS - ( RMSe + Min( ( RRSe / RRSe ) ,Max( RRSe,DS ) ) ) ) ) + RMSe ) ) / ( ( Min( MLU ,MUM ) - Max( RMSe,( CS - Max( RCSe,CS ) ) ) ) - MUR ) )", "obj1": 0.7612244897959184, "obj2": 0.16525942462202906}, {"determining": "( ACS - Max( MRS,AMS ) )", "choosing": "( ( MUR / ( Max( RRSe,MUC ) * DS ) ) / ( RRSe * CS ) )", "obj1": 0.7204081632653061, "obj2": 0.19724385401776606}, {"determining": "( Min( Max( Const,( Min( ( ( ARS / Max( ACS,FirstVNF_Mem_Server ) ) / DDR ) ,( MRS - RRS ) ) - FirstVNF_Mem_Server ) ) ,MRS ) * ( ( FirstVNF_CPU_Server + ARS ) + Max( FirstVNF_RAM,PN ) ) )", "choosing": "( ( ( Max( ( Min( ( ( MUR * MLU ) * ( CS * RRSe ) ) ,( RRSe * Max( CS,RMSe ) ) ) * MUM ),( ( ( Min( CS ,RRSe ) - RRSe ) * ( MUM * RMSe ) ) - ( Min( ( MUR * MUC ) ,MUM ) / DS ) ) ) * Max( MLU,DS ) ) - ( RMSe / MUM ) ) + ( CS / ( ( ( Max( Max( RRSe,DS ),MLU ) - DS ) * ( MLU + RMSe ) ) - MUC ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7649954505566741}, {"determining": "( Max( Const,Min( Const ,( FirstVNF_CPU_Server + BR ) ) ) - ( Min( CRS ,BR ) - ( ( ACS + Const ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / ( RRSe * ( DS / CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8525166873246748}, {"determining": "( Max( RRS,( RRS + RRS ) ) - RRS )", "choosing": "( ( RRSe * Min( MUM ,( DS / Min( ( ( ( CS - MUR ) - RCSe ) / MUR ) ,( MLU / CS ) ) ) ) ) / ( Max( RRSe,( ( MUC - ( ( Min( MUC ,RCSe ) * MUM ) - MUC ) ) - Max( ( DS / ( RCSe * Min( RMSe ,CS ) ) ),MLU ) ) ) / ( RRSe * Max( ( Min( ( ( CS - RMSe ) - CS ) ,MUM ) + Min( RCSe ,RRSe ) ),MUR ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8526481871940017}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( Min( CRS ,BR ) - ( ( Max( Const,Min( ( FirstVNF_RAM * PN ) ,( FirstVNF_CPU_Server + BR ) ) ) - ( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ARS ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) + AMS ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,MLU ) + MUC ) - DS ) / Min( Max( Max( MUC,( RCSe + RCSe ) ),MUC ) ,RCSe ) ) + RRSe ) + MUC ) / Max( ( Min( ( ( CS - RMSe ) - CS ) ,( Min( ( ( CS - RMSe ) / CS ) ,Min( MLU ,( DS + MUR ) ) ) + ( ( RCSe * ( MUM - RCSe ) ) / RMSe ) ) ) + Max( Max( ( MUM - RMSe ),Min( DS ,MLU ) ),( ( MUM - CS ) / Max( CS,RRSe ) ) ) ),( DS * CS ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8781473341836403}, {"determining": "( ( Min( FirstVNF_RAM_Server ,RRS ) / Max( ( ( BR - ( BR * CRS ) ) / ARS ),Max( ARS,FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR - DS ) / ( Max( MLU,Max( RRSe,( ( RCSe / RRSe ) - MUC ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.7306122448979592, "obj2": 0.18734068404042034}, {"determining": "( Max( BR,( AMS / ( ARS / MDR ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( ( ( MLU * RCSe ) / CS ) ,Min( ( ( MLU * RCSe ) / CS ) ,( RCSe + RCSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.38769290886522145}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8762411554005588}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS * MRS ) - ( FirstVNF_CPU_Server - Max( Const,( FirstVNF_RAM / ( FirstVNF_CPU * ARS ) ) ) ) ) ) ,ACS ) - ( CRS - BR ) )", "choosing": "( Max( ( MUC / DS ),RRSe ) * ( ( MUC / MUR ) / MUM ) )", "obj1": 0.23673469387755103, "obj2": 0.7254702977827077}, {"determining": "( Max( AMS,FirstVNF_RAM ) - ( ( ( DDR / ( PN / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) - ACS ) * ( DDR * CRS ) ) )", "choosing": "( ( RMSe + CS ) / ( Max( CS,( ( Max( Min( DS ,DS ),MLU ) - ( Max( RCSe,RCSe ) * RRSe ) ) / Min( MUM ,RMSe ) ) ) * Min( Min( DS ,Min( ( MLU + RMSe ) ,MLU ) ) ,DS ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8762411554005588}]}