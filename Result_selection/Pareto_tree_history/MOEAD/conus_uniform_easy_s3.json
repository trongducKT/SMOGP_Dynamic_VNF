{"1": [{"determining": "( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "Max( Max( RCSe,MUM ),( RRSe + MLU ) )", "obj1": 0.9291338582677166, "obj2": 0.05371315480950882}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( PN - CRS ) + ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * DS ) + ( RRSe + DS ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RMSe ,DS ) - Max( RCSe,MLU ) )", "obj1": 0.6122047244094488, "obj2": 0.2942986918851639}, {"determining": "Min( Min( AMS ,RRS ) ,Max( BR,BR ) )", "choosing": "( Max( CS,RMSe ) - Max( RCSe,RMSe ) )", "obj1": 0.3228346456692913, "obj2": 0.5154279607999267}, {"determining": "( ( FirstVNF_RAM_Server - CRS ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( CS - MUM ) - Max( RRSe,RRSe ) )", "obj1": 0.2874015748031496, "obj2": 0.6808785962016023}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,ACS ) )", "choosing": "Max( Min( RCSe ,RMSe ),( RRSe - MLU ) )", "obj1": 0.4035433070866142, "obj2": 0.4601885443351506}, {"determining": "( Min( PN ,MRS ) - ( CRS - ARS ) )", "choosing": "( Min( DS ,MUR ) + Min( MUR ,MUC ) )", "obj1": 0.5610236220472441, "obj2": 0.33092506206011146}, {"determining": "Max( ( FirstVNF_Mem * CRS ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUC + MUM ) ,( CS / MLU ) )", "obj1": 0.2283464566929134, "obj2": 0.6910584082813834}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( MRS / MRS ) )", "choosing": "Min( ( MLU * MLU ) ,( RRSe - MUR ) )", "obj1": 0.25393700787401574, "obj2": 0.5908677716225266}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( RRS - ARS ) )", "choosing": "( ( MUM + RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "( ( FirstVNF_CPU_Server - MDR ) / ( BR / DDR ) )", "choosing": "Min( ( MUR - MLU ) ,( RRSe / MUR ) )", "obj1": 0.2106299212598425, "obj2": 0.6273720624418967}, {"determining": "( Max( FirstVNF_RAM_Server,ARS ) * ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + RRSe ) - ( MUM / CS ) )", "obj1": 0.36811023622047245, "obj2": 0.4983786121798009}, {"determining": "( ( DDR - BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) / Max( MUC,MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5783775150477585}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,MUC ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( ARS - RRS ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( RCSe,RMSe ),Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + RRS ) ,( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( MUC * RMSe ) + ( RRSe * RCSe ) )", "obj1": 0.39763779527559057, "obj2": 0.4606626765126331}, {"determining": "( Min( MDR ,AMS ) * ( FirstVNF_Mem + ACS ) )", "choosing": "Max( ( MUR * MUR ),( MUC + MLU ) )", "obj1": 0.38188976377952755, "obj2": 0.47901714091500264}, {"determining": "( ( FirstVNF_RAM / Min( BR ,FirstVNF_CPU_Server ) ) + Max( ( RRS * RRS ),FirstVNF_CPU ) )", "choosing": "Max( Max( MUR,RRSe ),Max( ( MLU - MLU ),Min( DS ,DS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4949110907883596}, {"determining": "Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ACS ) ) ,Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( MLU + MUR ) * ( RCSe - ( MUR + RMSe ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6186582008058205}, {"determining": "( Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) * ( ( AMS * FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( RMSe / RMSe ),MUC ) ,( CS + MUC ) )", "obj1": 0.35039370078740156, "obj2": 0.5069774574846346}, {"determining": "( ( Min( MRS ,CRS ) + ( DDR * FirstVNF_CPU_Server ) ) + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_Mem + BR ) ) )", "choosing": "( ( ( MUR + MUC ) + ( MUR + RMSe ) ) * ( ( RRSe * CS ) / Min( MUC ,CS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.49032962465606356}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) )", "obj1": 0.6358267716535433, "obj2": 0.26122705680727276}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM ) * Min( MRS ,MRS ) ) )", "choosing": "( Min( ( DS + MUM ) ,MLU ) + ( ( MUM / MUC ) * ( DS + MUC ) ) )", "obj1": 0.5767716535433071, "obj2": 0.3095821836765266}, {"determining": "( ( ( ACS - FirstVNF_RAM_Server ) + ( ARS * CRS ) ) * ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / ( Const - RRS ) ) )", "choosing": "( ( ( MLU / MUC ) / ( MUR - DS ) ) / ( ( DS - MLU ) / ( RMSe + MUM ) ) )", "obj1": 0.2440944881889764, "obj2": 0.6056817515737157}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MRS ,( MRS + RRS ) ),( Max( AMS,MDR ) / ( MRS * BR ) ) )", "choosing": "( ( ( MLU * RCSe ) + Max( MLU,RCSe ) ) + ( ( MUC / RCSe ) + ( MUC / RRSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.48441334720591944}, {"determining": "( ( ( Const * DDR ) / Min( RRS ,CRS ) ) + Max( Min( RRS ,MDR ),( RRS / PN ) ) )", "choosing": "( ( ( CS * MLU ) / ( RRSe * CS ) ) - ( ( RMSe + CS ) * ( MUC - MUR ) ) )", "obj1": 0.28937007874015747, "obj2": 0.6408641301094067}, {"determining": "Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MLU ) + ( RCSe + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.2612012907062255}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + Min( FirstVNF_CPU ,ARS ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS * AMS ) ) )", "choosing": "( ( RRSe - ( MUM - RCSe ) ) + Min( MUR ,RCSe ) )", "obj1": 0.36220472440944884, "obj2": 0.49800356004867935}, {"determining": "( ( PN + ( ACS * Const ) ) * ( DDR - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - Min( CS ,DS ) ) - ( MLU + ( DS - CS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8239311616450363}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS - DDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( Max( DS,RMSe ),Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( RMSe - MLU ) ) ,Min( MUR ,DS ) )", "obj1": 0.7007874015748031, "obj2": 0.22625866937592362}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * CRS ) / CRS ) - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - ( Min( RCSe ,MUR ) / Min( RRSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - BR ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "Min( Max( ( ( MLU + CS ) - ( MLU + RCSe ) ),Max( Min( MUR ,RCSe ),( DS + MLU ) ) ) ,( Max( ( RRSe - MUC ),( MLU + CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5632322412508067}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),Max( PN,Const ) ) - ( Max( Const,AMS ) * ( MDR + FirstVNF_CPU ) ) ),( ( Min( AMS ,CRS ) / Max( AMS,BR ) ) / ( ( BR + DDR ) + ( ACS / FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe * MUC ) - Min( Min( MLU ,RRSe ) ,Max( MUM,RMSe ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6567551347393787}, {"determining": "( ( ( ( AMS * MRS ) - Min( ARS ,PN ) ) / ( ( AMS / ARS ) - ( FirstVNF_CPU_Server / ARS ) ) ) + ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( MRS ,MDR ) - ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RRSe ) + ( DS + MUC ) ) - Max( ( MLU - MLU ),Max( RCSe,RRSe ) ) ) - Max( Max( Min( RMSe ,MUR ),Max( RCSe,RRSe ) ),Max( ( MUM * DS ),( MUM * RRSe ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.22466671589670675}, {"determining": "Min( ( ( ( BR + ACS ) / Min( AMS ,DDR ) ) - Max( ( ARS * FirstVNF_Mem ),Max( PN,RRS ) ) ) ,( Max( ( ACS * AMS ),Max( FirstVNF_RAM,BR ) ) + ( ( Const * CRS ) + Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( Max( ( MUR / MUM ),Min( CS ,CS ) ) ,MUM ),( ( MUC / CS ) * ( ( MUR - MUC ) + CS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.49261112274572966}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * CRS ) / ( Const * FirstVNF_Mem ) ) ,( Min( Const ,BR ) - ( MDR / MRS ) ) ) / Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( PN / FirstVNF_Mem_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( Const - ARS ) ) ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( DS / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) * ( ( RMSe / CS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8367963334897657}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - ( RMSe + MUC ) )", "obj1": 0.9271653543307087, "obj2": 0.05091812448001292}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( BR + Const ) ) )", "choosing": "Min( ( Min( ( MUR / DS ) ,( CS * MUM ) ) / Min( ( CS - MUM ) ,Min( CS ,RCSe ) ) ) ,Max( ( Max( DS,RCSe ) + ( DS / DS ) ),Max( ( CS * CS ),( RCSe / DS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4533074281550881}, {"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ,Min( ARS ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( CS ,MUC ) / Min( CS ,RRSe ) ) * ( ( MUC - MLU ) / Max( RMSe,MUC ) ) ) * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MUR ) - Min( MLU ,CS ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6493180572595632}, {"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( MLU,( RCSe * DS ) ),Min( MUR ,RMSe ) )", "obj1": 0.3031496062992126, "obj2": 0.6050459348361565}], "2": [{"determining": "( ( RRS * FirstVNF_Mem ) - ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server + ARS ) ) ,Min( ARS ,FirstVNF_CPU ) ) - CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( ARS - RRS ) - ( MRS + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( RCSe,RMSe ),Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / BR )", "choosing": "( ( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.781496062992126, "obj2": 0.13058002783733136}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( MLU - MUC ) ) )", "obj1": 0.468503937007874, "obj2": 0.30255447027813615}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6492744759505538}, {"determining": "( Max( Max( ( Max( Min( Max( ( ARS - RRS ),( RRS / PN ) ) ,Min( ( AMS / MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ),Min( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Min( Min( DDR ,RRS ) ,( FirstVNF_RAM + ARS ) ) ) ) * ( ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( FirstVNF_RAM / ARS ) ) / ( ( ACS * FirstVNF_CPU ) - Max( Const,MRS ) ) ) - ( ( ( FirstVNF_Mem - BR ) / ( DDR / RRS ) ) - ( ( Const / BR ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ),Min( Max( ( Min( ( CRS - FirstVNF_Mem ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + Min( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ,Max( AMS,MDR ) ) ),( ( ( Const * MDR ) / ( ARS + FirstVNF_CPU ) ) - ( Min( AMS ,FirstVNF_RAM_Server ) + Max( CRS,PN ) ) ) ) ,Min( ( ( ( PN * FirstVNF_RAM ) * ( PN + ACS ) ) / ( ( MDR / FirstVNF_RAM ) * ( RRS + FirstVNF_Mem ) ) ) ,( ( ( PN + FirstVNF_RAM_Server ) * Min( CRS ,BR ) ) * ( ( RRS / FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ACS ) ) ) ) ) ),( Min( Min( ( Min( ( MDR / PN ) ,( ACS - CRS ) ) * ( ( Const + ARS ) + ( FirstVNF_Mem_Server / AMS ) ) ) ,( Min( ( FirstVNF_Mem_Server - MRS ) ,Max( FirstVNF_CPU,AMS ) ) / Max( ( FirstVNF_RAM + MRS ),Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ,Min( ( ( Max( Const,FirstVNF_Mem_Server ) / Max( PN,Const ) ) + ( ( DDR + AMS ) / Min( DDR ,ARS ) ) ) ,( ( ( ACS - FirstVNF_CPU ) / ( FirstVNF_Mem / RRS ) ) * ( ( MDR - MDR ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ) + ( ( Min( ( ( MRS - RRS ) * ( FirstVNF_RAM_Server - BR ) ) ,( Max( MDR,MRS ) * Min( MRS ,FirstVNF_RAM ) ) ) + Min( Min( ( CRS + ACS ) ,( FirstVNF_RAM + Const ) ) ,( ( FirstVNF_RAM * ARS ) - ( MDR - ACS ) ) ) ) / Max( ( Max( ( FirstVNF_CPU + CRS ),( BR + MRS ) ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( CRS / RRS ) ) ),( Min( Max( ACS,DDR ) ,( PN * RRS ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( ARS / RRS ) ) ) ) ) ) ) + ( ( ( ( ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( BR - MRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ) ) - ( Max( ( PN / Const ),( FirstVNF_Mem_Server * AMS ) ) * ( ( ACS / ARS ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * ( ( Min( ( RRS * FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) * Max( ( ACS + AMS ),( AMS * BR ) ) ) - Min( Max( ( PN * FirstVNF_Mem ),Max( BR,CRS ) ) ,Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( Min( ( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( RRS / AMS ) ) + Min( Min( ARS ,ACS ) ,( MDR + FirstVNF_RAM ) ) ) ,( Max( ( MRS / MRS ),( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server - CRS ) * Max( ARS,DDR ) ) ) ) * ( ( ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_CPU * DDR ) ) / ( Min( ACS ,PN ) / ( MDR - PN ) ) ) - Min( Max( ( FirstVNF_CPU / MRS ),( CRS * ARS ) ) ,Min( Min( FirstVNF_CPU ,ACS ) ,( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( RRS - FirstVNF_CPU_Server ) ,( MDR * FirstVNF_Mem ) ) * ( ( DDR - MDR ) - ( DDR / PN ) ) ) * Max( ( ( BR - PN ) - ( CRS - ACS ) ),Min( ( FirstVNF_RAM * RRS ) ,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) + ( ( ( Min( BR ,RRS ) - ( CRS * RRS ) ) + ( Max( ACS,AMS ) + ( RRS - RRS ) ) ) * ( ( ( ARS + FirstVNF_RAM ) / ( ACS + RRS ) ) / ( ( FirstVNF_CPU + ARS ) + ( FirstVNF_RAM_Server * Const ) ) ) ) ) - ( Min( ( Min( ( AMS + PN ) ,( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( CRS + BR ) ) ) ,( ( ( ACS + FirstVNF_CPU_Server ) / Min( RRS ,CRS ) ) * ( Min( MDR ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - ARS ) ) ) ) + Min( Max( Min( ( CRS - ARS ) ,Min( ARS ,FirstVNF_Mem_Server ) ),Min( ( CRS * ARS ) ,Min( BR ,PN ) ) ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),Max( ACS,MRS ) ) * ( ( MRS + ARS ) * ( ACS * Const ) ) ) ) ) ) ) )", "choosing": "Min( Min( Min( MUM ,CS ) ,DS ) ,Min( RMSe ,RCSe ) )", "obj1": 0.702755905511811, "obj2": 0.22084825465853775}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5074675620293139}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( ACS - ARS ) * ( RRS + FirstVNF_CPU ) )", "choosing": "( ( MLU + MUC ) - ( MUM - ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.29399468448715}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( RRS - ARS ) )", "choosing": "( ( MUM + RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.7467895605676882}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6528555796921475}, {"determining": "( ( PN - CRS ) + ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * DS ) + ( RRSe + DS ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * Max( PN,FirstVNF_CPU_Server ) ) - ( Max( Const,AMS ) * ( MDR + FirstVNF_CPU ) ) ),( ( Min( AMS ,CRS ) / Max( AMS,BR ) ) / ( ( BR + DDR ) + ( ACS / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 0.35236220472440943, "obj2": 0.43808261574153573}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( BR + Const ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Min( CS ,RRSe ) ) * ( ( MUC - MLU ) / Max( RMSe,MUC ) ) ) * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MLU ) - Min( MLU ,CS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5062354677648853}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.47618577061505935}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) )", "obj1": 0.6377952755905512, "obj2": 0.2596677070213333}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUC - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server + ARS ) ) ,Min( ARS ,( BR + Const ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Min( CS ,RRSe ) ) * DS ) * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MLU ) - Min( MLU ,CS ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.2602665875261221}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.025732279875568788}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04569824409458536}, {"determining": "Min( ( FirstVNF_CPU / ( BR + Const ) ) ,Min( ARS ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( CS ,MUC ) / Min( CS ,RRSe ) ) * MUM ) * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MLU ) - Min( MLU ,CS ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.4896972935284848}, {"determining": "( ( ( ( AMS * MRS ) - Min( ARS ,PN ) ) / ( ( AMS / ARS ) - ( FirstVNF_CPU_Server / ARS ) ) ) + ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( MRS ,MDR ) - ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RRSe ) + ( DS + MUC ) ) - Max( ( MLU - MLU ),Max( RCSe,RRSe ) ) ) - Max( Max( Min( RMSe ,MUR ),Max( RCSe,RRSe ) ),Max( ( MUM * DS ),( MUM * RRSe ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.22466671589670675}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( Const * FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) - ( MUC / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.42076722565743474}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( RMSe - MLU ) ) ,Min( MUR ,DS ) )", "obj1": 0.7007874015748031, "obj2": 0.22625866937592362}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,MUC ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS - DDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( Max( DS,RMSe ),Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * CRS ) / CRS ) - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - ( Min( RCSe ,MUR ) / Min( RRSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( ( FirstVNF_RAM_Server - BR ) / Min( PN ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MUR ) + ( RMSe - ( ( CS - MUM ) - Max( MLU,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( RRS - ARS ) )", "choosing": "( ( MUM + RRSe ) - Min( MLU ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + CRS ) / Min( ACS ,( ( Min( AMS ,( MRS + ( MRS * FirstVNF_CPU_Server ) ) ) - ( Const / ( FirstVNF_RAM * AMS ) ) ) - ARS ) ) )", "choosing": "( Min( ( ( ( RRSe - MUR ) * MLU ) + ( MUC - Min( MUM ,Max( CS,Min( ( RCSe * DS ) ,RCSe ) ) ) ) ) ,MLU ) / ( MLU + ( MLU + ( MUR / Min( MUR ,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) ) - ( Min( BR ,FirstVNF_RAM ) * Min( MRS ,MRS ) ) )", "choosing": "( Min( ( DS + MUM ) ,MLU ) + ( ( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) / MUC ) * ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM ) * Min( MRS ,MRS ) ) ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( ( DS + MUM ) ,MLU ) + ( ( MUM / MUC ) * ( DS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( RRS * FirstVNF_Mem ) - Max( CRS,CRS ) )", "choosing": "Max( Max( MLU,( RCSe * DS ) ),Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server + ARS ) ) ,Min( ARS ,FirstVNF_CPU ) ) - CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + Min( MLU ,RCSe ) ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( Max( Max( ( Max( Min( Max( ( ARS - RRS ),( RRS / PN ) ) ,Min( ( AMS / MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ),Min( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Min( Min( DDR ,RRS ) ,( FirstVNF_RAM + ARS ) ) ) ) * ( ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( FirstVNF_RAM / ARS ) ) / ( ( ACS * FirstVNF_CPU ) - Max( Const,MRS ) ) ) - ( ( ( FirstVNF_Mem - BR ) / ( DDR / RRS ) ) - ( ( Const / BR ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ),Min( Max( ( Min( ( CRS - FirstVNF_Mem ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + Min( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ,Max( AMS,MDR ) ) ),( ( ( Const * MDR ) / ( ARS + FirstVNF_CPU ) ) - ( Min( AMS ,FirstVNF_RAM_Server ) + Max( CRS,PN ) ) ) ) ,Min( ( ( ( PN * FirstVNF_RAM ) * ( PN + ACS ) ) / ( ( MDR / FirstVNF_RAM ) * ( RRS + FirstVNF_Mem ) ) ) ,( ( ( PN + FirstVNF_RAM_Server ) * Min( CRS ,BR ) ) * ( ( RRS / FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ACS ) ) ) ) ) ),( Min( Min( ( Min( ( MDR / PN ) ,( ACS - CRS ) ) * ( ( Const + ARS ) + ( FirstVNF_Mem_Server / AMS ) ) ) ,( Min( ( FirstVNF_Mem_Server - MRS ) ,Max( FirstVNF_CPU,AMS ) ) / Max( ( FirstVNF_RAM + MRS ),Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ,Min( ( ( Max( Const,FirstVNF_Mem_Server ) / Max( PN,Const ) ) + ( ( DDR + AMS ) / Min( DDR ,ARS ) ) ) ,( ( ( ACS - FirstVNF_CPU ) / ( FirstVNF_Mem / RRS ) ) * ( ( MDR - MDR ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ) + ( ( Min( ( ( MRS - RRS ) * ( FirstVNF_RAM_Server - BR ) ) ,( Max( MDR,MRS ) * Min( MRS ,FirstVNF_RAM ) ) ) + Min( Min( ( CRS + ACS ) ,( FirstVNF_RAM + Const ) ) ,( ( FirstVNF_RAM * ARS ) - ( MDR - ACS ) ) ) ) / Max( ( Max( ( FirstVNF_CPU + CRS ),( BR + MRS ) ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( CRS / RRS ) ) ),( Min( Max( ACS,DDR ) ,( PN * RRS ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( ARS / RRS ) ) ) ) ) ) ) + ( ( ( ( ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( BR - MRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ) ) - ( Max( ( PN / Const ),( FirstVNF_Mem_Server * AMS ) ) * ( ( ACS / ARS ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * ( ( Min( ( RRS * FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) * Max( ( ACS + AMS ),( AMS * BR ) ) ) - Min( Max( ( PN * FirstVNF_Mem ),Max( BR,CRS ) ) ,Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( Min( ( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( RRS / AMS ) ) + Min( Min( ARS ,ACS ) ,( MDR + FirstVNF_RAM ) ) ) ,( Max( ( MRS / MRS ),( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server - CRS ) * Max( ARS,DDR ) ) ) ) * ( ( ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_CPU * DDR ) ) / ( Min( ACS ,PN ) / ( MDR - PN ) ) ) - Min( Max( ( FirstVNF_CPU / MRS ),( CRS * ARS ) ) ,Min( Min( FirstVNF_CPU ,ACS ) ,( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( RRS - FirstVNF_CPU_Server ) ,( MDR * FirstVNF_Mem ) ) * ( ( DDR - MDR ) - ( DDR / PN ) ) ) * Max( ( ( BR - PN ) - ( CRS - ACS ) ),Min( ( FirstVNF_RAM * RRS ) ,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) + ( ( ( Min( BR ,RRS ) - ( CRS * RRS ) ) + ( Max( ACS,AMS ) + ( RRS - RRS ) ) ) * ( ( ( ARS + FirstVNF_RAM ) / ( ACS + RRS ) ) / ( ( FirstVNF_CPU + ARS ) + ( FirstVNF_RAM_Server * Const ) ) ) ) ) - ( Min( ( Min( ( AMS + PN ) ,( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( CRS + BR ) ) ) ,( ( ( ACS + FirstVNF_CPU_Server ) / Min( RRS ,CRS ) ) * ( Min( MDR ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - ARS ) ) ) ) + Min( Max( Min( ( CRS - ARS ) ,Min( ARS ,FirstVNF_Mem_Server ) ),Min( ( CRS * ARS ) ,Min( BR ,PN ) ) ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),Max( ACS,MRS ) ) * ( ( MRS + ARS ) * ( ACS * Const ) ) ) ) ) ) ) )", "choosing": "Min( Min( Min( MUM ,CS ) ,DS ) ,Min( RMSe ,RCSe ) )", "obj1": 0.702755905511811, "obj2": 0.22084825465853775}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU + MLU ) - ( MUM - MUR ) )", "obj1": 0.4074803149606299, "obj2": 0.4155202124003986}, {"determining": "( ( Max( MRS,ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,Min( ( MLU * MLU ) ,Min( RRSe ,MUR ) ) ) )", "obj1": 0.46653543307086615, "obj2": 0.306139892356653}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.531496062992126, "obj2": 0.2809964145261435}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server + ARS ) ) ,Min( ARS ,( BR + Const ) ) )", "choosing": "( ( ( Min( CS ,MUC ) / Min( CS ,RRSe ) ) * DS ) * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MLU ) - Min( MLU ,CS ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.2602665875261221}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6528555796921475}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7400021753878373}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6250545898803374}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.47618577061505935}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( BR / DDR ) + ( MRS / MRS ) ) )", "choosing": "( ( Min( ( Min( ( MUR - MLU ) ,( RRSe / MUR ) ) * MLU ) ,( RRSe - MUR ) ) - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.1732283464566929, "obj2": 0.6342593667687577}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "Max( ( MDR - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6344151054364655}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5074675620293139}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RRSe - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.3405511811023622, "obj2": 0.46047901649015466}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) )", "obj1": 0.6377952755905512, "obj2": 0.2596677070213333}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5074675620293139}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( Min( Max( ( ( ( ( ( MDR + ACS ) / ( ARS + ARS ) ) + ( ( FirstVNF_RAM_Server + RRS ) * ( FirstVNF_CPU - MRS ) ) ) / Min( Max( ( PN - FirstVNF_Mem ),( AMS * MRS ) ) ,( ( RRS + MRS ) * ( MRS * PN ) ) ) ) - ( Max( ( ( DDR - MRS ) - Min( DDR ,FirstVNF_Mem_Server ) ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) / ( Max( Max( Const,PN ),Max( FirstVNF_CPU_Server,BR ) ) / ( ( FirstVNF_CPU_Server * RRS ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),( Max( Min( ( ( FirstVNF_RAM / BR ) + Max( Const,FirstVNF_RAM ) ) ,Max( ( FirstVNF_Mem_Server + BR ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),Min( ( ( CRS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,MDR ) / ( MDR - PN ) ) ) ) - Min( ( Max( ( DDR + FirstVNF_Mem_Server ),Max( RRS,CRS ) ) - ( ( ACS * MRS ) * Max( ARS,Const ) ) ) ,( ( ( AMS / FirstVNF_RAM ) / ( PN * CRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_Mem_Server - Const ) + ( BR + FirstVNF_RAM ) ) / ( Max( MRS,FirstVNF_CPU ) / ( ARS / ACS ) ) ) + Min( Min( Min( PN ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) ,( ( PN - MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( DDR,RRS ) ) * ( ( PN - BR ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( Max( ( ARS + FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,DDR ) ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) / ( Max( Min( Max( ( FirstVNF_RAM / CRS ),( ARS / MRS ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM - FirstVNF_RAM ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU + RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) + Min( ( Max( Max( BR,PN ),( ACS - FirstVNF_CPU_Server ) ) + ( ( MRS * MDR ) - Min( Const ,FirstVNF_Mem_Server ) ) ) ,( Max( ( PN / Const ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ) * ( ( ( ( ( Min( ( ARS * CRS ) ,( MRS / CRS ) ) + ( Min( BR ,PN ) * ( ARS / RRS ) ) ) + ( Min( Min( PN ,FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) ) + ( ( DDR * BR ) + ( RRS - FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_RAM_Server * RRS ),( CRS - DDR ) ) - Max( ( FirstVNF_Mem_Server + Const ),( ARS * Const ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) - ( ACS - RRS ) ) * ( ( Const / MRS ) + Max( FirstVNF_Mem,RRS ) ) ) ) ) * ( ( Min( Min( ( MRS * AMS ) ,( FirstVNF_Mem - MRS ) ) ,( ( RRS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) + ( Max( Max( PN,FirstVNF_CPU ),( AMS * PN ) ) + ( ( MDR * RRS ) * ( MRS / RRS ) ) ) ) - ( ( ( ( MDR + Const ) + Min( DDR ,FirstVNF_CPU_Server ) ) * ( Max( MDR,FirstVNF_Mem_Server ) / ( DDR + DDR ) ) ) / ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( MRS + Const ) ) + ( ( FirstVNF_Mem_Server + BR ) + Max( CRS,CRS ) ) ) ) ) ) + Min( ( ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Min( RRS ,AMS ) ),Max( ( FirstVNF_Mem_Server - AMS ),( ARS * ACS ) ) ) / ( ( ( FirstVNF_CPU / BR ) / Min( FirstVNF_Mem_Server ,RRS ) ) * Min( Min( CRS ,MRS ) ,( FirstVNF_CPU + RRS ) ) ) ) / Max( ( ( Max( RRS,AMS ) - Min( FirstVNF_Mem_Server ,CRS ) ) + ( Min( MRS ,RRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ),( Max( ( PN / BR ),Max( BR,AMS ) ) * ( Min( Const ,ACS ) * ( AMS + FirstVNF_RAM_Server ) ) ) ) ) ,( ( Max( ( ( BR - DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( PN * FirstVNF_CPU ) / Max( MDR,FirstVNF_Mem_Server ) ) ) - ( Max( ( RRS * DDR ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( ( PN - MRS ) + ( FirstVNF_RAM - RRS ) ) ) ) + Min( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( PN / CRS ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ,( Max( ( DDR - AMS ),( MRS * RRS ) ) - ( ( MDR / ACS ) + ( FirstVNF_Mem - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( Max( ( DS / DS ),( CS - RMSe ) ),( Max( MUR,CS ) + ( MUM / CS ) ) ) ,( ( Max( MUC,DS ) + ( MLU / MLU ) ) - ( ( MUC * MUC ) - ( RCSe + CS ) ) ) ) + Max( Min( ( ( RRSe / CS ) + ( CS + CS ) ) ,Max( ( CS + DS ),( RMSe / RCSe ) ) ),( ( ( RCSe + MUM ) / ( RRSe * RRSe ) ) * Max( ( MUC / MLU ),( MUC - RMSe ) ) ) ) ) - Max( ( Min( Min( ( CS * MUC ) ,( RMSe + DS ) ) ,Min( ( RMSe - MLU ) ,Max( RMSe,CS ) ) ) / ( ( ( DS + RMSe ) - ( RRSe - RMSe ) ) / ( ( MUR * RMSe ) * ( RCSe / RCSe ) ) ) ),( ( ( ( MLU * MUR ) + ( RCSe / DS ) ) + ( Min( MUR ,RMSe ) / ( CS + RMSe ) ) ) * Min( Min( ( MUR - MUC ) ,( CS * MUC ) ) ,( Min( MUM ,RMSe ) - Min( CS ,MUM ) ) ) ) ) ) - ( ( Min( ( Max( ( MUC * CS ),( RCSe + MLU ) ) - Min( ( RRSe * DS ) ,( MUR - MUC ) ) ) ,( ( Max( RCSe,MUC ) - Max( MUC,DS ) ) * Max( Min( RRSe ,CS ),Max( MUR,CS ) ) ) ) + ( Min( ( Min( RMSe ,RMSe ) + Max( RCSe,RRSe ) ) ,Max( ( RCSe * RMSe ),( MUM + MUM ) ) ) - Max( ( ( MUM + MLU ) + ( RMSe - MLU ) ),Min( ( MUM / MUC ) ,( MUR * RMSe ) ) ) ) ) + ( ( ( ( Min( MUR ,DS ) - ( DS * MLU ) ) * ( ( MUC * MUR ) + ( MUM / RMSe ) ) ) * ( Max( ( MUC / MUR ),Max( MUC,CS ) ) - Min( ( MUM - MUC ) ,( MUR * RMSe ) ) ) ) + ( Min( ( ( RRSe * MUM ) - Max( DS,MLU ) ) ,( Min( RMSe ,MUR ) * Min( DS ,RRSe ) ) ) + ( ( ( MUC - DS ) / ( RRSe - MLU ) ) - ( Max( CS,DS ) - ( DS * RMSe ) ) ) ) ) ) ) - Max( Max( ( Max( ( Min( ( CS / MUC ) ,( MUM + MUC ) ) - ( ( MLU * MLU ) / ( RMSe / RCSe ) ) ),( ( Min( RRSe ,MUM ) - ( DS * DS ) ) / ( ( RCSe - MUC ) + ( MUC - MUC ) ) ) ) / Min( ( ( Max( MLU,MUC ) + ( RCSe + MUC ) ) * Min( ( MUM + CS ) ,( MUM * CS ) ) ) ,( ( Max( CS,CS ) + ( MUR + DS ) ) * ( Min( MUR ,RRSe ) - Min( MUC ,RRSe ) ) ) ) ),( ( ( ( ( MLU / MUC ) - ( MUR - MLU ) ) * ( Max( MUM,DS ) * ( MUR * RMSe ) ) ) - Min( Min( Max( RMSe,MLU ) ,( RCSe / MUM ) ) ,( ( CS * MUM ) * ( MUM - RCSe ) ) ) ) / ( ( Min( Min( RCSe ,MUM ) ,Min( MUR ,MUC ) ) / ( ( MUC + DS ) - ( RMSe - RMSe ) ) ) + ( ( ( DS + MUM ) + ( CS / MUR ) ) + ( ( MUR * RMSe ) + ( DS / MUM ) ) ) ) ) ),( ( Min( ( ( ( MUM * DS ) + ( MUC * RRSe ) ) - Min( ( MUR / MUM ) ,( MLU / CS ) ) ) ,( ( ( MUR - RCSe ) / ( RRSe + MUM ) ) - ( ( DS + RMSe ) + ( MUC * RRSe ) ) ) ) / ( ( ( Min( DS ,CS ) / ( MLU / MLU ) ) + ( ( MUR * MUR ) + Max( MUC,MUR ) ) ) / Max( ( ( MUC / DS ) - ( MUC - MUC ) ),( Min( RMSe ,MUR ) / Min( RRSe ,RRSe ) ) ) ) ) * Max( Min( ( ( ( MUR * CS ) - Max( RRSe,RCSe ) ) * Min( ( RMSe / DS ) ,( MLU - CS ) ) ) ,( Min( ( RMSe * CS ) ,Min( RMSe ,MUM ) ) - Max( ( MLU - MLU ),( RMSe + MUC ) ) ) ),( Min( ( ( RRSe * RRSe ) - ( DS - CS ) ) ,Max( ( MLU - MUR ),( RMSe * DS ) ) ) - ( ( ( CS / MUM ) + ( MUC + RCSe ) ) / ( ( DS * MUR ) / ( CS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.012203308875245296}, {"determining": "( ( FirstVNF_CPU - Const ) / Const )", "choosing": "Min( Min( RMSe ,Min( Min( RMSe ,DS ) ,Max( RCSe,MLU ) ) ) ,Max( RCSe,MLU ) )", "obj1": 0.6929133858267716, "obj2": 0.2314721232704321}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.025732279875568788}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04569824409458536}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( MLU - MUC ) ) )", "obj1": 0.468503937007874, "obj2": 0.30255447027813615}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( Const * FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) - ( MUC / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.42076722565743474}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6492744759505538}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,MUC ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.7467895605676882}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( RRS - ( CRS - CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( Max( CS,( RCSe * DS ) ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.7414276402820011}, {"determining": "( ( ( ( AMS * MRS ) - Min( ARS ,PN ) ) / ( ( AMS / ARS ) - ( FirstVNF_CPU_Server / ARS ) ) ) + ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( MRS ,MDR ) - ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RRSe ) + ( DS + MUC ) ) - Max( ( MLU - MLU ),Max( RCSe,RRSe ) ) ) - Max( Max( Min( RMSe ,MUR ),Max( RCSe,RRSe ) ),Max( ( MUM * DS ),( MUM * RRSe ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.22466671589670675}, {"determining": "Max( ( MDR - MRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.6406267621765689}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( RMSe - MLU ) ) ,Min( MUR ,DS ) )", "obj1": 0.7007874015748031, "obj2": 0.22625866937592362}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( RRS - ARS ) )", "choosing": "( ( MUM + RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "Max( ( Const - MRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( RCSe,RCSe ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.6394200248163898}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUC - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.6406267621765689}], "4": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( RRS * MDR ) - Max( CRS,CRS ) )", "choosing": "Max( Max( MLU,( RCSe * DS ) ),Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem ) - Max( CRS,CRS ) )", "choosing": "Max( Max( MLU,( RCSe * DS ) ),Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Const ) / ( FirstVNF_Mem + CRS ) )", "choosing": "Min( Min( RMSe ,DS ) ,MUC )", "obj1": 0.7047244094488189, "obj2": 0.21902723966640317}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU + MLU ) - ( MUM - MUR ) )", "obj1": 0.4074803149606299, "obj2": 0.4155202124003986}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * CRS ) / BR ) ,( Min( Const ,BR ) - ( MDR / RRS ) ) ) / Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ( Const / MRS ) ,( Const - ARS ) ) ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( RMSe / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) / ( MUC / ( MUM + RCSe ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6035797646303837}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( MLU,RCSe ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.7393162878681336}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6528555796921475}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.47618577061505935}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "Max( ( MDR - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6344151054364655}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.531496062992126, "obj2": 0.2809964145261435}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5015144673170066}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RRSe - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.3405511811023622, "obj2": 0.46047901649015466}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + Min( MLU ,RCSe ) ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( Min( Max( ( ( ( ( ( MDR + ACS ) / ( ARS + ARS ) ) + ( ( FirstVNF_RAM_Server + RRS ) * ( FirstVNF_CPU - MRS ) ) ) / Min( Max( ( PN - FirstVNF_Mem ),( AMS * MRS ) ) ,( ( RRS + MRS ) * ( MRS * PN ) ) ) ) - ( Max( ( ( DDR - MRS ) - Min( DDR ,FirstVNF_Mem_Server ) ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) / ( Max( Max( Const,PN ),Max( FirstVNF_CPU_Server,BR ) ) / ( ( FirstVNF_CPU_Server * RRS ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),( Max( Min( ( ( FirstVNF_RAM / BR ) + Max( Const,FirstVNF_RAM ) ) ,Max( ( FirstVNF_Mem_Server + BR ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),Min( ( ( CRS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,MDR ) / ( MDR - PN ) ) ) ) - Min( ( Max( ( DDR + FirstVNF_Mem_Server ),Max( RRS,CRS ) ) - ( ( ACS * MRS ) * Max( ARS,Const ) ) ) ,( ( ( AMS / FirstVNF_RAM ) / ( PN * CRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_Mem_Server - Const ) + ( BR + FirstVNF_RAM ) ) / ( Max( MRS,FirstVNF_CPU ) / ( ARS / ACS ) ) ) + Min( Min( Min( PN ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) ,( ( PN - MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( DDR,RRS ) ) * ( ( PN - BR ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( Max( ( ARS + FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,DDR ) ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) / ( Max( Min( Max( ( FirstVNF_RAM / CRS ),( ARS / MRS ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM - FirstVNF_RAM ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU + RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) + Min( ( Max( Max( BR,PN ),( ACS - FirstVNF_CPU_Server ) ) + ( ( MRS * MDR ) - Min( Const ,FirstVNF_Mem_Server ) ) ) ,( Max( ( PN / Const ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ) * ( ( ( ( ( Min( ( ARS * CRS ) ,( MRS / CRS ) ) + ( Min( BR ,PN ) * ( ARS / RRS ) ) ) + ( Min( Min( PN ,FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) ) + ( ( DDR * BR ) + ( RRS - FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_RAM_Server * RRS ),( CRS - DDR ) ) - Max( ( FirstVNF_Mem_Server + Const ),( ARS * Const ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) - ( ACS - RRS ) ) * ( ( Const / MRS ) + Max( FirstVNF_Mem,RRS ) ) ) ) ) * ( ( Min( Min( ( MRS * AMS ) ,( FirstVNF_Mem - MRS ) ) ,( ( RRS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) + ( Max( Max( PN,FirstVNF_CPU ),( AMS * PN ) ) + ( ( MDR * RRS ) * ( MRS / RRS ) ) ) ) - ( ( ( ( MDR + Const ) + Min( DDR ,FirstVNF_CPU_Server ) ) * ( Max( MDR,FirstVNF_Mem_Server ) / ( DDR + DDR ) ) ) / ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( MRS + Const ) ) + ( ( FirstVNF_Mem_Server + BR ) + Max( CRS,CRS ) ) ) ) ) ) + Min( ( ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Min( RRS ,AMS ) ),Max( ( FirstVNF_Mem_Server - AMS ),( ARS * ACS ) ) ) / ( ( ( FirstVNF_CPU / BR ) / Min( FirstVNF_Mem_Server ,RRS ) ) * Min( Min( CRS ,MRS ) ,( FirstVNF_CPU + RRS ) ) ) ) / Max( ( ( Max( RRS,AMS ) - Min( FirstVNF_Mem_Server ,CRS ) ) + ( Min( MRS ,RRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ),( Max( ( PN / BR ),Max( BR,AMS ) ) * ( Min( Const ,ACS ) * ( AMS + FirstVNF_RAM_Server ) ) ) ) ) ,( ( Max( ( ( BR - DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( PN * FirstVNF_CPU ) / Max( MDR,FirstVNF_Mem_Server ) ) ) - ( Max( ( RRS * DDR ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( ( PN - MRS ) + ( FirstVNF_RAM - RRS ) ) ) ) + Min( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( PN / CRS ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ,( Max( ( DDR - AMS ),( MRS * RRS ) ) - ( ( MDR / ACS ) + ( FirstVNF_Mem - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( Max( ( DS / DS ),( CS - RMSe ) ),( Max( MUR,CS ) + ( MUM / CS ) ) ) ,( ( Max( MUC,DS ) + ( MLU / MLU ) ) - ( ( MUC * MUC ) - ( RCSe + CS ) ) ) ) + Max( Min( ( ( RRSe / CS ) + ( CS + CS ) ) ,Max( ( CS + DS ),( RMSe / RCSe ) ) ),( ( ( RCSe + MUM ) / ( RRSe * RRSe ) ) * Max( ( MUC / MLU ),( MUC - RMSe ) ) ) ) ) - Max( ( Min( Min( ( CS * MUC ) ,( RMSe + DS ) ) ,Min( ( RMSe - MLU ) ,Max( RMSe,CS ) ) ) / ( ( ( DS + RMSe ) - ( RRSe - RMSe ) ) / ( ( MUR * RMSe ) * ( RCSe / RCSe ) ) ) ),( ( ( ( MLU * MUR ) + ( RCSe / DS ) ) + ( Min( MUR ,RMSe ) / ( CS + RMSe ) ) ) * Min( Min( ( MUR - MUC ) ,( CS * MUC ) ) ,( Min( MUM ,RMSe ) - Min( CS ,MUM ) ) ) ) ) ) - ( ( Min( ( Max( ( MUC * CS ),( RCSe + MLU ) ) - Min( ( RRSe * DS ) ,( MUR - MUC ) ) ) ,( ( Max( RCSe,MUC ) - Max( MUC,DS ) ) * Max( Min( RRSe ,CS ),Max( MUR,CS ) ) ) ) + ( Min( ( Min( RMSe ,RMSe ) + Max( RCSe,RRSe ) ) ,Max( ( RCSe * RMSe ),( MUM + MUM ) ) ) - Max( ( ( MUM + MLU ) + ( RMSe - MLU ) ),Min( ( MUM / MUC ) ,( MUR * RMSe ) ) ) ) ) + ( ( ( ( Min( MUR ,DS ) - ( DS * MLU ) ) * ( ( MUC * MUR ) + ( MUM / RMSe ) ) ) * ( Max( ( MUC / MUR ),Max( MUC,CS ) ) - Min( ( MUM - MUC ) ,( MUR * RMSe ) ) ) ) + ( Min( ( ( RRSe * MUM ) - Max( DS,MLU ) ) ,( Min( RMSe ,MUR ) * Min( DS ,RRSe ) ) ) + ( ( ( MUC - DS ) / ( RRSe - MLU ) ) - ( Max( CS,DS ) - ( DS * RMSe ) ) ) ) ) ) ) - Max( Max( ( Max( ( Min( ( CS / MUC ) ,( MUM + MUC ) ) - ( ( MLU * MLU ) / ( RMSe / RCSe ) ) ),( ( Min( RRSe ,MUM ) - ( DS * DS ) ) / ( ( RCSe - MUC ) + ( MUC - MUC ) ) ) ) / Min( ( ( Max( MLU,MUC ) + ( RCSe + MUC ) ) * Min( ( MUM + CS ) ,( MUM * CS ) ) ) ,( ( Max( CS,CS ) + ( MUR + DS ) ) * ( Min( MUR ,RRSe ) - Min( MUC ,RRSe ) ) ) ) ),( ( ( ( ( MLU / MUC ) - ( MUR - MLU ) ) * ( Max( MUM,DS ) * ( MUR * RMSe ) ) ) - Min( Min( Max( RMSe,MLU ) ,( RCSe / MUM ) ) ,( ( CS * MUM ) * ( MUM - RCSe ) ) ) ) / ( ( Min( Min( RCSe ,MUM ) ,Min( MUR ,MUC ) ) / ( ( MUC + DS ) - ( RMSe - RMSe ) ) ) + ( ( ( DS + MUM ) + ( CS / MUR ) ) + ( ( MUR * RMSe ) + ( DS / MUM ) ) ) ) ) ),( ( Min( ( ( ( MUM * DS ) + ( MUC * RRSe ) ) - Min( ( MUR / MUM ) ,( MLU / CS ) ) ) ,( ( ( MUR - RCSe ) / ( RRSe + MUM ) ) - ( ( DS + RMSe ) + ( MUC * RRSe ) ) ) ) / ( ( ( Min( DS ,CS ) / ( MLU / MLU ) ) + ( ( MUR * MUR ) + Max( MUC,MUR ) ) ) / Max( ( ( MUC / DS ) - ( MUC - MUC ) ),( Min( RMSe ,MUR ) / Min( RRSe ,RRSe ) ) ) ) ) * Max( Min( ( ( ( MUR * CS ) - Max( RRSe,RCSe ) ) * Min( ( RMSe / DS ) ,( MLU - CS ) ) ) ,( Min( ( RMSe * CS ) ,Min( RMSe ,MUM ) ) - Max( ( MLU - MLU ),( RMSe + MUC ) ) ) ),( Min( ( ( RRSe * RRSe ) - ( DS - CS ) ) ,Max( ( MLU - MUR ),( RMSe * DS ) ) ) - ( ( ( CS / MUM ) + ( MUC + RCSe ) ) / ( ( DS * MUR ) / ( CS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.012203308875245296}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.025732279875568788}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04569824409458536}, {"determining": "( ( FirstVNF_CPU - Const ) / Const )", "choosing": "Min( Min( RMSe ,Min( Min( RMSe ,DS ) ,Max( RCSe,MLU ) ) ) ,Max( RCSe,MLU ) )", "obj1": 0.6929133858267716, "obj2": 0.2314721232704321}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( Const * FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) - ( MUC / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.42076722565743474}, {"determining": "( ( PN - ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) ) ) / ( AMS * PN ) )", "choosing": "( Min( RMSe ,DS ) - ( Min( RMSe ,DS ) - MLU ) )", "obj1": 0.9980314960629921, "obj2": 0.0009288387950656464}, {"determining": "( Max( PN,FirstVNF_CPU ) * ( Const + FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6437010025446342}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.7467895605676882}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem + CRS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( RCSe,MLU ) )", "obj1": 0.6929133858267716, "obj2": 0.2314721232704321}, {"determining": "( ( ( ( AMS * MRS ) - Min( ARS ,PN ) ) / ( ( AMS / ARS ) - ( FirstVNF_CPU_Server / ARS ) ) ) + ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( MRS ,MDR ) - ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RRSe ) + ( DS + MUC ) ) - Max( ( MLU - MLU ),Max( RCSe,RRSe ) ) ) - Max( Max( Min( RMSe ,MUR ),Max( RCSe,RRSe ) ),Max( ( MUM * DS ),( MUM * RRSe ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.22466671589670675}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( RMSe - MLU ) ) ,Min( MUR ,DS ) )", "obj1": 0.7007874015748031, "obj2": 0.22625866937592362}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( RRS - ARS ) )", "choosing": "( ( MUM + RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "Max( ( Const - MRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( RCSe,RCSe ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.6394200248163898}, {"determining": "( Max( Max( ( Max( Min( Max( ( ARS - RRS ),( RRS / PN ) ) ,Min( ( AMS / MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ),Min( ( ( AMS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Min( Min( DDR ,RRS ) ,( FirstVNF_RAM + ARS ) ) ) ) * ( ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( FirstVNF_RAM / ARS ) ) / ( ( ACS * FirstVNF_CPU ) - Max( Const,MRS ) ) ) - ( ( ( FirstVNF_Mem - BR ) / ( DDR / RRS ) ) - ( ( Const / BR ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ),Min( Max( ( Min( ( CRS - FirstVNF_Mem ) ,Min( MDR ,FirstVNF_CPU_Server ) ) + Min( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ,Max( AMS,MDR ) ) ),( ( ( Const * MDR ) / ( ARS + FirstVNF_CPU ) ) - ( Min( AMS ,FirstVNF_RAM_Server ) + Max( CRS,PN ) ) ) ) ,Min( ( ( ( PN * FirstVNF_RAM ) * ( PN + ACS ) ) / ( ( MDR / FirstVNF_RAM ) * ( RRS + FirstVNF_Mem ) ) ) ,( ( ( PN + FirstVNF_RAM_Server ) * Min( CRS ,BR ) ) * ( ( RRS / FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ACS ) ) ) ) ) ),( Min( Min( ( Min( ( MDR / PN ) ,( ACS - CRS ) ) * ( ( Const + ARS ) + ( FirstVNF_Mem_Server / AMS ) ) ) ,( Min( ( FirstVNF_Mem_Server - MRS ) ,Max( FirstVNF_CPU,AMS ) ) / Max( ( FirstVNF_RAM + MRS ),Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ,Min( ( ( Max( Const,FirstVNF_Mem_Server ) / Max( PN,Const ) ) + ( ( DDR + AMS ) / Min( DDR ,ARS ) ) ) ,( ( ( ACS - FirstVNF_CPU ) / ( FirstVNF_Mem / RRS ) ) * ( ( MDR - MDR ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ) + ( ( Min( ( ( MRS - RRS ) * ( FirstVNF_RAM_Server - BR ) ) ,( Max( MDR,MRS ) * Min( MRS ,FirstVNF_RAM ) ) ) + Min( Min( ( CRS + ACS ) ,( FirstVNF_RAM + Const ) ) ,( ( FirstVNF_RAM * ARS ) - ( MDR - ACS ) ) ) ) / Max( ( Max( ( FirstVNF_CPU + CRS ),( BR + MRS ) ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( CRS / RRS ) ) ),( Min( Max( ACS,DDR ) ,( PN * RRS ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( ARS / RRS ) ) ) ) ) ) ) + ( ( ( ( ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( BR - MRS ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ) ) - ( Max( ( PN / Const ),( FirstVNF_Mem_Server * AMS ) ) * ( ( ACS / ARS ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) * ( ( Min( ( RRS * FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) * Max( ( ACS + AMS ),( AMS * BR ) ) ) - Min( Max( ( PN * FirstVNF_Mem ),Max( BR,CRS ) ) ,Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( Min( ( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( RRS / AMS ) ) + Min( Min( ARS ,ACS ) ,( MDR + FirstVNF_RAM ) ) ) ,( Max( ( MRS / MRS ),( RRS / MRS ) ) / ( ( FirstVNF_RAM_Server - CRS ) * Max( ARS,DDR ) ) ) ) * ( ( ( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_CPU * DDR ) ) / ( Min( ACS ,PN ) / ( MDR - PN ) ) ) - Min( Max( ( FirstVNF_CPU / MRS ),( CRS * ARS ) ) ,Min( Min( FirstVNF_CPU ,ACS ) ,( AMS - MDR ) ) ) ) ) ) / ( ( ( ( Min( ( RRS - FirstVNF_CPU_Server ) ,( MDR * FirstVNF_Mem ) ) * ( ( DDR - MDR ) - ( DDR / PN ) ) ) * Max( ( ( BR - PN ) - ( CRS - ACS ) ),Min( ( FirstVNF_RAM * RRS ) ,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) + ( ( ( Min( BR ,RRS ) - ( CRS * RRS ) ) + ( Max( ACS,AMS ) + ( RRS - RRS ) ) ) * ( ( ( ARS + FirstVNF_RAM ) / ( ACS + RRS ) ) / ( ( FirstVNF_CPU + ARS ) + ( FirstVNF_RAM_Server * Const ) ) ) ) ) - ( Min( ( Min( ( AMS + PN ) ,( CRS - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( CRS + BR ) ) ) ,( ( ( ACS + FirstVNF_CPU_Server ) / Min( RRS ,CRS ) ) * ( Min( MDR ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - ARS ) ) ) ) + Min( Max( Min( ( CRS - ARS ) ,Min( ARS ,FirstVNF_Mem_Server ) ),Min( ( CRS * ARS ) ,Min( BR ,PN ) ) ) ,( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),Max( ACS,MRS ) ) * ( ( MRS + ARS ) * ( ACS * Const ) ) ) ) ) ) ) )", "choosing": "Min( Min( Min( MUM ,CS ) ,DS ) ,Min( RMSe ,RCSe ) )", "obj1": 0.702755905511811, "obj2": 0.22084825465853775}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUC - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "Max( ( PN * BR ),( RRS * FirstVNF_Mem ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,Max( ( MUM * MUM ),Max( MLU,RCSe ) ) ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5544255074106164}, {"determining": "Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * Max( PN,FirstVNF_CPU_Server ) ) - ( Max( Const,AMS ) * ( MDR + FirstVNF_CPU ) ) ),( ( Min( AMS ,CRS ) / Max( AMS,BR ) ) / ( ( BR + DDR ) + ( ACS / FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.6406267621765689}], "5": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * MDR ) - Max( CRS,CRS ) )", "choosing": "Max( Max( MLU,( RCSe * DS ) ),Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * CRS ) / BR ) ,( Min( Const ,BR ) - ( MDR / RRS ) ) ) / Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ( Const / MRS ) ,( Const - ARS ) ) ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( RMSe / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) / ( MUC / ( MUM + RCSe ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6035797646303837}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU + MLU ) - ( MUM - MUR ) )", "obj1": 0.4074803149606299, "obj2": 0.4155202124003986}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( MLU,RCSe ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.7393162878681336}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6528555796921475}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.47618577061505935}, {"determining": "Max( ( MDR - FirstVNF_RAM ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6344151054364655}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.531496062992126, "obj2": 0.2809964145261435}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Const ) / ( FirstVNF_Mem + CRS ) )", "choosing": "Min( Min( RMSe ,DS ) ,MUC )", "obj1": 0.7047244094488189, "obj2": 0.21902723966640317}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RRSe - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.3405511811023622, "obj2": 0.46047901649015466}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( MRS + Const ) - Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( ( ( RRSe + RCSe ) - ( MUM + RRSe ) ) / ( ( MUR - CS ) + Min( MUM ,MLU ) ) ) + Min( ( ( MUC - MUC ) + Min( RRSe ,MUC ) ) ,Min( ( DS + MUC ) ,Max( RMSe,RMSe ) ) ) ) - Max( ( ( ( MUM - RCSe ) * ( MUR / DS ) ) / Max( ( MUC - MUM ),Max( RRSe,CS ) ) ),( ( ( MLU / MLU ) - ( MUR + RRSe ) ) - ( Max( MUR,MLU ) / Min( RRSe ,RMSe ) ) ) ) ) * ( ( Min( ( ( RMSe * MUR ) / Max( MUR,RRSe ) ) ,( Max( MUM,MUM ) / Min( RMSe ,CS ) ) ) * ( Min( ( RRSe + RCSe ) ,( RRSe * RCSe ) ) - ( Min( CS ,MUR ) + Min( MLU ,RMSe ) ) ) ) - ( ( ( ( CS / MLU ) + ( RMSe + RRSe ) ) + Min( ( DS / MUC ) ,( MLU - RCSe ) ) ) * ( ( ( RMSe * MUR ) - ( RMSe - CS ) ) * ( ( MUM * DS ) / ( RCSe / MUC ) ) ) ) ) ) + ( Min( ( Max( Min( ( DS * DS ) ,Max( MUM,MUR ) ),( Min( RRSe ,MUR ) - ( RCSe * DS ) ) ) / ( Max( Max( CS,MUR ),( MLU / DS ) ) + ( ( MUR + RRSe ) * ( RRSe * MUC ) ) ) ) ,( ( Max( ( CS - MUC ),( MUC - RMSe ) ) / ( Max( MUR,MUC ) / ( CS / RRSe ) ) ) / Min( ( Min( RRSe ,DS ) / ( RRSe * RRSe ) ) ,Max( ( DS / MLU ),Max( CS,MLU ) ) ) ) ) + Max( ( ( ( ( CS * MUR ) - ( DS * MUC ) ) / ( ( DS + MUR ) + Min( MUM ,MUM ) ) ) + ( Min( ( CS + RRSe ) ,( MLU * DS ) ) - ( Max( RRSe,CS ) - Min( MUM ,MUC ) ) ) ),Max( ( ( ( RRSe * DS ) + Min( MUC ,MLU ) ) * ( ( MLU / RMSe ) / ( RMSe * RRSe ) ) ),( ( ( MUC - MUC ) + Max( DS,CS ) ) / Min( Min( MUC ,RRSe ) ,( RRSe - RMSe ) ) ) ) ) ) ) + ( Max( Min( ( ( ( Min( MLU ,MLU ) + Min( RMSe ,RCSe ) ) * Max( ( MUR - MUC ),( CS - MLU ) ) ) - ( Max( Min( MUC ,RCSe ),( MUR - MUC ) ) * ( ( RCSe + MUR ) - ( MUC + RRSe ) ) ) ) ,( Min( ( ( MUC * MLU ) / ( RCSe / RCSe ) ) ,Max( Max( MLU,RCSe ),( CS * RCSe ) ) ) + ( ( ( MUM / DS ) - ( RMSe + RRSe ) ) / ( ( RCSe * DS ) / ( RMSe + RCSe ) ) ) ) ),( ( ( Min( Max( MUC,RRSe ) ,( CS + MUR ) ) - Max( Min( MLU ,RCSe ),( MUR + MUM ) ) ) - ( Max( Max( MUR,CS ),( DS / CS ) ) - Min( ( MUC * CS ) ,( MUR * MUC ) ) ) ) / ( ( ( ( RMSe / RCSe ) * ( DS * MUR ) ) * ( ( MLU / MUM ) / Max( RMSe,MUR ) ) ) * ( ( ( DS - MLU ) * ( MUM - DS ) ) * ( Max( RMSe,DS ) + ( RMSe / DS ) ) ) ) ) ) / Max( ( ( ( ( ( RCSe * MLU ) / ( RCSe / RMSe ) ) / Max( ( RCSe * RMSe ),( MUC / RRSe ) ) ) / ( ( ( RRSe - MUM ) + ( MUR - CS ) ) / ( ( RCSe / DS ) + ( RRSe - MUM ) ) ) ) - ( ( ( ( MUR + MUM ) * Max( RCSe,CS ) ) * ( ( DS + DS ) + ( RCSe + MUC ) ) ) * Min( ( Min( RMSe ,MUC ) * Max( MUM,RMSe ) ) ,Min( ( RRSe + MUM ) ,( RRSe - MLU ) ) ) ) ),( ( Max( ( ( DS + MLU ) - ( RCSe - MUM ) ),( Min( DS ,DS ) + ( RRSe * RMSe ) ) ) / ( ( Max( CS,MLU ) * ( CS * RCSe ) ) - ( ( MUM / MUC ) - ( DS + DS ) ) ) ) / Max( ( Min( ( MLU + MUM ) ,( RRSe * MUC ) ) / ( ( CS - RCSe ) - ( RMSe / RRSe ) ) ),( ( ( MUR - RCSe ) * ( MLU / MLU ) ) + ( ( MUR / MUC ) * ( DS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5777334020848326}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5015144673170066}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.025732279875568788}, {"determining": "( Min( Max( ( ( ( ( ( MDR + ACS ) / ( ARS + ARS ) ) + ( ( FirstVNF_RAM_Server + RRS ) * ( FirstVNF_CPU - MRS ) ) ) / Min( Max( ( PN - FirstVNF_Mem ),( AMS * MRS ) ) ,( ( RRS + MRS ) * ( MRS * PN ) ) ) ) - ( Max( ( ( DDR - MRS ) - Min( DDR ,FirstVNF_Mem_Server ) ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) / ( Max( Max( Const,PN ),Max( FirstVNF_CPU_Server,BR ) ) / ( ( FirstVNF_CPU_Server * RRS ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),( Max( Min( ( ( FirstVNF_RAM / BR ) + Max( Const,FirstVNF_RAM ) ) ,Max( ( FirstVNF_Mem_Server + BR ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),Min( ( ( CRS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,MDR ) / ( MDR - PN ) ) ) ) - Min( ( Max( ( DDR + FirstVNF_Mem_Server ),Max( RRS,CRS ) ) - ( ( ACS * MRS ) * Max( ARS,Const ) ) ) ,( ( ( AMS / FirstVNF_RAM ) / ( PN * CRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_Mem_Server - Const ) + ( BR + FirstVNF_RAM ) ) / ( Max( MRS,FirstVNF_CPU ) / ( ARS / ACS ) ) ) + Min( Min( Min( PN ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) ,( ( PN - MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( DDR,RRS ) ) * ( ( PN - BR ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( Max( ( ARS + FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,DDR ) ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) / ( Max( Min( Max( ( FirstVNF_RAM / CRS ),( ARS / MRS ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM - FirstVNF_RAM ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU + RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) + Min( ( Max( Max( BR,PN ),( ACS - FirstVNF_CPU_Server ) ) + ( ( MRS * MDR ) - Min( Const ,FirstVNF_Mem_Server ) ) ) ,( Max( ( PN / Const ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ) * ( ( ( ( ( Min( ( ARS * CRS ) ,( MRS / CRS ) ) + ( Min( BR ,PN ) * ( ARS / RRS ) ) ) + ( Min( Min( PN ,FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) ) + ( ( DDR * BR ) + ( RRS - FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_RAM_Server * RRS ),( CRS - DDR ) ) - Max( ( FirstVNF_Mem_Server + Const ),( ARS * Const ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) - ( ACS - RRS ) ) * ( ( Const / MRS ) + Max( FirstVNF_Mem,RRS ) ) ) ) ) * ( ( Min( Min( ( MRS * AMS ) ,( FirstVNF_Mem - MRS ) ) ,( ( RRS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) + ( Max( Max( PN,FirstVNF_CPU ),( AMS * PN ) ) + ( ( MDR * RRS ) * ( MRS / RRS ) ) ) ) - ( ( ( ( MDR + Const ) + Min( DDR ,FirstVNF_CPU_Server ) ) * ( Max( MDR,FirstVNF_Mem_Server ) / ( DDR + DDR ) ) ) / ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( MRS + Const ) ) + ( ( FirstVNF_Mem_Server + BR ) + Max( CRS,CRS ) ) ) ) ) ) + Min( ( ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Min( RRS ,AMS ) ),Max( ( FirstVNF_Mem_Server - AMS ),( ARS * ACS ) ) ) / ( ( ( FirstVNF_CPU / BR ) / Min( FirstVNF_Mem_Server ,RRS ) ) * Min( Min( CRS ,MRS ) ,( FirstVNF_CPU + RRS ) ) ) ) / Max( ( ( Max( RRS,AMS ) - Min( FirstVNF_Mem_Server ,CRS ) ) + ( Min( MRS ,RRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ),( Max( ( PN / BR ),Max( BR,AMS ) ) * ( Min( Const ,ACS ) * ( AMS + FirstVNF_RAM_Server ) ) ) ) ) ,( ( Max( ( ( BR - DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( PN * FirstVNF_CPU ) / Max( MDR,FirstVNF_Mem_Server ) ) ) - ( Max( ( RRS * DDR ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( ( PN - MRS ) + ( FirstVNF_RAM - RRS ) ) ) ) + Min( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( PN / CRS ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ,( Max( ( DDR - AMS ),( MRS * RRS ) ) - ( ( MDR / ACS ) + ( FirstVNF_Mem - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( Max( ( DS / DS ),( CS - RMSe ) ),( Max( MUR,CS ) + ( MUM / CS ) ) ) ,( ( Max( MUC,DS ) + ( MLU / MLU ) ) - ( ( MUC * MUC ) - ( RCSe + CS ) ) ) ) + Max( Min( ( ( RRSe / CS ) + ( CS + CS ) ) ,Max( ( CS + DS ),( RMSe / RCSe ) ) ),( ( ( RCSe + MUM ) / ( RRSe * RRSe ) ) * Max( ( MUC / MLU ),( MUC - RMSe ) ) ) ) ) - Max( ( Min( Min( ( CS * MUC ) ,( RMSe + DS ) ) ,Min( ( RMSe - MLU ) ,Max( RMSe,CS ) ) ) / ( ( ( DS + RMSe ) - ( RRSe - RMSe ) ) / ( ( MUR * RMSe ) * ( RCSe / RCSe ) ) ) ),( ( ( ( MLU * MUR ) + ( RCSe / DS ) ) + ( Min( MUR ,RMSe ) / ( CS + RMSe ) ) ) * Min( Min( ( MUR - MUC ) ,( CS * MUC ) ) ,( Min( MUM ,RMSe ) - Min( CS ,MUM ) ) ) ) ) ) - ( ( Min( ( Max( ( MUC * CS ),( RCSe + MLU ) ) - Min( ( RRSe * DS ) ,( MUR - MUC ) ) ) ,( ( Max( RCSe,MUC ) - Max( MUC,DS ) ) * Max( Min( RRSe ,CS ),Max( MUR,CS ) ) ) ) + ( Min( ( Min( RMSe ,RMSe ) + Max( RCSe,RRSe ) ) ,Max( ( RCSe * RMSe ),( MUM + MUM ) ) ) - Max( ( ( MUM + MLU ) + ( RMSe - MLU ) ),Min( ( MUM / MUC ) ,( MUR * RMSe ) ) ) ) ) + ( ( ( ( Min( MUR ,DS ) - ( DS * MLU ) ) * ( ( MUC * MUR ) + ( MUM / RMSe ) ) ) * ( Max( ( MUC / MUR ),Max( MUC,CS ) ) - Min( ( MUM - MUC ) ,( MUR * RMSe ) ) ) ) + ( Min( ( ( RRSe * MUM ) - Max( DS,MLU ) ) ,( Min( RMSe ,MUR ) * Min( DS ,RRSe ) ) ) + ( ( ( MUC - DS ) / ( RRSe - MLU ) ) - ( Max( CS,DS ) - ( DS * RMSe ) ) ) ) ) ) ) - Max( Max( ( Max( ( Min( ( CS / MUC ) ,( MUM + MUC ) ) - ( ( MLU * MLU ) / ( RMSe / RCSe ) ) ),( ( Min( RRSe ,MUM ) - ( DS * DS ) ) / ( ( RCSe - MUC ) + ( MUC - MUC ) ) ) ) / Min( ( ( Max( MLU,MUC ) + ( RCSe + MUC ) ) * Min( ( MUM + CS ) ,( MUM * CS ) ) ) ,( ( Max( CS,CS ) + ( MUR + DS ) ) * ( Min( MUR ,RRSe ) - Min( MUC ,RRSe ) ) ) ) ),( ( ( ( ( MLU / MUC ) - ( MUR - MLU ) ) * ( Max( MUM,DS ) * ( MUR * RMSe ) ) ) - Min( Min( Max( RMSe,MLU ) ,( RCSe / MUM ) ) ,( ( CS * MUM ) * ( MUM - RCSe ) ) ) ) / ( ( Min( Min( RCSe ,MUM ) ,Min( MUR ,MUC ) ) / ( ( MUC + DS ) - ( RMSe - RMSe ) ) ) + ( ( ( DS + MUM ) + ( CS / MUR ) ) + ( ( MUR * RMSe ) + ( DS / MUM ) ) ) ) ) ),( ( Min( ( ( ( MUM * DS ) + ( MUC * RRSe ) ) - Min( ( MUR / MUM ) ,( MLU / CS ) ) ) ,( ( ( MUR - RCSe ) / ( RRSe + MUM ) ) - ( ( DS + RMSe ) + ( MUC * RRSe ) ) ) ) / ( ( ( Min( DS ,CS ) / ( MLU / MLU ) ) + ( ( MUR * MUR ) + Max( MUC,MUR ) ) ) / Max( ( ( MUC / DS ) - ( MUC - MUC ) ),( Min( RMSe ,MUR ) / Min( RRSe ,RRSe ) ) ) ) ) * Max( Min( ( ( ( MUR * CS ) - Max( RRSe,RCSe ) ) * Min( ( RMSe / DS ) ,( MLU - CS ) ) ) ,( Min( ( RMSe * CS ) ,Min( RMSe ,MUM ) ) - Max( ( MLU - MLU ),( RMSe + MUC ) ) ) ),( Min( ( ( RRSe * RRSe ) - ( DS - CS ) ) ,Max( ( MLU - MUR ),( RMSe * DS ) ) ) - ( ( ( CS / MUM ) + ( MUC + RCSe ) ) / ( ( DS * MUR ) / ( CS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.012203308875245296}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04569824409458536}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( ( FirstVNF_CPU - Const ) / Const )", "choosing": "Min( Min( RMSe ,Min( Min( RMSe ,DS ) ,Max( RCSe,MLU ) ) ) ,Max( RCSe,MLU ) )", "obj1": 0.6929133858267716, "obj2": 0.2314721232704321}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( Const * FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) - ( MUC / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.42076722565743474}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( Max( PN,FirstVNF_CPU ) * ( Const + FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6437010025446342}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( PN - ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) ) ) / ( ( FirstVNF_RAM_Server - CRS ) / ( PN * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,( ( CS - MUM ) - Max( RRSe,RRSe ) ) ) ,DS ) - ( Min( RMSe ,DS ) - MLU ) )", "obj1": 0.9960629921259843, "obj2": 0.0019290379497078137}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.7467895605676882}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem + CRS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( RCSe,MLU ) )", "obj1": 0.6929133858267716, "obj2": 0.2314721232704321}, {"determining": "( ( ( ( AMS * MRS ) - Min( ARS ,PN ) ) / ( ( AMS / ARS ) - ( FirstVNF_CPU_Server / ARS ) ) ) + ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( MRS ,MDR ) - ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RRSe ) + ( DS + MUC ) ) - Max( ( MLU - MLU ),Max( RCSe,RRSe ) ) ) - Max( Max( Min( RMSe ,MUR ),Max( RCSe,RRSe ) ),Max( ( MUM * DS ),( MUM * RRSe ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.22466671589670675}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( RMSe - MLU ) ) ,Min( MUR ,DS ) )", "obj1": 0.7007874015748031, "obj2": 0.22625866937592362}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( RRS - ARS ) )", "choosing": "( ( MUM + RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "Max( ( Const - MRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( RCSe,RCSe ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.6394200248163898}], "6": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "Max( ( ( ( ( Min( ( ( CRS + Const ) + ( BR * FirstVNF_RAM ) ) ,Max( Min( FirstVNF_Mem ,DDR ),( MDR - MDR ) ) ) + Max( Max( Min( AMS ,FirstVNF_CPU_Server ),( DDR + MRS ) ),Max( ( ARS / ACS ),Max( AMS,RRS ) ) ) ) * Min( ( ( Max( FirstVNF_RAM_Server,ARS ) - ( AMS - MRS ) ) * ( ( RRS * DDR ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ,Max( ( ( CRS * FirstVNF_CPU_Server ) - ( CRS + FirstVNF_CPU_Server ) ),( Min( RRS ,RRS ) * ( MDR * MRS ) ) ) ) ) * ( ( ( ( Min( CRS ,CRS ) - ( MRS - RRS ) ) + Min( ( DDR - DDR ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) + ( ( Max( MRS,AMS ) * Min( CRS ,ACS ) ) * ( ( RRS - FirstVNF_RAM ) / ( BR / FirstVNF_CPU_Server ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( RRS / BR ) ),Min( ( ACS - FirstVNF_Mem ) ,( FirstVNF_Mem * ARS ) ) ) + ( ( Min( Const ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,RRS ) ) / ( ( RRS * FirstVNF_CPU_Server ) * ( ARS - PN ) ) ) ) ) ) + Max( ( Min( Max( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_Mem_Server + ARS ) ),( Min( AMS ,Const ) / ( ARS - DDR ) ) ) ,Min( ( ( RRS + FirstVNF_Mem ) - ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - BR ) + Min( FirstVNF_Mem_Server ,RRS ) ) ) ) / Max( Max( Max( Max( BR,ACS ),( FirstVNF_RAM * PN ) ),Min( Max( FirstVNF_RAM_Server,MRS ) ,Min( PN ,CRS ) ) ),Max( ( ( RRS / FirstVNF_RAM ) * ( ARS * FirstVNF_Mem_Server ) ),Max( ( ARS * FirstVNF_Mem_Server ),( BR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( Min( MDR ,FirstVNF_Mem ) * Max( AMS,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + ( ( ( MRS + MDR ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * Max( Min( BR ,ARS ),( DDR * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Min( RRS ,DDR ) / Max( CRS,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_CPU ,FirstVNF_Mem ),( Const * AMS ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) / Min( FirstVNF_CPU ,DDR ) ) * Min( Max( ACS,MDR ) ,( RRS - AMS ) ) ) ) ) ) ),Max( Min( ( ( ( ( ( PN / FirstVNF_RAM ) + ( PN / FirstVNF_CPU_Server ) ) - ( Max( PN,MRS ) - ( FirstVNF_Mem * AMS ) ) ) - Max( Max( ( ARS - FirstVNF_RAM ),Max( Const,Const ) ),( Max( AMS,PN ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) + ( Min( ( ( RRS * RRS ) / Min( DDR ,RRS ) ) ,( Max( AMS,MDR ) - ( ARS * RRS ) ) ) + Max( Max( ( RRS * RRS ),( DDR - DDR ) ),( ( MDR * MDR ) - ( DDR * Const ) ) ) ) ) ,( ( ( Max( Max( BR,DDR ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( Max( DDR,AMS ) - ( MRS / CRS ) ) ) / ( Max( ( FirstVNF_CPU_Server + BR ),( FirstVNF_Mem - ARS ) ) * ( Max( MRS,BR ) - ( ARS * AMS ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem ) + ( ACS + BR ) ) + ( ( CRS / FirstVNF_Mem ) - ( MRS - AMS ) ) ) - ( Min( ( ACS + PN ) ,Max( RRS,FirstVNF_CPU ) ) + ( Max( Const,MDR ) + ( DDR - MRS ) ) ) ) ) ),Max( ( ( Max( ( ( MRS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),Max( ( FirstVNF_Mem * FirstVNF_CPU ),( Const - FirstVNF_Mem ) ) ) + ( ( ( CRS * MDR ) - ( CRS - MDR ) ) * ( ( RRS + CRS ) + ( MRS / FirstVNF_Mem ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),( ARS * DDR ) ) + Max( Max( FirstVNF_RAM,BR ),( AMS * ACS ) ) ) * ( ( ( AMS - ACS ) / ( Const / BR ) ) / ( ( Const - MDR ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( FirstVNF_RAM + AMS ) ) * ( ( CRS - ACS ) * Min( ARS ,BR ) ) ),( ( Min( PN ,BR ) / ( FirstVNF_RAM + MRS ) ) + ( ( AMS - FirstVNF_Mem ) * Min( ARS ,CRS ) ) ) ) ,( Min( Min( Max( CRS,RRS ) ,Min( AMS ,MDR ) ) ,( ( FirstVNF_RAM + DDR ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ( Const - PN ) ),( Min( AMS ,FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUM,MUR ) - Min( ( MUM - MUM ) ,MUM ) ) * ( Min( ( ( ( MUC + Min( RRSe ,RCSe ) ) + DS ) - ( CS + Min( DS ,MUM ) ) ) ,( Min( MUM ,Max( CS,RMSe ) ) + Min( ( DS * RRSe ) ,CS ) ) ) * Max( MLU,( RCSe / ( RCSe * ( ( MLU + MUM ) * MUC ) ) ) ) ) ) + ( RMSe - MUC ) )", "obj1": 0.8740157480314961, "obj2": 0.09936535484729676}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU + MLU ) - ( MUM - MUR ) )", "obj1": 0.4074803149606299, "obj2": 0.4155202124003986}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( MLU,RCSe ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.7393162878681336}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6528555796921475}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( Max( ( PN - MRS ),( Const + FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.47618577061505935}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.531496062992126, "obj2": 0.2809964145261435}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4816924863791226}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Const ) / ( FirstVNF_Mem + CRS ) )", "choosing": "Min( Min( RMSe ,DS ) ,MUC )", "obj1": 0.7047244094488189, "obj2": 0.21902723966640317}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RRSe - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.3405511811023622, "obj2": 0.46047901649015466}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server * CRS ) / ( Const * FirstVNF_Mem ) ) ,( Min( Const ,BR ) - ( MDR / RRS ) ) ) / Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ( Const / MRS ) ,( Const - ARS ) ) ) ) * ( Const + FirstVNF_CPU ) )", "choosing": "( ( MLU + MLU ) - ( Min( CS ,MLU ) - ( RMSe / MUM ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5123545939106701}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.025732279875568788}, {"determining": "( Min( Max( ( ( ( ( ( MDR + ACS ) / ( ARS + ARS ) ) + ( ( FirstVNF_RAM_Server + RRS ) * ( FirstVNF_CPU - MRS ) ) ) / Min( Max( ( PN - FirstVNF_Mem ),( AMS * MRS ) ) ,( ( RRS + MRS ) * ( MRS * PN ) ) ) ) - ( Max( ( ( DDR - MRS ) - Min( DDR ,FirstVNF_Mem_Server ) ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) / ( Max( Max( Const,PN ),Max( FirstVNF_CPU_Server,BR ) ) / ( ( FirstVNF_CPU_Server * RRS ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),( Max( Min( ( ( FirstVNF_RAM / BR ) + Max( Const,FirstVNF_RAM ) ) ,Max( ( FirstVNF_Mem_Server + BR ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),Min( ( ( CRS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,MDR ) / ( MDR - PN ) ) ) ) - Min( ( Max( ( DDR + FirstVNF_Mem_Server ),Max( RRS,CRS ) ) - ( ( ACS * MRS ) * Max( ARS,Const ) ) ) ,( ( ( AMS / FirstVNF_RAM ) / ( PN * CRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_Mem_Server - Const ) + ( BR + FirstVNF_RAM ) ) / ( Max( MRS,FirstVNF_CPU ) / ( ARS / ACS ) ) ) + Min( Min( Min( PN ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) ,( ( PN - MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( DDR,RRS ) ) * ( ( PN - BR ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( Max( ( ARS + FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,DDR ) ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) / ( Max( Min( Max( ( FirstVNF_RAM / CRS ),( ARS / MRS ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM - FirstVNF_RAM ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU + RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) + Min( ( Max( Max( BR,PN ),( ACS - FirstVNF_CPU_Server ) ) + ( ( MRS * MDR ) - Min( Const ,FirstVNF_Mem_Server ) ) ) ,( Max( ( PN / Const ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ) * ( ( ( ( ( Min( ( ARS * CRS ) ,( MRS / CRS ) ) + ( Min( BR ,PN ) * ( ARS / RRS ) ) ) + ( Min( Min( PN ,FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) ) + ( ( DDR * BR ) + ( RRS - FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_RAM_Server * RRS ),( CRS - DDR ) ) - Max( ( FirstVNF_Mem_Server + Const ),( ARS * Const ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) - ( ACS - RRS ) ) * ( ( Const / MRS ) + Max( FirstVNF_Mem,RRS ) ) ) ) ) * ( ( Min( Min( ( MRS * AMS ) ,( FirstVNF_Mem - MRS ) ) ,( ( RRS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) + ( Max( Max( PN,FirstVNF_CPU ),( AMS * PN ) ) + ( ( MDR * RRS ) * ( MRS / RRS ) ) ) ) - ( ( ( ( MDR + Const ) + Min( DDR ,FirstVNF_CPU_Server ) ) * ( Max( MDR,FirstVNF_Mem_Server ) / ( DDR + DDR ) ) ) / ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( MRS + Const ) ) + ( ( FirstVNF_Mem_Server + BR ) + Max( CRS,CRS ) ) ) ) ) ) + Min( ( ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Min( RRS ,AMS ) ),Max( ( FirstVNF_Mem_Server - AMS ),( ARS * ACS ) ) ) / ( ( ( FirstVNF_CPU / BR ) / Min( FirstVNF_Mem_Server ,RRS ) ) * Min( Min( CRS ,MRS ) ,( FirstVNF_CPU + RRS ) ) ) ) / Max( ( ( Max( RRS,AMS ) - Min( FirstVNF_Mem_Server ,CRS ) ) + ( Min( MRS ,RRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ),( Max( ( PN / BR ),Max( BR,AMS ) ) * ( Min( Const ,ACS ) * ( AMS + FirstVNF_RAM_Server ) ) ) ) ) ,( ( Max( ( ( BR - DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( PN * FirstVNF_CPU ) / Max( MDR,FirstVNF_Mem_Server ) ) ) - ( Max( ( RRS * DDR ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( ( PN - MRS ) + ( FirstVNF_RAM - RRS ) ) ) ) + Min( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( PN / CRS ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ,( Max( ( DDR - AMS ),( MRS * RRS ) ) - ( ( MDR / ACS ) + ( FirstVNF_Mem - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( Max( ( DS / DS ),( CS - RMSe ) ),( Max( MUR,CS ) + ( MUM / CS ) ) ) ,( ( Max( MUC,DS ) + ( MLU / MLU ) ) - ( ( MUC * MUC ) - ( RCSe + CS ) ) ) ) + Max( Min( ( ( RRSe / CS ) + ( CS + CS ) ) ,Max( ( CS + DS ),( RMSe / RCSe ) ) ),( ( ( RCSe + MUM ) / ( RRSe * RRSe ) ) * Max( ( MUC / MLU ),( MUC - RMSe ) ) ) ) ) - Max( ( Min( Min( ( CS * MUC ) ,( RMSe + DS ) ) ,Min( ( RMSe - MLU ) ,Max( RMSe,CS ) ) ) / ( ( ( DS + RMSe ) - ( RRSe - RMSe ) ) / ( ( MUR * RMSe ) * ( RCSe / RCSe ) ) ) ),( ( ( ( MLU * MUR ) + ( RCSe / DS ) ) + ( Min( MUR ,RMSe ) / ( CS + RMSe ) ) ) * Min( Min( ( MUR - MUC ) ,( CS * MUC ) ) ,( Min( MUM ,RMSe ) - Min( CS ,MUM ) ) ) ) ) ) - ( ( Min( ( Max( ( MUC * CS ),( RCSe + MLU ) ) - Min( ( RRSe * DS ) ,( MUR - MUC ) ) ) ,( ( Max( RCSe,MUC ) - Max( MUC,DS ) ) * Max( Min( RRSe ,CS ),Max( MUR,CS ) ) ) ) + ( Min( ( Min( RMSe ,RMSe ) + Max( RCSe,RRSe ) ) ,Max( ( RCSe * RMSe ),( MUM + MUM ) ) ) - Max( ( ( MUM + MLU ) + ( RMSe - MLU ) ),Min( ( MUM / MUC ) ,( MUR * RMSe ) ) ) ) ) + ( ( ( ( Min( MUR ,DS ) - ( DS * MLU ) ) * ( ( MUC * MUR ) + ( MUM / RMSe ) ) ) * ( Max( ( MUC / MUR ),Max( MUC,CS ) ) - Min( ( MUM - MUC ) ,( MUR * RMSe ) ) ) ) + ( Min( ( ( RRSe * MUM ) - Max( DS,MLU ) ) ,( Min( RMSe ,MUR ) * Min( DS ,RRSe ) ) ) + ( ( ( MUC - DS ) / ( RRSe - MLU ) ) - ( Max( CS,DS ) - ( DS * RMSe ) ) ) ) ) ) ) - Max( Max( ( Max( ( Min( ( CS / MUC ) ,( MUM + MUC ) ) - ( ( MLU * MLU ) / ( RMSe / RCSe ) ) ),( ( Min( RRSe ,MUM ) - ( DS * DS ) ) / ( ( RCSe - MUC ) + ( MUC - MUC ) ) ) ) / Min( ( ( Max( MLU,MUC ) + ( RCSe + MUC ) ) * Min( ( MUM + CS ) ,( MUM * CS ) ) ) ,( ( Max( CS,CS ) + ( MUR + DS ) ) * ( Min( MUR ,RRSe ) - Min( MUC ,RRSe ) ) ) ) ),( ( ( ( ( MLU / MUC ) - ( MUR - MLU ) ) * ( Max( MUM,DS ) * ( MUR * RMSe ) ) ) - Min( Min( Max( RMSe,MLU ) ,( RCSe / MUM ) ) ,( ( CS * MUM ) * ( MUM - RCSe ) ) ) ) / ( ( Min( Min( RCSe ,MUM ) ,Min( MUR ,MUC ) ) / ( ( MUC + DS ) - ( RMSe - RMSe ) ) ) + ( ( ( DS + MUM ) + ( CS / MUR ) ) + ( ( MUR * RMSe ) + ( DS / MUM ) ) ) ) ) ),( ( Min( ( ( ( MUM * DS ) + ( MUC * RRSe ) ) - Min( ( MUR / MUM ) ,( MLU / CS ) ) ) ,( ( ( MUR - RCSe ) / ( RRSe + MUM ) ) - ( ( DS + RMSe ) + ( MUC * RRSe ) ) ) ) / ( ( ( Min( DS ,CS ) / ( MLU / MLU ) ) + ( ( MUR * MUR ) + Max( MUC,MUR ) ) ) / Max( ( ( MUC / DS ) - ( MUC - MUC ) ),( Min( RMSe ,MUR ) / Min( RRSe ,RRSe ) ) ) ) ) * Max( Min( ( ( ( MUR * CS ) - Max( RRSe,RCSe ) ) * Min( ( RMSe / DS ) ,( MLU - CS ) ) ) ,( Min( ( RMSe * CS ) ,Min( RMSe ,MUM ) ) - Max( ( MLU - MLU ),( RMSe + MUC ) ) ) ),( Min( ( ( RRSe * RRSe ) - ( DS - CS ) ) ,Max( ( MLU - MUR ),( RMSe * DS ) ) ) - ( ( ( CS / MUM ) + ( MUC + RCSe ) ) / ( ( DS * MUR ) / ( CS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.012203308875245296}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04569824409458536}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( ( FirstVNF_CPU - Const ) / Const )", "choosing": "Min( Min( RMSe ,Min( Min( RMSe ,DS ) ,Max( RCSe,MLU ) ) ) ,Max( RCSe,MLU ) )", "obj1": 0.6929133858267716, "obj2": 0.2314721232704321}, {"determining": "( Max( PN,FirstVNF_CPU ) * ( Const + FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6437010025446342}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( Const * FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) - ( MUC / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.42076722565743474}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "( ( PN - ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) ) ) / ( ( FirstVNF_RAM_Server - CRS ) / ( PN * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,( ( CS - MUM ) - Max( RRSe,RRSe ) ) ) ,DS ) - ( Min( RMSe ,DS ) - MLU ) )", "obj1": 0.9960629921259843, "obj2": 0.0019290379497078137}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5015144673170066}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.7467895605676882}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}], "7": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "Max( ( ( ( ( Min( ( ( CRS + Const ) + ( BR * FirstVNF_RAM ) ) ,Max( Min( FirstVNF_Mem ,DDR ),( MDR - MDR ) ) ) + Max( Max( Min( AMS ,FirstVNF_CPU_Server ),( DDR + MRS ) ),Max( ( ARS / ACS ),Max( AMS,RRS ) ) ) ) * Min( ( ( Max( FirstVNF_RAM_Server,ARS ) - ( AMS - MRS ) ) * ( ( RRS * DDR ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ,Max( ( ( CRS * FirstVNF_CPU_Server ) - ( CRS + FirstVNF_CPU_Server ) ),( Min( RRS ,RRS ) * ( MDR * MRS ) ) ) ) ) * ( ( ( ( Min( CRS ,CRS ) - ( MRS - RRS ) ) + Min( ( DDR - DDR ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) + ( ( Max( MRS,AMS ) * Min( CRS ,ACS ) ) * ( ( RRS - FirstVNF_RAM ) / ( BR / FirstVNF_CPU_Server ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( RRS / BR ) ),Min( ( ACS - FirstVNF_Mem ) ,( FirstVNF_Mem * ARS ) ) ) + ( ( Min( Const ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,RRS ) ) / ( ( RRS * FirstVNF_CPU_Server ) * ( ARS - PN ) ) ) ) ) ) + Max( ( Min( Max( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_Mem_Server + ARS ) ),( Min( AMS ,Const ) / ( ARS - DDR ) ) ) ,Min( ( ( RRS + FirstVNF_Mem ) - ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - BR ) + Min( FirstVNF_Mem_Server ,RRS ) ) ) ) / Max( Max( Max( Max( BR,ACS ),( FirstVNF_RAM * PN ) ),Min( Max( FirstVNF_RAM_Server,MRS ) ,Min( PN ,CRS ) ) ),Max( ( ( RRS / FirstVNF_RAM ) * ( ARS * FirstVNF_Mem_Server ) ),Max( ( ARS * FirstVNF_Mem_Server ),( BR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( Min( MDR ,FirstVNF_Mem ) * Max( AMS,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + ( ( ( MRS + MDR ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * Max( Min( BR ,ARS ),( DDR * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Min( RRS ,DDR ) / Max( CRS,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_CPU ,FirstVNF_Mem ),( Const * AMS ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) / Min( FirstVNF_CPU ,DDR ) ) * Min( Max( ACS,MDR ) ,( RRS - AMS ) ) ) ) ) ) ),Max( Min( ( ( ( ( ( PN / FirstVNF_RAM ) + ( PN / FirstVNF_CPU_Server ) ) - ( Max( PN,MRS ) - ( FirstVNF_Mem * AMS ) ) ) - Max( Max( ( ARS - FirstVNF_RAM ),Max( Const,Const ) ),( Max( AMS,PN ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) + ( Min( ( ( RRS * RRS ) / Min( DDR ,RRS ) ) ,( Max( AMS,MDR ) - ( ARS * RRS ) ) ) + Max( Max( ( RRS * RRS ),( DDR - DDR ) ),( ( MDR * MDR ) - ( DDR * Const ) ) ) ) ) ,( ( ( Max( Max( BR,DDR ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( Max( DDR,AMS ) - ( MRS / CRS ) ) ) / ( Max( ( FirstVNF_CPU_Server + BR ),( FirstVNF_Mem - ARS ) ) * ( Max( MRS,BR ) - ( ARS * AMS ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem ) + ( ACS + BR ) ) + ( ( CRS / FirstVNF_Mem ) - ( MRS - AMS ) ) ) - ( Min( ( ACS + PN ) ,Max( RRS,FirstVNF_CPU ) ) + ( Max( Const,MDR ) + ( DDR - MRS ) ) ) ) ) ),Max( ( ( Max( ( ( MRS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),Max( ( FirstVNF_Mem * FirstVNF_CPU ),( Const - FirstVNF_Mem ) ) ) + ( ( ( CRS * MDR ) - ( CRS - MDR ) ) * ( ( RRS + CRS ) + ( MRS / FirstVNF_Mem ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),( ARS * DDR ) ) + Max( Max( FirstVNF_RAM,BR ),( AMS * ACS ) ) ) * ( ( ( AMS - ACS ) / ( Const / BR ) ) / ( ( Const - MDR ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( FirstVNF_RAM + AMS ) ) * ( ( CRS - ACS ) * Min( ARS ,BR ) ) ),( ( Min( PN ,BR ) / ( FirstVNF_RAM + MRS ) ) + ( ( AMS - FirstVNF_Mem ) * Min( ARS ,CRS ) ) ) ) ,( Min( Min( Max( CRS,RRS ) ,Min( AMS ,MDR ) ) ,( ( FirstVNF_RAM + DDR ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ( Const - PN ) ),( Min( AMS ,FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUM,MUR ) - Min( ( MUM - MUM ) ,MUM ) ) * ( Min( ( ( ( MUC + Min( RRSe ,RCSe ) ) + DS ) - ( CS + Min( DS ,MUM ) ) ) ,( Min( MUM ,Max( CS,RMSe ) ) + Min( ( DS * RRSe ) ,CS ) ) ) * Max( MLU,( RCSe / ( RCSe * ( ( MLU + MUM ) * MUC ) ) ) ) ) ) + ( RMSe - MUC ) )", "obj1": 0.8740157480314961, "obj2": 0.09936535484729676}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( MLU,RCSe ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.7393162878681336}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( CRS / ( FirstVNF_Mem / CRS ) )", "choosing": "Min( Min( RMSe ,Min( Min( RMSe ,MUM ) ,DS ) ) ,DS )", "obj1": 0.7047244094488189, "obj2": 0.21902723966640308}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( ACS - RRS ) / ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU + MLU ) - ( MUM - MUR ) )", "obj1": 0.4074803149606299, "obj2": 0.4155202124003986}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4816924863791226}, {"determining": "( ( FirstVNF_CPU - Const ) / Const )", "choosing": "Min( Min( RMSe ,Min( Min( RMSe ,DS ) ,Max( RCSe,MLU ) ) ) ,Max( RCSe,MLU ) )", "obj1": 0.6929133858267716, "obj2": 0.2314721232704321}, {"determining": "( Max( PN,FirstVNF_CPU ) * ( Const + FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6437010025446342}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.531496062992126, "obj2": 0.2809964145261435}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server * CRS ) / ( Const * FirstVNF_Mem ) ) ,( Min( Const ,BR ) - ( MDR / RRS ) ) ) / Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ( Const / MRS ) ,( Const - ARS ) ) ) ) * ( Const + FirstVNF_CPU ) )", "choosing": "( ( MLU + MLU ) - ( Min( CS ,MLU ) - ( RMSe / MUM ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5123545939106701}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( ( MLU - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5236220472440944, "obj2": 0.284827516707628}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( Min( Max( ( ( ( ( ( MDR + ACS ) / ( ARS + ARS ) ) + ( ( FirstVNF_RAM_Server + RRS ) * ( FirstVNF_CPU - MRS ) ) ) / Min( Max( ( PN - FirstVNF_Mem ),( AMS * MRS ) ) ,( ( RRS + MRS ) * ( MRS * PN ) ) ) ) - ( Max( ( ( DDR - MRS ) - Min( DDR ,FirstVNF_Mem_Server ) ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) / ( Max( Max( Const,PN ),Max( FirstVNF_CPU_Server,BR ) ) / ( ( FirstVNF_CPU_Server * RRS ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),( Max( Min( ( ( FirstVNF_RAM / BR ) + Max( Const,FirstVNF_RAM ) ) ,Max( ( FirstVNF_Mem_Server + BR ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),Min( ( ( CRS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,MDR ) / ( MDR - PN ) ) ) ) - Min( ( Max( ( DDR + FirstVNF_Mem_Server ),Max( RRS,CRS ) ) - ( ( ACS * MRS ) * Max( ARS,Const ) ) ) ,( ( ( AMS / FirstVNF_RAM ) / ( PN * CRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_Mem_Server - Const ) + ( BR + FirstVNF_RAM ) ) / ( Max( MRS,FirstVNF_CPU ) / ( ARS / ACS ) ) ) + Min( Min( Min( PN ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) ,( ( PN - MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( DDR,RRS ) ) * ( ( PN - BR ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( Max( ( ARS + FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,DDR ) ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) / ( Max( Min( Max( ( FirstVNF_RAM / CRS ),( ARS / MRS ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM - FirstVNF_RAM ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU + RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) + Min( ( Max( Max( BR,PN ),( ACS - FirstVNF_CPU_Server ) ) + ( ( MRS * MDR ) - Min( Const ,FirstVNF_Mem_Server ) ) ) ,( Max( ( PN / Const ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ) * ( ( ( ( ( Min( ( ARS * CRS ) ,( MRS / CRS ) ) + ( Min( BR ,PN ) * ( ARS / RRS ) ) ) + ( Min( Min( PN ,FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) ) + ( ( DDR * BR ) + ( RRS - FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_RAM_Server * RRS ),( CRS - DDR ) ) - Max( ( FirstVNF_Mem_Server + Const ),( ARS * Const ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) - ( ACS - RRS ) ) * ( ( Const / MRS ) + Max( FirstVNF_Mem,RRS ) ) ) ) ) * ( ( Min( Min( ( MRS * AMS ) ,( FirstVNF_Mem - MRS ) ) ,( ( RRS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) + ( Max( Max( PN,FirstVNF_CPU ),( AMS * PN ) ) + ( ( MDR * RRS ) * ( MRS / RRS ) ) ) ) - ( ( ( ( MDR + Const ) + Min( DDR ,FirstVNF_CPU_Server ) ) * ( Max( MDR,FirstVNF_Mem_Server ) / ( DDR + DDR ) ) ) / ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( MRS + Const ) ) + ( ( FirstVNF_Mem_Server + BR ) + Max( CRS,CRS ) ) ) ) ) ) + Min( ( ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Min( RRS ,AMS ) ),Max( ( FirstVNF_Mem_Server - AMS ),( ARS * ACS ) ) ) / ( ( ( FirstVNF_CPU / BR ) / Min( FirstVNF_Mem_Server ,RRS ) ) * Min( Min( CRS ,MRS ) ,( FirstVNF_CPU + RRS ) ) ) ) / Max( ( ( Max( RRS,AMS ) - Min( FirstVNF_Mem_Server ,CRS ) ) + ( Min( MRS ,RRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ),( Max( ( PN / BR ),Max( BR,AMS ) ) * ( Min( Const ,ACS ) * ( AMS + FirstVNF_RAM_Server ) ) ) ) ) ,( ( Max( ( ( BR - DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( PN * FirstVNF_CPU ) / Max( MDR,FirstVNF_Mem_Server ) ) ) - ( Max( ( RRS * DDR ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( ( PN - MRS ) + ( FirstVNF_RAM - RRS ) ) ) ) + Min( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( PN / CRS ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ,( Max( ( DDR - AMS ),( MRS * RRS ) ) - ( ( MDR / ACS ) + ( FirstVNF_Mem - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( Max( ( DS / DS ),( CS - RMSe ) ),( Max( MUR,CS ) + ( MUM / CS ) ) ) ,( ( Max( MUC,DS ) + ( MLU / MLU ) ) - ( ( MUC * MUC ) - ( RCSe + CS ) ) ) ) + Max( Min( ( ( RRSe / CS ) + ( CS + CS ) ) ,Max( ( CS + DS ),( RMSe / RCSe ) ) ),( ( ( RCSe + MUM ) / ( RRSe * RRSe ) ) * Max( ( MUC / MLU ),( MUC - RMSe ) ) ) ) ) - Max( ( Min( Min( ( CS * MUC ) ,( RMSe + DS ) ) ,Min( ( RMSe - MLU ) ,Max( RMSe,CS ) ) ) / ( ( ( DS + RMSe ) - ( RRSe - RMSe ) ) / ( ( MUR * RMSe ) * ( RCSe / RCSe ) ) ) ),( ( ( ( MLU * MUR ) + ( RCSe / DS ) ) + ( Min( MUR ,RMSe ) / ( CS + RMSe ) ) ) * Min( Min( ( MUR - MUC ) ,( CS * MUC ) ) ,( Min( MUM ,RMSe ) - Min( CS ,MUM ) ) ) ) ) ) - ( ( Min( ( Max( ( MUC * CS ),( RCSe + MLU ) ) - Min( ( RRSe * DS ) ,( MUR - MUC ) ) ) ,( ( Max( RCSe,MUC ) - Max( MUC,DS ) ) * Max( Min( RRSe ,CS ),Max( MUR,CS ) ) ) ) + ( Min( ( Min( RMSe ,RMSe ) + Max( RCSe,RRSe ) ) ,Max( ( RCSe * RMSe ),( MUM + MUM ) ) ) - Max( ( ( MUM + MLU ) + ( RMSe - MLU ) ),Min( ( MUM / MUC ) ,( MUR * RMSe ) ) ) ) ) + ( ( ( ( Min( MUR ,DS ) - ( DS * MLU ) ) * ( ( MUC * MUR ) + ( MUM / RMSe ) ) ) * ( Max( ( MUC / MUR ),Max( MUC,CS ) ) - Min( ( MUM - MUC ) ,( MUR * RMSe ) ) ) ) + ( Min( ( ( RRSe * MUM ) - Max( DS,MLU ) ) ,( Min( RMSe ,MUR ) * Min( DS ,RRSe ) ) ) + ( ( ( MUC - DS ) / ( RRSe - MLU ) ) - ( Max( CS,DS ) - ( DS * RMSe ) ) ) ) ) ) ) - Max( Max( ( Max( ( Min( ( CS / MUC ) ,( MUM + MUC ) ) - ( ( MLU * MLU ) / ( RMSe / RCSe ) ) ),( ( Min( RRSe ,MUM ) - ( DS * DS ) ) / ( ( RCSe - MUC ) + ( MUC - MUC ) ) ) ) / Min( ( ( Max( MLU,MUC ) + ( RCSe + MUC ) ) * Min( ( MUM + CS ) ,( MUM * CS ) ) ) ,( ( Max( CS,CS ) + ( MUR + DS ) ) * ( Min( MUR ,RRSe ) - Min( MUC ,RRSe ) ) ) ) ),( ( ( ( ( MLU / MUC ) - ( MUR - MLU ) ) * ( Max( MUM,DS ) * ( MUR * RMSe ) ) ) - Min( Min( Max( RMSe,MLU ) ,( RCSe / MUM ) ) ,( ( CS * MUM ) * ( MUM - RCSe ) ) ) ) / ( ( Min( Min( RCSe ,MUM ) ,Min( MUR ,MUC ) ) / ( ( MUC + DS ) - ( RMSe - RMSe ) ) ) + ( ( ( DS + MUM ) + ( CS / MUR ) ) + ( ( MUR * RMSe ) + ( DS / MUM ) ) ) ) ) ),( ( Min( ( ( ( MUM * DS ) + ( MUC * RRSe ) ) - Min( ( MUR / MUM ) ,( MLU / CS ) ) ) ,( ( ( MUR - RCSe ) / ( RRSe + MUM ) ) - ( ( DS + RMSe ) + ( MUC * RRSe ) ) ) ) / ( ( ( Min( DS ,CS ) / ( MLU / MLU ) ) + ( ( MUR * MUR ) + Max( MUC,MUR ) ) ) / Max( ( ( MUC / DS ) - ( MUC - MUC ) ),( Min( RMSe ,MUR ) / Min( RRSe ,RRSe ) ) ) ) ) * Max( Min( ( ( ( MUR * CS ) - Max( RRSe,RCSe ) ) * Min( ( RMSe / DS ) ,( MLU - CS ) ) ) ,( Min( ( RMSe * CS ) ,Min( RMSe ,MUM ) ) - Max( ( MLU - MLU ),( RMSe + MUC ) ) ) ),( Min( ( ( RRSe * RRSe ) - ( DS - CS ) ) ,Max( ( MLU - MUR ),( RMSe * DS ) ) ) - ( ( ( CS / MUM ) + ( MUC + RCSe ) ) / ( ( DS * MUR ) / ( CS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.012203308875245296}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04569824409458536}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( ACS - RRS ) / ( MDR - FirstVNF_CPU ) )", "choosing": "( RMSe - Max( DS,MLU ) )", "obj1": 0.9586614173228346, "obj2": 0.03667431037295174}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "( ( PN - ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) ) ) / ( ( FirstVNF_RAM_Server - CRS ) / ( PN * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,( ( CS - MUM ) - Max( RRSe,RRSe ) ) ) ,DS ) - ( Min( RMSe ,DS ) - MLU ) )", "obj1": 0.9960629921259843, "obj2": 0.0019290379497078137}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.025732279875568788}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6528555796921475}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5015144673170066}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( Const * FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) - ( MUC / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.42076722565743474}], "8": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "Min( Min( RMSe ,( ( CS - MUM ) - Max( RRSe,RRSe ) ) ) ,Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "Max( ( ( ( ( Min( ( ( CRS + Const ) + ( BR * FirstVNF_RAM ) ) ,Max( Min( FirstVNF_Mem ,DDR ),( MDR - MDR ) ) ) + Max( Max( Min( AMS ,FirstVNF_CPU_Server ),( DDR + MRS ) ),Max( ( ARS / ACS ),Max( AMS,RRS ) ) ) ) * Min( ( ( Max( FirstVNF_RAM_Server,ARS ) - ( AMS - MRS ) ) * ( ( RRS * DDR ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ,Max( ( ( CRS * FirstVNF_CPU_Server ) - ( CRS + FirstVNF_CPU_Server ) ),( Min( RRS ,RRS ) * ( MDR * MRS ) ) ) ) ) * ( ( ( ( Min( CRS ,CRS ) - ( MRS - RRS ) ) + Min( ( DDR - DDR ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) + ( ( Max( MRS,AMS ) * Min( CRS ,ACS ) ) * ( ( RRS - FirstVNF_RAM ) / ( BR / FirstVNF_CPU_Server ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( RRS / BR ) ),Min( ( ACS - FirstVNF_Mem ) ,( FirstVNF_Mem * ARS ) ) ) + ( ( Min( Const ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,RRS ) ) / ( ( RRS * FirstVNF_CPU_Server ) * ( ARS - PN ) ) ) ) ) ) + Max( ( Min( Max( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_Mem_Server + ARS ) ),( Min( AMS ,Const ) / ( ARS - DDR ) ) ) ,Min( ( ( RRS + FirstVNF_Mem ) - ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - BR ) + Min( FirstVNF_Mem_Server ,RRS ) ) ) ) / Max( Max( Max( Max( BR,ACS ),( FirstVNF_RAM * PN ) ),Min( Max( FirstVNF_RAM_Server,MRS ) ,Min( PN ,CRS ) ) ),Max( ( ( RRS / FirstVNF_RAM ) * ( ARS * FirstVNF_Mem_Server ) ),Max( ( ARS * FirstVNF_Mem_Server ),( BR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( Min( MDR ,FirstVNF_Mem ) * Max( AMS,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + ( ( ( MRS + MDR ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * Max( Min( BR ,ARS ),( DDR * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Min( RRS ,DDR ) / Max( CRS,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_CPU ,FirstVNF_Mem ),( Const * AMS ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) / Min( FirstVNF_CPU ,DDR ) ) * Min( Max( ACS,MDR ) ,( RRS - AMS ) ) ) ) ) ) ),Max( Min( ( ( ( ( ( PN / FirstVNF_RAM ) + ( PN / FirstVNF_CPU_Server ) ) - ( Max( PN,MRS ) - ( FirstVNF_Mem * AMS ) ) ) - Max( Max( ( ARS - FirstVNF_RAM ),Max( Const,Const ) ),( Max( AMS,PN ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) + ( Min( ( ( RRS * RRS ) / Min( DDR ,RRS ) ) ,( Max( AMS,MDR ) - ( ARS * RRS ) ) ) + Max( Max( ( RRS * RRS ),( DDR - DDR ) ),( ( MDR * MDR ) - ( DDR * Const ) ) ) ) ) ,( ( ( Max( Max( BR,DDR ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( Max( DDR,AMS ) - ( MRS / CRS ) ) ) / ( Max( ( FirstVNF_CPU_Server + BR ),( FirstVNF_Mem - ARS ) ) * ( Max( MRS,BR ) - ( ARS * AMS ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem ) + ( ACS + BR ) ) + ( ( CRS / FirstVNF_Mem ) - ( MRS - AMS ) ) ) - ( Min( ( ACS + PN ) ,Max( RRS,FirstVNF_CPU ) ) + ( Max( Const,MDR ) + ( DDR - MRS ) ) ) ) ) ),Max( ( ( Max( ( ( MRS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),Max( ( FirstVNF_Mem * FirstVNF_CPU ),( Const - FirstVNF_Mem ) ) ) + ( ( ( CRS * MDR ) - ( CRS - MDR ) ) * ( ( RRS + CRS ) + ( MRS / FirstVNF_Mem ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),( ARS * DDR ) ) + Max( Max( FirstVNF_RAM,BR ),( AMS * ACS ) ) ) * ( ( ( AMS - ACS ) / ( Const / BR ) ) / ( ( Const - MDR ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( FirstVNF_RAM + AMS ) ) * ( ( CRS - ACS ) * Min( ARS ,BR ) ) ),( ( Min( PN ,BR ) / ( FirstVNF_RAM + MRS ) ) + ( ( AMS - FirstVNF_Mem ) * Min( ARS ,CRS ) ) ) ) ,( Min( Min( Max( CRS,RRS ) ,Min( AMS ,MDR ) ) ,( ( FirstVNF_RAM + DDR ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ( Const - PN ) ),( Min( AMS ,FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUM,MUR ) - Min( ( MUM - MUM ) ,MUM ) ) * ( Min( ( ( ( MUC + Min( RRSe ,RCSe ) ) + DS ) - ( CS + Min( DS ,MUM ) ) ) ,( Min( MUM ,Max( CS,RMSe ) ) + Min( ( DS * RRSe ) ,CS ) ) ) * Max( MLU,( RCSe / ( RCSe * ( ( MLU + MUM ) * MUC ) ) ) ) ) ) + ( RMSe - MUC ) )", "obj1": 0.8740157480314961, "obj2": 0.09936535484729676}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "Max( ( PN * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( MLU,RCSe ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.7393162878681336}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU + MLU ) - ( MUM - MUR ) )", "obj1": 0.4074803149606299, "obj2": 0.4155202124003986}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( CRS / ( FirstVNF_Mem / CRS ) )", "choosing": "Min( Min( RMSe ,Min( Min( RMSe ,MUM ) ,DS ) ) ,DS )", "obj1": 0.7047244094488189, "obj2": 0.21902723966640308}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( ACS - RRS ) / ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4816924863791226}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.531496062992126, "obj2": 0.2809964145261435}, {"determining": "( MRS / ( ACS - ARS ) )", "choosing": "( ( MLU - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5236220472440944, "obj2": 0.284827516707628}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( Min( Max( ( ( ( ( ( MDR + ACS ) / ( ARS + ARS ) ) + ( ( FirstVNF_RAM_Server + RRS ) * ( FirstVNF_CPU - MRS ) ) ) / Min( Max( ( PN - FirstVNF_Mem ),( AMS * MRS ) ) ,( ( RRS + MRS ) * ( MRS * PN ) ) ) ) - ( Max( ( ( DDR - MRS ) - Min( DDR ,FirstVNF_Mem_Server ) ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) / ( Max( Max( Const,PN ),Max( FirstVNF_CPU_Server,BR ) ) / ( ( FirstVNF_CPU_Server * RRS ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),( Max( Min( ( ( FirstVNF_RAM / BR ) + Max( Const,FirstVNF_RAM ) ) ,Max( ( FirstVNF_Mem_Server + BR ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),Min( ( ( CRS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,MDR ) / ( MDR - PN ) ) ) ) - Min( ( Max( ( DDR + FirstVNF_Mem_Server ),Max( RRS,CRS ) ) - ( ( ACS * MRS ) * Max( ARS,Const ) ) ) ,( ( ( AMS / FirstVNF_RAM ) / ( PN * CRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_Mem_Server - Const ) + ( BR + FirstVNF_RAM ) ) / ( Max( MRS,FirstVNF_CPU ) / ( ARS / ACS ) ) ) + Min( Min( Min( PN ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) ,( ( PN - MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( DDR,RRS ) ) * ( ( PN - BR ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( Max( ( ARS + FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,DDR ) ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) / ( Max( Min( Max( ( FirstVNF_RAM / CRS ),( ARS / MRS ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM - FirstVNF_RAM ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU + RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) + Min( ( Max( Max( BR,PN ),( ACS - FirstVNF_CPU_Server ) ) + ( ( MRS * MDR ) - Min( Const ,FirstVNF_Mem_Server ) ) ) ,( Max( ( PN / Const ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ) * ( ( ( ( ( Min( ( ARS * CRS ) ,( MRS / CRS ) ) + ( Min( BR ,PN ) * ( ARS / RRS ) ) ) + ( Min( Min( PN ,FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) ) + ( ( DDR * BR ) + ( RRS - FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_RAM_Server * RRS ),( CRS - DDR ) ) - Max( ( FirstVNF_Mem_Server + Const ),( ARS * Const ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) - ( ACS - RRS ) ) * ( ( Const / MRS ) + Max( FirstVNF_Mem,RRS ) ) ) ) ) * ( ( Min( Min( ( MRS * AMS ) ,( FirstVNF_Mem - MRS ) ) ,( ( RRS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) + ( Max( Max( PN,FirstVNF_CPU ),( AMS * PN ) ) + ( ( MDR * RRS ) * ( MRS / RRS ) ) ) ) - ( ( ( ( MDR + Const ) + Min( DDR ,FirstVNF_CPU_Server ) ) * ( Max( MDR,FirstVNF_Mem_Server ) / ( DDR + DDR ) ) ) / ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( MRS + Const ) ) + ( ( FirstVNF_Mem_Server + BR ) + Max( CRS,CRS ) ) ) ) ) ) + Min( ( ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Min( RRS ,AMS ) ),Max( ( FirstVNF_Mem_Server - AMS ),( ARS * ACS ) ) ) / ( ( ( FirstVNF_CPU / BR ) / Min( FirstVNF_Mem_Server ,RRS ) ) * Min( Min( CRS ,MRS ) ,( FirstVNF_CPU + RRS ) ) ) ) / Max( ( ( Max( RRS,AMS ) - Min( FirstVNF_Mem_Server ,CRS ) ) + ( Min( MRS ,RRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ),( Max( ( PN / BR ),Max( BR,AMS ) ) * ( Min( Const ,ACS ) * ( AMS + FirstVNF_RAM_Server ) ) ) ) ) ,( ( Max( ( ( BR - DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( PN * FirstVNF_CPU ) / Max( MDR,FirstVNF_Mem_Server ) ) ) - ( Max( ( RRS * DDR ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( ( PN - MRS ) + ( FirstVNF_RAM - RRS ) ) ) ) + Min( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( PN / CRS ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ,( Max( ( DDR - AMS ),( MRS * RRS ) ) - ( ( MDR / ACS ) + ( FirstVNF_Mem - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( Max( ( DS / DS ),( CS - RMSe ) ),( Max( MUR,CS ) + ( MUM / CS ) ) ) ,( ( Max( MUC,DS ) + ( MLU / MLU ) ) - ( ( MUC * MUC ) - ( RCSe + CS ) ) ) ) + Max( Min( ( ( RRSe / CS ) + ( CS + CS ) ) ,Max( ( CS + DS ),( RMSe / RCSe ) ) ),( ( ( RCSe + MUM ) / ( RRSe * RRSe ) ) * Max( ( MUC / MLU ),( MUC - RMSe ) ) ) ) ) - Max( ( Min( Min( ( CS * MUC ) ,( RMSe + DS ) ) ,Min( ( RMSe - MLU ) ,Max( RMSe,CS ) ) ) / ( ( ( DS + RMSe ) - ( RRSe - RMSe ) ) / ( ( MUR * RMSe ) * ( RCSe / RCSe ) ) ) ),( ( ( ( MLU * MUR ) + ( RCSe / DS ) ) + ( Min( MUR ,RMSe ) / ( CS + RMSe ) ) ) * Min( Min( ( MUR - MUC ) ,( CS * MUC ) ) ,( Min( MUM ,RMSe ) - Min( CS ,MUM ) ) ) ) ) ) - ( ( Min( ( Max( ( MUC * CS ),( RCSe + MLU ) ) - Min( ( RRSe * DS ) ,( MUR - MUC ) ) ) ,( ( Max( RCSe,MUC ) - Max( MUC,DS ) ) * Max( Min( RRSe ,CS ),Max( MUR,CS ) ) ) ) + ( Min( ( Min( RMSe ,RMSe ) + Max( RCSe,RRSe ) ) ,Max( ( RCSe * RMSe ),( MUM + MUM ) ) ) - Max( ( ( MUM + MLU ) + ( RMSe - MLU ) ),Min( ( MUM / MUC ) ,( MUR * RMSe ) ) ) ) ) + ( ( ( ( Min( MUR ,DS ) - ( DS * MLU ) ) * ( ( MUC * MUR ) + ( MUM / RMSe ) ) ) * ( Max( ( MUC / MUR ),Max( MUC,CS ) ) - Min( ( MUM - MUC ) ,( MUR * RMSe ) ) ) ) + ( Min( ( ( RRSe * MUM ) - Max( DS,MLU ) ) ,( Min( RMSe ,MUR ) * Min( DS ,RRSe ) ) ) + ( ( ( MUC - DS ) / ( RRSe - MLU ) ) - ( Max( CS,DS ) - ( DS * RMSe ) ) ) ) ) ) ) - Max( Max( ( Max( ( Min( ( CS / MUC ) ,( MUM + MUC ) ) - ( ( MLU * MLU ) / ( RMSe / RCSe ) ) ),( ( Min( RRSe ,MUM ) - ( DS * DS ) ) / ( ( RCSe - MUC ) + ( MUC - MUC ) ) ) ) / Min( ( ( Max( MLU,MUC ) + ( RCSe + MUC ) ) * Min( ( MUM + CS ) ,( MUM * CS ) ) ) ,( ( Max( CS,CS ) + ( MUR + DS ) ) * ( Min( MUR ,RRSe ) - Min( MUC ,RRSe ) ) ) ) ),( ( ( ( ( MLU / MUC ) - ( MUR - MLU ) ) * ( Max( MUM,DS ) * ( MUR * RMSe ) ) ) - Min( Min( Max( RMSe,MLU ) ,( RCSe / MUM ) ) ,( ( CS * MUM ) * ( MUM - RCSe ) ) ) ) / ( ( Min( Min( RCSe ,MUM ) ,Min( MUR ,MUC ) ) / ( ( MUC + DS ) - ( RMSe - RMSe ) ) ) + ( ( ( DS + MUM ) + ( CS / MUR ) ) + ( ( MUR * RMSe ) + ( DS / MUM ) ) ) ) ) ),( ( Min( ( ( ( MUM * DS ) + ( MUC * RRSe ) ) - Min( ( MUR / MUM ) ,( MLU / CS ) ) ) ,( ( ( MUR - RCSe ) / ( RRSe + MUM ) ) - ( ( DS + RMSe ) + ( MUC * RRSe ) ) ) ) / ( ( ( Min( DS ,CS ) / ( MLU / MLU ) ) + ( ( MUR * MUR ) + Max( MUC,MUR ) ) ) / Max( ( ( MUC / DS ) - ( MUC - MUC ) ),( Min( RMSe ,MUR ) / Min( RRSe ,RRSe ) ) ) ) ) * Max( Min( ( ( ( MUR * CS ) - Max( RRSe,RCSe ) ) * Min( ( RMSe / DS ) ,( MLU - CS ) ) ) ,( Min( ( RMSe * CS ) ,Min( RMSe ,MUM ) ) - Max( ( MLU - MLU ),( RMSe + MUC ) ) ) ),( Min( ( ( RRSe * RRSe ) - ( DS - CS ) ) ,Max( ( MLU - MUR ),( RMSe * DS ) ) ) - ( ( ( CS / MUM ) + ( MUC + RCSe ) ) / ( ( DS * MUR ) / ( CS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.012203308875245296}, {"determining": "( Max( PN,FirstVNF_CPU ) * ( Const + FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6437010025446342}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04718564131795197}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( Const * FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) - ( MUC / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.42076722565743474}, {"determining": "( ( CRS - Const ) / ( ( PN - FirstVNF_CPU_Server ) / Min( AMS ,PN ) ) )", "choosing": "Min( ( Min( MUC ,DS ) - ( RCSe - MLU ) ) ,DS )", "obj1": 0.6889763779527559, "obj2": 0.23476613250149564}, {"determining": "( ( ACS - RRS ) / ( MDR - FirstVNF_CPU ) )", "choosing": "( RMSe - Max( DS,MLU ) )", "obj1": 0.9586614173228346, "obj2": 0.03667431037295174}, {"determining": "( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + Min( MUC ,RCSe ) ) ,( CS / MLU ) ) )", "obj1": 0.23031496062992127, "obj2": 0.52097298170647}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( Min( CS ,MUC ) * ( Min( RCSe ,RCSe ) / MLU ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5060057182579616}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6528555796921475}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "( ( PN - ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) ) ) / ( ( FirstVNF_RAM_Server - CRS ) / ( PN * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,( ( CS - MUM ) - Max( RRSe,RRSe ) ) ) ,DS ) - ( Min( RMSe ,DS ) - MLU ) )", "obj1": 0.9960629921259843, "obj2": 0.0019290379497078137}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.025732279875568788}, {"determining": "( ( FirstVNF_CPU - Const ) / Const )", "choosing": "Min( Min( RMSe ,Min( Min( RMSe ,DS ) ,Max( RCSe,MLU ) ) ) ,Max( RCSe,MLU ) )", "obj1": 0.6929133858267716, "obj2": 0.2314721232704321}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}], "9": [{"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "Min( Min( RMSe ,( ( CS - MUM ) - Max( RRSe,RRSe ) ) ) ,Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( CRS - Const ) ) / ( AMS * PN ) )", "choosing": "( ( Min( RMSe ,MUM ) / DS ) - ( RCSe - MLU ) )", "obj1": 0.047244094488188976, "obj2": 0.7373573404562941}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "Max( ( ( ( ( Min( ( ( CRS + Const ) + ( BR * FirstVNF_RAM ) ) ,Max( Min( FirstVNF_Mem ,DDR ),( MDR - MDR ) ) ) + Max( Max( Min( AMS ,FirstVNF_CPU_Server ),( DDR + MRS ) ),Max( ( ARS / ACS ),Max( AMS,RRS ) ) ) ) * Min( ( ( Max( FirstVNF_RAM_Server,ARS ) - ( AMS - MRS ) ) * ( ( RRS * DDR ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ,Max( ( ( CRS * FirstVNF_CPU_Server ) - ( CRS + FirstVNF_CPU_Server ) ),( Min( RRS ,RRS ) * ( MDR * MRS ) ) ) ) ) * ( ( ( ( Min( CRS ,CRS ) - ( MRS - RRS ) ) + Min( ( DDR - DDR ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) + ( ( Max( MRS,AMS ) * Min( CRS ,ACS ) ) * ( ( RRS - FirstVNF_RAM ) / ( BR / FirstVNF_CPU_Server ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( RRS / BR ) ),Min( ( ACS - FirstVNF_Mem ) ,( FirstVNF_Mem * ARS ) ) ) + ( ( Min( Const ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,RRS ) ) / ( ( RRS * FirstVNF_CPU_Server ) * ( ARS - PN ) ) ) ) ) ) + Max( ( Min( Max( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_Mem_Server + ARS ) ),( Min( AMS ,Const ) / ( ARS - DDR ) ) ) ,Min( ( ( RRS + FirstVNF_Mem ) - ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - BR ) + Min( FirstVNF_Mem_Server ,RRS ) ) ) ) / Max( Max( Max( Max( BR,ACS ),( FirstVNF_RAM * PN ) ),Min( Max( FirstVNF_RAM_Server,MRS ) ,Min( PN ,CRS ) ) ),Max( ( ( RRS / FirstVNF_RAM ) * ( ARS * FirstVNF_Mem_Server ) ),Max( ( ARS * FirstVNF_Mem_Server ),( BR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( Min( MDR ,FirstVNF_Mem ) * Max( AMS,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + ( ( ( MRS + MDR ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * Max( Min( BR ,ARS ),( DDR * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Min( RRS ,DDR ) / Max( CRS,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_CPU ,FirstVNF_Mem ),( Const * AMS ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) / Min( FirstVNF_CPU ,DDR ) ) * Min( Max( ACS,MDR ) ,( RRS - AMS ) ) ) ) ) ) ),Max( Min( ( ( ( ( ( PN / FirstVNF_RAM ) + ( PN / FirstVNF_CPU_Server ) ) - ( Max( PN,MRS ) - ( FirstVNF_Mem * AMS ) ) ) - Max( Max( ( ARS - FirstVNF_RAM ),Max( Const,Const ) ),( Max( AMS,PN ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) + ( Min( ( ( RRS * RRS ) / Min( DDR ,RRS ) ) ,( Max( AMS,MDR ) - ( ARS * RRS ) ) ) + Max( Max( ( RRS * RRS ),( DDR - DDR ) ),( ( MDR * MDR ) - ( DDR * Const ) ) ) ) ) ,( ( ( Max( Max( BR,DDR ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( Max( DDR,AMS ) - ( MRS / CRS ) ) ) / ( Max( ( FirstVNF_CPU_Server + BR ),( FirstVNF_Mem - ARS ) ) * ( Max( MRS,BR ) - ( ARS * AMS ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem ) + ( ACS + BR ) ) + ( ( CRS / FirstVNF_Mem ) - ( MRS - AMS ) ) ) - ( Min( ( ACS + PN ) ,Max( RRS,FirstVNF_CPU ) ) + ( Max( Const,MDR ) + ( DDR - MRS ) ) ) ) ) ),Max( ( ( Max( ( ( MRS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),Max( ( FirstVNF_Mem * FirstVNF_CPU ),( Const - FirstVNF_Mem ) ) ) + ( ( ( CRS * MDR ) - ( CRS - MDR ) ) * ( ( RRS + CRS ) + ( MRS / FirstVNF_Mem ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),( ARS * DDR ) ) + Max( Max( FirstVNF_RAM,BR ),( AMS * ACS ) ) ) * ( ( ( AMS - ACS ) / ( Const / BR ) ) / ( ( Const - MDR ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( FirstVNF_RAM + AMS ) ) * ( ( CRS - ACS ) * Min( ARS ,BR ) ) ),( ( Min( PN ,BR ) / ( FirstVNF_RAM + MRS ) ) + ( ( AMS - FirstVNF_Mem ) * Min( ARS ,CRS ) ) ) ) ,( Min( Min( Max( CRS,RRS ) ,Min( AMS ,MDR ) ) ,( ( FirstVNF_RAM + DDR ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ( Const - PN ) ),( Min( AMS ,FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUM,MUR ) - Min( ( MUM - MUM ) ,MUM ) ) * ( Min( ( ( ( MUC + Min( RRSe ,RCSe ) ) + DS ) - ( CS + Min( DS ,MUM ) ) ) ,( Min( MUM ,Max( CS,RMSe ) ) + Min( ( DS * RRSe ) ,CS ) ) ) * Max( MLU,( RCSe / ( RCSe * ( ( MLU + MUM ) * MUC ) ) ) ) ) ) + ( RMSe - MUC ) )", "obj1": 0.8740157480314961, "obj2": 0.09936535484729676}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( Max( AMS,PN ) - FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - DS ) - ( RCSe - ( RMSe / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.27986438233996247}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU + MLU ) - ( MUM - MUR ) )", "obj1": 0.4074803149606299, "obj2": 0.4155202124003986}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / ( PN * PN ) )", "choosing": "( Min( ( Min( RMSe ,RMSe ) - ( RMSe - MLU ) ) ,DS ) - ( MLU - MLU ) )", "obj1": 0.7047244094488189, "obj2": 0.2187281199365061}, {"determining": "( ( ACS - RRS ) / ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Const + FirstVNF_CPU ) ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - ( MLU + MLU ) )", "obj1": 0.4409448818897638, "obj2": 0.36498052553958293}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4816924863791226}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( Min( CS ,MUC ) * ( Min( RCSe ,RCSe ) / MLU ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5060057182579616}, {"determining": "( Min( Max( ( ( ( ( ( MDR + ACS ) / ( ARS + ARS ) ) + ( ( FirstVNF_RAM_Server + RRS ) * ( FirstVNF_CPU - MRS ) ) ) / Min( Max( ( PN - FirstVNF_Mem ),( AMS * MRS ) ) ,( ( RRS + MRS ) * ( MRS * PN ) ) ) ) - ( Max( ( ( DDR - MRS ) - Min( DDR ,FirstVNF_Mem_Server ) ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) / ( Max( Max( Const,PN ),Max( FirstVNF_CPU_Server,BR ) ) / ( ( FirstVNF_CPU_Server * RRS ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),( Max( Min( ( ( FirstVNF_RAM / BR ) + Max( Const,FirstVNF_RAM ) ) ,Max( ( FirstVNF_Mem_Server + BR ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),Min( ( ( CRS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,MDR ) / ( MDR - PN ) ) ) ) - Min( ( Max( ( DDR + FirstVNF_Mem_Server ),Max( RRS,CRS ) ) - ( ( ACS * MRS ) * Max( ARS,Const ) ) ) ,( ( ( AMS / FirstVNF_RAM ) / ( PN * CRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_Mem_Server - Const ) + ( BR + FirstVNF_RAM ) ) / ( Max( MRS,FirstVNF_CPU ) / ( ARS / ACS ) ) ) + Min( Min( Min( PN ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) ,( ( PN - MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( DDR,RRS ) ) * ( ( PN - BR ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( Max( ( ARS + FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,DDR ) ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) / ( Max( Min( Max( ( FirstVNF_RAM / CRS ),( ARS / MRS ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM - FirstVNF_RAM ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU + RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) + Min( ( Max( Max( BR,PN ),( ACS - FirstVNF_CPU_Server ) ) + ( ( MRS * MDR ) - Min( Const ,FirstVNF_Mem_Server ) ) ) ,( Max( ( PN / Const ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ) * ( ( ( ( ( Min( ( ARS * CRS ) ,( MRS / CRS ) ) + ( Min( BR ,PN ) * ( ARS / RRS ) ) ) + ( Min( Min( PN ,FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) ) + ( ( DDR * BR ) + ( RRS - FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_RAM_Server * RRS ),( CRS - DDR ) ) - Max( ( FirstVNF_Mem_Server + Const ),( ARS * Const ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) - ( ACS - RRS ) ) * ( ( Const / MRS ) + Max( FirstVNF_Mem,RRS ) ) ) ) ) * ( ( Min( Min( ( MRS * AMS ) ,( FirstVNF_Mem - MRS ) ) ,( ( RRS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) + ( Max( Max( PN,FirstVNF_CPU ),( AMS * PN ) ) + ( ( MDR * RRS ) * ( MRS / RRS ) ) ) ) - ( ( ( ( MDR + Const ) + Min( DDR ,FirstVNF_CPU_Server ) ) * ( Max( MDR,FirstVNF_Mem_Server ) / ( DDR + DDR ) ) ) / ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( MRS + Const ) ) + ( ( FirstVNF_Mem_Server + BR ) + Max( CRS,CRS ) ) ) ) ) ) + Min( ( ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Min( RRS ,AMS ) ),Max( ( FirstVNF_Mem_Server - AMS ),( ARS * ACS ) ) ) / ( ( ( FirstVNF_CPU / BR ) / Min( FirstVNF_Mem_Server ,RRS ) ) * Min( Min( CRS ,MRS ) ,( FirstVNF_CPU + RRS ) ) ) ) / Max( ( ( Max( RRS,AMS ) - Min( FirstVNF_Mem_Server ,CRS ) ) + ( Min( MRS ,RRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ),( Max( ( PN / BR ),Max( BR,AMS ) ) * ( Min( Const ,ACS ) * ( AMS + FirstVNF_RAM_Server ) ) ) ) ) ,( ( Max( ( ( BR - DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( PN * FirstVNF_CPU ) / Max( MDR,FirstVNF_Mem_Server ) ) ) - ( Max( ( RRS * DDR ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( ( PN - MRS ) + ( FirstVNF_RAM - RRS ) ) ) ) + Min( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( PN / CRS ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ,( Max( ( DDR - AMS ),( MRS * RRS ) ) - ( ( MDR / ACS ) + ( FirstVNF_Mem - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( Max( ( DS / DS ),( CS - RMSe ) ),( Max( MUR,CS ) + ( MUM / CS ) ) ) ,( ( Max( MUC,DS ) + ( MLU / MLU ) ) - ( ( MUC * MUC ) - ( RCSe + CS ) ) ) ) + Max( Min( ( ( RRSe / CS ) + ( CS + CS ) ) ,Max( ( CS + DS ),( RMSe / RCSe ) ) ),( ( ( RCSe + MUM ) / ( RRSe * RRSe ) ) * Max( ( MUC / MLU ),( MUC - RMSe ) ) ) ) ) - Max( ( Min( Min( ( CS * MUC ) ,( RMSe + DS ) ) ,Min( ( RMSe - MLU ) ,Max( RMSe,CS ) ) ) / ( ( ( DS + RMSe ) - ( RRSe - RMSe ) ) / ( ( MUR * RMSe ) * ( RCSe / RCSe ) ) ) ),( ( ( ( MLU * MUR ) + ( RCSe / DS ) ) + ( Min( MUR ,RMSe ) / ( CS + RMSe ) ) ) * Min( Min( ( MUR - MUC ) ,( CS * MUC ) ) ,( Min( MUM ,RMSe ) - Min( CS ,MUM ) ) ) ) ) ) - ( ( Min( ( Max( ( MUC * CS ),( RCSe + MLU ) ) - Min( ( RRSe * DS ) ,( MUR - MUC ) ) ) ,( ( Max( RCSe,MUC ) - Max( MUC,DS ) ) * Max( Min( RRSe ,CS ),Max( MUR,CS ) ) ) ) + ( Min( ( Min( RMSe ,RMSe ) + Max( RCSe,RRSe ) ) ,Max( ( RCSe * RMSe ),( MUM + MUM ) ) ) - Max( ( ( MUM + MLU ) + ( RMSe - MLU ) ),Min( ( MUM / MUC ) ,( MUR * RMSe ) ) ) ) ) + ( ( ( ( Min( MUR ,DS ) - ( DS * MLU ) ) * ( ( MUC * MUR ) + ( MUM / RMSe ) ) ) * ( Max( ( MUC / MUR ),Max( MUC,CS ) ) - Min( ( MUM - MUC ) ,( MUR * RMSe ) ) ) ) + ( Min( ( ( RRSe * MUM ) - Max( DS,MLU ) ) ,( Min( RMSe ,MUR ) * Min( DS ,RRSe ) ) ) + ( ( ( MUC - DS ) / ( RRSe - MLU ) ) - ( Max( CS,DS ) - ( DS * RMSe ) ) ) ) ) ) ) - Max( Max( ( Max( ( Min( ( CS / MUC ) ,( MUM + MUC ) ) - ( ( MLU * MLU ) / ( RMSe / RCSe ) ) ),( ( Min( RRSe ,MUM ) - ( DS * DS ) ) / ( ( RCSe - MUC ) + ( MUC - MUC ) ) ) ) / Min( ( ( Max( MLU,MUC ) + ( RCSe + MUC ) ) * Min( ( MUM + CS ) ,( MUM * CS ) ) ) ,( ( Max( CS,CS ) + ( MUR + DS ) ) * ( Min( MUR ,RRSe ) - Min( MUC ,RRSe ) ) ) ) ),( ( ( ( ( MLU / MUC ) - ( MUR - MLU ) ) * ( Max( MUM,DS ) * ( MUR * RMSe ) ) ) - Min( Min( Max( RMSe,MLU ) ,( RCSe / MUM ) ) ,( ( CS * MUM ) * ( MUM - RCSe ) ) ) ) / ( ( Min( Min( RCSe ,MUM ) ,Min( MUR ,MUC ) ) / ( ( MUC + DS ) - ( RMSe - RMSe ) ) ) + ( ( ( DS + MUM ) + ( CS / MUR ) ) + ( ( MUR * RMSe ) + ( DS / MUM ) ) ) ) ) ),( ( Min( ( ( ( MUM * DS ) + ( MUC * RRSe ) ) - Min( ( MUR / MUM ) ,( MLU / CS ) ) ) ,( ( ( MUR - RCSe ) / ( RRSe + MUM ) ) - ( ( DS + RMSe ) + ( MUC * RRSe ) ) ) ) / ( ( ( Min( DS ,CS ) / ( MLU / MLU ) ) + ( ( MUR * MUR ) + Max( MUC,MUR ) ) ) / Max( ( ( MUC / DS ) - ( MUC - MUC ) ),( Min( RMSe ,MUR ) / Min( RRSe ,RRSe ) ) ) ) ) * Max( Min( ( ( ( MUR * CS ) - Max( RRSe,RCSe ) ) * Min( ( RMSe / DS ) ,( MLU - CS ) ) ) ,( Min( ( RMSe * CS ) ,Min( RMSe ,MUM ) ) - Max( ( MLU - MLU ),( RMSe + MUC ) ) ) ),( Min( ( ( RRSe * RRSe ) - ( DS - CS ) ) ,Max( ( MLU - MUR ),( RMSe * DS ) ) ) - ( ( ( CS / MUM ) + ( MUC + RCSe ) ) / ( ( DS * MUR ) / ( CS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.012203308875245296}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04718564131795197}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( Const * FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) - ( MUC / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.42076722565743474}, {"determining": "( ( CRS - Const ) / ( ( PN - FirstVNF_CPU_Server ) / Min( AMS ,PN ) ) )", "choosing": "Min( ( Min( MUC ,DS ) - ( RCSe - MLU ) ) ,DS )", "obj1": 0.6889763779527559, "obj2": 0.23476613250149564}, {"determining": "( ( ACS - RRS ) / ( MDR - FirstVNF_CPU ) )", "choosing": "( RMSe - Max( DS,MLU ) )", "obj1": 0.9586614173228346, "obj2": 0.03667431037295174}, {"determining": "( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + Min( MUC ,RCSe ) ) ,( CS / MLU ) ) )", "obj1": 0.23031496062992127, "obj2": 0.52097298170647}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Max( ( MDR - FirstVNF_CPU ),Max( ACS,AMS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MLU ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6417527005736131}, {"determining": "( Max( PN,FirstVNF_CPU ) * ( Const + FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6437010025446342}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( PN - ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) ) ) / ( ( FirstVNF_RAM_Server - CRS ) / ( PN * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,( ( CS - MUM ) - Max( RRSe,RRSe ) ) ) ,DS ) - ( Min( RMSe ,DS ) - MLU ) )", "obj1": 0.9960629921259843, "obj2": 0.0019290379497078137}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.025732279875568788}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6528555796921475}, {"determining": "( ( FirstVNF_CPU - Const ) / Const )", "choosing": "Min( Min( RMSe ,Min( Min( RMSe ,DS ) ,Max( RCSe,MLU ) ) ) ,Max( RCSe,MLU ) )", "obj1": 0.6929133858267716, "obj2": 0.2314721232704321}, {"determining": "( ( Const - Const ) / ( FirstVNF_Mem / CRS ) )", "choosing": "Min( ( CS / MUM ) ,DS )", "obj1": 0.7007874015748031, "obj2": 0.2230950553886952}], "10": [{"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( CRS - Const ) ) / ( AMS * PN ) )", "choosing": "( ( Min( RMSe ,MUM ) / DS ) - ( RCSe - MLU ) )", "obj1": 0.047244094488188976, "obj2": 0.7373573404562941}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "Max( ( ( ( ( Min( ( ( CRS + Const ) + ( BR * FirstVNF_RAM ) ) ,Max( Min( FirstVNF_Mem ,DDR ),( MDR - MDR ) ) ) + Max( Max( Min( AMS ,FirstVNF_CPU_Server ),( DDR + MRS ) ),Max( ( ARS / ACS ),Max( AMS,RRS ) ) ) ) * Min( ( ( Max( FirstVNF_RAM_Server,ARS ) - ( AMS - MRS ) ) * ( ( RRS * DDR ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ,Max( ( ( CRS * FirstVNF_CPU_Server ) - ( CRS + FirstVNF_CPU_Server ) ),( Min( RRS ,RRS ) * ( MDR * MRS ) ) ) ) ) * ( ( ( ( Min( CRS ,CRS ) - ( MRS - RRS ) ) + Min( ( DDR - DDR ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) + ( ( Max( MRS,AMS ) * Min( CRS ,ACS ) ) * ( ( RRS - FirstVNF_RAM ) / ( BR / FirstVNF_CPU_Server ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( RRS / BR ) ),Min( ( ACS - FirstVNF_Mem ) ,( FirstVNF_Mem * ARS ) ) ) + ( ( Min( Const ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,RRS ) ) / ( ( RRS * FirstVNF_CPU_Server ) * ( ARS - PN ) ) ) ) ) ) + Max( ( Min( Max( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_Mem_Server + ARS ) ),( Min( AMS ,Const ) / ( ARS - DDR ) ) ) ,Min( ( ( RRS + FirstVNF_Mem ) - ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - BR ) + Min( FirstVNF_Mem_Server ,RRS ) ) ) ) / Max( Max( Max( Max( BR,ACS ),( FirstVNF_RAM * PN ) ),Min( Max( FirstVNF_RAM_Server,MRS ) ,Min( PN ,CRS ) ) ),Max( ( ( RRS / FirstVNF_RAM ) * ( ARS * FirstVNF_Mem_Server ) ),Max( ( ARS * FirstVNF_Mem_Server ),( BR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( Min( MDR ,FirstVNF_Mem ) * Max( AMS,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + ( ( ( MRS + MDR ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * Max( Min( BR ,ARS ),( DDR * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Min( RRS ,DDR ) / Max( CRS,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_CPU ,FirstVNF_Mem ),( Const * AMS ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) / Min( FirstVNF_CPU ,DDR ) ) * Min( Max( ACS,MDR ) ,( RRS - AMS ) ) ) ) ) ) ),Max( Min( ( ( ( ( ( PN / FirstVNF_RAM ) + ( PN / FirstVNF_CPU_Server ) ) - ( Max( PN,MRS ) - ( FirstVNF_Mem * AMS ) ) ) - Max( Max( ( ARS - FirstVNF_RAM ),Max( Const,Const ) ),( Max( AMS,PN ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) + ( Min( ( ( RRS * RRS ) / Min( DDR ,RRS ) ) ,( Max( AMS,MDR ) - ( ARS * RRS ) ) ) + Max( Max( ( RRS * RRS ),( DDR - DDR ) ),( ( MDR * MDR ) - ( DDR * Const ) ) ) ) ) ,( ( ( Max( Max( BR,DDR ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( Max( DDR,AMS ) - ( MRS / CRS ) ) ) / ( Max( ( FirstVNF_CPU_Server + BR ),( FirstVNF_Mem - ARS ) ) * ( Max( MRS,BR ) - ( ARS * AMS ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem ) + ( ACS + BR ) ) + ( ( CRS / FirstVNF_Mem ) - ( MRS - AMS ) ) ) - ( Min( ( ACS + PN ) ,Max( RRS,FirstVNF_CPU ) ) + ( Max( Const,MDR ) + ( DDR - MRS ) ) ) ) ) ),Max( ( ( Max( ( ( MRS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),Max( ( FirstVNF_Mem * FirstVNF_CPU ),( Const - FirstVNF_Mem ) ) ) + ( ( ( CRS * MDR ) - ( CRS - MDR ) ) * ( ( RRS + CRS ) + ( MRS / FirstVNF_Mem ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),( ARS * DDR ) ) + Max( Max( FirstVNF_RAM,BR ),( AMS * ACS ) ) ) * ( ( ( AMS - ACS ) / ( Const / BR ) ) / ( ( Const - MDR ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( FirstVNF_RAM + AMS ) ) * ( ( CRS - ACS ) * Min( ARS ,BR ) ) ),( ( Min( PN ,BR ) / ( FirstVNF_RAM + MRS ) ) + ( ( AMS - FirstVNF_Mem ) * Min( ARS ,CRS ) ) ) ) ,( Min( Min( Max( CRS,RRS ) ,Min( AMS ,MDR ) ) ,( ( FirstVNF_RAM + DDR ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ( Const - PN ) ),( Min( AMS ,FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUM,MUR ) - Min( ( MUM - MUM ) ,MUM ) ) * ( Min( ( ( ( MUC + Min( RRSe ,RCSe ) ) + DS ) - ( CS + Min( DS ,MUM ) ) ) ,( Min( MUM ,Max( CS,RMSe ) ) + Min( ( DS * RRSe ) ,CS ) ) ) * Max( MLU,( RCSe / ( RCSe * ( ( MLU + MUM ) * MUC ) ) ) ) ) ) + ( RMSe - MUC ) )", "obj1": 0.8740157480314961, "obj2": 0.09936535484729676}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( Max( AMS,PN ) - FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - DS ) - ( RCSe - ( RMSe / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.27986438233996247}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MLU + MLU ) - ( MUM - MUR ) )", "obj1": 0.4074803149606299, "obj2": 0.4155202124003986}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / ( PN * PN ) )", "choosing": "( Min( ( Min( RMSe ,RMSe ) - ( RMSe - MLU ) ) ,DS ) - ( MLU - MLU ) )", "obj1": 0.7047244094488189, "obj2": 0.2187281199365061}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( ACS - RRS ) / ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Const + FirstVNF_CPU ) ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - ( MLU + MLU ) )", "obj1": 0.4409448818897638, "obj2": 0.36498052553958293}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "( ( PN + FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "( ( DS / DS ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.27165354330708663, "obj2": 0.478042790182166}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,FirstVNF_RAM ) ) * ( BR * ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( Min( Max( ( ( ( ( ( MDR + ACS ) / ( ARS + ARS ) ) + ( ( FirstVNF_RAM_Server + RRS ) * ( FirstVNF_CPU - MRS ) ) ) / Min( Max( ( PN - FirstVNF_Mem ),( AMS * MRS ) ) ,( ( RRS + MRS ) * ( MRS * PN ) ) ) ) - ( Max( ( ( DDR - MRS ) - Min( DDR ,FirstVNF_Mem_Server ) ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) / ( Max( Max( Const,PN ),Max( FirstVNF_CPU_Server,BR ) ) / ( ( FirstVNF_CPU_Server * RRS ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),( Max( Min( ( ( FirstVNF_RAM / BR ) + Max( Const,FirstVNF_RAM ) ) ,Max( ( FirstVNF_Mem_Server + BR ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ),Min( ( ( CRS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,MDR ) / ( MDR - PN ) ) ) ) - Min( ( Max( ( DDR + FirstVNF_Mem_Server ),Max( RRS,CRS ) ) - ( ( ACS * MRS ) * Max( ARS,Const ) ) ) ,( ( ( AMS / FirstVNF_RAM ) / ( PN * CRS ) ) + ( ( ARS * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) ,( ( ( ( ( ( FirstVNF_Mem_Server - Const ) + ( BR + FirstVNF_RAM ) ) / ( Max( MRS,FirstVNF_CPU ) / ( ARS / ACS ) ) ) + Min( Min( Min( PN ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) ,( ( PN - MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) - ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( DDR,RRS ) ) * ( ( PN - BR ) * ( FirstVNF_Mem_Server * MDR ) ) ) - ( Max( ( ARS + FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,DDR ) ) / Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) / ( Max( Min( Max( ( FirstVNF_RAM / CRS ),( ARS / MRS ) ) ,( ( PN / RRS ) * ( FirstVNF_RAM - FirstVNF_RAM ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_CPU + RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) + Min( ( Max( Max( BR,PN ),( ACS - FirstVNF_CPU_Server ) ) + ( ( MRS * MDR ) - Min( Const ,FirstVNF_Mem_Server ) ) ) ,( Max( ( PN / Const ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) ) ) * ( ( ( ( ( Min( ( ARS * CRS ) ,( MRS / CRS ) ) + ( Min( BR ,PN ) * ( ARS / RRS ) ) ) + ( Min( Min( PN ,FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) ) + ( ( DDR * BR ) + ( RRS - FirstVNF_RAM ) ) ) ) + ( ( Max( ( FirstVNF_RAM_Server * RRS ),( CRS - DDR ) ) - Max( ( FirstVNF_Mem_Server + Const ),( ARS * Const ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) - ( ACS - RRS ) ) * ( ( Const / MRS ) + Max( FirstVNF_Mem,RRS ) ) ) ) ) * ( ( Min( Min( ( MRS * AMS ) ,( FirstVNF_Mem - MRS ) ) ,( ( RRS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) + ( Max( Max( PN,FirstVNF_CPU ),( AMS * PN ) ) + ( ( MDR * RRS ) * ( MRS / RRS ) ) ) ) - ( ( ( ( MDR + Const ) + Min( DDR ,FirstVNF_CPU_Server ) ) * ( Max( MDR,FirstVNF_Mem_Server ) / ( DDR + DDR ) ) ) / ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * ( MRS + Const ) ) + ( ( FirstVNF_Mem_Server + BR ) + Max( CRS,CRS ) ) ) ) ) ) + Min( ( ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Min( RRS ,AMS ) ),Max( ( FirstVNF_Mem_Server - AMS ),( ARS * ACS ) ) ) / ( ( ( FirstVNF_CPU / BR ) / Min( FirstVNF_Mem_Server ,RRS ) ) * Min( Min( CRS ,MRS ) ,( FirstVNF_CPU + RRS ) ) ) ) / Max( ( ( Max( RRS,AMS ) - Min( FirstVNF_Mem_Server ,CRS ) ) + ( Min( MRS ,RRS ) + Min( ACS ,FirstVNF_RAM_Server ) ) ),( Max( ( PN / BR ),Max( BR,AMS ) ) * ( Min( Const ,ACS ) * ( AMS + FirstVNF_RAM_Server ) ) ) ) ) ,( ( Max( ( ( BR - DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( PN * FirstVNF_CPU ) / Max( MDR,FirstVNF_Mem_Server ) ) ) - ( Max( ( RRS * DDR ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( ( PN - MRS ) + ( FirstVNF_RAM - RRS ) ) ) ) + Min( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( PN / CRS ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ,( Max( ( DDR - AMS ),( MRS * RRS ) ) - ( ( MDR / ACS ) + ( FirstVNF_Mem - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( Max( ( DS / DS ),( CS - RMSe ) ),( Max( MUR,CS ) + ( MUM / CS ) ) ) ,( ( Max( MUC,DS ) + ( MLU / MLU ) ) - ( ( MUC * MUC ) - ( RCSe + CS ) ) ) ) + Max( Min( ( ( RRSe / CS ) + ( CS + CS ) ) ,Max( ( CS + DS ),( RMSe / RCSe ) ) ),( ( ( RCSe + MUM ) / ( RRSe * RRSe ) ) * Max( ( MUC / MLU ),( MUC - RMSe ) ) ) ) ) - Max( ( Min( Min( ( CS * MUC ) ,( RMSe + DS ) ) ,Min( ( RMSe - MLU ) ,Max( RMSe,CS ) ) ) / ( ( ( DS + RMSe ) - ( RRSe - RMSe ) ) / ( ( MUR * RMSe ) * ( RCSe / RCSe ) ) ) ),( ( ( ( MLU * MUR ) + ( RCSe / DS ) ) + ( Min( MUR ,RMSe ) / ( CS + RMSe ) ) ) * Min( Min( ( MUR - MUC ) ,( CS * MUC ) ) ,( Min( MUM ,RMSe ) - Min( CS ,MUM ) ) ) ) ) ) - ( ( Min( ( Max( ( MUC * CS ),( RCSe + MLU ) ) - Min( ( RRSe * DS ) ,( MUR - MUC ) ) ) ,( ( Max( RCSe,MUC ) - Max( MUC,DS ) ) * Max( Min( RRSe ,CS ),Max( MUR,CS ) ) ) ) + ( Min( ( Min( RMSe ,RMSe ) + Max( RCSe,RRSe ) ) ,Max( ( RCSe * RMSe ),( MUM + MUM ) ) ) - Max( ( ( MUM + MLU ) + ( RMSe - MLU ) ),Min( ( MUM / MUC ) ,( MUR * RMSe ) ) ) ) ) + ( ( ( ( Min( MUR ,DS ) - ( DS * MLU ) ) * ( ( MUC * MUR ) + ( MUM / RMSe ) ) ) * ( Max( ( MUC / MUR ),Max( MUC,CS ) ) - Min( ( MUM - MUC ) ,( MUR * RMSe ) ) ) ) + ( Min( ( ( RRSe * MUM ) - Max( DS,MLU ) ) ,( Min( RMSe ,MUR ) * Min( DS ,RRSe ) ) ) + ( ( ( MUC - DS ) / ( RRSe - MLU ) ) - ( Max( CS,DS ) - ( DS * RMSe ) ) ) ) ) ) ) - Max( Max( ( Max( ( Min( ( CS / MUC ) ,( MUM + MUC ) ) - ( ( MLU * MLU ) / ( RMSe / RCSe ) ) ),( ( Min( RRSe ,MUM ) - ( DS * DS ) ) / ( ( RCSe - MUC ) + ( MUC - MUC ) ) ) ) / Min( ( ( Max( MLU,MUC ) + ( RCSe + MUC ) ) * Min( ( MUM + CS ) ,( MUM * CS ) ) ) ,( ( Max( CS,CS ) + ( MUR + DS ) ) * ( Min( MUR ,RRSe ) - Min( MUC ,RRSe ) ) ) ) ),( ( ( ( ( MLU / MUC ) - ( MUR - MLU ) ) * ( Max( MUM,DS ) * ( MUR * RMSe ) ) ) - Min( Min( Max( RMSe,MLU ) ,( RCSe / MUM ) ) ,( ( CS * MUM ) * ( MUM - RCSe ) ) ) ) / ( ( Min( Min( RCSe ,MUM ) ,Min( MUR ,MUC ) ) / ( ( MUC + DS ) - ( RMSe - RMSe ) ) ) + ( ( ( DS + MUM ) + ( CS / MUR ) ) + ( ( MUR * RMSe ) + ( DS / MUM ) ) ) ) ) ),( ( Min( ( ( ( MUM * DS ) + ( MUC * RRSe ) ) - Min( ( MUR / MUM ) ,( MLU / CS ) ) ) ,( ( ( MUR - RCSe ) / ( RRSe + MUM ) ) - ( ( DS + RMSe ) + ( MUC * RRSe ) ) ) ) / ( ( ( Min( DS ,CS ) / ( MLU / MLU ) ) + ( ( MUR * MUR ) + Max( MUC,MUR ) ) ) / Max( ( ( MUC / DS ) - ( MUC - MUC ) ),( Min( RMSe ,MUR ) / Min( RRSe ,RRSe ) ) ) ) ) * Max( Min( ( ( ( MUR * CS ) - Max( RRSe,RCSe ) ) * Min( ( RMSe / DS ) ,( MLU - CS ) ) ) ,( Min( ( RMSe * CS ) ,Min( RMSe ,MUM ) ) - Max( ( MLU - MLU ),( RMSe + MUC ) ) ) ),( Min( ( ( RRSe * RRSe ) - ( DS - CS ) ) ,Max( ( MLU - MUR ),( RMSe * DS ) ) ) - ( ( ( CS / MUM ) + ( MUC + RCSe ) ) / ( ( DS * MUR ) / ( CS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.012203308875245296}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04718564131795197}, {"determining": "( ( PN - MRS ) - ( ( ( DDR * FirstVNF_Mem ) * FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6528555796921475}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( Const * FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) - ( MUC / RCSe ) )", "obj1": 0.39173228346456695, "obj2": 0.42076722565743474}, {"determining": "( ( CRS - Const ) / ( ( PN - FirstVNF_CPU_Server ) / Min( AMS ,PN ) ) )", "choosing": "Min( ( Min( MUC ,DS ) - ( RCSe - MLU ) ) ,DS )", "obj1": 0.6889763779527559, "obj2": 0.23476613250149564}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) / ( AMS * PN ) ) - ( ( FirstVNF_RAM_Server - RRS ) / Max( PN,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MUR ) + Min( RMSe ,RCSe ) )", "obj1": 0.9586614173228346, "obj2": 0.028926254112371135}, {"determining": "( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + Min( MUC ,RCSe ) ) ,( CS / MLU ) ) )", "obj1": 0.23031496062992127, "obj2": 0.52097298170647}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Max( ( MDR - FirstVNF_CPU ),Max( ACS,AMS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MLU ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6417527005736131}, {"determining": "( Max( PN,FirstVNF_CPU ) * ( Const + FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6437010025446342}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( Min( CS ,MUC ) * ( Min( RCSe ,RCSe ) / MLU ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5060057182579616}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( PN - ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) ) ) / ( ( FirstVNF_RAM_Server - CRS ) / ( PN * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,( ( CS - MUM ) - Max( RRSe,RRSe ) ) ) ,DS ) - ( Min( RMSe ,DS ) - MLU ) )", "obj1": 0.9960629921259843, "obj2": 0.0019290379497078137}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5011280119887922}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4816924863791226}, {"determining": "( ( ( ( ACS - DDR ) - Max( CRS,ARS ) ) / ( ( ACS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 0.9645669291338582, "obj2": 0.025732279875568788}], "11": [{"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( FirstVNF_RAM * PN ) ) )", "choosing": "( ( RMSe - DS ) - RMSe )", "obj1": 0.045275590551181105, "obj2": 0.7406735341274203}, {"determining": "Max( ( ( ( ( Min( ( ( CRS + Const ) + ( BR * FirstVNF_RAM ) ) ,Max( Min( FirstVNF_Mem ,DDR ),( MDR - MDR ) ) ) + Max( Max( Min( AMS ,FirstVNF_CPU_Server ),( DDR + MRS ) ),Max( ( ARS / ACS ),Max( AMS,RRS ) ) ) ) * Min( ( ( Max( FirstVNF_RAM_Server,ARS ) - ( AMS - MRS ) ) * ( ( RRS * DDR ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ,Max( ( ( CRS * FirstVNF_CPU_Server ) - ( CRS + FirstVNF_CPU_Server ) ),( Min( RRS ,RRS ) * ( MDR * MRS ) ) ) ) ) * ( ( ( ( Min( CRS ,CRS ) - ( MRS - RRS ) ) + Min( ( DDR - DDR ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) + ( ( Max( MRS,AMS ) * Min( CRS ,ACS ) ) * ( ( RRS - FirstVNF_RAM ) / ( BR / FirstVNF_CPU_Server ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( RRS / BR ) ),Min( ( ACS - FirstVNF_Mem ) ,( FirstVNF_Mem * ARS ) ) ) + ( ( Min( Const ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,RRS ) ) / ( ( RRS * FirstVNF_CPU_Server ) * ( ARS - PN ) ) ) ) ) ) + Max( ( Min( Max( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_Mem_Server + ARS ) ),( Min( AMS ,Const ) / ( ARS - DDR ) ) ) ,Min( ( ( RRS + FirstVNF_Mem ) - ( MRS / FirstVNF_CPU_Server ) ) ,( ( RRS - BR ) + Min( FirstVNF_Mem_Server ,RRS ) ) ) ) / Max( Max( Max( Max( BR,ACS ),( FirstVNF_RAM * PN ) ),Min( Max( FirstVNF_RAM_Server,MRS ) ,Min( PN ,CRS ) ) ),Max( ( ( RRS / FirstVNF_RAM ) * ( ARS * FirstVNF_Mem_Server ) ),Max( ( ARS * FirstVNF_Mem_Server ),( BR / FirstVNF_CPU_Server ) ) ) ) ),( ( ( ( Min( MDR ,FirstVNF_Mem ) * Max( AMS,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + ( ( ( MRS + MDR ) + ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) * Max( Min( BR ,ARS ),( DDR * FirstVNF_CPU_Server ) ) ) ) * ( ( ( Min( RRS ,DDR ) / Max( CRS,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_CPU ,FirstVNF_Mem ),( Const * AMS ) ) ) - ( ( Min( FirstVNF_Mem_Server ,BR ) / Min( FirstVNF_CPU ,DDR ) ) * Min( Max( ACS,MDR ) ,( RRS - AMS ) ) ) ) ) ) ),Max( Min( ( ( ( ( ( PN / FirstVNF_RAM ) + ( PN / FirstVNF_CPU_Server ) ) - ( Max( PN,MRS ) - ( FirstVNF_Mem * AMS ) ) ) - Max( Max( ( ARS - FirstVNF_RAM ),Max( Const,Const ) ),( Max( AMS,PN ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) + ( Min( ( ( RRS * RRS ) / Min( DDR ,RRS ) ) ,( Max( AMS,MDR ) - ( ARS * RRS ) ) ) + Max( Max( ( RRS * RRS ),( DDR - DDR ) ),( ( MDR * MDR ) - ( DDR * Const ) ) ) ) ) ,( ( ( Max( Max( BR,DDR ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( Max( DDR,AMS ) - ( MRS / CRS ) ) ) / ( Max( ( FirstVNF_CPU_Server + BR ),( FirstVNF_Mem - ARS ) ) * ( Max( MRS,BR ) - ( ARS * AMS ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem ) + ( ACS + BR ) ) + ( ( CRS / FirstVNF_Mem ) - ( MRS - AMS ) ) ) - ( Min( ( ACS + PN ) ,Max( RRS,FirstVNF_CPU ) ) + ( Max( Const,MDR ) + ( DDR - MRS ) ) ) ) ) ),Max( ( ( Max( ( ( MRS - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),Max( ( FirstVNF_Mem * FirstVNF_CPU ),( Const - FirstVNF_Mem ) ) ) + ( ( ( CRS * MDR ) - ( CRS - MDR ) ) * ( ( RRS + CRS ) + ( MRS / FirstVNF_Mem ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),( ARS * DDR ) ) + Max( Max( FirstVNF_RAM,BR ),( AMS * ACS ) ) ) * ( ( ( AMS - ACS ) / ( Const / BR ) ) / ( ( Const - MDR ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ),Min( Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( FirstVNF_RAM + AMS ) ) * ( ( CRS - ACS ) * Min( ARS ,BR ) ) ),( ( Min( PN ,BR ) / ( FirstVNF_RAM + MRS ) ) + ( ( AMS - FirstVNF_Mem ) * Min( ARS ,CRS ) ) ) ) ,( Min( Min( Max( CRS,RRS ) ,Min( AMS ,MDR ) ) ,( ( FirstVNF_RAM + DDR ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ( Const - PN ) ),( Min( AMS ,FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUM,MUR ) - Min( ( MUM - MUM ) ,MUM ) ) * ( Min( ( ( ( MUC + Min( RRSe ,RCSe ) ) + DS ) - ( CS + Min( DS ,MUM ) ) ) ,( Min( MUM ,Max( CS,RMSe ) ) + Min( ( DS * RRSe ) ,CS ) ) ) * Max( MLU,( RCSe / ( RCSe * ( ( MLU + MUM ) * MUC ) ) ) ) ) ) + ( RMSe - MUC ) )", "obj1": 0.8740157480314961, "obj2": 0.09936535484729676}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( Min( RMSe ,DS ) - ( RCSe / MLU ) )", "obj1": 0.6358267716535433, "obj2": 0.24647119316634186}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( ( Min( AMS ,PN ) - FirstVNF_Mem ) / Max( AMS,PN ) ) / Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( Const - ARS ) ) ) )", "choosing": "( Min( ( Min( ( RMSe / ( RMSe / RMSe ) ) ,MLU ) - ( DS / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) / ( ( RMSe / DS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.7223482311565829}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem / CRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS / MUM ) ,DS ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.3858267716535433, "obj2": 0.3981979117222705}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "( ( Max( AMS,PN ) - FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - DS ) - ( RCSe - ( RMSe / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.27986438233996247}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_Mem / CRS ) )", "choosing": "( Min( CS ,DS ) - Min( CS ,MUM ) )", "obj1": 0.33858267716535434, "obj2": 0.4362697577593328}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - Const ) / ( FirstVNF_Mem / CRS ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.7204724409448819, "obj2": 0.2014694635568106}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Const + FirstVNF_CPU ) ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - ( MLU + MLU ) )", "obj1": 0.4409448818897638, "obj2": 0.36498052553958293}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "Max( RRS,( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( RRSe * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5486997036253211}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( CRS - Const ) / ( ( PN - FirstVNF_CPU_Server ) / Min( AMS ,PN ) ) )", "choosing": "Min( ( Min( MUC ,DS ) - ( RCSe - MLU ) ) ,DS )", "obj1": 0.6889763779527559, "obj2": 0.23476613250149564}, {"determining": "Min( ( ( ( ( Min( ( ( BR * PN ) - ( FirstVNF_CPU / ACS ) ) ,( ( FirstVNF_Mem * BR ) - ( ARS + ACS ) ) ) * ( ( ( Const + MRS ) - ( FirstVNF_RAM / PN ) ) - ( ( Const + DDR ) / ( Const / PN ) ) ) ) * Min( ( Min( ( FirstVNF_Mem / BR ) ,( FirstVNF_RAM_Server * CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) * Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( ( MDR / AMS ) * ( FirstVNF_RAM_Server / Const ) ) / ( ( ARS / MDR ) + ( Const + BR ) ) ) ) ) / ( ( Max( ( ( CRS * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MDR ) ),( ( MDR + FirstVNF_CPU_Server ) / ( MDR - CRS ) ) ) - Max( ( ( Const * RRS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),( Max( MRS,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( BR + RRS ) ) * ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - ( ( ( CRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,DDR ) ) + Min( ( ARS / PN ) ,Max( FirstVNF_RAM,RRS ) ) ) ) ) ) + Max( Min( ( Min( ( ( DDR * CRS ) - Min( PN ,RRS ) ) ,( Min( ARS ,CRS ) / ( FirstVNF_RAM_Server - AMS ) ) ) / Min( ( ( ARS + FirstVNF_RAM_Server ) + ( DDR / FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU * AMS ) ,( FirstVNF_Mem + BR ) ) ) ) ,( Min( ( Min( CRS ,DDR ) - ( BR * FirstVNF_Mem ) ) ,Min( ( BR * ACS ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( ( FirstVNF_Mem / MDR ) - ( Const / FirstVNF_RAM ) ) ,( ( Const * RRS ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ),( ( ( Min( Max( ARS,Const ) ,( BR * RRS ) ) - Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / PN ) ) ) / ( ( Max( FirstVNF_RAM_Server,DDR ) / Max( FirstVNF_RAM,Const ) ) * ( ( MRS / ACS ) - Min( MDR ,FirstVNF_RAM ) ) ) ) + Max( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * ( BR + PN ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( ARS - ARS ) ) ),Min( ( ( MDR * FirstVNF_Mem_Server ) * ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( ( ACS * ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,Min( Min( ( ( Min( Min( ( FirstVNF_Mem_Server + ACS ) ,( DDR + PN ) ) ,( ( ARS + BR ) + ( CRS - BR ) ) ) - ( ( ( ACS * ACS ) * ( MDR + FirstVNF_Mem_Server ) ) / ( Max( ARS,FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server * ACS ) - ( DDR / RRS ) ) + Max( ( MRS + FirstVNF_CPU ),Max( CRS,ARS ) ) ) + Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( ARS + FirstVNF_RAM ) ) ) ) ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / Min( MDR ,MRS ) ) * Max( ( BR + Const ),Max( MDR,FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_CPU_Server ,PN ) - Min( DDR ,MRS ) ) + ( ( AMS / CRS ) / ( FirstVNF_Mem - AMS ) ) ) ) / ( Max( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,Max( CRS,Const ) ),( ( MDR + RRS ) * ( Const * FirstVNF_Mem_Server ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( DDR - PN ) ) + ( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ,Min( Min( ( Min( ( ( MRS / Const ) + Max( MDR,AMS ) ) ,( ( FirstVNF_RAM_Server / AMS ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / ( FirstVNF_RAM + ARS ) ) * Min( ( RRS / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) ) ) ,( Max( Min( Max( FirstVNF_CPU_Server,MRS ) ,( DDR / ARS ) ),( ( CRS + CRS ) - ( FirstVNF_RAM - MRS ) ) ) * ( Max( Max( RRS,RRS ),( FirstVNF_CPU / FirstVNF_CPU ) ) + ( ( Const + DDR ) / ( CRS + DDR ) ) ) ) ) ,( Max( Max( ( Max( CRS,MDR ) - ( FirstVNF_CPU_Server + MDR ) ),( ( RRS - FirstVNF_CPU ) - ( RRS / FirstVNF_Mem_Server ) ) ),Max( ( ( CRS - PN ) - Min( ARS ,MRS ) ),( ( Const / DDR ) / ( DDR + Const ) ) ) ) + ( ( ( Min( ACS ,Const ) * Min( CRS ,MDR ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_RAM_Server - Const ) ) ) + ( Max( ( FirstVNF_RAM + CRS ),Max( DDR,RRS ) ) / Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( RRS / BR ) ) ) ) ) ) ) )", "choosing": "Max( Max( MUR,MUM ),Min( ( MUM - MUM ) ,( MUR + MUR ) ) )", "obj1": 0.9803149606299213, "obj2": 0.008912106429707578}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04718564131795197}, {"determining": "( ( FirstVNF_RAM * AMS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MLU + MUC ) ,( CS / MLU ) ) )", "obj1": 0.27755905511811024, "obj2": 0.476205644362377}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) / ( AMS * PN ) ) - ( ( FirstVNF_RAM_Server - RRS ) / Max( PN,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MUR ) + Min( RMSe ,RCSe ) )", "obj1": 0.9586614173228346, "obj2": 0.028926254112371135}, {"determining": "( ( FirstVNF_RAM * ACS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + Min( MUC ,RCSe ) ) ,( CS / MLU ) ) )", "obj1": 0.23031496062992127, "obj2": 0.52097298170647}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Max( ( Const - Const ),( FirstVNF_Mem / CRS ) )", "choosing": "Min( ( CS / MUM ) ,DS )", "obj1": 0.7066929133858267, "obj2": 0.2187050298387632}, {"determining": "Max( ( MDR - FirstVNF_CPU ),Max( ACS,AMS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MLU ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6417527005736131}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( Const - Const ) / ( FirstVNF_Mem / CRS ) )", "choosing": "Min( ( CS / MUM ) ,DS )", "obj1": 0.6988188976377953, "obj2": 0.22805248035040535}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( Min( CS ,MUC ) * ( Min( RCSe ,RCSe ) / MLU ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5060057182579616}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * PN ) )", "choosing": "( ( MUM - DS ) - ( CS + DS ) )", "obj1": 0.04921259842519685, "obj2": 0.7373445711390849}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( ( PN - ( ( FirstVNF_CPU - RRS ) / ( FirstVNF_Mem + CRS ) ) ) / ( ( FirstVNF_RAM_Server - CRS ) / ( PN * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,( ( CS - MUM ) - Max( RRSe,RRSe ) ) ) ,DS ) - ( Min( RMSe ,DS ) - MLU ) )", "obj1": 0.9960629921259843, "obj2": 0.0019290379497078137}], "12": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - Max( CRS,CRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( FirstVNF_RAM * PN ) ) )", "choosing": "( ( RMSe - DS ) - RMSe )", "obj1": 0.045275590551181105, "obj2": 0.7406735341274203}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06516246078008177}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( ( Max( ( ( ( ( AMS * FirstVNF_CPU_Server ) - ( PN - AMS ) ) / Max( ( RRS - ACS ),( BR * DDR ) ) ) * ( ( ( CRS - FirstVNF_RAM_Server ) + ( MRS * RRS ) ) - ( ( CRS / PN ) * ( PN + FirstVNF_CPU_Server ) ) ) ),( Min( ( ( ACS / MDR ) - ( ARS - ARS ) ) ,( ( PN - RRS ) / ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server - PN ) * Min( ACS ,FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * Min( DDR ,Const ) ) ) ) ) * ( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Min( CRS ,MDR ) ) / ( Max( MRS,ACS ) - Max( ARS,RRS ) ) ) ,( ( ( MRS + BR ) - ( ARS / ACS ) ) * ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_RAM / DDR ) ) ) ) / ( ( ( ( CRS * CRS ) + ( MRS / ACS ) ) + ( Max( MRS,FirstVNF_Mem_Server ) - Max( AMS,ARS ) ) ) * ( Min( Max( MRS,BR ) ,( CRS + DDR ) ) / ( ( MDR / FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) ) * Max( Min( ( ( ( ( MRS + FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) ) * ( ( DDR / FirstVNF_RAM_Server ) - Min( AMS ,RRS ) ) ) / ( ( Max( RRS,MDR ) + ( FirstVNF_RAM + BR ) ) - Max( ( RRS + DDR ),( ACS / CRS ) ) ) ) ,( ( ( Min( Const ,BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,MRS ) * Min( BR ,AMS ) ) ) + Max( ( ( AMS + DDR ) * ( BR * ACS ) ),Max( Min( AMS ,FirstVNF_RAM ),Max( AMS,CRS ) ) ) ) ),Max( Min( Min( ( ( FirstVNF_RAM - DDR ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ,( ( PN / ACS ) / ( FirstVNF_CPU_Server - MDR ) ) ) ,( Min( Min( ARS ,MRS ) ,Min( MRS ,CRS ) ) - ( Max( AMS,MDR ) - ( FirstVNF_Mem_Server + RRS ) ) ) ),( ( ( ( RRS - FirstVNF_RAM ) + Max( BR,CRS ) ) * Max( Min( FirstVNF_RAM ,MDR ),( DDR / FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / ACS ) + Max( ACS,FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( MRS - FirstVNF_Mem ) ) ) ) ) ) ) / ( ( Max( ( ( Min( ( ARS - FirstVNF_CPU ) ,( AMS + MDR ) ) / Min( Min( FirstVNF_Mem_Server ,Const ) ,( RRS / ARS ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,CRS ),Min( DDR ,CRS ) ) / Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( MDR,DDR ) ) ) ),Max( ( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,( ACS - DDR ) ) / ( ( PN * FirstVNF_CPU ) * ( BR * FirstVNF_CPU_Server ) ) ),Min( ( Min( FirstVNF_Mem_Server ,CRS ) + ( RRS / FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM_Server ,Const ) + ( AMS / BR ) ) ) ) ) * ( ( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( AMS / DDR ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) / Max( ( ( MDR * PN ) + ( RRS - CRS ) ),( Max( PN,MRS ) * ( FirstVNF_Mem - RRS ) ) ) ) * Min( ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( PN * DDR ) ) + Min( Max( DDR,FirstVNF_CPU_Server ) ,Max( BR,ARS ) ) ) ,( Min( ( FirstVNF_RAM / Const ) ,( ACS / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) - ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem ) / ( Const * FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_RAM - MDR ) / ( FirstVNF_RAM / Const ) ) ,Max( ( Const - ACS ),Max( BR,FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( RRS + AMS ) + ( FirstVNF_RAM * BR ) ) / ( ( BR + ARS ) * ( BR / MDR ) ) ) - ( ( ( FirstVNF_CPU / DDR ) * ( AMS * ARS ) ) / ( Min( CRS ,AMS ) + ( CRS * MDR ) ) ) ) ) * ( Min( ( ( ( MDR / MRS ) + ( FirstVNF_RAM_Server / ACS ) ) / ( ( FirstVNF_Mem_Server * ACS ) / ( MRS / RRS ) ) ) ,( ( ( BR / MDR ) / ( AMS / FirstVNF_RAM_Server ) ) + ( ( BR / CRS ) + ( MRS - Const ) ) ) ) + ( Min( ( ( MRS / ARS ) + ( MDR + FirstVNF_Mem ) ) ,( Max( AMS,ACS ) * ( MRS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_CPU * Const ) * ( CRS * BR ) ) + ( ( MDR - ACS ) + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( Max( MUR,MLU ) * ( RMSe - CS ) ) + ( ( RMSe + DS ) * Max( RMSe,RRSe ) ) ) + ( ( ( RCSe * MUR ) / Max( CS,RMSe ) ) + Max( Max( RMSe,RCSe ),( RMSe / CS ) ) ) ) / ( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) / ( Min( MUM ,RMSe ) / Max( RRSe,MUM ) ) ) - ( Min( Max( RRSe,MUC ) ,( RRSe + RCSe ) ) * ( Min( MUC ,RMSe ) / Min( RRSe ,MLU ) ) ) ) ),( Min( ( ( Max( RMSe,MUM ) - ( MUM * MUC ) ) / ( Max( MUM,MLU ) + ( MLU / MLU ) ) ) ,( Min( ( RMSe * MUC ) ,Min( RCSe ,RCSe ) ) * ( Min( CS ,MUR ) * Max( RCSe,CS ) ) ) ) - ( ( ( Min( MUC ,RCSe ) / ( MUC - MLU ) ) * Max( Min( CS ,RRSe ),( RRSe - RMSe ) ) ) + Min( ( Min( RMSe ,RMSe ) * ( RMSe / MUC ) ) ,Min( Min( DS ,RRSe ) ,( MUR - MUC ) ) ) ) ) ) ,Max( ( ( ( Max( ( RCSe + MLU ),Min( CS ,CS ) ) * ( Min( DS ,MUM ) * Max( CS,DS ) ) ) + Min( ( ( MUR * MUM ) - ( RMSe * RMSe ) ) ,( ( MLU * RCSe ) - ( MUC + RRSe ) ) ) ) + Max( ( ( ( RCSe / MUC ) + ( DS / DS ) ) * Min( ( MLU - DS ) ,Max( RCSe,MLU ) ) ),( Max( ( MUC / DS ),( MLU + RMSe ) ) * Max( ( RRSe - DS ),( MUM + RRSe ) ) ) ) ),( ( Min( Min( Max( RMSe,DS ) ,( MUM - MLU ) ) ,( ( RCSe - RCSe ) / Min( MUM ,RRSe ) ) ) * ( ( ( RMSe - MLU ) / ( RMSe / DS ) ) - ( ( RMSe * RRSe ) + ( MUM - CS ) ) ) ) / Min( Max( ( ( DS * MUC ) * Min( RMSe ,MLU ) ),( ( MLU - RMSe ) + Min( RRSe ,RCSe ) ) ) ,( Min( ( MUR + MUM ) ,( CS / MLU ) ) + ( ( MUM + DS ) / ( RRSe - MUM ) ) ) ) ) ) ) - ( Max( ( ( ( ( Max( MUC,RRSe ) * ( CS + MUR ) ) * ( ( CS + DS ) + ( MUR * RCSe ) ) ) * ( Max( ( CS + MLU ),Max( RCSe,RCSe ) ) * ( ( RCSe * MUM ) / ( MUC * RMSe ) ) ) ) - Min( Max( ( Max( MUR,RMSe ) - ( MUM - RCSe ) ),( ( MUC * CS ) / Max( RRSe,DS ) ) ) ,( Max( ( RMSe - MUR ),Max( RRSe,RRSe ) ) / ( ( MUC / RRSe ) + ( MUM / DS ) ) ) ) ),( ( ( Min( Min( MUC ,RCSe ) ,( MUR * MUR ) ) / Max( ( RRSe - CS ),( CS + MUM ) ) ) / ( ( Min( RRSe ,CS ) + Min( DS ,RCSe ) ) + ( Max( MUR,RRSe ) - Max( RMSe,DS ) ) ) ) / ( Max( Min( Max( MLU,RRSe ) ,( MLU + RMSe ) ),( Max( DS,MUR ) / ( DS + RCSe ) ) ) + ( ( ( MLU - MLU ) + Max( RRSe,MUC ) ) + Min( ( MUM - CS ) ,( CS - MLU ) ) ) ) ) ) - Min( ( ( ( ( ( MUR - RCSe ) + Max( MUR,DS ) ) - Max( ( CS * DS ),( RRSe - RRSe ) ) ) / Max( ( Min( RCSe ,MUR ) - ( RRSe / MLU ) ),Max( Max( MLU,MUC ),Max( MLU,RCSe ) ) ) ) + Min( ( Max( ( MUC * RRSe ),Max( DS,CS ) ) * ( ( MUR - MUC ) / ( DS * RCSe ) ) ) ,Max( Min( Min( DS ,MUC ) ,( MUC * MUR ) ),( ( CS - MUM ) / Min( RCSe ,RCSe ) ) ) ) ) ,( ( ( Max( Min( MUM ,RMSe ),Max( DS,MLU ) ) / ( ( RCSe + MUM ) * ( MLU - CS ) ) ) / ( ( ( MUR - MUC ) * ( RRSe + DS ) ) * Min( Max( DS,MUM ) ,( MUM / MUR ) ) ) ) / ( ( Max( ( MUM / DS ),( MLU * RRSe ) ) - ( ( RCSe - DS ) / ( RMSe / MUR ) ) ) + ( Max( Min( RMSe ,DS ),Min( RMSe ,RMSe ) ) * ( ( MUR - RCSe ) * ( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.24172756571533124}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( PN + FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - Min( RCSe ,RRSe ) ) - DS ) - ( RCSe + DS ) )", "obj1": 0.15551181102362205, "obj2": 0.6192673384596002}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem / CRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS / MUM ) ,DS ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.3858267716535433, "obj2": 0.3981979117222705}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "Min( ( CS / MUM ) ,DS )", "obj1": 0.7637795275590551, "obj2": 0.1476619908437094}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "( ( Max( AMS,PN ) - FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - DS ) - ( RCSe - ( RMSe / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.27986438233996247}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_Mem / CRS ) )", "choosing": "( Min( CS ,DS ) - Min( CS ,MUM ) )", "obj1": 0.33858267716535434, "obj2": 0.4362697577593328}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( PN / FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - DS ) - ( ( RCSe + DS ) + DS ) )", "obj1": 0.06496062992125984, "obj2": 0.7182193962669511}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - Const ) / ( FirstVNF_Mem / CRS ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.7204724409448819, "obj2": 0.2014694635568106}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Const + FirstVNF_CPU ) ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - ( MLU + MLU ) )", "obj1": 0.4409448818897638, "obj2": 0.36498052553958293}, {"determining": "( ( FirstVNF_RAM * AMS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MLU + MUC ) ,( CS / MLU ) ) )", "obj1": 0.27755905511811024, "obj2": 0.476205644362377}, {"determining": "( FirstVNF_Mem / Max( AMS,PN ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "Max( RRS,( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( RRSe * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5486997036253211}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) / ( AMS * PN ) ) - ( ( FirstVNF_RAM_Server - RRS ) / Max( PN,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MUR ) + Min( RMSe ,RCSe ) )", "obj1": 0.9586614173228346, "obj2": 0.028926254112371135}, {"determining": "( ( CRS - Const ) / ( ( PN - FirstVNF_CPU_Server ) / Min( AMS ,PN ) ) )", "choosing": "Min( ( Min( MUC ,DS ) - ( RCSe - MLU ) ) ,DS )", "obj1": 0.6889763779527559, "obj2": 0.23476613250149564}, {"determining": "Min( ( ( ( ( Min( ( ( BR * PN ) - ( FirstVNF_CPU / ACS ) ) ,( ( FirstVNF_Mem * BR ) - ( ARS + ACS ) ) ) * ( ( ( Const + MRS ) - ( FirstVNF_RAM / PN ) ) - ( ( Const + DDR ) / ( Const / PN ) ) ) ) * Min( ( Min( ( FirstVNF_Mem / BR ) ,( FirstVNF_RAM_Server * CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) * Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( ( MDR / AMS ) * ( FirstVNF_RAM_Server / Const ) ) / ( ( ARS / MDR ) + ( Const + BR ) ) ) ) ) / ( ( Max( ( ( CRS * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MDR ) ),( ( MDR + FirstVNF_CPU_Server ) / ( MDR - CRS ) ) ) - Max( ( ( Const * RRS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),( Max( MRS,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( BR + RRS ) ) * ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - ( ( ( CRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,DDR ) ) + Min( ( ARS / PN ) ,Max( FirstVNF_RAM,RRS ) ) ) ) ) ) + Max( Min( ( Min( ( ( DDR * CRS ) - Min( PN ,RRS ) ) ,( Min( ARS ,CRS ) / ( FirstVNF_RAM_Server - AMS ) ) ) / Min( ( ( ARS + FirstVNF_RAM_Server ) + ( DDR / FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU * AMS ) ,( FirstVNF_Mem + BR ) ) ) ) ,( Min( ( Min( CRS ,DDR ) - ( BR * FirstVNF_Mem ) ) ,Min( ( BR * ACS ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( ( FirstVNF_Mem / MDR ) - ( Const / FirstVNF_RAM ) ) ,( ( Const * RRS ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ),( ( ( Min( Max( ARS,Const ) ,( BR * RRS ) ) - Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / PN ) ) ) / ( ( Max( FirstVNF_RAM_Server,DDR ) / Max( FirstVNF_RAM,Const ) ) * ( ( MRS / ACS ) - Min( MDR ,FirstVNF_RAM ) ) ) ) + Max( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * ( BR + PN ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( ARS - ARS ) ) ),Min( ( ( MDR * FirstVNF_Mem_Server ) * ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( ( ACS * ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,Min( Min( ( ( Min( Min( ( FirstVNF_Mem_Server + ACS ) ,( DDR + PN ) ) ,( ( ARS + BR ) + ( CRS - BR ) ) ) - ( ( ( ACS * ACS ) * ( MDR + FirstVNF_Mem_Server ) ) / ( Max( ARS,FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server * ACS ) - ( DDR / RRS ) ) + Max( ( MRS + FirstVNF_CPU ),Max( CRS,ARS ) ) ) + Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( ARS + FirstVNF_RAM ) ) ) ) ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / Min( MDR ,MRS ) ) * Max( ( BR + Const ),Max( MDR,FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_CPU_Server ,PN ) - Min( DDR ,MRS ) ) + ( ( AMS / CRS ) / ( FirstVNF_Mem - AMS ) ) ) ) / ( Max( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,Max( CRS,Const ) ),( ( MDR + RRS ) * ( Const * FirstVNF_Mem_Server ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( DDR - PN ) ) + ( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ,Min( Min( ( Min( ( ( MRS / Const ) + Max( MDR,AMS ) ) ,( ( FirstVNF_RAM_Server / AMS ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / ( FirstVNF_RAM + ARS ) ) * Min( ( RRS / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) ) ) ,( Max( Min( Max( FirstVNF_CPU_Server,MRS ) ,( DDR / ARS ) ),( ( CRS + CRS ) - ( FirstVNF_RAM - MRS ) ) ) * ( Max( Max( RRS,RRS ),( FirstVNF_CPU / FirstVNF_CPU ) ) + ( ( Const + DDR ) / ( CRS + DDR ) ) ) ) ) ,( Max( Max( ( Max( CRS,MDR ) - ( FirstVNF_CPU_Server + MDR ) ),( ( RRS - FirstVNF_CPU ) - ( RRS / FirstVNF_Mem_Server ) ) ),Max( ( ( CRS - PN ) - Min( ARS ,MRS ) ),( ( Const / DDR ) / ( DDR + Const ) ) ) ) + ( ( ( Min( ACS ,Const ) * Min( CRS ,MDR ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_RAM_Server - Const ) ) ) + ( Max( ( FirstVNF_RAM + CRS ),Max( DDR,RRS ) ) / Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( RRS / BR ) ) ) ) ) ) ) )", "choosing": "Max( Max( MUR,MUM ),Min( ( MUM - MUM ) ,( MUR + MUR ) ) )", "obj1": 0.9803149606299213, "obj2": 0.008912106429707578}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04718564131795197}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( FirstVNF_Mem / ( FirstVNF_Mem + RRS ) )", "choosing": "( ( ( RCSe / RMSe ) - ( RCSe - ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ) - ( RCSe - MLU ) )", "obj1": 0.07480314960629922, "obj2": 0.6508512769425179}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( Min( CS ,MUC ) * ( Min( RCSe ,RCSe ) / MLU ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5060057182579616}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( ( FirstVNF_CPU - Const ) / Min( CRS ,MRS ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5700781405482017}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5152169451467375}, {"determining": "Max( ( MDR - FirstVNF_CPU ),Max( ACS,AMS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MLU ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6417527005736131}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * PN ) )", "choosing": "( ( RCSe - DS ) - ( RCSe + DS ) )", "obj1": 0.0531496062992126, "obj2": 0.7330174529041638}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( Max( AMS,PN ) + RRS ) )", "choosing": "( Max( Min( ( ( RCSe / RMSe ) - ( RCSe - MLU ) ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.6448108100341973}], "13": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( FirstVNF_RAM * PN ) ) )", "choosing": "( ( RMSe - DS ) - RMSe )", "obj1": 0.045275590551181105, "obj2": 0.7406735341274203}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "( ( ( Max( ( ( ( ( AMS * FirstVNF_CPU_Server ) - ( PN - AMS ) ) / Max( ( RRS - ACS ),( BR * DDR ) ) ) * ( ( ( CRS - FirstVNF_RAM_Server ) + ( MRS * RRS ) ) - ( ( CRS / PN ) * ( PN + FirstVNF_CPU_Server ) ) ) ),( Min( ( ( ACS / MDR ) - ( ARS - ARS ) ) ,( ( PN - RRS ) / ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server - PN ) * Min( ACS ,FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * Min( DDR ,Const ) ) ) ) ) * ( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Min( CRS ,MDR ) ) / ( Max( MRS,ACS ) - Max( ARS,RRS ) ) ) ,( ( ( MRS + BR ) - ( ARS / ACS ) ) * ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_RAM / DDR ) ) ) ) / ( ( ( ( CRS * CRS ) + ( MRS / ACS ) ) + ( Max( MRS,FirstVNF_Mem_Server ) - Max( AMS,ARS ) ) ) * ( Min( Max( MRS,BR ) ,( CRS + DDR ) ) / ( ( MDR / FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) ) * Max( Min( ( ( ( ( MRS + FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) ) * ( ( DDR / FirstVNF_RAM_Server ) - Min( AMS ,RRS ) ) ) / ( ( Max( RRS,MDR ) + ( FirstVNF_RAM + BR ) ) - Max( ( RRS + DDR ),( ACS / CRS ) ) ) ) ,( ( ( Min( Const ,BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,MRS ) * Min( BR ,AMS ) ) ) + Max( ( ( AMS + DDR ) * ( BR * ACS ) ),Max( Min( AMS ,FirstVNF_RAM ),Max( AMS,CRS ) ) ) ) ),Max( Min( Min( ( ( FirstVNF_RAM - DDR ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ,( ( PN / ACS ) / ( FirstVNF_CPU_Server - MDR ) ) ) ,( Min( Min( ARS ,MRS ) ,Min( MRS ,CRS ) ) - ( Max( AMS,MDR ) - ( FirstVNF_Mem_Server + RRS ) ) ) ),( ( ( ( RRS - FirstVNF_RAM ) + Max( BR,CRS ) ) * Max( Min( FirstVNF_RAM ,MDR ),( DDR / FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / ACS ) + Max( ACS,FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( MRS - FirstVNF_Mem ) ) ) ) ) ) ) / ( ( Max( ( ( Min( ( ARS - FirstVNF_CPU ) ,( AMS + MDR ) ) / Min( Min( FirstVNF_Mem_Server ,Const ) ,( RRS / ARS ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,CRS ),Min( DDR ,CRS ) ) / Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( MDR,DDR ) ) ) ),Max( ( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,( ACS - DDR ) ) / ( ( PN * FirstVNF_CPU ) * ( BR * FirstVNF_CPU_Server ) ) ),Min( ( Min( FirstVNF_Mem_Server ,CRS ) + ( RRS / FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM_Server ,Const ) + ( AMS / BR ) ) ) ) ) * ( ( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( AMS / DDR ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) / Max( ( ( MDR * PN ) + ( RRS - CRS ) ),( Max( PN,MRS ) * ( FirstVNF_Mem - RRS ) ) ) ) * Min( ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( PN * DDR ) ) + Min( Max( DDR,FirstVNF_CPU_Server ) ,Max( BR,ARS ) ) ) ,( Min( ( FirstVNF_RAM / Const ) ,( ACS / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) - ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem ) / ( Const * FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_RAM - MDR ) / ( FirstVNF_RAM / Const ) ) ,Max( ( Const - ACS ),Max( BR,FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( RRS + AMS ) + ( FirstVNF_RAM * BR ) ) / ( ( BR + ARS ) * ( BR / MDR ) ) ) - ( ( ( FirstVNF_CPU / DDR ) * ( AMS * ARS ) ) / ( Min( CRS ,AMS ) + ( CRS * MDR ) ) ) ) ) * ( Min( ( ( ( MDR / MRS ) + ( FirstVNF_RAM_Server / ACS ) ) / ( ( FirstVNF_Mem_Server * ACS ) / ( MRS / RRS ) ) ) ,( ( ( BR / MDR ) / ( AMS / FirstVNF_RAM_Server ) ) + ( ( BR / CRS ) + ( MRS - Const ) ) ) ) + ( Min( ( ( MRS / ARS ) + ( MDR + FirstVNF_Mem ) ) ,( Max( AMS,ACS ) * ( MRS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_CPU * Const ) * ( CRS * BR ) ) + ( ( MDR - ACS ) + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( Max( MUR,MLU ) * ( RMSe - CS ) ) + ( ( RMSe + DS ) * Max( RMSe,RRSe ) ) ) + ( ( ( RCSe * MUR ) / Max( CS,RMSe ) ) + Max( Max( RMSe,RCSe ),( RMSe / CS ) ) ) ) / ( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) / ( Min( MUM ,RMSe ) / Max( RRSe,MUM ) ) ) - ( Min( Max( RRSe,MUC ) ,( RRSe + RCSe ) ) * ( Min( MUC ,RMSe ) / Min( RRSe ,MLU ) ) ) ) ),( Min( ( ( Max( RMSe,MUM ) - ( MUM * MUC ) ) / ( Max( MUM,MLU ) + ( MLU / MLU ) ) ) ,( Min( ( RMSe * MUC ) ,Min( RCSe ,RCSe ) ) * ( Min( CS ,MUR ) * Max( RCSe,CS ) ) ) ) - ( ( ( Min( MUC ,RCSe ) / ( MUC - MLU ) ) * Max( Min( CS ,RRSe ),( RRSe - RMSe ) ) ) + Min( ( Min( RMSe ,RMSe ) * ( RMSe / MUC ) ) ,Min( Min( DS ,RRSe ) ,( MUR - MUC ) ) ) ) ) ) ,Max( ( ( ( Max( ( RCSe + MLU ),Min( CS ,CS ) ) * ( Min( DS ,MUM ) * Max( CS,DS ) ) ) + Min( ( ( MUR * MUM ) - ( RMSe * RMSe ) ) ,( ( MLU * RCSe ) - ( MUC + RRSe ) ) ) ) + Max( ( ( ( RCSe / MUC ) + ( DS / DS ) ) * Min( ( MLU - DS ) ,Max( RCSe,MLU ) ) ),( Max( ( MUC / DS ),( MLU + RMSe ) ) * Max( ( RRSe - DS ),( MUM + RRSe ) ) ) ) ),( ( Min( Min( Max( RMSe,DS ) ,( MUM - MLU ) ) ,( ( RCSe - RCSe ) / Min( MUM ,RRSe ) ) ) * ( ( ( RMSe - MLU ) / ( RMSe / DS ) ) - ( ( RMSe * RRSe ) + ( MUM - CS ) ) ) ) / Min( Max( ( ( DS * MUC ) * Min( RMSe ,MLU ) ),( ( MLU - RMSe ) + Min( RRSe ,RCSe ) ) ) ,( Min( ( MUR + MUM ) ,( CS / MLU ) ) + ( ( MUM + DS ) / ( RRSe - MUM ) ) ) ) ) ) ) - ( Max( ( ( ( ( Max( MUC,RRSe ) * ( CS + MUR ) ) * ( ( CS + DS ) + ( MUR * RCSe ) ) ) * ( Max( ( CS + MLU ),Max( RCSe,RCSe ) ) * ( ( RCSe * MUM ) / ( MUC * RMSe ) ) ) ) - Min( Max( ( Max( MUR,RMSe ) - ( MUM - RCSe ) ),( ( MUC * CS ) / Max( RRSe,DS ) ) ) ,( Max( ( RMSe - MUR ),Max( RRSe,RRSe ) ) / ( ( MUC / RRSe ) + ( MUM / DS ) ) ) ) ),( ( ( Min( Min( MUC ,RCSe ) ,( MUR * MUR ) ) / Max( ( RRSe - CS ),( CS + MUM ) ) ) / ( ( Min( RRSe ,CS ) + Min( DS ,RCSe ) ) + ( Max( MUR,RRSe ) - Max( RMSe,DS ) ) ) ) / ( Max( Min( Max( MLU,RRSe ) ,( MLU + RMSe ) ),( Max( DS,MUR ) / ( DS + RCSe ) ) ) + ( ( ( MLU - MLU ) + Max( RRSe,MUC ) ) + Min( ( MUM - CS ) ,( CS - MLU ) ) ) ) ) ) - Min( ( ( ( ( ( MUR - RCSe ) + Max( MUR,DS ) ) - Max( ( CS * DS ),( RRSe - RRSe ) ) ) / Max( ( Min( RCSe ,MUR ) - ( RRSe / MLU ) ),Max( Max( MLU,MUC ),Max( MLU,RCSe ) ) ) ) + Min( ( Max( ( MUC * RRSe ),Max( DS,CS ) ) * ( ( MUR - MUC ) / ( DS * RCSe ) ) ) ,Max( Min( Min( DS ,MUC ) ,( MUC * MUR ) ),( ( CS - MUM ) / Min( RCSe ,RCSe ) ) ) ) ) ,( ( ( Max( Min( MUM ,RMSe ),Max( DS,MLU ) ) / ( ( RCSe + MUM ) * ( MLU - CS ) ) ) / ( ( ( MUR - MUC ) * ( RRSe + DS ) ) * Min( Max( DS,MUM ) ,( MUM / MUR ) ) ) ) / ( ( Max( ( MUM / DS ),( MLU * RRSe ) ) - ( ( RCSe - DS ) / ( RMSe / MUR ) ) ) + ( Max( Min( RMSe ,DS ),Min( RMSe ,RMSe ) ) * ( ( MUR - RCSe ) * ( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.24172756571533124}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( ( RMSe - CS ) - ( RCSe - MUM ) )", "obj1": 0.8287401574803149, "obj2": 0.08717753792849653}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( PN + FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - Min( RCSe ,RRSe ) ) - DS ) - ( RCSe + DS ) )", "obj1": 0.15551181102362205, "obj2": 0.6192673384596002}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem / CRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS / MUM ) ,DS ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.3858267716535433, "obj2": 0.3981979117222705}, {"determining": "( ( PN + ( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) ) ) / ( AMS + PN ) )", "choosing": "( ( RMSe - CS ) - ( RCSe - ( Min( RRSe ,DS ) - ( RCSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.13670007457838843}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( PN / FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - DS ) - ( ( RCSe + DS ) + DS ) )", "obj1": 0.06496062992125984, "obj2": 0.7182193962669511}, {"determining": "( ( Max( AMS,PN ) - FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - DS ) - ( RCSe - ( RMSe / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.27986438233996247}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06516246078008177}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_Mem / CRS ) )", "choosing": "( Min( CS ,DS ) - Min( CS ,MUM ) )", "obj1": 0.33858267716535434, "obj2": 0.4362697577593328}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - Const ) / ( FirstVNF_Mem / CRS ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.7204724409448819, "obj2": 0.2014694635568106}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Const + FirstVNF_CPU ) ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - ( MLU + MLU ) )", "obj1": 0.4409448818897638, "obj2": 0.36498052553958293}, {"determining": "( ( FirstVNF_RAM * AMS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MLU + MUC ) ,( CS / MLU ) ) )", "obj1": 0.27755905511811024, "obj2": 0.476205644362377}, {"determining": "( Const / Max( Const,PN ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Max( RRS,( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( RRSe * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5486997036253211}, {"determining": "Min( ( ( ( ( Min( ( ( BR * PN ) - ( FirstVNF_CPU / ACS ) ) ,( ( FirstVNF_Mem * BR ) - ( ARS + ACS ) ) ) * ( ( ( Const + MRS ) - ( FirstVNF_RAM / PN ) ) - ( ( Const + DDR ) / ( Const / PN ) ) ) ) * Min( ( Min( ( FirstVNF_Mem / BR ) ,( FirstVNF_RAM_Server * CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) * Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( ( MDR / AMS ) * ( FirstVNF_RAM_Server / Const ) ) / ( ( ARS / MDR ) + ( Const + BR ) ) ) ) ) / ( ( Max( ( ( CRS * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MDR ) ),( ( MDR + FirstVNF_CPU_Server ) / ( MDR - CRS ) ) ) - Max( ( ( Const * RRS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),( Max( MRS,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( BR + RRS ) ) * ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - ( ( ( CRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,DDR ) ) + Min( ( ARS / PN ) ,Max( FirstVNF_RAM,RRS ) ) ) ) ) ) + Max( Min( ( Min( ( ( DDR * CRS ) - Min( PN ,RRS ) ) ,( Min( ARS ,CRS ) / ( FirstVNF_RAM_Server - AMS ) ) ) / Min( ( ( ARS + FirstVNF_RAM_Server ) + ( DDR / FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU * AMS ) ,( FirstVNF_Mem + BR ) ) ) ) ,( Min( ( Min( CRS ,DDR ) - ( BR * FirstVNF_Mem ) ) ,Min( ( BR * ACS ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( ( FirstVNF_Mem / MDR ) - ( Const / FirstVNF_RAM ) ) ,( ( Const * RRS ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ),( ( ( Min( Max( ARS,Const ) ,( BR * RRS ) ) - Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / PN ) ) ) / ( ( Max( FirstVNF_RAM_Server,DDR ) / Max( FirstVNF_RAM,Const ) ) * ( ( MRS / ACS ) - Min( MDR ,FirstVNF_RAM ) ) ) ) + Max( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * ( BR + PN ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( ARS - ARS ) ) ),Min( ( ( MDR * FirstVNF_Mem_Server ) * ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( ( ACS * ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,Min( Min( ( ( Min( Min( ( FirstVNF_Mem_Server + ACS ) ,( DDR + PN ) ) ,( ( ARS + BR ) + ( CRS - BR ) ) ) - ( ( ( ACS * ACS ) * ( MDR + FirstVNF_Mem_Server ) ) / ( Max( ARS,FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server * ACS ) - ( DDR / RRS ) ) + Max( ( MRS + FirstVNF_CPU ),Max( CRS,ARS ) ) ) + Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( ARS + FirstVNF_RAM ) ) ) ) ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / Min( MDR ,MRS ) ) * Max( ( BR + Const ),Max( MDR,FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_CPU_Server ,PN ) - Min( DDR ,MRS ) ) + ( ( AMS / CRS ) / ( FirstVNF_Mem - AMS ) ) ) ) / ( Max( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,Max( CRS,Const ) ),( ( MDR + RRS ) * ( Const * FirstVNF_Mem_Server ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( DDR - PN ) ) + ( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ,Min( Min( ( Min( ( ( MRS / Const ) + Max( MDR,AMS ) ) ,( ( FirstVNF_RAM_Server / AMS ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / ( FirstVNF_RAM + ARS ) ) * Min( ( RRS / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) ) ) ,( Max( Min( Max( FirstVNF_CPU_Server,MRS ) ,( DDR / ARS ) ),( ( CRS + CRS ) - ( FirstVNF_RAM - MRS ) ) ) * ( Max( Max( RRS,RRS ),( FirstVNF_CPU / FirstVNF_CPU ) ) + ( ( Const + DDR ) / ( CRS + DDR ) ) ) ) ) ,( Max( Max( ( Max( CRS,MDR ) - ( FirstVNF_CPU_Server + MDR ) ),( ( RRS - FirstVNF_CPU ) - ( RRS / FirstVNF_Mem_Server ) ) ),Max( ( ( CRS - PN ) - Min( ARS ,MRS ) ),( ( Const / DDR ) / ( DDR + Const ) ) ) ) + ( ( ( Min( ACS ,Const ) * Min( CRS ,MDR ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_RAM_Server - Const ) ) ) + ( Max( ( FirstVNF_RAM + CRS ),Max( DDR,RRS ) ) / Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( RRS / BR ) ) ) ) ) ) ) )", "choosing": "Max( Max( MUR,MUM ),Min( ( MUM - MUM ) ,( MUR + MUR ) ) )", "obj1": 0.9803149606299213, "obj2": 0.008912106429707578}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) / ( AMS * PN ) ) - ( ( FirstVNF_RAM_Server - RRS ) / Max( PN,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MUR ) + Min( RMSe ,RCSe ) )", "obj1": 0.9586614173228346, "obj2": 0.028926254112371135}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04718564131795197}, {"determining": "( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * PN ) )", "choosing": "( ( RCSe - DS ) - ( RCSe + DS ) )", "obj1": 0.0531496062992126, "obj2": 0.7330174529041638}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( FirstVNF_Mem / ( FirstVNF_Mem + RRS ) )", "choosing": "( ( ( RCSe / RMSe ) - ( RCSe - ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ) - ( RCSe - MLU ) )", "obj1": 0.07480314960629922, "obj2": 0.6508512769425179}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( Min( CS ,MUC ) * ( Min( RCSe ,RCSe ) / MLU ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5060057182579616}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - RRSe ) - Min( MLU ,RCSe ) ) - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5257276212170594}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5152169451467375}, {"determining": "( ( Const - Const ) / ( FirstVNF_Mem / CRS ) )", "choosing": "( Min( MUC ,DS ) - ( MLU - MLU ) )", "obj1": 0.7066929133858267, "obj2": 0.2187050298387632}, {"determining": "( ( Const - Const ) / ( FirstVNF_Mem / ARS ) )", "choosing": "Min( ( MLU / MUM ) ,DS )", "obj1": 0.7007874015748031, "obj2": 0.22367544055680738}, {"determining": "Max( ( MDR - FirstVNF_CPU ),Max( ACS,AMS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MLU ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6417527005736131}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}], "14": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( FirstVNF_RAM * PN ) ) )", "choosing": "( ( RMSe - DS ) - RMSe )", "obj1": 0.045275590551181105, "obj2": 0.7406735341274203}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "( ( ( Max( ( ( ( ( AMS * FirstVNF_CPU_Server ) - ( PN - AMS ) ) / Max( ( RRS - ACS ),( BR * DDR ) ) ) * ( ( ( CRS - FirstVNF_RAM_Server ) + ( MRS * RRS ) ) - ( ( CRS / PN ) * ( PN + FirstVNF_CPU_Server ) ) ) ),( Min( ( ( ACS / MDR ) - ( ARS - ARS ) ) ,( ( PN - RRS ) / ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server - PN ) * Min( ACS ,FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * Min( DDR ,Const ) ) ) ) ) * ( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Min( CRS ,MDR ) ) / ( Max( MRS,ACS ) - Max( ARS,RRS ) ) ) ,( ( ( MRS + BR ) - ( ARS / ACS ) ) * ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_RAM / DDR ) ) ) ) / ( ( ( ( CRS * CRS ) + ( MRS / ACS ) ) + ( Max( MRS,FirstVNF_Mem_Server ) - Max( AMS,ARS ) ) ) * ( Min( Max( MRS,BR ) ,( CRS + DDR ) ) / ( ( MDR / FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) ) * Max( Min( ( ( ( ( MRS + FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) ) * ( ( DDR / FirstVNF_RAM_Server ) - Min( AMS ,RRS ) ) ) / ( ( Max( RRS,MDR ) + ( FirstVNF_RAM + BR ) ) - Max( ( RRS + DDR ),( ACS / CRS ) ) ) ) ,( ( ( Min( Const ,BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,MRS ) * Min( BR ,AMS ) ) ) + Max( ( ( AMS + DDR ) * ( BR * ACS ) ),Max( Min( AMS ,FirstVNF_RAM ),Max( AMS,CRS ) ) ) ) ),Max( Min( Min( ( ( FirstVNF_RAM - DDR ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ,( ( PN / ACS ) / ( FirstVNF_CPU_Server - MDR ) ) ) ,( Min( Min( ARS ,MRS ) ,Min( MRS ,CRS ) ) - ( Max( AMS,MDR ) - ( FirstVNF_Mem_Server + RRS ) ) ) ),( ( ( ( RRS - FirstVNF_RAM ) + Max( BR,CRS ) ) * Max( Min( FirstVNF_RAM ,MDR ),( DDR / FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / ACS ) + Max( ACS,FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( MRS - FirstVNF_Mem ) ) ) ) ) ) ) / ( ( Max( ( ( Min( ( ARS - FirstVNF_CPU ) ,( AMS + MDR ) ) / Min( Min( FirstVNF_Mem_Server ,Const ) ,( RRS / ARS ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,CRS ),Min( DDR ,CRS ) ) / Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( MDR,DDR ) ) ) ),Max( ( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,( ACS - DDR ) ) / ( ( PN * FirstVNF_CPU ) * ( BR * FirstVNF_CPU_Server ) ) ),Min( ( Min( FirstVNF_Mem_Server ,CRS ) + ( RRS / FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM_Server ,Const ) + ( AMS / BR ) ) ) ) ) * ( ( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( AMS / DDR ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) / Max( ( ( MDR * PN ) + ( RRS - CRS ) ),( Max( PN,MRS ) * ( FirstVNF_Mem - RRS ) ) ) ) * Min( ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( PN * DDR ) ) + Min( Max( DDR,FirstVNF_CPU_Server ) ,Max( BR,ARS ) ) ) ,( Min( ( FirstVNF_RAM / Const ) ,( ACS / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) - ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem ) / ( Const * FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_RAM - MDR ) / ( FirstVNF_RAM / Const ) ) ,Max( ( Const - ACS ),Max( BR,FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( RRS + AMS ) + ( FirstVNF_RAM * BR ) ) / ( ( BR + ARS ) * ( BR / MDR ) ) ) - ( ( ( FirstVNF_CPU / DDR ) * ( AMS * ARS ) ) / ( Min( CRS ,AMS ) + ( CRS * MDR ) ) ) ) ) * ( Min( ( ( ( MDR / MRS ) + ( FirstVNF_RAM_Server / ACS ) ) / ( ( FirstVNF_Mem_Server * ACS ) / ( MRS / RRS ) ) ) ,( ( ( BR / MDR ) / ( AMS / FirstVNF_RAM_Server ) ) + ( ( BR / CRS ) + ( MRS - Const ) ) ) ) + ( Min( ( ( MRS / ARS ) + ( MDR + FirstVNF_Mem ) ) ,( Max( AMS,ACS ) * ( MRS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_CPU * Const ) * ( CRS * BR ) ) + ( ( MDR - ACS ) + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( Max( MUR,MLU ) * ( RMSe - CS ) ) + ( ( RMSe + DS ) * Max( RMSe,RRSe ) ) ) + ( ( ( RCSe * MUR ) / Max( CS,RMSe ) ) + Max( Max( RMSe,RCSe ),( RMSe / CS ) ) ) ) / ( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) / ( Min( MUM ,RMSe ) / Max( RRSe,MUM ) ) ) - ( Min( Max( RRSe,MUC ) ,( RRSe + RCSe ) ) * ( Min( MUC ,RMSe ) / Min( RRSe ,MLU ) ) ) ) ),( Min( ( ( Max( RMSe,MUM ) - ( MUM * MUC ) ) / ( Max( MUM,MLU ) + ( MLU / MLU ) ) ) ,( Min( ( RMSe * MUC ) ,Min( RCSe ,RCSe ) ) * ( Min( CS ,MUR ) * Max( RCSe,CS ) ) ) ) - ( ( ( Min( MUC ,RCSe ) / ( MUC - MLU ) ) * Max( Min( CS ,RRSe ),( RRSe - RMSe ) ) ) + Min( ( Min( RMSe ,RMSe ) * ( RMSe / MUC ) ) ,Min( Min( DS ,RRSe ) ,( MUR - MUC ) ) ) ) ) ) ,Max( ( ( ( Max( ( RCSe + MLU ),Min( CS ,CS ) ) * ( Min( DS ,MUM ) * Max( CS,DS ) ) ) + Min( ( ( MUR * MUM ) - ( RMSe * RMSe ) ) ,( ( MLU * RCSe ) - ( MUC + RRSe ) ) ) ) + Max( ( ( ( RCSe / MUC ) + ( DS / DS ) ) * Min( ( MLU - DS ) ,Max( RCSe,MLU ) ) ),( Max( ( MUC / DS ),( MLU + RMSe ) ) * Max( ( RRSe - DS ),( MUM + RRSe ) ) ) ) ),( ( Min( Min( Max( RMSe,DS ) ,( MUM - MLU ) ) ,( ( RCSe - RCSe ) / Min( MUM ,RRSe ) ) ) * ( ( ( RMSe - MLU ) / ( RMSe / DS ) ) - ( ( RMSe * RRSe ) + ( MUM - CS ) ) ) ) / Min( Max( ( ( DS * MUC ) * Min( RMSe ,MLU ) ),( ( MLU - RMSe ) + Min( RRSe ,RCSe ) ) ) ,( Min( ( MUR + MUM ) ,( CS / MLU ) ) + ( ( MUM + DS ) / ( RRSe - MUM ) ) ) ) ) ) ) - ( Max( ( ( ( ( Max( MUC,RRSe ) * ( CS + MUR ) ) * ( ( CS + DS ) + ( MUR * RCSe ) ) ) * ( Max( ( CS + MLU ),Max( RCSe,RCSe ) ) * ( ( RCSe * MUM ) / ( MUC * RMSe ) ) ) ) - Min( Max( ( Max( MUR,RMSe ) - ( MUM - RCSe ) ),( ( MUC * CS ) / Max( RRSe,DS ) ) ) ,( Max( ( RMSe - MUR ),Max( RRSe,RRSe ) ) / ( ( MUC / RRSe ) + ( MUM / DS ) ) ) ) ),( ( ( Min( Min( MUC ,RCSe ) ,( MUR * MUR ) ) / Max( ( RRSe - CS ),( CS + MUM ) ) ) / ( ( Min( RRSe ,CS ) + Min( DS ,RCSe ) ) + ( Max( MUR,RRSe ) - Max( RMSe,DS ) ) ) ) / ( Max( Min( Max( MLU,RRSe ) ,( MLU + RMSe ) ),( Max( DS,MUR ) / ( DS + RCSe ) ) ) + ( ( ( MLU - MLU ) + Max( RRSe,MUC ) ) + Min( ( MUM - CS ) ,( CS - MLU ) ) ) ) ) ) - Min( ( ( ( ( ( MUR - RCSe ) + Max( MUR,DS ) ) - Max( ( CS * DS ),( RRSe - RRSe ) ) ) / Max( ( Min( RCSe ,MUR ) - ( RRSe / MLU ) ),Max( Max( MLU,MUC ),Max( MLU,RCSe ) ) ) ) + Min( ( Max( ( MUC * RRSe ),Max( DS,CS ) ) * ( ( MUR - MUC ) / ( DS * RCSe ) ) ) ,Max( Min( Min( DS ,MUC ) ,( MUC * MUR ) ),( ( CS - MUM ) / Min( RCSe ,RCSe ) ) ) ) ) ,( ( ( Max( Min( MUM ,RMSe ),Max( DS,MLU ) ) / ( ( RCSe + MUM ) * ( MLU - CS ) ) ) / ( ( ( MUR - MUC ) * ( RRSe + DS ) ) * Min( Max( DS,MUM ) ,( MUM / MUR ) ) ) ) / ( ( Max( ( MUM / DS ),( MLU * RRSe ) ) - ( ( RCSe - DS ) / ( RMSe / MUR ) ) ) + ( Max( Min( RMSe ,DS ),Min( RMSe ,RMSe ) ) * ( ( MUR - RCSe ) * ( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.24172756571533124}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( ( RMSe - CS ) - ( RCSe - MUM ) )", "obj1": 0.8287401574803149, "obj2": 0.08717753792849653}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem / CRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS / MUM ) ,DS ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.3858267716535433, "obj2": 0.3981979117222705}, {"determining": "( ( PN + ( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) ) ) / ( AMS + PN ) )", "choosing": "( ( RMSe - CS ) - ( RCSe - ( Min( RRSe ,DS ) - ( RCSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.13670007457838843}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / FirstVNF_RAM )", "choosing": "( ( ( MUM - DS ) - DS ) - ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6755550325304254}, {"determining": "( ( Max( AMS,PN ) - FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - DS ) - ( RCSe - ( RMSe / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.27986438233996247}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06516246078008177}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * PN ) )", "choosing": "( ( RCSe - DS ) - ( RCSe + DS ) )", "obj1": 0.0531496062992126, "obj2": 0.7330174529041638}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_Mem / CRS ) )", "choosing": "( Min( CS ,DS ) - Min( CS ,MUM ) )", "obj1": 0.33858267716535434, "obj2": 0.4362697577593328}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( Const - Const ) / ( FirstVNF_Mem / ARS ) )", "choosing": "Min( ( MLU / MUM ) ,DS )", "obj1": 0.7007874015748031, "obj2": 0.22367544055680738}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( RRS * ( PN - FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( DS / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) / ( ( RMSe / CS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.6108529839474951}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Const + FirstVNF_CPU ) ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - ( MLU + MLU ) )", "obj1": 0.4409448818897638, "obj2": 0.36498052553958293}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "Max( ( MDR - FirstVNF_CPU ),Max( ACS,AMS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MLU ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6417527005736131}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - Const ) / ( FirstVNF_Mem / CRS ) )", "choosing": "Min( Min( CS ,DS ) ,DS )", "obj1": 0.7204724409448819, "obj2": 0.2014694635568106}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Max( RRS,( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( RRSe * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5486997036253211}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) + ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5568546597464509}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.48593024892771003}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) / ( AMS * PN ) ) - ( ( FirstVNF_RAM_Server - RRS ) / Max( PN,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MUR ) + Min( RMSe ,RCSe ) )", "obj1": 0.9586614173228346, "obj2": 0.028926254112371135}, {"determining": "( FirstVNF_Mem / ( FirstVNF_Mem + RRS ) )", "choosing": "( ( ( RCSe / RMSe ) - ( RCSe - ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ) - ( RCSe - MLU ) )", "obj1": 0.07480314960629922, "obj2": 0.6508512769425179}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * CRS ) / ( Const * FirstVNF_Mem ) ) ,( Min( Const ,BR ) - ( MDR / MRS ) ) ) / Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( PN / FirstVNF_Mem_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( Const - ARS ) ) ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( DS / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) * ( ( RMSe / CS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.6115193453940303}, {"determining": "( Const / Max( Const,PN ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04718564131795197}, {"determining": "( ( ARS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( Min( DS ,MUR ) + ( RMSe - ( ( CS - MUM ) - Max( MLU,RRSe ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.20226589642295}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "Min( ( ( ( ( Min( ( ( BR * PN ) - ( FirstVNF_CPU / ACS ) ) ,( ( FirstVNF_Mem * BR ) - ( ARS + ACS ) ) ) * ( ( ( Const + MRS ) - ( FirstVNF_RAM / PN ) ) - ( ( Const + DDR ) / ( Const / PN ) ) ) ) * Min( ( Min( ( FirstVNF_Mem / BR ) ,( FirstVNF_RAM_Server * CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) * Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( ( MDR / AMS ) * ( FirstVNF_RAM_Server / Const ) ) / ( ( ARS / MDR ) + ( Const + BR ) ) ) ) ) / ( ( Max( ( ( CRS * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MDR ) ),( ( MDR + FirstVNF_CPU_Server ) / ( MDR - CRS ) ) ) - Max( ( ( Const * RRS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),( Max( MRS,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( BR + RRS ) ) * ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - ( ( ( CRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,DDR ) ) + Min( ( ARS / PN ) ,Max( FirstVNF_RAM,RRS ) ) ) ) ) ) + Max( Min( ( Min( ( ( DDR * CRS ) - Min( PN ,RRS ) ) ,( Min( ARS ,CRS ) / ( FirstVNF_RAM_Server - AMS ) ) ) / Min( ( ( ARS + FirstVNF_RAM_Server ) + ( DDR / FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU * AMS ) ,( FirstVNF_Mem + BR ) ) ) ) ,( Min( ( Min( CRS ,DDR ) - ( BR * FirstVNF_Mem ) ) ,Min( ( BR * ACS ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( ( FirstVNF_Mem / MDR ) - ( Const / FirstVNF_RAM ) ) ,( ( Const * RRS ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ),( ( ( Min( Max( ARS,Const ) ,( BR * RRS ) ) - Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / PN ) ) ) / ( ( Max( FirstVNF_RAM_Server,DDR ) / Max( FirstVNF_RAM,Const ) ) * ( ( MRS / ACS ) - Min( MDR ,FirstVNF_RAM ) ) ) ) + Max( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * ( BR + PN ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( ARS - ARS ) ) ),Min( ( ( MDR * FirstVNF_Mem_Server ) * ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( ( ACS * ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,Min( Min( ( ( Min( Min( ( FirstVNF_Mem_Server + ACS ) ,( DDR + PN ) ) ,( ( ARS + BR ) + ( CRS - BR ) ) ) - ( ( ( ACS * ACS ) * ( MDR + FirstVNF_Mem_Server ) ) / ( Max( ARS,FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server * ACS ) - ( DDR / RRS ) ) + Max( ( MRS + FirstVNF_CPU ),Max( CRS,ARS ) ) ) + Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( ARS + FirstVNF_RAM ) ) ) ) ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / Min( MDR ,MRS ) ) * Max( ( BR + Const ),Max( MDR,FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_CPU_Server ,PN ) - Min( DDR ,MRS ) ) + ( ( AMS / CRS ) / ( FirstVNF_Mem - AMS ) ) ) ) / ( Max( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,Max( CRS,Const ) ),( ( MDR + RRS ) * ( Const * FirstVNF_Mem_Server ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( DDR - PN ) ) + ( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ,Min( Min( ( Min( ( ( MRS / Const ) + Max( MDR,AMS ) ) ,( ( FirstVNF_RAM_Server / AMS ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / ( FirstVNF_RAM + ARS ) ) * Min( ( RRS / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) ) ) ,( Max( Min( Max( FirstVNF_CPU_Server,MRS ) ,( DDR / ARS ) ),( ( CRS + CRS ) - ( FirstVNF_RAM - MRS ) ) ) * ( Max( Max( RRS,RRS ),( FirstVNF_CPU / FirstVNF_CPU ) ) + ( ( Const + DDR ) / ( CRS + DDR ) ) ) ) ) ,( Max( Max( ( Max( CRS,MDR ) - ( FirstVNF_CPU_Server + MDR ) ),( ( RRS - FirstVNF_CPU ) - ( RRS / FirstVNF_Mem_Server ) ) ),Max( ( ( CRS - PN ) - Min( ARS ,MRS ) ),( ( Const / DDR ) / ( DDR + Const ) ) ) ) + ( ( ( Min( ACS ,Const ) * Min( CRS ,MDR ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_RAM_Server - Const ) ) ) + ( Max( ( FirstVNF_RAM + CRS ),Max( DDR,RRS ) ) / Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( RRS / BR ) ) ) ) ) ) ) )", "choosing": "Max( Max( MUR,MUM ),Min( ( MUM - MUM ) ,( MUR + MUR ) ) )", "obj1": 0.9803149606299213, "obj2": 0.008912106429707578}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( Min( CS ,MUC ) * ( Min( RCSe ,RCSe ) / MLU ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5060057182579616}, {"determining": "( Const / Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( ( RMSe / RMSe ) - ( RCSe - MLU ) ) - ( ( CS + CS ) - DS ) )", "obj1": 0.2795275590551181, "obj2": 0.4751516417097615}, {"determining": "( ( FirstVNF_RAM * AMS ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MLU + MUC ) ,( CS / MLU ) ) )", "obj1": 0.27755905511811024, "obj2": 0.476205644362377}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}], "15": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( FirstVNF_RAM * PN ) ) )", "choosing": "( ( RMSe - DS ) - RMSe )", "obj1": 0.045275590551181105, "obj2": 0.7406735341274203}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "( ( AMS - ( Min( CRS ,FirstVNF_CPU_Server ) / ( PN * PN ) ) ) / Min( AMS ,AMS ) )", "choosing": "( Min( RRSe ,DS ) - ( Min( RMSe ,RMSe ) * ( RMSe - MLU ) ) )", "obj1": 0.6929133858267716, "obj2": 0.19995179795622994}, {"determining": "( ( ( Max( ( ( ( ( AMS * FirstVNF_CPU_Server ) - ( PN - AMS ) ) / Max( ( RRS - ACS ),( BR * DDR ) ) ) * ( ( ( CRS - FirstVNF_RAM_Server ) + ( MRS * RRS ) ) - ( ( CRS / PN ) * ( PN + FirstVNF_CPU_Server ) ) ) ),( Min( ( ( ACS / MDR ) - ( ARS - ARS ) ) ,( ( PN - RRS ) / ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server - PN ) * Min( ACS ,FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * Min( DDR ,Const ) ) ) ) ) * ( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Min( CRS ,MDR ) ) / ( Max( MRS,ACS ) - Max( ARS,RRS ) ) ) ,( ( ( MRS + BR ) - ( ARS / ACS ) ) * ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_RAM / DDR ) ) ) ) / ( ( ( ( CRS * CRS ) + ( MRS / ACS ) ) + ( Max( MRS,FirstVNF_Mem_Server ) - Max( AMS,ARS ) ) ) * ( Min( Max( MRS,BR ) ,( CRS + DDR ) ) / ( ( MDR / FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) ) * Max( Min( ( ( ( ( MRS + FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) ) * ( ( DDR / FirstVNF_RAM_Server ) - Min( AMS ,RRS ) ) ) / ( ( Max( RRS,MDR ) + ( FirstVNF_RAM + BR ) ) - Max( ( RRS + DDR ),( ACS / CRS ) ) ) ) ,( ( ( Min( Const ,BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,MRS ) * Min( BR ,AMS ) ) ) + Max( ( ( AMS + DDR ) * ( BR * ACS ) ),Max( Min( AMS ,FirstVNF_RAM ),Max( AMS,CRS ) ) ) ) ),Max( Min( Min( ( ( FirstVNF_RAM - DDR ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ,( ( PN / ACS ) / ( FirstVNF_CPU_Server - MDR ) ) ) ,( Min( Min( ARS ,MRS ) ,Min( MRS ,CRS ) ) - ( Max( AMS,MDR ) - ( FirstVNF_Mem_Server + RRS ) ) ) ),( ( ( ( RRS - FirstVNF_RAM ) + Max( BR,CRS ) ) * Max( Min( FirstVNF_RAM ,MDR ),( DDR / FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / ACS ) + Max( ACS,FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( MRS - FirstVNF_Mem ) ) ) ) ) ) ) / ( ( Max( ( ( Min( ( ARS - FirstVNF_CPU ) ,( AMS + MDR ) ) / Min( Min( FirstVNF_Mem_Server ,Const ) ,( RRS / ARS ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,CRS ),Min( DDR ,CRS ) ) / Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( MDR,DDR ) ) ) ),Max( ( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,( ACS - DDR ) ) / ( ( PN * FirstVNF_CPU ) * ( BR * FirstVNF_CPU_Server ) ) ),Min( ( Min( FirstVNF_Mem_Server ,CRS ) + ( RRS / FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM_Server ,Const ) + ( AMS / BR ) ) ) ) ) * ( ( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( AMS / DDR ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) / Max( ( ( MDR * PN ) + ( RRS - CRS ) ),( Max( PN,MRS ) * ( FirstVNF_Mem - RRS ) ) ) ) * Min( ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( PN * DDR ) ) + Min( Max( DDR,FirstVNF_CPU_Server ) ,Max( BR,ARS ) ) ) ,( Min( ( FirstVNF_RAM / Const ) ,( ACS / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) - ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem ) / ( Const * FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_RAM - MDR ) / ( FirstVNF_RAM / Const ) ) ,Max( ( Const - ACS ),Max( BR,FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( RRS + AMS ) + ( FirstVNF_RAM * BR ) ) / ( ( BR + ARS ) * ( BR / MDR ) ) ) - ( ( ( FirstVNF_CPU / DDR ) * ( AMS * ARS ) ) / ( Min( CRS ,AMS ) + ( CRS * MDR ) ) ) ) ) * ( Min( ( ( ( MDR / MRS ) + ( FirstVNF_RAM_Server / ACS ) ) / ( ( FirstVNF_Mem_Server * ACS ) / ( MRS / RRS ) ) ) ,( ( ( BR / MDR ) / ( AMS / FirstVNF_RAM_Server ) ) + ( ( BR / CRS ) + ( MRS - Const ) ) ) ) + ( Min( ( ( MRS / ARS ) + ( MDR + FirstVNF_Mem ) ) ,( Max( AMS,ACS ) * ( MRS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_CPU * Const ) * ( CRS * BR ) ) + ( ( MDR - ACS ) + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( Max( MUR,MLU ) * ( RMSe - CS ) ) + ( ( RMSe + DS ) * Max( RMSe,RRSe ) ) ) + ( ( ( RCSe * MUR ) / Max( CS,RMSe ) ) + Max( Max( RMSe,RCSe ),( RMSe / CS ) ) ) ) / ( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) / ( Min( MUM ,RMSe ) / Max( RRSe,MUM ) ) ) - ( Min( Max( RRSe,MUC ) ,( RRSe + RCSe ) ) * ( Min( MUC ,RMSe ) / Min( RRSe ,MLU ) ) ) ) ),( Min( ( ( Max( RMSe,MUM ) - ( MUM * MUC ) ) / ( Max( MUM,MLU ) + ( MLU / MLU ) ) ) ,( Min( ( RMSe * MUC ) ,Min( RCSe ,RCSe ) ) * ( Min( CS ,MUR ) * Max( RCSe,CS ) ) ) ) - ( ( ( Min( MUC ,RCSe ) / ( MUC - MLU ) ) * Max( Min( CS ,RRSe ),( RRSe - RMSe ) ) ) + Min( ( Min( RMSe ,RMSe ) * ( RMSe / MUC ) ) ,Min( Min( DS ,RRSe ) ,( MUR - MUC ) ) ) ) ) ) ,Max( ( ( ( Max( ( RCSe + MLU ),Min( CS ,CS ) ) * ( Min( DS ,MUM ) * Max( CS,DS ) ) ) + Min( ( ( MUR * MUM ) - ( RMSe * RMSe ) ) ,( ( MLU * RCSe ) - ( MUC + RRSe ) ) ) ) + Max( ( ( ( RCSe / MUC ) + ( DS / DS ) ) * Min( ( MLU - DS ) ,Max( RCSe,MLU ) ) ),( Max( ( MUC / DS ),( MLU + RMSe ) ) * Max( ( RRSe - DS ),( MUM + RRSe ) ) ) ) ),( ( Min( Min( Max( RMSe,DS ) ,( MUM - MLU ) ) ,( ( RCSe - RCSe ) / Min( MUM ,RRSe ) ) ) * ( ( ( RMSe - MLU ) / ( RMSe / DS ) ) - ( ( RMSe * RRSe ) + ( MUM - CS ) ) ) ) / Min( Max( ( ( DS * MUC ) * Min( RMSe ,MLU ) ),( ( MLU - RMSe ) + Min( RRSe ,RCSe ) ) ) ,( Min( ( MUR + MUM ) ,( CS / MLU ) ) + ( ( MUM + DS ) / ( RRSe - MUM ) ) ) ) ) ) ) - ( Max( ( ( ( ( Max( MUC,RRSe ) * ( CS + MUR ) ) * ( ( CS + DS ) + ( MUR * RCSe ) ) ) * ( Max( ( CS + MLU ),Max( RCSe,RCSe ) ) * ( ( RCSe * MUM ) / ( MUC * RMSe ) ) ) ) - Min( Max( ( Max( MUR,RMSe ) - ( MUM - RCSe ) ),( ( MUC * CS ) / Max( RRSe,DS ) ) ) ,( Max( ( RMSe - MUR ),Max( RRSe,RRSe ) ) / ( ( MUC / RRSe ) + ( MUM / DS ) ) ) ) ),( ( ( Min( Min( MUC ,RCSe ) ,( MUR * MUR ) ) / Max( ( RRSe - CS ),( CS + MUM ) ) ) / ( ( Min( RRSe ,CS ) + Min( DS ,RCSe ) ) + ( Max( MUR,RRSe ) - Max( RMSe,DS ) ) ) ) / ( Max( Min( Max( MLU,RRSe ) ,( MLU + RMSe ) ),( Max( DS,MUR ) / ( DS + RCSe ) ) ) + ( ( ( MLU - MLU ) + Max( RRSe,MUC ) ) + Min( ( MUM - CS ) ,( CS - MLU ) ) ) ) ) ) - Min( ( ( ( ( ( MUR - RCSe ) + Max( MUR,DS ) ) - Max( ( CS * DS ),( RRSe - RRSe ) ) ) / Max( ( Min( RCSe ,MUR ) - ( RRSe / MLU ) ),Max( Max( MLU,MUC ),Max( MLU,RCSe ) ) ) ) + Min( ( Max( ( MUC * RRSe ),Max( DS,CS ) ) * ( ( MUR - MUC ) / ( DS * RCSe ) ) ) ,Max( Min( Min( DS ,MUC ) ,( MUC * MUR ) ),( ( CS - MUM ) / Min( RCSe ,RCSe ) ) ) ) ) ,( ( ( Max( Min( MUM ,RMSe ),Max( DS,MLU ) ) / ( ( RCSe + MUM ) * ( MLU - CS ) ) ) / ( ( ( MUR - MUC ) * ( RRSe + DS ) ) * Min( Max( DS,MUM ) ,( MUM / MUR ) ) ) ) / ( ( Max( ( MUM / DS ),( MLU * RRSe ) ) - ( ( RCSe - DS ) / ( RMSe / MUR ) ) ) + ( Max( Min( RMSe ,DS ),Min( RMSe ,RMSe ) ) * ( ( MUR - RCSe ) * ( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.24172756571533124}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem / CRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS / MUM ) ,DS ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.3858267716535433, "obj2": 0.3981979117222705}, {"determining": "( ( PN + ( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) ) ) / ( AMS + PN ) )", "choosing": "( ( RMSe - CS ) - ( RCSe - ( Min( RRSe ,DS ) - ( RCSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.13670007457838843}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( ( RMSe - CS ) - ( RCSe - MUM ) )", "obj1": 0.8287401574803149, "obj2": 0.08717753792849653}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "( ( Max( AMS,PN ) - FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - DS ) - ( RCSe - ( RMSe / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.27986438233996247}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_Mem / CRS ) )", "choosing": "( Min( CS ,DS ) - Min( CS ,MUM ) )", "obj1": 0.33858267716535434, "obj2": 0.4362697577593328}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / FirstVNF_RAM )", "choosing": "( ( ( MUM - DS ) - DS ) - ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6755550325304254}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "Max( Max( ( PN - FirstVNF_CPU_Server ),( AMS * FirstVNF_Mem_Server ) ),( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - DS ) - DS ) - ( RCSe - MUR ) )", "obj1": 0.05708661417322835, "obj2": 0.7212222857925595}, {"determining": "Max( ( PN * BR ),( CRS - Max( CRS,CRS ) ) )", "choosing": "( MUR / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( Min( CS ,MUC ) * ( Min( RCSe ,RCSe ) / MLU ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5060057182579616}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( RMSe - ( RCSe - RMSe ) )", "obj1": 0.7263779527559056, "obj2": 0.17354171559625015}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06516246078008177}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Min( ( ( ( ( Min( ( ( BR * PN ) - ( FirstVNF_CPU / ACS ) ) ,( ( FirstVNF_Mem * BR ) - ( ARS + ACS ) ) ) * ( ( ( Const + MRS ) - ( FirstVNF_RAM / PN ) ) - ( ( Const + DDR ) / ( Const / PN ) ) ) ) * Min( ( Min( ( FirstVNF_Mem / BR ) ,( FirstVNF_RAM_Server * CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) * Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( ( MDR / AMS ) * ( FirstVNF_RAM_Server / Const ) ) / ( ( ARS / MDR ) + ( Const + BR ) ) ) ) ) / ( ( Max( ( ( CRS * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MDR ) ),( ( MDR + FirstVNF_CPU_Server ) / ( MDR - CRS ) ) ) - Max( ( ( Const * RRS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),( Max( MRS,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( BR + RRS ) ) * ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - ( ( ( CRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,DDR ) ) + Min( ( ARS / PN ) ,Max( FirstVNF_RAM,RRS ) ) ) ) ) ) + Max( Min( ( Min( ( ( DDR * CRS ) - Min( PN ,RRS ) ) ,( Min( ARS ,CRS ) / ( FirstVNF_RAM_Server - AMS ) ) ) / Min( ( ( ARS + FirstVNF_RAM_Server ) + ( DDR / FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU * AMS ) ,( FirstVNF_Mem + BR ) ) ) ) ,( Min( ( Min( CRS ,DDR ) - ( BR * FirstVNF_Mem ) ) ,Min( ( BR * ACS ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( ( FirstVNF_Mem / MDR ) - ( Const / FirstVNF_RAM ) ) ,( ( Const * RRS ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ),( ( ( Min( Max( ARS,Const ) ,( BR * RRS ) ) - Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / PN ) ) ) / ( ( Max( FirstVNF_RAM_Server,DDR ) / Max( FirstVNF_RAM,Const ) ) * ( ( MRS / ACS ) - Min( MDR ,FirstVNF_RAM ) ) ) ) + Max( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * ( BR + PN ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( ARS - ARS ) ) ),Min( ( ( MDR * FirstVNF_Mem_Server ) * ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( ( ACS * ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,Min( Min( ( ( Min( Min( ( FirstVNF_Mem_Server + ACS ) ,( DDR + PN ) ) ,( ( ARS + BR ) + ( CRS - BR ) ) ) - ( ( ( ACS * ACS ) * ( MDR + FirstVNF_Mem_Server ) ) / ( Max( ARS,FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server * ACS ) - ( DDR / RRS ) ) + Max( ( MRS + FirstVNF_CPU ),Max( CRS,ARS ) ) ) + Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( ARS + FirstVNF_RAM ) ) ) ) ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / Min( MDR ,MRS ) ) * Max( ( BR + Const ),Max( MDR,FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_CPU_Server ,PN ) - Min( DDR ,MRS ) ) + ( ( AMS / CRS ) / ( FirstVNF_Mem - AMS ) ) ) ) / ( Max( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,Max( CRS,Const ) ),( ( MDR + RRS ) * ( Const * FirstVNF_Mem_Server ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( DDR - PN ) ) + ( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ,Min( Min( ( Min( ( ( MRS / Const ) + Max( MDR,AMS ) ) ,( ( FirstVNF_RAM_Server / AMS ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / ( FirstVNF_RAM + ARS ) ) * Min( ( RRS / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) ) ) ,( Max( Min( Max( FirstVNF_CPU_Server,MRS ) ,( DDR / ARS ) ),( ( CRS + CRS ) - ( FirstVNF_RAM - MRS ) ) ) * ( Max( Max( RRS,RRS ),( FirstVNF_CPU / FirstVNF_CPU ) ) + ( ( Const + DDR ) / ( CRS + DDR ) ) ) ) ) ,( Max( Max( ( Max( CRS,MDR ) - ( FirstVNF_CPU_Server + MDR ) ),( ( RRS - FirstVNF_CPU ) - ( RRS / FirstVNF_Mem_Server ) ) ),Max( ( ( CRS - PN ) - Min( ARS ,MRS ) ),( ( Const / DDR ) / ( DDR + Const ) ) ) ) + ( ( ( Min( ACS ,Const ) * Min( CRS ,MDR ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_RAM_Server - Const ) ) ) + ( Max( ( FirstVNF_RAM + CRS ),Max( DDR,RRS ) ) / Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( RRS / BR ) ) ) ) ) ) ) )", "choosing": "Max( Max( MUR,MUM ),Min( ( MUM - MUM ) ,( MUR + MUR ) ) )", "obj1": 0.9803149606299213, "obj2": 0.008912106429707578}, {"determining": "( ( ARS - FirstVNF_CPU_Server ) / ( Min( BR ,MRS ) - ( ( FirstVNF_RAM_Server - RRS ) / Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,DS ) - CS )", "obj1": 0.844488188976378, "obj2": 0.07343826269680742}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) / ( AMS * PN ) ) - ( ( FirstVNF_RAM_Server - RRS ) / Max( PN,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MUR ) + Min( RMSe ,RCSe ) )", "obj1": 0.9586614173228346, "obj2": 0.028926254112371135}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( PN + FirstVNF_RAM ) / ( AMS + PN ) ) )", "choosing": "( Min( MUR ,( RCSe - MUM ) ) - ( MUC / MLU ) )", "obj1": 0.4448818897637795, "obj2": 0.3541649209339531}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * CRS ) / ( Const * FirstVNF_Mem ) ) ,( Min( Const ,BR ) - ( MDR / MRS ) ) ) / Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( PN / FirstVNF_Mem_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( Const - ARS ) ) ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( DS / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) * ( ( RMSe / CS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.6115193453940303}, {"determining": "( Const / Max( FirstVNF_Mem,PN ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( DS / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) / ( ( RMSe / CS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.5950929503407923}, {"determining": "( Const / Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( ( RMSe / RMSe ) - ( RCSe - MLU ) ) - ( ( CS + CS ) - DS ) )", "obj1": 0.2795275590551181, "obj2": 0.4751516417097615}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04718564131795197}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "Max( CRS,( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( RCSe - MUM ) - Max( RRSe,RRSe ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5419993647861862}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "Max( ( PN - FirstVNF_CPU_Server ),( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Const + FirstVNF_CPU ) ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - ( MLU + MLU ) )", "obj1": 0.4409448818897638, "obj2": 0.36498052553958293}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( RRS * ( PN - FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( DS / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) / ( ( RMSe / CS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.6108529839474951}, {"determining": "( FirstVNF_Mem / ( FirstVNF_Mem + RRS ) )", "choosing": "( ( ( RCSe / RMSe ) - ( RCSe - ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ) - ( RCSe - MLU ) )", "obj1": 0.07480314960629922, "obj2": 0.6508512769425179}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.6375031805045749}, {"determining": "Max( ( AMS * FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( ( RCSe - MUR ) * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.6410503663543462}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * PN ) )", "choosing": "( ( RCSe - DS ) - ( RCSe + DS ) )", "obj1": 0.0531496062992126, "obj2": 0.7330174529041638}, {"determining": "Max( RRS,( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( RRSe * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5486997036253211}], "16": [{"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - Max( CRS,CRS ) )", "choosing": "( ( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ) / ( ( RRSe * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * ( ( MUM * MUM ) / Max( MLU,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( FirstVNF_RAM * PN ) ) )", "choosing": "( ( RMSe - DS ) - RMSe )", "obj1": 0.045275590551181105, "obj2": 0.7406735341274203}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.5393700787401575, "obj2": 0.24935047540583244}, {"determining": "( ( AMS - ( Min( CRS ,FirstVNF_CPU_Server ) / ( PN * PN ) ) ) / Min( AMS ,AMS ) )", "choosing": "( Min( RRSe ,DS ) - ( Min( RMSe ,RMSe ) * ( RMSe - MLU ) ) )", "obj1": 0.6929133858267716, "obj2": 0.19995179795622994}, {"determining": "( ( ( Max( ( ( ( ( AMS * FirstVNF_CPU_Server ) - ( PN - AMS ) ) / Max( ( RRS - ACS ),( BR * DDR ) ) ) * ( ( ( CRS - FirstVNF_RAM_Server ) + ( MRS * RRS ) ) - ( ( CRS / PN ) * ( PN + FirstVNF_CPU_Server ) ) ) ),( Min( ( ( ACS / MDR ) - ( ARS - ARS ) ) ,( ( PN - RRS ) / ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server - PN ) * Min( ACS ,FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * Min( DDR ,Const ) ) ) ) ) * ( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Min( CRS ,MDR ) ) / ( Max( MRS,ACS ) - Max( ARS,RRS ) ) ) ,( ( ( MRS + BR ) - ( ARS / ACS ) ) * ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_RAM / DDR ) ) ) ) / ( ( ( ( CRS * CRS ) + ( MRS / ACS ) ) + ( Max( MRS,FirstVNF_Mem_Server ) - Max( AMS,ARS ) ) ) * ( Min( Max( MRS,BR ) ,( CRS + DDR ) ) / ( ( MDR / FirstVNF_CPU_Server ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) ) * Max( Min( ( ( ( ( MRS + FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) ) * ( ( DDR / FirstVNF_RAM_Server ) - Min( AMS ,RRS ) ) ) / ( ( Max( RRS,MDR ) + ( FirstVNF_RAM + BR ) ) - Max( ( RRS + DDR ),( ACS / CRS ) ) ) ) ,( ( ( Min( Const ,BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,MRS ) * Min( BR ,AMS ) ) ) + Max( ( ( AMS + DDR ) * ( BR * ACS ) ),Max( Min( AMS ,FirstVNF_RAM ),Max( AMS,CRS ) ) ) ) ),Max( Min( Min( ( ( FirstVNF_RAM - DDR ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ,( ( PN / ACS ) / ( FirstVNF_CPU_Server - MDR ) ) ) ,( Min( Min( ARS ,MRS ) ,Min( MRS ,CRS ) ) - ( Max( AMS,MDR ) - ( FirstVNF_Mem_Server + RRS ) ) ) ),( ( ( ( RRS - FirstVNF_RAM ) + Max( BR,CRS ) ) * Max( Min( FirstVNF_RAM ,MDR ),( DDR / FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / ACS ) + Max( ACS,FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( MRS - FirstVNF_Mem ) ) ) ) ) ) ) / ( ( Max( ( ( Min( ( ARS - FirstVNF_CPU ) ,( AMS + MDR ) ) / Min( Min( FirstVNF_Mem_Server ,Const ) ,( RRS / ARS ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,CRS ),Min( DDR ,CRS ) ) / Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( MDR,DDR ) ) ) ),Max( ( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,( ACS - DDR ) ) / ( ( PN * FirstVNF_CPU ) * ( BR * FirstVNF_CPU_Server ) ) ),Min( ( Min( FirstVNF_Mem_Server ,CRS ) + ( RRS / FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM_Server ,Const ) + ( AMS / BR ) ) ) ) ) * ( ( ( Min( ( FirstVNF_RAM_Server * MDR ) ,( AMS / DDR ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) / Max( ( ( MDR * PN ) + ( RRS - CRS ) ),( Max( PN,MRS ) * ( FirstVNF_Mem - RRS ) ) ) ) * Min( ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( PN * DDR ) ) + Min( Max( DDR,FirstVNF_CPU_Server ) ,Max( BR,ARS ) ) ) ,( Min( ( FirstVNF_RAM / Const ) ,( ACS / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) ) - ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem ) / ( Const * FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_RAM - MDR ) / ( FirstVNF_RAM / Const ) ) ,Max( ( Const - ACS ),Max( BR,FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( RRS + AMS ) + ( FirstVNF_RAM * BR ) ) / ( ( BR + ARS ) * ( BR / MDR ) ) ) - ( ( ( FirstVNF_CPU / DDR ) * ( AMS * ARS ) ) / ( Min( CRS ,AMS ) + ( CRS * MDR ) ) ) ) ) * ( Min( ( ( ( MDR / MRS ) + ( FirstVNF_RAM_Server / ACS ) ) / ( ( FirstVNF_Mem_Server * ACS ) / ( MRS / RRS ) ) ) ,( ( ( BR / MDR ) / ( AMS / FirstVNF_RAM_Server ) ) + ( ( BR / CRS ) + ( MRS - Const ) ) ) ) + ( Min( ( ( MRS / ARS ) + ( MDR + FirstVNF_Mem ) ) ,( Max( AMS,ACS ) * ( MRS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_CPU * Const ) * ( CRS * BR ) ) + ( ( MDR - ACS ) + ( RRS / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( Max( MUR,MLU ) * ( RMSe - CS ) ) + ( ( RMSe + DS ) * Max( RMSe,RRSe ) ) ) + ( ( ( RCSe * MUR ) / Max( CS,RMSe ) ) + Max( Max( RMSe,RCSe ),( RMSe / CS ) ) ) ) / ( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) / ( Min( MUM ,RMSe ) / Max( RRSe,MUM ) ) ) - ( Min( Max( RRSe,MUC ) ,( RRSe + RCSe ) ) * ( Min( MUC ,RMSe ) / Min( RRSe ,MLU ) ) ) ) ),( Min( ( ( Max( RMSe,MUM ) - ( MUM * MUC ) ) / ( Max( MUM,MLU ) + ( MLU / MLU ) ) ) ,( Min( ( RMSe * MUC ) ,Min( RCSe ,RCSe ) ) * ( Min( CS ,MUR ) * Max( RCSe,CS ) ) ) ) - ( ( ( Min( MUC ,RCSe ) / ( MUC - MLU ) ) * Max( Min( CS ,RRSe ),( RRSe - RMSe ) ) ) + Min( ( Min( RMSe ,RMSe ) * ( RMSe / MUC ) ) ,Min( Min( DS ,RRSe ) ,( MUR - MUC ) ) ) ) ) ) ,Max( ( ( ( Max( ( RCSe + MLU ),Min( CS ,CS ) ) * ( Min( DS ,MUM ) * Max( CS,DS ) ) ) + Min( ( ( MUR * MUM ) - ( RMSe * RMSe ) ) ,( ( MLU * RCSe ) - ( MUC + RRSe ) ) ) ) + Max( ( ( ( RCSe / MUC ) + ( DS / DS ) ) * Min( ( MLU - DS ) ,Max( RCSe,MLU ) ) ),( Max( ( MUC / DS ),( MLU + RMSe ) ) * Max( ( RRSe - DS ),( MUM + RRSe ) ) ) ) ),( ( Min( Min( Max( RMSe,DS ) ,( MUM - MLU ) ) ,( ( RCSe - RCSe ) / Min( MUM ,RRSe ) ) ) * ( ( ( RMSe - MLU ) / ( RMSe / DS ) ) - ( ( RMSe * RRSe ) + ( MUM - CS ) ) ) ) / Min( Max( ( ( DS * MUC ) * Min( RMSe ,MLU ) ),( ( MLU - RMSe ) + Min( RRSe ,RCSe ) ) ) ,( Min( ( MUR + MUM ) ,( CS / MLU ) ) + ( ( MUM + DS ) / ( RRSe - MUM ) ) ) ) ) ) ) - ( Max( ( ( ( ( Max( MUC,RRSe ) * ( CS + MUR ) ) * ( ( CS + DS ) + ( MUR * RCSe ) ) ) * ( Max( ( CS + MLU ),Max( RCSe,RCSe ) ) * ( ( RCSe * MUM ) / ( MUC * RMSe ) ) ) ) - Min( Max( ( Max( MUR,RMSe ) - ( MUM - RCSe ) ),( ( MUC * CS ) / Max( RRSe,DS ) ) ) ,( Max( ( RMSe - MUR ),Max( RRSe,RRSe ) ) / ( ( MUC / RRSe ) + ( MUM / DS ) ) ) ) ),( ( ( Min( Min( MUC ,RCSe ) ,( MUR * MUR ) ) / Max( ( RRSe - CS ),( CS + MUM ) ) ) / ( ( Min( RRSe ,CS ) + Min( DS ,RCSe ) ) + ( Max( MUR,RRSe ) - Max( RMSe,DS ) ) ) ) / ( Max( Min( Max( MLU,RRSe ) ,( MLU + RMSe ) ),( Max( DS,MUR ) / ( DS + RCSe ) ) ) + ( ( ( MLU - MLU ) + Max( RRSe,MUC ) ) + Min( ( MUM - CS ) ,( CS - MLU ) ) ) ) ) ) - Min( ( ( ( ( ( MUR - RCSe ) + Max( MUR,DS ) ) - Max( ( CS * DS ),( RRSe - RRSe ) ) ) / Max( ( Min( RCSe ,MUR ) - ( RRSe / MLU ) ),Max( Max( MLU,MUC ),Max( MLU,RCSe ) ) ) ) + Min( ( Max( ( MUC * RRSe ),Max( DS,CS ) ) * ( ( MUR - MUC ) / ( DS * RCSe ) ) ) ,Max( Min( Min( DS ,MUC ) ,( MUC * MUR ) ),( ( CS - MUM ) / Min( RCSe ,RCSe ) ) ) ) ) ,( ( ( Max( Min( MUM ,RMSe ),Max( DS,MLU ) ) / ( ( RCSe + MUM ) * ( MLU - CS ) ) ) / ( ( ( MUR - MUC ) * ( RRSe + DS ) ) * Min( Max( DS,MUM ) ,( MUM / MUR ) ) ) ) / ( ( Max( ( MUM / DS ),( MLU * RRSe ) ) - ( ( RCSe - DS ) / ( RMSe / MUR ) ) ) + ( Max( Min( RMSe ,DS ),Min( RMSe ,RMSe ) ) * ( ( MUR - RCSe ) * ( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.24172756571533124}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem / CRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( CS / MUM ) ,DS ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.3858267716535433, "obj2": 0.3981979117222705}, {"determining": "( ( PN + ( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) ) ) / ( AMS + PN ) )", "choosing": "( ( RMSe - CS ) - ( RCSe - ( Min( RRSe ,DS ) - ( RCSe / MLU ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.13670007457838843}, {"determining": "( Max( FirstVNF_RAM,PN ) - Min( ( CRS / FirstVNF_RAM_Server ) ,( Const * RRS ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MUC ) * ( DS * MUR ) )", "obj1": 0.6633858267716536, "obj2": 0.2404757172349788}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( ( RMSe - CS ) - ( RCSe - MUM ) )", "obj1": 0.8287401574803149, "obj2": 0.08717753792849653}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( ( MUM - RRSe ) - Min( ( RRSe + MUM ) ,( CS / MLU ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.2933070866141732, "obj2": 0.457313070237224}, {"determining": "( ( Max( AMS,PN ) - FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - DS ) - ( RCSe - ( RMSe / RMSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.27986438233996247}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( Const + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,( ( ( MLU + MLU ) - ( MUM - MUR ) ) - MUC ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3662845472738056}, {"determining": "( ( PN / FirstVNF_CPU_Server ) / ( FirstVNF_Mem / CRS ) )", "choosing": "( Min( CS ,DS ) - Min( CS ,MUM ) )", "obj1": 0.33858267716535434, "obj2": 0.4362697577593328}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * PN ) )", "choosing": "( ( MUM - ( MUM - DS ) ) - ( CS + DS ) )", "obj1": 0.27755905511811024, "obj2": 0.4708029968265672}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4566929133858268, "obj2": 0.29788618119551813}, {"determining": "( ( FirstVNF_RAM * ( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_Mem + CRS ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( ( Max( RCSe,MLU ) + MUM ) ,( CS / MLU ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4944534545338825}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / FirstVNF_RAM )", "choosing": "( ( ( MUM - DS ) - DS ) - ( CS + DS ) )", "obj1": 0.06299212598425197, "obj2": 0.6755550325304254}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7755905511811023, "obj2": 0.10469124620894465}, {"determining": "( ( MRS * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( ( MLU * MLU ) - RRSe ) - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3296203873473727}, {"determining": "Max( Max( ( PN - FirstVNF_CPU_Server ),( AMS * FirstVNF_Mem_Server ) ),( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - DS ) - DS ) - ( RCSe - MUR ) )", "obj1": 0.05708661417322835, "obj2": 0.7212222857925595}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( Max( CS,RCSe ) / ( Min( CS ,MUC ) * ( Min( RCSe ,RCSe ) / MLU ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5060057182579616}, {"determining": "( Const / Max( FirstVNF_Mem,PN ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( DS / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) / ( ( RMSe / CS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.5950929503407923}, {"determining": "( ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * ( AMS * ARS ) )", "choosing": "Min( ( Min( ( Max( ( ( ( RMSe + RCSe ) + ( CS + MUR ) ) * ( ( RCSe / MLU ) - ( MLU * RCSe ) ) ),( ( ( CS + RCSe ) * Min( RRSe ,CS ) ) * ( Max( MUR,MUR ) * ( MUM + RCSe ) ) ) ) - ( ( ( Min( MUM ,RCSe ) - Max( DS,DS ) ) - Max( Max( DS,RCSe ),( DS + CS ) ) ) / ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) / ( Min( DS ,MUR ) + ( MUR * MUC ) ) ) ) ) ,Min( ( Min( Max( ( CS / RMSe ),( DS + RRSe ) ) ,( Min( RMSe ,MUC ) * ( RRSe * MUR ) ) ) / Min( Min( ( MUM + MUC ) ,( MUC - RRSe ) ) ,Max( ( RMSe / RMSe ),Min( RMSe ,MUR ) ) ) ) ,( ( ( Max( MLU,RRSe ) + ( RRSe + MUM ) ) + ( Max( DS,RCSe ) - ( RRSe * MLU ) ) ) / ( ( ( CS - MUM ) * ( RCSe / RCSe ) ) - ( ( RRSe / MUM ) * ( RRSe * RRSe ) ) ) ) ) ) * ( ( ( Min( Min( ( CS - DS ) ,( MLU + RRSe ) ) ,Max( Max( MUM,RMSe ),( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * ( MLU * RCSe ) ) + ( ( RRSe * MUR ) / ( RRSe * DS ) ) ) ) / ( ( ( ( RRSe / RMSe ) + Min( RRSe ,MUM ) ) / Max( Min( MUC ,RMSe ),Max( MUC,RMSe ) ) ) - ( Min( Max( DS,CS ) ,( MUM * RCSe ) ) / ( ( MUR / RCSe ) / ( MLU + DS ) ) ) ) ) - ( ( ( ( ( MUM / MUR ) - ( MUC / RRSe ) ) - ( ( MLU * MUM ) * Min( DS ,RRSe ) ) ) * Min( Max( Max( CS,MUC ),Max( DS,MLU ) ) ,Max( ( CS - RMSe ),( RRSe - MLU ) ) ) ) + ( Min( ( Min( MUM ,MUM ) + ( RCSe / MUC ) ) ,( ( MLU + MUC ) * ( RCSe + RCSe ) ) ) + ( ( ( RRSe * CS ) * Max( MLU,MUC ) ) + ( ( MUM - RRSe ) + ( CS + RMSe ) ) ) ) ) ) ) ,( ( ( Min( ( Min( ( RMSe - RMSe ) ,( DS / CS ) ) / Max( Max( CS,RMSe ),( DS * RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR * RCSe ) ) * Max( ( MLU / RRSe ),( MLU * RCSe ) ) ) ) * ( ( ( ( RRSe / MUR ) * Max( MUM,RMSe ) ) - ( Min( CS ,MUM ) / Min( RCSe ,RRSe ) ) ) / ( Max( ( MUR - DS ),Max( MLU,RMSe ) ) + Min( ( MUM + RMSe ) ,Max( RRSe,MUM ) ) ) ) ) - Max( ( ( Min( Max( MUM,CS ) ,( RMSe / CS ) ) / Min( ( MUM - MUC ) ,( MUR + MLU ) ) ) / ( Min( ( MUM + RCSe ) ,Max( MUC,MUC ) ) * ( ( MLU + RRSe ) + ( DS + MLU ) ) ) ),Min( ( Max( ( CS / MLU ),( MLU * RMSe ) ) * ( Min( RRSe ,RCSe ) + ( RMSe - DS ) ) ) ,( Min( ( MUM / MUC ) ,( MUR + MLU ) ) * ( ( RRSe - DS ) / Max( RCSe,CS ) ) ) ) ) ) * ( Max( Max( ( ( Min( MUC ,MUC ) + ( CS - DS ) ) - ( ( DS * RRSe ) * ( MUR + RMSe ) ) ),Max( ( ( MUC * MUM ) / ( RCSe * MUM ) ),( Max( MLU,MUM ) + ( RMSe - DS ) ) ) ),( ( ( ( MLU - MUC ) - Min( MLU ,MLU ) ) * Max( Min( RRSe ,DS ),( MUR * RRSe ) ) ) * Min( ( ( RRSe - MUM ) * ( MLU + MUR ) ) ,( ( MUC + MUC ) + ( MUC - MLU ) ) ) ) ) + Min( ( Max( Max( ( RRSe * RCSe ),( MUM - RRSe ) ),Max( ( DS * CS ),( MUC + MUM ) ) ) * ( ( Min( MUC ,DS ) / ( MUM / DS ) ) - Min( ( MLU / RCSe ) ,( MUR + CS ) ) ) ) ,Min( ( ( Min( RRSe ,MUR ) * Min( MUR ,RRSe ) ) / ( ( CS - MUC ) * ( CS / DS ) ) ) ,( ( ( DS / MUM ) / Max( MUC,RMSe ) ) + ( ( MLU / RCSe ) / Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.16902336719214797}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RRSe ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5326129604431223}, {"determining": "( ( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem ),ACS ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( MLU - Min( MLU ,( MLU + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.29028037347605173}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.9192913385826772, "obj2": 0.04718564131795197}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Min( CS ,DS ) - Max( RCSe,MLU ) )", "obj1": 0.7204724409448819, "obj2": 0.17520597253713208}, {"determining": "Max( RRS,( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( RRSe * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5486997036253211}, {"determining": "( PN - ( ACS - DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - Max( ( RCSe / MUM ),( MLU - RCSe ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.040948701010271996}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - ( PN * BR ) ) )", "choosing": "( Max( ( Max( MLU,RCSe ) / Max( RMSe,MUM ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0506065772095927}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - Min( ( MUC + MUM ) ,( CS / MLU ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10706687286837127}, {"determining": "Min( ( ( ( ( Min( ( ( BR * PN ) - ( FirstVNF_CPU / ACS ) ) ,( ( FirstVNF_Mem * BR ) - ( ARS + ACS ) ) ) * ( ( ( Const + MRS ) - ( FirstVNF_RAM / PN ) ) - ( ( Const + DDR ) / ( Const / PN ) ) ) ) * Min( ( Min( ( FirstVNF_Mem / BR ) ,( FirstVNF_RAM_Server * CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) * Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( ( MDR / AMS ) * ( FirstVNF_RAM_Server / Const ) ) / ( ( ARS / MDR ) + ( Const + BR ) ) ) ) ) / ( ( Max( ( ( CRS * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MDR ) ),( ( MDR + FirstVNF_CPU_Server ) / ( MDR - CRS ) ) ) - Max( ( ( Const * RRS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),( Max( MRS,MDR ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( BR + RRS ) ) * ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - ( ( ( CRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,DDR ) ) + Min( ( ARS / PN ) ,Max( FirstVNF_RAM,RRS ) ) ) ) ) ) + Max( Min( ( Min( ( ( DDR * CRS ) - Min( PN ,RRS ) ) ,( Min( ARS ,CRS ) / ( FirstVNF_RAM_Server - AMS ) ) ) / Min( ( ( ARS + FirstVNF_RAM_Server ) + ( DDR / FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU * AMS ) ,( FirstVNF_Mem + BR ) ) ) ) ,( Min( ( Min( CRS ,DDR ) - ( BR * FirstVNF_Mem ) ) ,Min( ( BR * ACS ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( ( ( FirstVNF_Mem / MDR ) - ( Const / FirstVNF_RAM ) ) ,( ( Const * RRS ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ),( ( ( Min( Max( ARS,Const ) ,( BR * RRS ) ) - Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / PN ) ) ) / ( ( Max( FirstVNF_RAM_Server,DDR ) / Max( FirstVNF_RAM,Const ) ) * ( ( MRS / ACS ) - Min( MDR ,FirstVNF_RAM ) ) ) ) + Max( ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * ( BR + PN ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( ARS - ARS ) ) ),Min( ( ( MDR * FirstVNF_Mem_Server ) * ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( ( ACS * ACS ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,Min( Min( ( ( Min( Min( ( FirstVNF_Mem_Server + ACS ) ,( DDR + PN ) ) ,( ( ARS + BR ) + ( CRS - BR ) ) ) - ( ( ( ACS * ACS ) * ( MDR + FirstVNF_Mem_Server ) ) / ( Max( ARS,FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server * ACS ) - ( DDR / RRS ) ) + Max( ( MRS + FirstVNF_CPU ),Max( CRS,ARS ) ) ) + Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( ARS + FirstVNF_RAM ) ) ) ) ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / Min( MDR ,MRS ) ) * Max( ( BR + Const ),Max( MDR,FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_CPU_Server ,PN ) - Min( DDR ,MRS ) ) + ( ( AMS / CRS ) / ( FirstVNF_Mem - AMS ) ) ) ) / ( Max( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,Max( CRS,Const ) ),( ( MDR + RRS ) * ( Const * FirstVNF_Mem_Server ) ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),( DDR - PN ) ) + ( ( BR * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * DDR ) ) ) ) ) ) ,Min( Min( ( Min( ( ( MRS / Const ) + Max( MDR,AMS ) ) ,( ( FirstVNF_RAM_Server / AMS ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / ( FirstVNF_RAM + ARS ) ) * Min( ( RRS / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) ) ) ,( Max( Min( Max( FirstVNF_CPU_Server,MRS ) ,( DDR / ARS ) ),( ( CRS + CRS ) - ( FirstVNF_RAM - MRS ) ) ) * ( Max( Max( RRS,RRS ),( FirstVNF_CPU / FirstVNF_CPU ) ) + ( ( Const + DDR ) / ( CRS + DDR ) ) ) ) ) ,( Max( Max( ( Max( CRS,MDR ) - ( FirstVNF_CPU_Server + MDR ) ),( ( RRS - FirstVNF_CPU ) - ( RRS / FirstVNF_Mem_Server ) ) ),Max( ( ( CRS - PN ) - Min( ARS ,MRS ) ),( ( Const / DDR ) / ( DDR + Const ) ) ) ) + ( ( ( Min( ACS ,Const ) * Min( CRS ,MDR ) ) + ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_RAM_Server - Const ) ) ) + ( Max( ( FirstVNF_RAM + CRS ),Max( DDR,RRS ) ) / Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( RRS / BR ) ) ) ) ) ) ) )", "choosing": "Max( Max( MUR,MUM ),Min( ( MUM - MUM ) ,( MUR + MUR ) ) )", "obj1": 0.9803149606299213, "obj2": 0.008912106429707578}, {"determining": "( ( ARS - FirstVNF_CPU_Server ) / ( Min( BR ,MRS ) - ( ( FirstVNF_RAM_Server - RRS ) / Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,DS ) - CS )", "obj1": 0.844488188976378, "obj2": 0.07343826269680742}, {"determining": "Max( ( PN * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5700781405482017}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - RRSe ) - Min( Min( ( MUC + MUM ) ,( CS / MLU ) ) ,RCSe ) )", "obj1": 0.3464566929133858, "obj2": 0.4244487481611305}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) / ( AMS * PN ) ) - ( ( FirstVNF_RAM_Server - RRS ) / Max( PN,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MUR ) + Min( RMSe ,RCSe ) )", "obj1": 0.9586614173228346, "obj2": 0.028926254112371135}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / Min( AMS ,PN ) )", "choosing": "( ( MUM - RRSe ) - Min( ( RRSe + MUC ) ,( CS / MLU ) ) )", "obj1": 0.8562992125984252, "obj2": 0.06516246078008177}, {"determining": "( ( ( Min( ( ( Min( ( RRS - MDR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( MDR - DDR ) ) ) + Min( Min( ( FirstVNF_CPU + DDR ) ,( BR + Const ) ) ,Max( Max( CRS,FirstVNF_RAM ),( MRS * FirstVNF_Mem ) ) ) ) ,Min( Min( Max( ( BR - MDR ),( MRS / Const ) ) ,Min( Min( FirstVNF_RAM_Server ,BR ) ,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU_Server + PN ) / ( FirstVNF_Mem_Server + MRS ) ) / ( Min( FirstVNF_RAM_Server ,MRS ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( DDR * FirstVNF_Mem_Server ),( BR * ACS ) ) / ( ( ACS * RRS ) * ( AMS * RRS ) ) ) - ( ( ( AMS - RRS ) / ( PN + FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),( FirstVNF_RAM + MDR ) ) ) ) + ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,RRS ) + ( Const + ACS ) ) ) + ( Min( Min( ACS ,DDR ) ,( Const * FirstVNF_CPU ) ) / Max( ( DDR - DDR ),Min( FirstVNF_CPU_Server ,RRS ) ) ) ) ) ) * ( ( ( Min( ( Max( ACS,AMS ) - Min( Const ,RRS ) ) ,( ( FirstVNF_RAM * AMS ) + Min( Const ,BR ) ) ) * ( ( Min( PN ,BR ) + ( MRS - Const ) ) / Max( ( CRS / FirstVNF_Mem ),( ACS * FirstVNF_RAM ) ) ) ) / ( ( Max( Min( BR ,FirstVNF_CPU ),Min( RRS ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / FirstVNF_CPU ) + ( ARS / MRS ) ) ) / Min( Max( Min( FirstVNF_RAM ,CRS ),( Const / ACS ) ) ,Min( Min( AMS ,PN ) ,( AMS + MDR ) ) ) ) ) / ( Min( ( ( ( CRS + Const ) * ( FirstVNF_CPU_Server * ACS ) ) / Min( ( FirstVNF_RAM - MDR ) ,( ARS * FirstVNF_Mem ) ) ) ,( ( ( DDR - MRS ) + Max( RRS,AMS ) ) + ( ( RRS * PN ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),( ( Const * PN ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( Max( CRS,ARS ) + ( RRS - ARS ) ) / ( Min( DDR ,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( Max( ( Min( ( ( Max( ARS,BR ) + Min( FirstVNF_RAM_Server ,ARS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ) ,( ( ( PN - MRS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( RRS,CRS ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + RRS ) ) / Max( ( AMS / AMS ),( MRS - AMS ) ) ) - ( ( ( DDR / ARS ) * ( DDR - DDR ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) * ( FirstVNF_Mem + RRS ) ) ) ) ),( ( Max( Max( ( Const - FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),Max( Max( FirstVNF_RAM,ACS ),( MRS - DDR ) ) ) * Min( ( ( ARS * MRS ) * ( MDR + BR ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( PN - MRS ) ) ) ) - Max( ( ( ( FirstVNF_CPU + CRS ) - Max( ARS,CRS ) ) / ( ( MRS + FirstVNF_RAM ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),Min( ( Max( MRS,DDR ) + ( ARS - PN ) ) ,( ( CRS / ARS ) - Min( FirstVNF_CPU ,Const ) ) ) ) ) ) - Min( ( ( ( ( ( ARS * AMS ) / ( FirstVNF_RAM * CRS ) ) - ( ( FirstVNF_RAM_Server + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * ARS ) ) - ( ( MDR - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) - ( Max( ( ( MRS - MRS ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( ( Const / ACS ) * Max( Const,DDR ) ) ) * ( Min( ( MRS * DDR ) ,Max( FirstVNF_CPU_Server,PN ) ) + ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Max( MDR,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * Max( Min( PN ,BR ),Min( FirstVNF_RAM ,ARS ) ) ) ,Min( ( ( BR - MDR ) * ( AMS * FirstVNF_CPU_Server ) ) ,Min( Max( PN,CRS ) ,( BR * FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS - FirstVNF_Mem ) ) ,( ( AMS + FirstVNF_CPU ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,AMS ),Max( FirstVNF_RAM_Server,RRS ) ),( ( BR - FirstVNF_CPU_Server ) + ( AMS * ACS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe / RRSe ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.9665354330708661, "obj2": 0.017649297297222196}, {"determining": "( ( FirstVNF_RAM * ( ( AMS - FirstVNF_CPU_Server ) / ( FirstVNF_Mem * AMS ) ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( ( RRSe + ( ( MUR / DS ) - ( MUC / MLU ) ) ) ,( CS / MLU ) ) )", "obj1": 0.8799212598425197, "obj2": 0.06304897296089985}, {"determining": "Max( ( CRS * BR ),( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( RRSe / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.570338075073359}, {"determining": "( ( AMS + PN ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - DS ) - Min( RMSe ,CS ) )", "obj1": 0.12007874015748031, "obj2": 0.6237790947343033}, {"determining": "Max( CRS,( CRS - ( FirstVNF_RAM * BR ) ) )", "choosing": "( Max( ( ( RCSe - MUM ) - Max( RRSe,RRSe ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( ( MUM / MUM ) * ( RRSe * RMSe ) ) * ( Max( RRSe,RCSe ) * ( RMSe + CS ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5419993647861862}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Max( ACS,AMS ) ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( Max( DS,MLU ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6604002577100584}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Const + FirstVNF_CPU ) ) * ( RRS + FirstVNF_CPU ) ) / ( ACS - ARS ) )", "choosing": "( ( MUM - RRSe ) - ( MLU + MLU ) )", "obj1": 0.4409448818897638, "obj2": 0.36498052553958293}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( RRS * ( PN - FirstVNF_RAM ) ) )", "choosing": "( Min( ( Min( CS ,MLU ) - ( DS / MUM ) ) ,( ( MUR / MUM ) + ( DS / RCSe ) ) ) - ( ( ( CS - RRSe ) + Min( MLU ,RCSe ) ) / ( ( RMSe / CS ) / ( MUM + RCSe ) ) ) )", "obj1": 0.13385826771653545, "obj2": 0.6108529839474951}, {"determining": "Max( ( PN - FirstVNF_CPU_Server ),( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6250300539900586}, {"determining": "( FirstVNF_Mem / ( FirstVNF_Mem + RRS ) )", "choosing": "( ( ( RCSe / RMSe ) - ( RCSe - ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ) - ( RCSe - MLU ) )", "obj1": 0.07480314960629922, "obj2": 0.6508512769425179}, {"determining": "Max( ( MDR - FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( RCSe * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.6375031805045749}, {"determining": "Max( ( AMS * FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RRSe ) - ( ( RCSe - MUR ) * MUC ) ) ) / ( ( ( RRSe - MUC ) + ( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.6410503663543462}]}