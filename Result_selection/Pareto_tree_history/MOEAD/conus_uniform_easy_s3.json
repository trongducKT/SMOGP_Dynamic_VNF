{"1": [{"determining": "( ( ARS * ARS ) + ( CRS * RRS ) )", "choosing": "( ( Max( Max( RMSe,( ( CS - CS ) + DS ) ),RMSe ) - RRSe ) / ( RMSe / MUC ) )", "obj1": 0.26968503937007876, "obj2": 0.687044313395804}, {"determining": "Max( ( ( Max( ( FirstVNF_Mem_Server * AMS ),PN ) - CRS ) + PN ),( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Min( ( MUC + MUM ) ,Max( MUR,MUR ) ) / ( ( RRSe * MLU ) - ( RCSe - RRSe ) ) ) - ( Min( Max( Min( ( DS * MUC ) ,RMSe ),Max( ( MLU + RRSe ),RCSe ) ) ,( Max( MUR,RRSe ) + MUC ) ) / RCSe ) )", "obj1": 0.25, "obj2": 0.6808465457536578}, {"determining": "Max( Min( Const ,MRS ),( MDR * AMS ) )", "choosing": "Max( Min( MUC ,RRSe ),Max( DS,MLU ) )", "obj1": 0.24803149606299213, "obj2": 0.6136820804992634}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "( ( CRS + DDR ) + Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "( ( MUM + MUM ) - Max( MUC,MLU ) )", "obj1": 0.3031496062992126, "obj2": 0.5452050935184733}, {"determining": "( ( ARS * ARS ) / ( Const / PN ) )", "choosing": "Min( ( RRSe - RMSe ) ,Min( RRSe ,MUC ) )", "obj1": 0.2204724409448819, "obj2": 0.6443423060831496}, {"determining": "( ( AMS / MDR ) + ( DDR - RRS ) )", "choosing": "( ( MUC - MUM ) - Max( MUC,MUR ) )", "obj1": 0.234251968503937, "obj2": 0.6275423506268529}, {"determining": "Min( ( AMS / MRS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( ( RRSe * RRSe ) ,( MUC / MLU ) )", "obj1": 0.38976377952755903, "obj2": 0.48012684300581104}, {"determining": "( ( FirstVNF_RAM + RRS ) * Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Max( ( RMSe / MLU ),( RRSe - MLU ) )", "obj1": 0.19291338582677164, "obj2": 0.635169839524327}, {"determining": "Max( ( MRS / ACS ),( FirstVNF_RAM_Server - PN ) )", "choosing": "( Min( CS ,MUC ) * ( MUC - MLU ) )", "obj1": 0.1830708661417323, "obj2": 0.6409386748631742}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) - ( BR * MDR ) )", "choosing": "( ( MUC + MLU ) * Min( MUC ,MUM ) )", "obj1": 0.4035433070866142, "obj2": 0.46573366136873995}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) )", "choosing": "( ( DS - RCSe ) + ( MUM + MLU ) )", "obj1": 0.5236220472440944, "obj2": 0.3908455794099943}, {"determining": "( Min( ( ARS - FirstVNF_RAM ) ,AMS ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),Max( ( ( ( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) - ( MUR - ( ( MUM - MUC ) / ( Min( MUM ,RCSe ) + RCSe ) ) ) ) * DS ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * Const ) )", "choosing": "Min( ( MUM * ( ( MLU * Max( MLU,RRSe ) ) - ( Max( RCSe,MUR ) + Max( RCSe,RCSe ) ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "Min( ( FirstVNF_Mem_Server + ( Max( MDR,FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),FirstVNF_RAM ) ) ) ,Max( FirstVNF_Mem,DDR ) )", "choosing": "Max( ( RRSe + DS ),( MUM - RMSe ) )", "obj1": 0.40551181102362205, "obj2": 0.44853922955279313}, {"determining": "( ( MRS * FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) )", "choosing": "( ( MLU + RMSe ) / ( MUC + DS ) )", "obj1": 0.18110236220472442, "obj2": 0.6741008932460082}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Max( RRS,( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "Max( Min( Max( ( DS * RCSe ),MUM ) ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Min( ACS ,MRS ) )", "choosing": "Max( Min( RCSe ,MLU ),Min( RMSe ,RRSe ) )", "obj1": 0.37401574803149606, "obj2": 0.4853573002650965}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RCSe - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "( ( AMS + BR ) + ( RRS * FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.23228346456692914, "obj2": 0.6286262082439213}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( MUC * RCSe ) / Min( RMSe ,DS ) )", "obj1": 0.047244094488188976, "obj2": 0.7526713189346435}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) / ( Min( BR ,( Min( MDR ,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) + ( ARS + DDR ) ) )", "choosing": "Max( ( MUR + DS ),Max( ( CS + DS ),RCSe ) )", "obj1": 0.5866141732283464, "obj2": 0.3111544406828516}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) )", "choosing": "Min( ( CS + RRSe ) ,( DS / RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.35012501370771215}, {"determining": "( ( FirstVNF_CPU * BR ) / Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + CS ) - ( RRSe - MLU ) )", "obj1": 0.3248031496062992, "obj2": 0.6409504739542824}, {"determining": "( ( ARS - PN ) - Min( ACS ,MDR ) )", "choosing": "( ( MUM / RRSe ) + Min( MUM ,RCSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5746889201678772}, {"determining": "( ( MRS + BR ) * ( FirstVNF_CPU + PN ) )", "choosing": "Min( ( CS / MUM ) ,Max( MUC,RMSe ) )", "obj1": 0.3937007874015748, "obj2": 0.5331197790346296}, {"determining": "Max( ( RRS - PN ),( DDR + DDR ) )", "choosing": "( ( MUC + MUR ) + Min( RCSe ,MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.4797949518772795}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "( Max( AMS,CRS ) / ( MRS / ACS ) )", "choosing": "Min( Max( CS,MUR ) ,( MUR - MUR ) )", "obj1": 0.33858267716535434, "obj2": 0.5200384919135499}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( AMS - AMS ) / MDR ) )", "choosing": "( ( MLU + MLU ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ARS ) + ( DDR / BR ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * CS ) )", "obj1": 0.31496062992125984, "obj2": 0.6490552374755137}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "( ( ( BR + Const ) + ( PN - FirstVNF_Mem ) ) + ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RCSe + RRSe ) * ( ( MUC / DS ) + MUM ) )", "obj1": 0.05511811023622047, "obj2": 0.7469026010104897}, {"determining": "( ( Min( Const ,FirstVNF_CPU_Server ) + Max( DDR,FirstVNF_Mem_Server ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) )", "choosing": "( Min( ( RMSe * DS ) ,Max( MUR,MUM ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) )", "obj1": 0.31299212598425197, "obj2": 0.636014620781967}, {"determining": "( ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) * Min( Min( FirstVNF_RAM ,Const ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( Min( Max( MLU,MUR ) ,( MUR + RMSe ) ) - ( Max( RRSe,MLU ) + Max( MUC,RRSe ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5480749195024}, {"determining": "Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( ( RRSe + MUR ) / MUM ) - ( MUC + RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6058585465873314}, {"determining": "Max( Min( PN ,FirstVNF_RAM ),Max( ( FirstVNF_Mem - RRS ),CRS ) )", "choosing": "Min( ( ( RCSe + RCSe ) * ( MUM * RMSe ) ) ,( ( CS / MUR ) - ( MUR / MLU ) ) )", "obj1": 0.3031496062992126, "obj2": 0.6560430975520217}, {"determining": "( Max( ACS,( RRS + RRS ) ) * ( Const + ( RRS + Const ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MLU ) ) / Max( ( DS + RMSe ),( MUR - RCSe ) ) )", "obj1": 0.14566929133858267, "obj2": 0.6978394696994124}, {"determining": "( ( MRS + FirstVNF_Mem ) * ( ( ( FirstVNF_CPU_Server + PN ) * AMS ) / Max( Min( FirstVNF_Mem ,CRS ),FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUR * MUM ) + ( DS - MLU ) ),( ( MUC + ( CS * ( ( Max( ( RRSe * RMSe ),( MUM + RMSe ) ) - DS ) / MUR ) ) ) / Max( ( Min( MUC ,CS ) - RRSe ),RMSe ) ) )", "obj1": 0.328740157480315, "obj2": 0.5272786928723131}, {"determining": "( Min( ( AMS / Const ) ,Min( MDR ,CRS ) ) / Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_Mem * DDR ) ) )", "choosing": "Max( ( MUR + MUM ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.41141732283464566, "obj2": 0.4536400440976234}, {"determining": "( Max( ( FirstVNF_Mem + AMS ),( CRS - FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM_Server ,RRS ) / FirstVNF_CPU ) )", "choosing": "( ( MUM * MLU ) - Min( ( MUC + ( DS * Min( RMSe ,MUR ) ) ) ,MUR ) )", "obj1": 0.25393700787401574, "obj2": 0.685953915701031}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem * Max( DDR,FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU * DDR ) + CRS ) )", "choosing": "( Min( CS ,RCSe ) / Min( ( CS - CS ) ,CS ) )", "obj1": 0.36220472440944884, "obj2": 0.5003985568517297}, {"determining": "Max( ( MDR * BR ),( Max( PN,Max( ACS,PN ) ) - FirstVNF_CPU ) )", "choosing": "Max( Max( RRSe,DS ),( RCSe * Min( CS ,( ( MUR * ( Min( MUM ,MLU ) / MUR ) ) + Min( ( MUM - RMSe ) ,MUC ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.491471073665224}, {"determining": "( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( Min( Max( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM ),ACS ) ,FirstVNF_RAM_Server ),RRS ) )", "choosing": "( ( ( MUC / RMSe ) * Min( Min( ( Min( ( ( CS - MUM ) + Max( MUM,MUC ) ) ,Min( RRSe ,( CS - MUC ) ) ) + ( MUM + RCSe ) ) ,MUM ) ,( ( RCSe * MUM ) * Max( MUR,MUR ) ) ) ) + ( ( MUR / MUM ) / ( CS + CS ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5612290771081981}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "( ( ( DDR * BR ) - ( Const - FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_Mem_Server,MRS ),( FirstVNF_CPU_Server / CRS ) ) )", "choosing": "Max( Min( CS ,MUR ),Min( MUR ,( RRSe * RRSe ) ) )", "obj1": 0.4035433070866142, "obj2": 0.47208715878717195}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MDR + FirstVNF_Mem_Server ) ) * ( ( Const * ACS ) - ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( RRSe ,CS ) * ( MLU * RMSe ) ) * ( ( CS / MUM ) - ( MUR / CS ) ) )", "obj1": 0.3090551181102362, "obj2": 0.6553218000963306}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( PN * AMS ) ) / FirstVNF_CPU ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( ( MUR * MLU ) + DS ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.3065428580389491}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),( ( MDR * Const ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( RMSe * DS ) * Max( MUM,( MUM * ( RMSe * Min( ( MLU / ( MUM + RRSe ) ) ,( ( CS / RRSe ) - Max( MUM,MLU ) ) ) ) ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( ( MRS * CRS ) + Max( MDR,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( CS ,( MUM + MLU ) ) + ( MUC + Min( RCSe ,CS ) ) )", "obj1": 0.41338582677165353, "obj2": 0.499739501831183}, {"determining": "( Max( MDR,( BR * FirstVNF_Mem ) ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) )", "choosing": "Max( Max( RMSe,Max( Max( DS,( Max( MLU,RCSe ) / ( CS / MUR ) ) ),DS ) ),Max( RMSe,MUC ) )", "obj1": 0.36023622047244097, "obj2": 0.4947796719516512}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_CPU + FirstVNF_Mem ),( FirstVNF_RAM * CRS ) ) ,Max( ( FirstVNF_Mem_Server - PN ),Min( FirstVNF_CPU ,DDR ) ) )", "choosing": "( ( ( RRSe + MUC ) * ( RRSe / MUM ) ) * ( ( RRSe + MUR ) / ( MLU / MLU ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5085612081196447}, {"determining": "Max( ( ( DDR * FirstVNF_RAM_Server ) / ( MRS * DDR ) ),( Min( AMS ,FirstVNF_CPU ) * ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * CS ) - ( RCSe / MLU ) ) / ( Min( MUR ,MUM ) / Min( RRSe ,CS ) ) )", "obj1": 0.2992125984251969, "obj2": 0.6559859450593238}, {"determining": "( ( ( PN - Min( ARS ,FirstVNF_RAM_Server ) ) * ( RRS - CRS ) ) / ( ( MRS * AMS ) - Min( BR ,ACS ) ) )", "choosing": "Min( ( Max( ( DS + RRSe ),MLU ) / RCSe ) ,( RRSe - MUR ) )", "obj1": 0.28346456692913385, "obj2": 0.571993171719846}, {"determining": "( Min( Min( FirstVNF_Mem ,ARS ) ,Min( ARS ,AMS ) ) * Max( ( FirstVNF_Mem * ACS ),( BR + MDR ) ) )", "choosing": "Min( ( ( DS - RCSe ) * ( MUC + MUM ) ) ,( ( MLU - MUR ) * ( MLU - RMSe ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5655198976366681}, {"determining": "( ( Max( DDR,Const ) / ( RRS + PN ) ) + Min( ( PN * FirstVNF_CPU ) ,( ARS * CRS ) ) )", "choosing": "( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.5033780593278954}, {"determining": "( Min( ( DDR / Const ) ,( CRS / ARS ) ) / Max( ( MDR / Const ),( FirstVNF_RAM + CRS ) ) )", "choosing": "( ( ( RRSe * CS ) * ( MUR - RRSe ) ) * ( ( MUM / MUC ) / ( MUR / MUC ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5559556087566653}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),( FirstVNF_CPU * ARS ) ) * ( ( FirstVNF_RAM + RRS ) + ( PN - CRS ) ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,DS ) ) + Min( MUM ,CS ) )", "obj1": 0.452755905511811, "obj2": 0.4553898298137164}, {"determining": "Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),( PN * ( ARS + CRS ) ) )", "choosing": "( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( Min( MUM ,MLU ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( ( AMS + ( FirstVNF_RAM + Const ) ) * ( Const * Const ) ),MRS ) ) * CRS ) )", "choosing": "( Min( ( MUM / DS ) ,( RMSe - Min( Max( DS,Max( CS,RCSe ) ) ,( ( MUM - Max( RCSe,RCSe ) ) - ( Max( MUR,( MUR - MUM ) ) / ( RCSe * MUR ) ) ) ) ) ) / ( ( RCSe / MUR ) + ( MLU + CS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.46066889092067903}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( ARS ,FirstVNF_CPU ) * ( BR * ARS ) ) )", "choosing": "( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7382402897575555}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( FirstVNF_Mem + ( ( ( Min( ( PN - AMS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - RRS ) + FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Min( AMS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( RRSe + ( ( RCSe - ( DS * ( MUM + ( RMSe * CS ) ) ) ) * MUR ) ) / ( ( MUM - MLU ) * DS ) ) ,( ( CS / MLU ) + Min( ( RRSe - RRSe ) ,DS ) ) )", "obj1": 0.4507874015748031, "obj2": 0.44340690213673845}, {"determining": "( ( RRS + ( DDR + ACS ) ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Min( MUR ,Min( MUR ,MLU ) ),Max( DS,( ( RMSe + RMSe ) + MLU ) ) )", "obj1": 0.421259842519685, "obj2": 0.45363647559050757}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * ( Max( AMS,FirstVNF_Mem ) / Max( PN,ARS ) ) ) ,( ( CRS / DDR ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( DS / DS ) ) * ( ( CS / MLU ) * Max( MUC,RCSe ) ) ) * ( RRSe - MLU ) )", "obj1": 0.14173228346456693, "obj2": 0.7115346435561747}, {"determining": "( ( Min( Max( FirstVNF_Mem_Server,ARS ) ,Min( AMS ,FirstVNF_RAM_Server ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) + Min( MDR ,Const ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * ( DDR - DDR ) ) + Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUR ,RRSe ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) )", "obj1": 0.4074803149606299, "obj2": 0.458356829952622}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) / Min( PN ,MDR ) ) ) )", "choosing": "Min( ( ( ( RRSe - RCSe ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.23643311435787392}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) - Max( FirstVNF_Mem,ACS ) )", "choosing": "Min( Min( ( ( RRSe / RMSe ) * Min( MLU ,RCSe ) ) ,( Max( RMSe,RCSe ) + ( MUR * RRSe ) ) ) ,( ( ( MUC / CS ) / ( MUC * RRSe ) ) / Max( Max( RCSe,RMSe ),( MUR - DS ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.553553534704757}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM_Server ),( DDR + BR ) ),( ( MDR + AMS ) - ( ACS * FirstVNF_Mem_Server ) ) ),( Min( Max( BR,ACS ) ,( MRS / DDR ) ) + Min( ( ACS * MDR ) ,Min( Const ,BR ) ) ) )", "choosing": "( ( ( ( DS / RCSe ) / Min( RCSe ,MUC ) ) + Max( ( CS * DS ),Min( RMSe ,CS ) ) ) / ( ( ( RCSe / RCSe ) / ( MLU + RRSe ) ) / ( Min( RMSe ,CS ) + ( MUC * RMSe ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.3978597640456897}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_Mem_Server / CRS ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR + FirstVNF_RAM ) ,FirstVNF_Mem ) + ( AMS / DDR ) )", "choosing": "Min( Max( ( Max( MUC,DS ) / Min( MLU ,RMSe ) ),Min( Min( MUC ,MUM ) ,Min( MLU ,RMSe ) ) ) ,( ( Min( CS ,MUR ) / ( MUC / CS ) ) / ( Min( RCSe ,MUC ) * ( RRSe + RMSe ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.6748535984042362}, {"determining": "( ( ( MRS * CRS ) * CRS ) / Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RMSe - RMSe ) * Max( CS,RRSe ) ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( MUR + RCSe ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5139918034804799}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * MRS ) - DDR ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( Max( Max( MUC,( RRSe / RRSe ) ),RRSe ) * ( RRSe * DS ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4509641773630226}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( RRSe / MUM ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + MUM ) )", "obj1": 0.2736220472440945, "obj2": 0.5886143011348082}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.40696368233465674}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * Const ) ,DDR ) * ( DDR + BR ) )", "choosing": "( Max( MLU,MUM ) * ( RMSe * RRSe ) )", "obj1": 0.30708661417322836, "obj2": 0.5678226138133238}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) / Max( FirstVNF_RAM,RRS ) )", "choosing": "( Max( ( ( MUM * MUC ) + Max( MLU,MUM ) ),( Min( MUM ,CS ) + ( CS * RMSe ) ) ) - Min( ( ( MUM / MUM ) / ( MUC * DS ) ) ,Min( ( RMSe + MUR ) ,( MLU * MUC ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6192003440235139}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * ( FirstVNF_Mem + ACS ) ) ,Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( ( DS / RCSe ) / ( RRSe - RMSe ) ) ,Min( ( MLU * RRSe ) ,( RRSe + RMSe ) ) ) / ( Min( ( DS / MUC ) ,( RCSe + RMSe ) ) - ( ( DS * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.6954423220204413}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR * FirstVNF_CPU_Server ) * PN ) ,( DDR / FirstVNF_RAM ) )", "choosing": "Min( Max( ( ( RRSe / RCSe ) + ( RCSe / MUC ) ),( Max( MLU,MLU ) / Min( MUR ,MLU ) ) ) ,( ( ( DS / CS ) * ( CS - RRSe ) ) * ( ( DS + RCSe ) - Max( RMSe,RRSe ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.6615148560192482}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( ACS / ( ARS * FirstVNF_CPU_Server ) ) ) - ( MRS - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( ( Max( MUM,DS ) * ( Max( MUR,CS ) + MUR ) ) + Max( Min( MUR ,RRSe ),RMSe ) ),Max( MUM,CS ) ) ,( ( ( MLU / RMSe ) / ( DS / MUC ) ) + Max( ( MUM + DS ),( MUC + DS ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.48123425542325343}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,AMS ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( MUC,( Max( ( CS - ( CS * RCSe ) ),( Max( CS,MUC ) * CS ) ) * RMSe ) ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "Max( ( PN + ARS ),( MDR / Min( Min( MDR ,Const ) ,PN ) ) )", "choosing": "( ( CS * ( MUM + RMSe ) ) + ( MUR - Max( ( RMSe * MLU ),MUM ) ) )", "obj1": 0.41141732283464566, "obj2": 0.5071037614208483}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,( ( AMS - ( ACS * Const ) ) + RRS ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + ( MUC * Min( Min( CS ,DS ) ,RRSe ) ) ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05383662003701402}], "2": [{"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ACS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( ( ( DS / MLU ) / ( MLU - RRSe ) ) + ( ( RCSe * MUC ) / ( CS + CS ) ) ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM ) ,AMS ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),Max( ( ( ( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) - ( MUR - ( ( MUM - MUC ) / ( Min( MUM ,RCSe ) + RCSe ) ) ) ) * DS ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Min( Const ,RRS ) )", "choosing": "( Max( ( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7364360857010795}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,( ( AMS - ( ACS * Const ) ) + RRS ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + ( MUC * Min( Min( CS ,DS ) ,RRSe ) ) ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.9035433070866141, "obj2": 0.08930967253869679}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( Min( Const ,FirstVNF_CPU_Server ) + Max( DDR,FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( Min( Max( MLU,MUR ) ,( MUR + RMSe ) ) - ( Min( ( RMSe * ( ( Max( Min( DS ,CS ),( MLU * MUM ) ) * DS ) / MUM ) ) ,Max( MUR,MUM ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6040910671908163}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * MRS ) - DDR ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( Max( Max( MUC,( RRSe / RRSe ) ),RRSe ) * ( RRSe * DS ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( CRS,RRS ) ) )", "choosing": "( ( ( DS / CS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.5570866141732284, "obj2": 0.30118459941854075}, {"determining": "( ( ( PN * FirstVNF_Mem ) * PN ) * ( ( FirstVNF_RAM_Server + CRS ) * CRS ) )", "choosing": "( Min( ( MUM / DS ) ,( RCSe * MLU ) ) / Max( ( MUR / DS ),( RCSe + CS ) ) )", "obj1": 0.6318897637795275, "obj2": 0.2858611933676722}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.40696368233465674}, {"determining": "Min( ( ARS * ( FirstVNF_Mem + ACS ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_RAM + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( DS / RCSe ) / ( RRSe - RMSe ) ) ,Min( ( MLU * RRSe ) ,( RRSe + RMSe ) ) ) / ( Min( ( DS / MUC ) ,( RCSe + RMSe ) ) - ( ( CS * RCSe ) - ( MUC / DS ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.3787945334494578}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( RRSe / ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + MUM ) )", "obj1": 0.10433070866141732, "obj2": 0.6785982307197002}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe / CS ) ,( RCSe * DS ) ) / ( DS - RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.6524084005657941}, {"determining": "( ( Min( Max( FirstVNF_Mem_Server,ARS ) ,Min( AMS ,FirstVNF_RAM_Server ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) + Min( MDR ,Const ) ) ) - ( Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) / Min( PN ,MDR ) ) ) ) + Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUR ,RRSe ) * ( MLU + ( ( MUC * Min( ( ( ( RRSe - RCSe ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) ) ) / MUR ) ) )", "obj1": 0.5334645669291339, "obj2": 0.34135836840031514}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),( ( MDR * Const ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( RMSe * DS ) * Max( MUM,( MUM * ( RMSe * Min( ( MLU / ( MUM + RRSe ) ) ,( ( CS / RRSe ) - Max( MUM,MLU ) ) ) ) ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_Mem_Server / CRS ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( PN * AMS ) ) / FirstVNF_CPU ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( ( MUR * MLU ) + DS ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.36899879538342517}, {"determining": "( ( ( BR + Const ) + ( Const - FirstVNF_Mem ) ) + ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RCSe + RRSe ) * ( Min( ( RMSe * DS ) ,Max( MUR,MUM ) ) + MUM ) )", "obj1": 0.547244094488189, "obj2": 0.3337787425976494}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5021836740580374}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + RRS )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04370768710768548}, {"determining": "( ( ARS * PN ) + Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "( ( ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) ) ) / CS ) - ( MUR / MUR ) )", "obj1": 0.22244094488188976, "obj2": 0.5232648909202262}, {"determining": "( ( ( MDR * Const ) / FirstVNF_Mem_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) )", "choosing": "Max( Min( ( RCSe * CS ) ,MUM ),( ( CS / RRSe ) - Max( MUM,MLU ) ) )", "obj1": 0.9901574803149606, "obj2": 0.010945670430212525}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "( ( ( CRS / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( ( ( AMS + ( FirstVNF_RAM + Const ) ) * ( Const * Const ) ),MRS ) ) * CRS ) )", "choosing": "( Min( ( MUM / DS ) ,( RMSe - Min( Max( DS,Max( CS,RCSe ) ) ,( ( MUM - Max( RCSe,RCSe ) ) - ( Max( MUR,( MUR - MUM ) ) / ( RCSe * MUR ) ) ) ) ) ) / ( ( RCSe / MUR ) + ( MLU + CS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.46066889092067903}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),( ( MDR * Const ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( RMSe * DS ) * Max( MUM,( MUM * ( RMSe * Min( ( MLU / ( MUM + RRSe ) ) ,( ( CS / RRSe ) - Max( MUM,MLU ) ) ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.24503404546384203}, {"determining": "Min( ( PN + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( RCSe * Min( CS ,MUR ) ) )", "obj1": 0.4074803149606299, "obj2": 0.433778410565478}, {"determining": "( ( ( ( FirstVNF_CPU / RRS ) + ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / DDR ) * ( DDR + BR ) )", "choosing": "( ( ( Max( RMSe,CS ) * Max( RMSe,MUC ) ) - MUR ) * CS )", "obj1": 0.90748031496063, "obj2": 0.07038445767673089}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4509641773630226}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * MUC )", "obj1": 0.32086614173228345, "obj2": 0.46596902151109226}, {"determining": "Min( ACS ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RCSe - Max( Min( RCSe ,MLU ),Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.026687823164959698}, {"determining": "( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( CRS,Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( MUC / RMSe ) * ( RCSe * MLU ) ) + ( ( DS / DS ) / CS ) )", "obj1": 0.3031496062992126, "obj2": 0.4861691318473244}, {"determining": "Min( ( MDR + Min( FirstVNF_CPU ,CRS ) ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( RCSe,MUM ) - ( RCSe - MUM ) )", "obj1": 0.9566929133858267, "obj2": 0.03085736771945251}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( RCSe ,( RCSe * DS ) )", "obj1": 0.6988188976377953, "obj2": 0.2161811375723325}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( FirstVNF_Mem_Server + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( Min( ( RRSe / MUM ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + MUM ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.05286625234717803}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + Min( ( MUC / ( CS - DS ) ) ,( ( RMSe * DS ) * Max( MUM,DS ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.23280101664506805}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,AMS ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( MUC,( Max( ( CS - ( CS * RCSe ) ),( Max( CS,MUC ) * CS ) ) * RMSe ) ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ( MDR + FirstVNF_RAM ) ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - MUC ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5189024733365644}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + DDR ) )", "choosing": "Min( ( ( ( RRSe - ( MLU + ( ( MUC * RMSe ) / MUR ) ) ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.2267355465979186}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( ( ( CRS * RRS ) / Min( Const ,ARS ) ),MRS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Min( AMS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe * MLU ) ,Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.46587329416211004}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * Const ) )", "choosing": "Min( ( MUM * ( ( MLU * Max( MLU,RRSe ) ) - ( Max( RCSe,MUR ) + Max( RCSe,RCSe ) ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( ( FirstVNF_RAM / ( ACS / RRS ) ) - ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ) ,( ( ( MLU / RMSe ) / ( DS / MUC ) ) + Max( ( MUM + DS ),( MUC + DS ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5045130936866004}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( MUM - MUM ) )", "obj1": 0.9980314960629921, "obj2": 0.0009288387950656464}, {"determining": "Min( ( FirstVNF_Mem_Server + ( Max( MDR,FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),FirstVNF_RAM ) ) ) ,Max( FirstVNF_Mem,DDR ) )", "choosing": "Max( ( RRSe + DS ),( MUM - RMSe ) )", "obj1": 0.40551181102362205, "obj2": 0.44853922955279313}, {"determining": "Min( ( AMS + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( ( RRSe - MUC ),MUM ) - ( RCSe - MUM ) )", "obj1": 0.9566929133858267, "obj2": 0.03085736771945251}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) - ( BR * MDR ) )", "choosing": "( ( MUC + MLU ) * Min( MUC ,MUM ) )", "obj1": 0.4035433070866142, "obj2": 0.46573366136873995}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,MLU ),( Max( MUC,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RCSe - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( ( DDR + FirstVNF_RAM_Server ),DDR ) )", "choosing": "Max( Max( MUR,DS ),MUM )", "obj1": 0.40551181102362205, "obj2": 0.45033048253554725}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Max( RRS,( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "Max( Min( Max( ( DS * RCSe ),MUM ) ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( AMS - AMS ) / MDR ) )", "choosing": "( ( MLU + MLU ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - AMS ) - AMS ) - FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( DS - RCSe ) - RCSe ),( ( ( MUR + Max( Min( MUR ,( ( MUR + MUR ) + MUC ) ),RCSe ) ) + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) * ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) + ( ( Min( RCSe ,Max( RRSe,MLU ) ) - RRSe ) + Min( ( ( MLU - MUM ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ACS + PN ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( Min( ( ( DS - RRSe ) * RCSe ) ,DS ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "Max( ( MUM - RCSe ),Max( Max( MUR,DS ),( MUM - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,BR ) + MDR ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( ( ( DS - ( MLU / ( ( RRSe - MUM ) - ( DS + MUM ) ) ) ) * RRSe ) ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS * FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ,CRS ) - ( AMS - RRS ) )", "choosing": "Max( Min( RCSe ,Min( MUR ,Min( DS ,( RRSe + RRSe ) ) ) ),( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - FirstVNF_Mem_Server )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server - MRS ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( RMSe ,DS ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( CS + RRSe ) ,RCSe ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * ( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) ) ) + Const ) ) )", "choosing": "( ( Min( ( DS / RRSe ) ,RCSe ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - PN ) - Min( ACS ,MDR ) )", "choosing": "( Min( ( CS / MUM ) ,Max( MUC,RMSe ) ) + Min( MUM ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,CRS ) / ( CRS - FirstVNF_CPU ) )", "choosing": "Min( RRSe ,( MUR - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ARS ) + ( ( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) ) / BR ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( FirstVNF_Mem / ARS ) )", "choosing": "( Min( CS ,RRSe ) * Min( Max( Min( RRSe ,DS ),( MLU * CS ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( ( FirstVNF_CPU * DDR ) * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( Min( CS ,RCSe ) / Min( ( CS - CS ) ,CS ) ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - FirstVNF_CPU )", "choosing": "Max( ( CS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - Max( MDR,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( MUC + Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * ( Max( ( MDR + PN ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - ( ( Max( RRSe,DS ) * ( RCSe / MUC ) ) - Max( ( MUC - MUM ),Min( DS ,DS ) ) ) ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( Min( ( RRSe + RCSe ) ,( DS / DS ) ) + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - ( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_Mem_Server / CRS ) ) ) ) ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + Min( Min( MUC ,MUM ) ,Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - ( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RMSe - RMSe ) * Max( CS,RRSe ) ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( RRSe / MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / RCSe ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + ( ( ( FirstVNF_CPU / RRS ) + ARS ) / DDR ) ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + ( ( ( Max( RMSe,CS ) * Max( RMSe,MUC ) ) - MUR ) * ( RMSe * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,Max( FirstVNF_RAM,RRS ) )", "choosing": "( Max( MUM,( ( ( ( MUM * MUC ) + Max( MLU,MUM ) ) * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS * ( FirstVNF_Mem + ACS ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( Min( ( ( DS / RCSe ) / ( RRSe - RMSe ) ) ,Min( ( MLU * RRSe ) ,( RRSe + RMSe ) ) ) ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) * AMS ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( ( Max( ( RRSe + MUR ),MLU ) + Max( MUC,RRSe ) ) - ( Min( ( RMSe * ( ( Max( Min( DS ,CS ),( MLU * MUM ) ) * DS ) / MUM ) ) ,Max( MUR,MUM ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ACS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( ( ( DS / MLU ) / ( MLU - RRSe ) ) + ( ( RCSe * MUC ) / ( CS + CS ) ) ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Min( Const ,RRS ) )", "choosing": "( Max( ( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7364360857010795}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,( ( AMS - ( ACS * Const ) ) + RRS ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + ( MUC * Min( Min( CS ,DS ) ,RRSe ) ) ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.9035433070866141, "obj2": 0.08930967253869679}, {"determining": "Min( ( FirstVNF_Mem_Server + ( Max( MDR,FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),FirstVNF_RAM ) ) ) ,Max( FirstVNF_Mem,DDR ) )", "choosing": "Max( ( RRSe + DS ),( MUM - RMSe ) )", "obj1": 0.7283464566929134, "obj2": 0.2039500248636346}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) - Max( ACS,( Const / MRS ) ) ) * ARS ) + ( AMS - PN ) )", "choosing": "( Min( ( Max( MUC,Max( ( DS - ( MUM - RMSe ) ),RCSe ) ) * ( Max( MLU,MUM ) - MUM ) ) ,( RCSe * CS ) ) / ( RCSe * Max( ( DS + ( Min( RRSe ,RCSe ) + ( ( MUM / RMSe ) - MLU ) ) ),( ( Max( ( RMSe * MLU ),MUR ) + MUM ) + MLU ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6255896798158087}, {"determining": "( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ),Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( MUC / RMSe ) * ( RCSe * MLU ) ) + ( ( ( ( DS / DS ) / CS ) / DS ) / CS ) )", "obj1": 0.16338582677165353, "obj2": 0.5573952603448448}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - CS ) ) / Max( MUC,RCSe ) ) ) ) ) / CS ) - ( MUR / MUR ) )", "obj1": 0.3405511811023622, "obj2": 0.4343205087116999}, {"determining": "Min( ( Max( DDR,PN ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( MUR * ( Min( MUM ,MLU ) / MUR ) ) * RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.3861849070412609}, {"determining": "( ( Min( Max( FirstVNF_Mem_Server,ARS ) ,Min( AMS ,FirstVNF_RAM_Server ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) + Min( MDR ,Const ) ) ) - ( Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) / Min( PN ,MDR ) ) ) ) + Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUR ,RRSe ) * ( MLU + ( ( MUC * Min( ( ( ( RRSe - RCSe ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) ) ) / MUR ) ) )", "obj1": 0.5334645669291339, "obj2": 0.34135836840031514}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),( ( MDR * Const ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( RMSe * DS ) * Max( MUM,( MUM * ( RMSe * Min( ( MLU / ( MUM + RRSe ) ) ,( ( CS / RRSe ) - Max( MUM,MLU ) ) ) ) ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_CPU ) )", "choosing": "( Min( ( MUM * DS ) ,Min( DS ,MLU ) ) + ( MUM + MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.2830948146574783}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( PN * Min( Max( ACS,FirstVNF_RAM_Server ) ,MDR ) ) ) / FirstVNF_CPU ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( ( ( ( MUM / RRSe ) + Min( MUM ,RRSe ) ) * MLU ) + DS ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5019685039370079, "obj2": 0.37354644249925567}, {"determining": "( ( ( Min( Const ,RRS ) / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( AMS,MRS ) ) * CRS ) )", "choosing": "( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / ( ( RCSe / MUR ) + ( MLU + CS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7235480739423473}, {"determining": "( ( ARS * PN ) + ( ( ( AMS / MRS ) + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - RRSe ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.416217465566606}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) * ( RRS - CRS ) ) / ( ( MRS * AMS ) - Min( BR ,ACS ) ) )", "choosing": "Min( ( MUM / RMSe ) ,( RRSe - RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.3209188374341898}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + RRS )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04370768710768548}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( PN * AMS ) ) / FirstVNF_CPU ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( ( MUR * MLU ) + DS ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5078740157480315, "obj2": 0.36899879538342517}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + ( Max( ACS,( RRS + RRS ) ) * ( Const + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( ( Max( RCSe,CS ) + ( DS + MLU ) ) - ( MUR + MUC ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5226079826261486}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * MUC )", "obj1": 0.32086614173228345, "obj2": 0.46596902151109226}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( ( Max( MUC,MUM ) - ( RCSe - MUM ) ) - ( RCSe - Max( Min( RCSe ,MLU ),Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.029728146616072603}, {"determining": "( ( ( FirstVNF_Mem_Server * RRS ) + Max( ( BR - MRS ),( BR + DDR ) ) ) * AMS )", "choosing": "( Min( Max( MLU,MUR ) ,( MUR + RMSe ) ) - ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.29949704417762724}, {"determining": "( ( ARS * PN ) + ARS )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - ( MLU * Max( MUC,( MUR * MUM ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4557797469783233}, {"determining": "( ( ( MDR * Const ) / FirstVNF_Mem_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) )", "choosing": "Max( Min( ( RCSe * CS ) ,MUM ),( ( CS / RRSe ) - Max( MUM,MLU ) ) )", "obj1": 0.9901574803149606, "obj2": 0.010945670430212525}, {"determining": "( Min( ( AMS / MRS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) + Min( Max( FirstVNF_Mem_Server,AMS ) ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,MLU ) ) ) ) ) / CS ) - ( MUM / MUR ) )", "obj1": 0.281496062992126, "obj2": 0.4976680756384003}, {"determining": "( ( ( ( FirstVNF_CPU / RRS ) + ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / DDR ) * ( DDR + BR ) )", "choosing": "( ( ( Max( RMSe,CS ) * Max( RMSe,MUC ) ) - MUR ) * CS )", "obj1": 0.90748031496063, "obj2": 0.07038445767673089}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * MRS ) - DDR ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( Max( Max( MUC,( RRSe / RRSe ) ),RRSe ) * ( RRSe * DS ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Min( ACS ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RCSe - Max( Min( RCSe ,MLU ),Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.026687823164959698}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( CRS,RRS ) ) )", "choosing": "( ( ( DS / CS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.5570866141732284, "obj2": 0.30118459941854075}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ( MDR + FirstVNF_RAM ) ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - MUC ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5189024733365644}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( Min( ( RCSe / CS ) ,( RCSe * DS ) ) / ( DS - RRSe ) ) / CS ) ,( RCSe * DS ) ) / ( DS - RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.300676936948864}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.40696368233465674}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( RCSe ,( RCSe * DS ) )", "obj1": 0.6988188976377953, "obj2": 0.2161811375723325}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( FirstVNF_Mem_Server + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( Min( ( RRSe / MUM ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + MUM ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.05286625234717803}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5021836740580374}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Min( AMS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( ( ( MUM * MUR ) - RRSe ) ,MLU ) / ( ( MUM - MLU ) * DS ) ) ,( DS + Min( ( RRSe - RRSe ) ,DS ) ) )", "obj1": 0.6614173228346457, "obj2": 0.25319576339784494}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + Min( ( MUC / ( CS - DS ) ) ,( ( RMSe * DS ) * Max( MUM,DS ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.23280101664506805}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,AMS ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( MUC,( Max( ( CS - ( CS * RCSe ) ),( Max( CS,MUC ) * CS ) ) * RMSe ) ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "( ( ( ( BR + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) * PN ) + ( ( BR + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,MUC ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.48408880952098376}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),( ( MDR * Const ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( RMSe * DS ) * Max( MUM,( MUM * ( RMSe * Min( ( MLU / ( MUM + RRSe ) ) ,( ( CS / RRSe ) - Max( MUM,MLU ) ) ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.24503404546384203}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + DDR ) )", "choosing": "Min( ( ( ( RRSe - ( MLU + ( ( MUC * RMSe ) / MUR ) ) ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.2267355465979186}, {"determining": "( ( FirstVNF_RAM / ( ACS / RRS ) ) - ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ) ,( ( ( MLU / RMSe ) / ( DS / MUC ) ) + Max( ( MUM + DS ),( MUC + DS ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5045130936866004}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.4119650889339739}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * Const ) )", "choosing": "Min( ( MUM * ( ( MLU * Max( MLU,RRSe ) ) - ( Max( RCSe,MUR ) + Max( RCSe,RCSe ) ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( MDR - ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) - BR ) )", "choosing": "Max( ( Min( CS ,RRSe ) * Min( CS ,MLU ) ),( MUR - DS ) )", "obj1": 0.9960629921259843, "obj2": 0.006035396783079878}, {"determining": "Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem_Server - ( ( Max( MRS,MDR ) - FirstVNF_CPU_Server ) - ( ( ARS * DDR ) - PN ) ) ) )", "choosing": "( ( ( RMSe + MLU ) * RCSe ) / Max( Min( CS ,Max( ( Max( Max( CS,RMSe ),MLU ) * ( RMSe + RRSe ) ),MUC ) ),MUC ) )", "obj1": 0.687007874015748, "obj2": 0.22554685882513423}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.4119650889339739}, {"determining": "( Min( CRS ,( FirstVNF_CPU_Server - Min( Max( Const,Const ) ,FirstVNF_RAM ) ) ) * ( ( AMS / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( DS / RMSe ) * ( MLU - ( RCSe * RCSe ) ) ) - RCSe ) - RCSe ),( ( ( RRSe - MLU ) * RMSe ) / MUC ) )", "obj1": 0.9980314960629921, "obj2": 0.0009288387950656464}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,MLU ),( Max( MUC,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,MLU ),( Max( MUC,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( MUM - MUM ) )", "obj1": 0.9980314960629921, "obj2": 0.0009288387950656464}, {"determining": "( Min( ( ARS - FirstVNF_RAM ) ,AMS ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),Max( ( ( ( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) - ( MUR - ( ( MUM - MUC ) / ( Min( MUM ,RCSe ) + RCSe ) ) ) ) * DS ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Max( RRS,( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "Max( Min( Max( ( DS * RCSe ),MUM ) ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( AMS - AMS ) / MDR ) )", "choosing": "( ( MLU + MLU ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - AMS ) - AMS ) - FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( DS - RCSe ) - RCSe ),( ( ( MUR + Max( Min( MUR ,( ( MUR + MUR ) + MUC ) ),RCSe ) ) + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) * ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) + ( ( Min( RCSe ,Max( RRSe,MLU ) ) - RRSe ) + Min( ( ( MLU - MUM ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ACS + PN ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( Min( ( ( DS - RRSe ) * RCSe ) ,DS ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "Max( ( MUM - RCSe ),Max( Max( MUR,DS ),( MUM - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,BR ) + MDR ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( ( ( DS - ( MLU / ( ( RRSe - MUM ) - ( DS + MUM ) ) ) ) * RRSe ) ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS * FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ,CRS ) - ( AMS - RRS ) )", "choosing": "Max( Min( RCSe ,Min( MUR ,Min( DS ,( RRSe + RRSe ) ) ) ),( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - FirstVNF_Mem_Server )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server - MRS ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( RMSe ,DS ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( CS + RRSe ) ,RCSe ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * ( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) ) ) + Const ) ) )", "choosing": "( ( Min( ( DS / RRSe ) ,RCSe ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - PN ) - Min( ACS ,MDR ) )", "choosing": "( Min( ( CS / MUM ) ,Max( MUC,RMSe ) ) + Min( MUM ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,CRS ) / ( CRS - FirstVNF_CPU ) )", "choosing": "Min( RRSe ,( MUR - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ARS ) + ( ( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) ) / BR ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( FirstVNF_Mem / ARS ) )", "choosing": "( Min( CS ,RRSe ) * Min( Max( Min( RRSe ,DS ),( MLU * CS ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( ( FirstVNF_CPU * DDR ) * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( Min( CS ,RCSe ) / Min( ( CS - CS ) ,CS ) ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - FirstVNF_CPU )", "choosing": "Max( ( CS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - Max( MDR,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( MUC + Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * ( Max( ( MDR + PN ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - ( ( Max( RRSe,DS ) * ( RCSe / MUC ) ) - Max( ( MUC - MUM ),Min( DS ,DS ) ) ) ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( Min( ( RRSe + RCSe ) ,( DS / DS ) ) + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - ( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_Mem_Server / CRS ) ) ) ) ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + Min( Min( MUC ,MUM ) ,Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - ( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RMSe - RMSe ) * Max( CS,RRSe ) ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( RRSe / MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( ( FirstVNF_CPU_Server - PN ) + Max( DDR,FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( Min( Max( MLU,MUR ) ,( MUR + RMSe ) ) - ( ( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( RMSe ,DS ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) * AMS ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( ( Max( ( RRSe + MUR ),MLU ) + Max( MUC,RRSe ) ) - ( Min( ( RMSe * ( ( Max( Min( DS ,CS ),( MLU * MUM ) ) * DS ) / MUM ) ) ,Max( MUR,MUM ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Min( Const ,RRS ) )", "choosing": "( Max( ( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7364360857010795}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) - ( ( Max( MDR,FirstVNF_CPU ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) * ARS ) ) * ARS ) + RRS )", "choosing": "( Min( RCSe ,( RCSe * CS ) ) / ( DS - MUC ) )", "obj1": 0.08661417322834646, "obj2": 0.6225659566192787}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( RCSe - DS ) )", "obj1": 0.8051181102362205, "obj2": 0.15700454068093825}, {"determining": "( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ),Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( MUC / RMSe ) * ( RCSe * MLU ) ) + ( ( ( ( DS / DS ) / CS ) / DS ) / CS ) )", "obj1": 0.16338582677165353, "obj2": 0.5573952603448448}, {"determining": "( ( CRS + Const ) - FirstVNF_Mem )", "choosing": "( ( DS / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 0.8366141732283464, "obj2": 0.12548986374614776}, {"determining": "Min( ( FirstVNF_Mem_Server + ( Max( MDR,FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),FirstVNF_RAM ) ) ) ,Max( FirstVNF_Mem,DDR ) )", "choosing": "Max( ( RRSe + DS ),( MUM - RMSe ) )", "obj1": 0.7283464566929134, "obj2": 0.2039500248636346}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,( ( AMS - ( ACS * Const ) ) + RRS ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + ( MUC * Min( Min( CS ,DS ) ,RRSe ) ) ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.9035433070866141, "obj2": 0.08930967253869679}, {"determining": "( PN / Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( RMSe ,DS ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( RRSe / MUC ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3737557612891318}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "( ( ( FirstVNF_CPU_Server + BR ) * PN ) + Min( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( DS / MUC ) ) ) ) / ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) - ( MUR / MUR ) )", "obj1": 0.5019685039370079, "obj2": 0.36432839484529966}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_CPU ) )", "choosing": "( Min( ( MUM * DS ) ,Min( DS ,MLU ) ) + ( MUM + MLU ) )", "obj1": 0.6082677165354331, "obj2": 0.2830948146574783}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.6318897637795275, "obj2": 0.24174565971114334}, {"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - CS ) ) / Max( MUC,RCSe ) ) ) ) ) / CS ) - ( MUR / MUR ) )", "obj1": 0.3405511811023622, "obj2": 0.4343205087116999}, {"determining": "( ( ( Min( Const ,RRS ) / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( AMS,MRS ) ) * CRS ) )", "choosing": "( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / ( ( RCSe / MUR ) + ( MLU + CS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7235480739423473}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( ( ( DS / Max( Max( ( MUM - RCSe ),DS ),MUM ) ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.6417322834645669, "obj2": 0.23108968223514187}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * MUC )", "obj1": 0.32086614173228345, "obj2": 0.46596902151109226}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + RRS )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04370768710768548}, {"determining": "( ( ARS * PN ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4217227928342498}, {"determining": "( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),( PN * ( ARS + CRS ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),( Max( ( Max( ( MUR / DS ),( RCSe + CS ) ) - Min( Min( MUM ,MLU ) ,( MUR * MUR ) ) ),MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9547244094488189, "obj2": 0.034713878380603726}, {"determining": "( ( ( FirstVNF_Mem_Server * RRS ) + Max( ( BR - MRS ),( BR + DDR ) ) ) * AMS )", "choosing": "( Min( Max( MLU,MUR ) ,( MUR + RMSe ) ) - ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.29949704417762724}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) )", "choosing": "( Min( ( DS / CS ) ,( RCSe * DS ) ) / ( DS - RRSe ) )", "obj1": 0.07480314960629922, "obj2": 0.7074647733358559}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( PN * AMS ) ) / FirstVNF_CPU ) ,Min( ( ARS + Const ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( ( MUR * MLU ) + DS ) * MUM ) + Min( ( MUR / RCSe ) ,MUM ) )", "obj1": 0.5177165354330708, "obj2": 0.356196922644533}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) * ( RRS - CRS ) ) / ( ( MRS * AMS ) - Min( BR ,ACS ) ) )", "choosing": "Min( ( MUM / RMSe ) ,( RRSe - RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.3209188374341898}, {"determining": "( ( ARS * PN ) + ( ( ( AMS / Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( MUM + MLU ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - RRSe ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4013516895192889}, {"determining": "( ( ( ( FirstVNF_CPU / RRS ) + ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / DDR ) * ( DDR + BR ) )", "choosing": "( ( ( Max( RMSe,CS ) * Max( RMSe,MUC ) ) - MUR ) * CS )", "obj1": 0.90748031496063, "obj2": 0.07038445767673089}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / Max( ACS,( ( ARS - PN ) - Min( Max( ACS,FirstVNF_RAM_Server ) ,MDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RRSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.4889044905541984}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + ( Const - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( DS - RCSe ) + ( MUM + MLU ) ),( RRSe / ( RRSe / RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.014860599565266492}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + DDR ) )", "choosing": "Min( ( ( ( RRSe - ( MLU + ( ( MUC * RMSe ) / MUR ) ) ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.2267355465979186}, {"determining": "( ( Min( Max( FirstVNF_Mem_Server,ARS ) ,Min( AMS ,FirstVNF_RAM_Server ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) + Min( MDR ,Const ) ) ) - ( Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) / Min( PN ,MDR ) ) ) ) + Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUR ,RRSe ) * ( MLU + ( ( MUC * Min( ( ( ( RRSe - RCSe ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) ) ) / MUR ) ) )", "obj1": 0.5334645669291339, "obj2": 0.34135836840031514}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( CRS,RRS ) ) )", "choosing": "( ( ( DS / CS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.5570866141732284, "obj2": 0.30118459941854075}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,AMS ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * ( ( RMSe + MLU ) + ( MUR / MLU ) ) )", "obj1": 0.1968503937007874, "obj2": 0.5409148800979793}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( Min( ( RCSe / CS ) ,( RCSe * DS ) ) / ( DS - RRSe ) ) / CS ) ,( RCSe * DS ) ) / ( DS - RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.300676936948864}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + ( Max( ACS,( RRS + RRS ) ) * ( Const + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( ( Max( RCSe,CS ) + ( DS + MLU ) ) - ( MUR + MUC ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5226079826261486}, {"determining": "( ( DDR - FirstVNF_RAM ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - Min( FirstVNF_CPU ,BR ) ) ) )", "choosing": "Max( ( ( ( MUC / MUM ) / ( ( RMSe + ( DS * DS ) ) * RMSe ) ) / Min( RRSe ,( MUM * CS ) ) ),( Max( RCSe,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9566929133858267, "obj2": 0.0258241575701415}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( RCSe ,( RCSe * DS ) )", "obj1": 0.6988188976377953, "obj2": 0.2161811375723325}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( FirstVNF_Mem_Server + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( Min( ( RRSe / MUM ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + MUM ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.05286625234717803}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ( MDR + FirstVNF_RAM ) ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - MUC ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5189024733365644}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( ( ARS * PN ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( DS / ( MUM * MUR ) ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.40267622187834917}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5079991928624397}, {"determining": "( ( ARS * PN ) + Min( Min( ARS ,( ARS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - RCSe ) ) / Max( MUC,RCSe ) ) ) ) ) / ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) - ( MUR / MUR ) )", "obj1": 0.5374015748031497, "obj2": 0.33214278041779866}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + Max( RRSe,( DS / ( MUM * MUR ) ) ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.45359036486976045}, {"determining": "( ( ( ( BR + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) * PN ) + ( ( BR + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,MUC ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.48408880952098376}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * MRS ) - DDR ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( Max( Max( MUC,( RRSe / RRSe ) ),RRSe ) * ( RRSe * DS ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( MDR * Const ) / FirstVNF_Mem_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) )", "choosing": "Max( Min( ( RCSe * CS ) ,MUM ),( ( CS / RRSe ) - Max( MUM,MLU ) ) )", "obj1": 0.9901574803149606, "obj2": 0.010945670430212525}, {"determining": "( ( ARS * PN ) + ARS )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - ( MLU * Max( MUC,( MUR * MUM ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4557797469783233}, {"determining": "( ( FirstVNF_RAM / ( ACS / RRS ) ) - ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ) ,( ( ( MLU / RMSe ) / ( DS / MUC ) ) + Max( ( MUM + DS ),( MUC + DS ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5045130936866004}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) - Min( ( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) ,( FirstVNF_CPU - BR ) ) ) * ARS ) + RRS )", "choosing": "( Min( RCSe ,( RCSe * CS ) ) / ( ( Min( RCSe ,( RCSe * CS ) ) / ( DS - MUC ) ) - MUC ) )", "obj1": 0.2637795275590551, "obj2": 0.4990200768605145}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5021836740580374}, {"determining": "Min( ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / Max( PN,ARS ) ) ) ,( ( CRS / DDR ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( DS / DS ) ) * ( ( CS / MLU ) * Max( MUC,RCSe ) ) ) * ( ( MLU - Max( CS,RRSe ) ) - MLU ) )", "obj1": 0.21653543307086615, "obj2": 0.5210311076797814}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ARS * PN ) + ( ( ( AMS / MRS ) + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - RRSe ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.416217465566606}, {"determining": "( MDR - ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) - BR ) )", "choosing": "Max( ( Min( CS ,RRSe ) * Min( CS ,MLU ) ),( MUR - DS ) )", "obj1": 0.9960629921259843, "obj2": 0.006035396783079878}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.4119650889339739}, {"determining": "Min( ( Const + ( ARS / ARS ) ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,Min( DS ,( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem_Server - ( ( Max( MRS,MDR ) - FirstVNF_CPU_Server ) - ( ( ARS * DDR ) - PN ) ) ) )", "choosing": "( ( ( RMSe + MLU ) * RCSe ) / Max( Min( CS ,Max( ( Max( Max( CS,RMSe ),MLU ) * ( RMSe + RRSe ) ),MUC ) ),MUC ) )", "obj1": 0.687007874015748, "obj2": 0.22554685882513423}, {"determining": "( ( Min( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * RRSe ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.4127877326990638}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.4119650889339739}, {"determining": "( ( PN - ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) + ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Min( RRSe ,RCSe ) - RCSe ) / ( RRSe - RCSe ) ) - ( RRSe - RCSe ) ) - RCSe ),( RRSe / MUC ) )", "obj1": 0.9980314960629921, "obj2": 0.0009288387950656464}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * Const ) )", "choosing": "Min( ( MUM * ( ( MLU * Max( MLU,RRSe ) ) - ( Max( RCSe,MUR ) + Max( RCSe,RCSe ) ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( Min( CRS ,( FirstVNF_CPU_Server - Min( Max( Const,Const ) ,FirstVNF_RAM ) ) ) * ( ( AMS / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( DS / RMSe ) * ( MLU - ( RCSe * RCSe ) ) ) - RCSe ) - RCSe ),( ( ( RRSe - MLU ) * RMSe ) / MUC ) )", "obj1": 0.9980314960629921, "obj2": 0.0009288387950656464}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ACS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( ( ( DS / MLU ) / ( MLU - RRSe ) ) + ( ( RCSe * MUC ) / ( CS + CS ) ) ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM ) ,AMS ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),Max( ( ( ( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) - ( MUR - ( ( MUM - MUC ) / ( Min( MUM ,RCSe ) + RCSe ) ) ) ) * DS ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Max( RRS,( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "Max( Min( Max( ( DS * RCSe ),MUM ) ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( AMS - AMS ) / MDR ) )", "choosing": "( ( MLU + MLU ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - AMS ) - AMS ) - FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( DS - RCSe ) - RCSe ),( ( ( MUR + Max( Min( MUR ,( ( MUR + MUR ) + MUC ) ),RCSe ) ) + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) * ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) + ( ( Min( RCSe ,Max( RRSe,MLU ) ) - RRSe ) + Min( ( ( MLU - MUM ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ACS + PN ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( Min( ( ( DS - RRSe ) * RCSe ) ,DS ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "Max( ( MUM - RCSe ),Max( Max( MUR,DS ),( MUM - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,BR ) + MDR ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( ( ( DS - ( MLU / ( ( RRSe - MUM ) - ( DS + MUM ) ) ) ) * RRSe ) ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS * FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ,CRS ) - ( AMS - RRS ) )", "choosing": "Max( Min( RCSe ,Min( MUR ,Min( DS ,( RRSe + RRSe ) ) ) ),( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - FirstVNF_Mem_Server )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server - MRS ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( RMSe ,DS ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( CS + RRSe ) ,RCSe ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * ( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) ) ) + Const ) ) )", "choosing": "( ( Min( ( DS / RRSe ) ,RCSe ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - PN ) - Min( ACS ,MDR ) )", "choosing": "( Min( ( CS / MUM ) ,Max( MUC,RMSe ) ) + Min( MUM ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,CRS ) / ( CRS - FirstVNF_CPU ) )", "choosing": "Min( RRSe ,( MUR - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ARS ) + ( ( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) ) / BR ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( FirstVNF_Mem / ARS ) )", "choosing": "( Min( CS ,RRSe ) * Min( Max( Min( RRSe ,DS ),( MLU * CS ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( ( FirstVNF_CPU * DDR ) * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( Min( CS ,RCSe ) / Min( ( CS - CS ) ,CS ) ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - FirstVNF_CPU )", "choosing": "Max( ( CS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( ( CRS - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + ACS ) ) ,Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( DS * Min( RMSe ,MUR ) ) / ( Min( ( DS / MUC ) ,( RCSe + RMSe ) ) - ( ( DS * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( ( FirstVNF_CPU_Server - PN ) + Max( DDR,FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( Min( Max( MLU,MUR ) ,( MUR + RMSe ) ) - ( ( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( RMSe ,DS ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + ( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) ) ),( FirstVNF_Mem_Server - ( Min( ARS ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( DS * RCSe ) / Min( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RMSe - RMSe ) * Max( CS,RRSe ) ) ) ,DS ) ) / Min( RMSe ,DS ) )", "obj1": 0.04133858267716536, "obj2": 0.7426494618749472}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * FirstVNF_RAM ) - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.7165354330708661, "obj2": 0.12550147417462987}, {"determining": "( ( CRS + Const ) - FirstVNF_Mem )", "choosing": "( ( DS / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 0.8366141732283464, "obj2": 0.12548986374614776}, {"determining": "( ( ( Max( ( FirstVNF_Mem_Server / PN ),FirstVNF_CPU ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) * ARS ) + RRS )", "choosing": "( Min( ( RCSe * CS ) ,( RCSe * CS ) ) / ( DS - MUC ) )", "obj1": 0.07283464566929133, "obj2": 0.6200764203826529}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / Max( ( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( CS + ( ( RMSe * RCSe ) * ( Max( ( MUC * RCSe ),MUC ) / ( MUC + Max( MUM,MLU ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.588279845403249}, {"determining": "( ( ( MDR * Const ) + FirstVNF_RAM ) / Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) ) ,( ( RMSe - RMSe ) * Max( CS,RRSe ) ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( RRSe / MUC ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6532286717117108}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2604805406027733}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( RCSe ,( RCSe * DS ) )", "obj1": 0.6988188976377953, "obj2": 0.2161811375723325}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,( RRSe - RCSe ) ) )", "obj1": 0.8740157480314961, "obj2": 0.09162057099500276}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( DS - MUC ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.49803149606299213, "obj2": 0.36863375213682165}, {"determining": "( PN / Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( RMSe ,DS ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( RRSe / MUC ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3737557612891318}, {"determining": "( ( ( Min( Const ,RRS ) / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( AMS,MRS ) ) * CRS ) )", "choosing": "( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / ( ( RCSe / MUR ) + ( MLU + CS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7235480739423473}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.6318897637795275, "obj2": 0.24174565971114334}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( CRS,RRS ) ) )", "choosing": "( ( ( DS / CS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.5570866141732284, "obj2": 0.30118459941854075}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) - ( AMS - FirstVNF_Mem ) ) * ARS ) + RRS )", "choosing": "( ( CS - RMSe ) / ( DS - MUC ) )", "obj1": 0.5019685039370079, "obj2": 0.33771752868612387}, {"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - CS ) ) / Max( MUC,RCSe ) ) ) ) ) / CS ) - ( MUR / MUR ) )", "obj1": 0.3405511811023622, "obj2": 0.4343205087116999}, {"determining": "( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ),Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( MUC / RMSe ) * ( RCSe * MLU ) ) + ( ( ( ( DS / DS ) / CS ) / DS ) / CS ) )", "obj1": 0.16338582677165353, "obj2": 0.5573952603448448}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( ( ( DS / Max( Max( ( MUM - RCSe ),DS ),MUM ) ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.6417322834645669, "obj2": 0.23108968223514187}, {"determining": "( ( ARS * PN ) + Min( Min( ARS ,( ARS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - RCSe ) ) / Max( MUC,RCSe ) ) ) ) ) / ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) - ( MUR / MUR ) )", "obj1": 0.5374015748031497, "obj2": 0.33214278041779866}, {"determining": "( ( ARS * PN ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4217227928342498}, {"determining": "( ( ARS - PN ) - Min( Max( ACS,( ( ARS - FirstVNF_Mem ) - Min( Max( ACS,FirstVNF_RAM_Server ) ,MDR ) ) ) ,MDR ) )", "choosing": "( ( MUM / RRSe ) + ( ( DS / ( CS * RCSe ) ) - CS ) )", "obj1": 0.27755905511811024, "obj2": 0.4774731245465421}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) * ( RRS - CRS ) ) / ( ( MRS * AMS ) - Min( BR ,ACS ) ) )", "choosing": "Min( ( MUM / RMSe ) ,( RRSe - RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.3209188374341898}, {"determining": "( ( ARS * PN ) + ( ( ( AMS / Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( MUM + MLU ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - RRSe ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4013516895192889}, {"determining": "( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( ( MUC / MLU ) + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.4746981141028596}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe / CS ) ,( RCSe * DS ) ) / ( DS - RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.03487051844722194}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + DDR ) )", "choosing": "Min( ( ( ( RRSe - ( MLU + ( ( MUC * RMSe ) / MUR ) ) ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.2267355465979186}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,AMS ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * ( ( RMSe + MLU ) + ( MUR / MLU ) ) )", "obj1": 0.1968503937007874, "obj2": 0.5409148800979793}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + RRS )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04370768710768548}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + ( Max( ACS,( RRS + RRS ) ) * ( Const + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( ( Max( RCSe,CS ) + ( DS + MLU ) ) - ( MUR + MUC ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5226079826261486}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( ( RRSe / MUC ),MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5487963606235386}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( ( ARS * PN ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( DS / ( MUM * MUR ) ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.40267622187834917}, {"determining": "( ( ( ( FirstVNF_CPU / RRS ) + ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / DDR ) * ( DDR + BR ) )", "choosing": "( ( ( Max( RMSe,CS ) * Max( RMSe,MUC ) ) - MUR ) * CS )", "obj1": 0.90748031496063, "obj2": 0.07038445767673089}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( FirstVNF_Mem_Server + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( Min( ( RRSe / MUM ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + MUM ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.05286625234717803}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * MUC )", "obj1": 0.32086614173228345, "obj2": 0.46596902151109226}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + Max( RRSe,( DS / ( MUM * MUR ) ) ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.45359036486976045}, {"determining": "( ( Min( RRS ,BR ) + MDR ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( ( ( DS - ( MLU / ( ( RRSe - MUM ) - ( DS + MUM ) ) ) ) * RRSe ) ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 0.9015748031496063, "obj2": 0.07661064591613405}, {"determining": "( ( ARS * PN ) + ( ( BR + ( Min( MDR ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( Max( MUC,DS ) * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.41016067774052417}, {"determining": "( ( ARS * PN ) + ARS )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - ( MLU * Max( MUC,( MUR * MUM ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4557797469783233}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ( MDR + FirstVNF_RAM ) ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - MUC ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5189024733365644}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / Max( ACS,( ( ARS - PN ) - Min( Max( ACS,FirstVNF_RAM_Server ) ,MDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RRSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.4889044905541984}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( ( DDR - FirstVNF_RAM ) ,RRS ) ) + ( Min( ARS ,FirstVNF_CPU ) * ( BR * ARS ) ) )", "choosing": "( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - ( ( ( MUC / MUM ) / ( ( RMSe + ( DS * DS ) ) * RMSe ) ) / Min( RRSe ,( MUM * CS ) ) ) ),( RMSe + MUC ) ) )", "obj1": 0.9547244094488189, "obj2": 0.03351565664164416}, {"determining": "Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Min( Const ,RRS ) )", "choosing": "( Max( ( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7364360857010795}, {"determining": "( ( ( Const - MDR ) * ( Max( ACS,( RRS + RRS ) ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( MUR ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.50985404284318}, {"determining": "( ( ( MDR * Const ) / FirstVNF_Mem_Server ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) )", "choosing": "Max( Min( ( RCSe * CS ) ,MUM ),( ( CS / RRSe ) - Max( MUM,MLU ) ) )", "obj1": 0.9901574803149606, "obj2": 0.010945670430212525}, {"determining": "( ( FirstVNF_RAM / ( ACS / RRS ) ) - ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ) ,( ( ( MLU / RMSe ) / ( DS / MUC ) ) + Max( ( MUM + DS ),( MUC + DS ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5045130936866004}, {"determining": "( ( Min( RRS ,BR ) + MDR ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( ( ( DS - ( MLU / ( ( RRSe - MUM ) - ( DS + MUM ) ) ) ) * RRSe ) ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 0.9015748031496063, "obj2": 0.07661064591613405}, {"determining": "( ( ARS * PN ) + ( ( ( AMS / MRS ) + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - RRSe ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.416217465566606}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5021836740580374}, {"determining": "( Min( ( ARS - ( FirstVNF_RAM + FirstVNF_CPU ) ) ,AMS ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),DS )", "obj1": 0.9645669291338582, "obj2": 0.016831166277029092}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5079991928624397}, {"determining": "Min( ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / Max( PN,ARS ) ) ) ,( ( CRS / DDR ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( DS / DS ) ) * ( ( CS / MLU ) * Max( MUC,RCSe ) ) ) * ( ( MLU - Max( CS,RRSe ) ) - MLU ) )", "obj1": 0.21653543307086615, "obj2": 0.5210311076797814}, {"determining": "Max( ( FirstVNF_RAM + ( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) ) ),( PN - FirstVNF_Mem ) )", "choosing": "( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) ,DS ) )", "obj1": 0.9921259842519685, "obj2": 0.0037148035424347248}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( ( ( ARS * PN ) + Max( FirstVNF_Mem_Server,AMS ) ) * Const ) )", "choosing": "Min( ( MUM * ( ( MLU * Max( MLU,RRSe ) ) - ( Max( ( ( ( RRSe + CS ) + ( RCSe - DS ) ) * Min( MUC ,MUM ) ),MUR ) + Max( RCSe,RCSe ) ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.265748031496063, "obj2": 0.4913787564447343}, {"determining": "( ( PN - ( ( AMS / RRS ) + FirstVNF_RAM_Server ) ) * ( DDR + ( Const - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( DS - RCSe ) + ( MUM + MLU ) ),Max( ( ( ( ( DS / RMSe ) * ( MLU - ( RCSe * RCSe ) ) ) - RCSe ) - RCSe ),( ( ( RRSe - MLU ) * RMSe ) / MUC ) ) )", "obj1": 0.9763779527559056, "obj2": 0.01295659584936656}, {"determining": "( Max( ( FirstVNF_Mem + AMS ),( CRS - FirstVNF_Mem_Server ) ) - ( ( ARS * ( FirstVNF_Mem + ACS ) ) / FirstVNF_CPU ) )", "choosing": "( ( MUM * MLU ) - ( RRSe - RMSe ) )", "obj1": 0.9625984251968503, "obj2": 0.02335721409931692}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * MRS ) - DDR ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( Max( Max( MUC,( RRSe / RRSe ) ),RRSe ) * ( RRSe * DS ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) - Min( ( FirstVNF_Mem_Server / Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) ,( FirstVNF_CPU - BR ) ) ) * ARS ) + RRS )", "choosing": "( Min( RCSe ,( RCSe * CS ) ) / ( ( Min( RCSe ,( RCSe * CS ) ) / ( DS - MUC ) ) - MUC ) )", "obj1": 0.2637795275590551, "obj2": 0.4990200768605145}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * FirstVNF_RAM ) - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.7165354330708661, "obj2": 0.12550147417462987}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + ( Const - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( DS - RCSe ) + ( MUM + MLU ) ),( RRSe / ( RRSe / RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.014860599565266492}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * Const ) )", "choosing": "Min( ( MUM * ( ( MLU * Max( MLU,RRSe ) ) - ( Max( RCSe,MUR ) + Max( RCSe,RCSe ) ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( ( DDR - FirstVNF_RAM ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - Min( FirstVNF_CPU ,BR ) ) ) )", "choosing": "Max( ( ( ( ( ( MLU * RMSe ) - ( RCSe - MUM ) ) / MUM ) / ( ( RMSe + ( DS * DS ) ) * RMSe ) ) / Min( RRSe ,( MUM * CS ) ) ),( Max( RCSe,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9566929133858267, "obj2": 0.0258241575701415}, {"determining": "Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem_Server - ( ( Max( MRS,MDR ) - FirstVNF_CPU_Server ) - ( ( ARS * DDR ) - PN ) ) ) )", "choosing": "( ( ( RMSe + MLU ) * RCSe ) / Max( Min( CS ,Max( ( Max( Max( CS,RMSe ),MLU ) * ( RMSe + RRSe ) ),MUC ) ),MUC ) )", "obj1": 0.687007874015748, "obj2": 0.22554685882513423}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Min( ( Const + ( ARS / ARS ) ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,Min( DS ,( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( ( ARS * PN ) + Min( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) ,( ( ( ARS * PN ) + Min( Min( FirstVNF_CPU ,ARS ) ,( ARS - FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( DS - DS ) ) / Max( MUC,RCSe ) ) ) ) ) / ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) - ( MUR / MUR ) )", "obj1": 0.9980314960629921, "obj2": 0.0006975077085034848}, {"determining": "( ( ( ( ARS * PN ) + Min( Min( FirstVNF_CPU ,( Max( Const,( MDR - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) * PN ) + Min( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( CS + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) ) ) / ( ( ( RRSe + Max( MUC,( RMSe * ( CS + RRSe ) ) ) ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) - ( MUR / MUR ) )", "obj1": 0.9980314960629921, "obj2": 0.0006975077085034848}, {"determining": "( ( DDR - FirstVNF_RAM ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - Min( FirstVNF_CPU ,BR ) ) ) )", "choosing": "Max( ( ( ( MUC / MUM ) / ( ( RMSe + ( DS * DS ) ) * RMSe ) ) / Min( RRSe ,( MUM * CS ) ) ),( Max( RCSe,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9566929133858267, "obj2": 0.0258241575701415}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) * AMS ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( ( Max( ( RRSe + MUR ),MLU ) + Max( MUC,RRSe ) ) - ( Min( ( RMSe * ( ( Max( Min( DS ,CS ),( MLU * MUM ) ) * DS ) / MUM ) ) ,Max( MUR,MUM ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ACS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( ( ( DS / MLU ) / ( MLU - RRSe ) ) + ( ( RCSe * MUC ) / ( CS + CS ) ) ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM ) ,AMS ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),Max( ( ( ( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) - ( MUR - ( ( MUM - MUC ) / ( Min( MUM ,RCSe ) + RCSe ) ) ) ) * DS ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Max( RRS,( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "Max( Min( Max( ( DS * RCSe ),MUM ) ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( AMS - AMS ) / MDR ) )", "choosing": "( ( MLU + MLU ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - AMS ) - AMS ) - FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( DS - RCSe ) - RCSe ),( ( ( MUR + Max( Min( MUR ,( ( MUR + MUR ) + MUC ) ),RCSe ) ) + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) * ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) + ( ( Min( RCSe ,Max( RRSe,MLU ) ) - RRSe ) + Min( ( ( MLU - MUM ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ACS + PN ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( Min( ( ( DS - RRSe ) * RCSe ) ,DS ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "Max( ( MUM - RCSe ),Max( Max( MUR,DS ),( MUM - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,BR ) + MDR ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( ( ( DS - ( MLU / ( ( RRSe - MUM ) - ( DS + MUM ) ) ) ) * RRSe ) ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS * FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ,CRS ) - ( AMS - RRS ) )", "choosing": "Max( Min( RCSe ,Min( MUR ,Min( DS ,( RRSe + RRSe ) ) ) ),( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - FirstVNF_Mem_Server )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server - MRS ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( RMSe ,DS ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( CS + RRSe ) ,RCSe ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * ( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) ) ) + Const ) ) )", "choosing": "( ( Min( ( DS / RRSe ) ,RCSe ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / ( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) ) ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Max( ( MUC * RCSe ),MUC ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( CRS - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + ACS ) ) ,Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( DS * Min( RMSe ,MUR ) ) / ( Min( ( DS / MUC ) ,( RCSe + RMSe ) ) - ( ( DS * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + ( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) ) ),( FirstVNF_Mem_Server - ( Min( ARS ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( DS * RCSe ) / Min( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RMSe - RMSe ) * Max( CS,RRSe ) ) ) ,DS ) ) / Min( RMSe ,DS ) )", "obj1": 0.04133858267716536, "obj2": 0.7426494618749472}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ( ( ( BR / ( PN + BR ) ) / ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + CRS ) ) * ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) + ( ( Min( RCSe ,Max( RRSe,MLU ) ) - RRSe ) + Min( ( ( MLU - ( RRSe - RCSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.8523622047244095, "obj2": 0.11216426466156824}, {"determining": "Min( ( DDR * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( Min( MUM ,Min( ( ( RRSe / MUR ) + ( MLU / RMSe ) ) ,( RCSe / ( DS + MLU ) ) ) ) * ( MUM / RRSe ) ) )", "obj1": 0.4940944881889764, "obj2": 0.32642134326827715}, {"determining": "( ( ( MDR * Const ) + FirstVNF_RAM ) / Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) ) ,( ( RMSe - RMSe ) * Max( CS,RRSe ) ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( RRSe / MUC ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6532286717117108}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * MDR ) - RRS ) ) ,( ( Const * MDR ) - RRS ) ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ARS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUC / DS ) + MUR ) ) * RMSe ) - CS ) ) * ( Max( ( MLU / RCSe ),( ( RCSe * MUC ) * RMSe ) ) * Max( Max( ( MUR * MUC ),MUC ),( RCSe + Min( Min( RRSe ,MUR ) ,Min( Min( RCSe ,RRSe ) ,( RCSe - CS ) ) ) ) ) ) ) + ( MUM + MLU ) )", "obj1": 0.7204724409448819, "obj2": 0.12299234989595943}, {"determining": "( PN / Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( RMSe ,DS ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( RRSe / MUC ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3737557612891318}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2604805406027733}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( RCSe ,( RCSe * DS ) )", "obj1": 0.6988188976377953, "obj2": 0.2161811375723325}, {"determining": "( ( ( Max( ( FirstVNF_Mem_Server / PN ),FirstVNF_CPU ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) * ARS ) + RRS )", "choosing": "( Min( ( RCSe * CS ) ,( RCSe * CS ) ) / ( DS - MUC ) )", "obj1": 0.07283464566929133, "obj2": 0.6200764203826529}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * FirstVNF_RAM ) - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.7165354330708661, "obj2": 0.12550147417462987}, {"determining": "( ( DDR / PN ) + ( DDR / PN ) )", "choosing": "( Min( Min( RRSe ,CS ) ,Min( RRSe ,CS ) ) / ( DS - MUC ) )", "obj1": 0.13188976377952755, "obj2": 0.6159596730334126}, {"determining": "( ( ( Min( Const ,RRS ) / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( AMS,MRS ) ) * CRS ) )", "choosing": "( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / ( ( RCSe / MUR ) + ( MLU + CS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7235480739423473}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.6318897637795275, "obj2": 0.24174565971114334}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / Max( ( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( CS + ( ( RMSe * RCSe ) * ( Max( ( MUC * RCSe ),MUC ) / ( MUC + Max( MUM,MLU ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.588279845403249}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( CRS,RRS ) ) )", "choosing": "( ( ( DS / CS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.5570866141732284, "obj2": 0.30118459941854075}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) * ( RRS - CRS ) ) / ( ( MRS * AMS ) - Min( BR ,ACS ) ) )", "choosing": "Min( ( MUM / RMSe ) ,( RRSe - RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.3209188374341898}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,( RRSe - RCSe ) ) )", "obj1": 0.8740157480314961, "obj2": 0.09162057099500276}, {"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - CS ) ) / Max( MUC,RCSe ) ) ) ) ) / CS ) - ( MUR / MUR ) )", "obj1": 0.3405511811023622, "obj2": 0.4343205087116999}, {"determining": "( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ),Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( MUC / RMSe ) * ( RCSe * MLU ) ) + ( ( ( ( DS / DS ) / CS ) / DS ) / CS ) )", "obj1": 0.16338582677165353, "obj2": 0.5573952603448448}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( ( ( DS / Max( Max( ( MUM - RCSe ),DS ),MUM ) ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.6417322834645669, "obj2": 0.23108968223514187}, {"determining": "( ( ARS * PN ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4217227928342498}, {"determining": "( ( ARS - PN ) - Min( Max( ACS,( ( ARS - FirstVNF_Mem ) - Min( Max( ACS,FirstVNF_RAM_Server ) ,MDR ) ) ) ,MDR ) )", "choosing": "( ( MUM / RRSe ) + ( ( DS / ( CS * RCSe ) ) - CS ) )", "obj1": 0.27755905511811024, "obj2": 0.4774731245465421}, {"determining": "( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( ( MUC / MLU ) + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.4746981141028596}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + DDR ) )", "choosing": "Min( ( ( ( RRSe - ( MLU + ( ( MUC * RMSe ) / MUR ) ) ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.2267355465979186}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + RRS )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04370768710768548}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) - Min( ( FirstVNF_Mem_Server / PN ) ,( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) - BR ) ) ) * ARS ) + RRS )", "choosing": "( Min( RCSe ,( RCSe * CS ) ) / ( DS - MUC ) )", "obj1": 0.8956692913385826, "obj2": 0.07713025611619558}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe / CS ) ,( RCSe * DS ) ) / ( DS - RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.03487051844722194}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( ( RRSe / MUC ),MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5487963606235386}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( ( ARS * PN ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( DS / ( MUM * MUR ) ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.40267622187834917}, {"determining": "( ( ( ( FirstVNF_CPU / RRS ) + ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / DDR ) * ( DDR + BR ) )", "choosing": "( ( ( Max( RMSe,CS ) * Max( RMSe,MUC ) ) - MUR ) * CS )", "obj1": 0.90748031496063, "obj2": 0.07038445767673089}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( FirstVNF_Mem_Server + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( Min( ( RRSe / MUM ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + MUM ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.05286625234717803}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * MUC )", "obj1": 0.32086614173228345, "obj2": 0.46596902151109226}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) * PN ) + ( ( BR + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) * PN ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,Max( CS,( MUC + ( DS / MUC ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * Max( MUC,DS ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3850632859411429}, {"determining": "( ( ARS * PN ) + ( ( ( AMS / Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( MUM + MLU ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - RRSe ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4013516895192889}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + Max( RRSe,( DS / ( MUM * MUR ) ) ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.45359036486976045}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( RRS - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( ( MLU * ( MUC - MUC ) ) - MUR ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.20669291338582677, "obj2": 0.5341248364212754}, {"determining": "( ( ARS * PN ) + ( ( BR + ( Min( MDR ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( Max( MUC,DS ) * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.41016067774052417}, {"determining": "( ( ARS * PN ) + ARS )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - ( MLU * Max( MUC,( MUR * MUM ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.4557797469783233}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,AMS ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * ( ( RMSe + MLU ) + ( MUR / MLU ) ) )", "obj1": 0.1968503937007874, "obj2": 0.5409148800979793}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ( MDR + FirstVNF_RAM ) ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - MUC ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5189024733365644}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / Max( ACS,( ( ARS - PN ) - Min( Max( ACS,FirstVNF_RAM_Server ) ,MDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RRSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.4889044905541984}, {"determining": "( ( ( PN - Min( ARS ,FirstVNF_RAM_Server ) ) / PN ) + ( ( ARS / Min( ARS ,Const ) ) / FirstVNF_CPU ) )", "choosing": "( RRSe / ( DS - MUC ) )", "obj1": 0.9429133858267716, "obj2": 0.030065765712674247}, {"determining": "Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Min( Const ,RRS ) )", "choosing": "( Max( ( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7364360857010795}, {"determining": "( ( ( Const - MDR ) * ( Max( ACS,( RRS + RRS ) ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( MUR ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.50985404284318}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * DDR ) - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( MUM * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.9862204724409449, "obj2": 0.005272322260577274}, {"determining": "( ( AMS * ( ACS + PN ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),( PN * ( ARS + CRS ) ) ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( Max( ( MUR / DS ),( RCSe + CS ) ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.49423057933785247}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + ( Max( ACS,( RRS + RRS ) ) * ( Const + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( ( Max( RCSe,CS ) + ( DS + MLU ) ) - ( MUR + MUC ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5226079826261486}, {"determining": "( ( ARS * PN ) + ( ( ( AMS / MRS ) + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - RRSe ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.416217465566606}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( ( ( ARS * PN ) + Max( FirstVNF_Mem_Server,AMS ) ) * Const ) )", "choosing": "Min( ( MUM * ( ( MLU * Max( MLU,RRSe ) ) - ( Max( ( ( ( RRSe + CS ) + ( RCSe - DS ) ) * Min( MUC ,MUM ) ),MUR ) + Max( RCSe,RCSe ) ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.265748031496063, "obj2": 0.4913787564447343}, {"determining": "( ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) * ( AMS * DDR ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( ( Max( MUM,( MLU / MLU ) ) - MUM ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.49754764309028476}, {"determining": "( ( PN - ( ( AMS / RRS ) + FirstVNF_RAM_Server ) ) * ( DDR + ( Const - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( DS - RCSe ) + ( MUM + MLU ) ),Max( ( ( ( ( DS / RMSe ) * ( MLU - ( RCSe * RCSe ) ) ) - RCSe ) - RCSe ),( ( ( RRSe - MLU ) * RMSe ) / MUC ) ) )", "obj1": 0.9763779527559056, "obj2": 0.01295659584936656}, {"determining": "( Min( ( ARS - ( FirstVNF_RAM + FirstVNF_CPU ) ) ,AMS ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),DS )", "obj1": 0.9645669291338582, "obj2": 0.016831166277029092}, {"determining": "Min( ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / Max( PN,ARS ) ) ) ,( ( CRS / DDR ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( DS / DS ) ) * ( ( CS / MLU ) * Max( MUC,RCSe ) ) ) * ( ( MLU - Max( CS,RRSe ) ) - MLU ) )", "obj1": 0.21653543307086615, "obj2": 0.5210311076797814}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * FirstVNF_RAM ) - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.7165354330708661, "obj2": 0.12550147417462987}, {"determining": "( Max( ( FirstVNF_Mem + AMS ),( CRS - FirstVNF_Mem_Server ) ) - ( ( ARS * ( FirstVNF_Mem + ACS ) ) / FirstVNF_CPU ) )", "choosing": "( ( MUM * MLU ) - ( RRSe - RMSe ) )", "obj1": 0.9625984251968503, "obj2": 0.02335721409931692}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * MRS ) - DDR ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( Max( Max( MUC,( RRSe / RRSe ) ),RRSe ) * ( RRSe * DS ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Max( ( FirstVNF_RAM + ( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) ) ),( PN - FirstVNF_Mem ) )", "choosing": "( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) ,DS ) )", "obj1": 0.9921259842519685, "obj2": 0.0037148035424347248}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM * MUR ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5079991928624397}, {"determining": "( ( DDR - FirstVNF_RAM ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - Min( FirstVNF_CPU ,BR ) ) ) )", "choosing": "Max( ( ( ( ( ( MLU * RMSe ) - ( RCSe - MUM ) ) / MUM ) / ( ( RMSe + ( DS * DS ) ) * RMSe ) ) / Min( RRSe ,( MUM * CS ) ) ),( Max( RCSe,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9566929133858267, "obj2": 0.0258241575701415}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + ( Const - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( DS - RCSe ) + ( MUM + MLU ) ),( RRSe / ( RRSe / RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.014860599565266492}, {"determining": "Min( ( Const + ( ARS / ARS ) ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,Min( DS ,( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem_Server - ( ( Max( MRS,MDR ) - FirstVNF_CPU_Server ) - ( ( ARS * DDR ) - PN ) ) ) )", "choosing": "( ( ( RMSe + MLU ) * RCSe ) / Max( Min( CS ,Max( ( Max( Max( CS,RMSe ),MLU ) * ( RMSe + RRSe ) ),MUC ) ),MUC ) )", "obj1": 0.687007874015748, "obj2": 0.22554685882513423}, {"determining": "( ( Min( RRS ,BR ) + MDR ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( ( ( DS - ( MLU / ( ( RRSe - MUM ) - ( DS + MUM ) ) ) ) * RRSe ) ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 0.9015748031496063, "obj2": 0.07661064591613405}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,AMS ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( MUC,( Max( ( CS - ( CS * RCSe ) ),( Max( CS,MUC ) * CS ) ) * RMSe ) ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5054524742535643}, {"determining": "( ( DDR - FirstVNF_RAM ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - Min( FirstVNF_CPU ,BR ) ) ) )", "choosing": "Max( ( ( ( MUC / MUM ) / ( ( RMSe + ( DS * DS ) ) * RMSe ) ) / Min( RRSe ,( MUM * CS ) ) ),( Max( RCSe,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9566929133858267, "obj2": 0.0258241575701415}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * Const ) )", "choosing": "Min( ( MUM * ( ( MLU * Max( MLU,RRSe ) ) - ( Max( RCSe,MUR ) + Max( RCSe,RCSe ) ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( ( ARS * PN ) + Min( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) ,( ( ( ARS * PN ) + Min( Min( FirstVNF_CPU ,ARS ) ,( ARS - FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( DS - DS ) ) / Max( MUC,RCSe ) ) ) ) ) / ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) - ( MUR / MUR ) )", "obj1": 0.9980314960629921, "obj2": 0.0006975077085034848}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( DS ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 0.9015748031496063, "obj2": 0.07661064591613405}, {"determining": "( ( ( ( ARS * PN ) + Min( Min( FirstVNF_CPU ,( Max( Const,( MDR - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) ) * PN ) + Min( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( CS + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) ) ) / ( ( ( RRSe + Max( MUC,( RMSe * ( CS + RRSe ) ) ) ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) - ( MUR / MUR ) )", "obj1": 0.9980314960629921, "obj2": 0.0006975077085034848}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,AMS ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,MDR ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( MUC,( Max( ( CS - ( CS * RCSe ) ),( RCSe * CS ) ) * RMSe ) ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5054524742535643}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( ( FirstVNF_CPU_Server - PN ) + Max( DDR,FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( Min( Max( MLU,MUR ) ,( MUR + RMSe ) ) - ( ( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( RMSe ,DS ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) * AMS ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( ( Max( ( RRSe + MUR ),MLU ) + Max( MUC,RRSe ) ) - ( Min( ( RMSe * ( ( Max( Min( DS ,CS ),( MLU * MUM ) ) * DS ) / MUM ) ) ,Max( MUR,MUM ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ACS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( ( ( DS / MLU ) / ( MLU - RRSe ) ) + ( ( RCSe * MUC ) / ( CS + CS ) ) ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM ) ,AMS ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),Max( ( ( ( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) - ( MUR - ( ( MUM - MUC ) / ( Min( MUM ,RCSe ) + RCSe ) ) ) ) * DS ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Max( RRS,( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "Max( Min( Max( ( DS * RCSe ),MUM ) ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( AMS - AMS ) / MDR ) )", "choosing": "( ( MLU + MLU ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - AMS ) - AMS ) - FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( DS - RCSe ) - RCSe ),( ( ( MUR + Max( Min( MUR ,( ( MUR + MUR ) + MUC ) ),RCSe ) ) + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) * ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) + ( ( Min( RCSe ,Max( RRSe,MLU ) ) - RRSe ) + Min( ( ( MLU - MUM ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ACS + PN ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( Min( ( ( DS - RRSe ) * RCSe ) ,DS ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) )", "choosing": "Max( ( MUM - RCSe ),Max( Max( MUR,DS ),( MUM - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,BR ) + MDR ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( ( ( DS - ( MLU / ( ( RRSe - MUM ) - ( DS + MUM ) ) ) ) * RRSe ) ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS * FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ,CRS ) - ( AMS - RRS ) )", "choosing": "Max( Min( RCSe ,Min( MUR ,Min( DS ,( RRSe + RRSe ) ) ) ),( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( Max( MDR,FirstVNF_CPU ) - Max( ACS,( Const / MRS ) ) ) * ARS ) + FirstVNF_CPU )", "choosing": "( Min( ( Max( MUC,Max( ( DS - ( MUM - RMSe ) ),RCSe ) ) * ( Max( MLU,MUM ) - MUM ) ) ,( RCSe * CS ) ) / ( ( MUM / RMSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / ( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) ) ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Max( ( MUC * RCSe ),MUC ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + ( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) ) ),( FirstVNF_Mem_Server - ( Min( ARS ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( DS * RCSe ) / Min( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RMSe - RMSe ) * Max( CS,RRSe ) ) ) ,DS ) ) / Min( RMSe ,DS ) )", "obj1": 0.04133858267716536, "obj2": 0.7426494618749472}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ( ( ( BR / ( PN + BR ) ) / ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + CRS ) ) * ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUR ) + ( ( Min( RCSe ,Max( RRSe,MLU ) ) - RRSe ) + Min( ( ( MLU - ( RRSe - RCSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.8523622047244095, "obj2": 0.11216426466156824}, {"determining": "( ( ( MDR * Const ) + FirstVNF_RAM ) / Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) ) ,( ( RMSe - RMSe ) * Max( CS,RRSe ) ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( RRSe / MUC ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6532286717117108}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * MDR ) - RRS ) ) ,( ( Const * MDR ) - RRS ) ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ARS - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUC / DS ) + MUR ) ) * RMSe ) - CS ) ) * ( Max( ( MLU / RCSe ),( ( RCSe * MUC ) * RMSe ) ) * Max( Max( ( MUR * MUC ),MUC ),( RCSe + Min( Min( RRSe ,MUR ) ,Min( Min( RCSe ,RRSe ) ,( RCSe - CS ) ) ) ) ) ) ) + ( MUM + MLU ) )", "obj1": 0.7204724409448819, "obj2": 0.12299234989595943}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.5688976377952756, "obj2": 0.2604805406027733}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( RCSe ,( RCSe * DS ) )", "obj1": 0.6988188976377953, "obj2": 0.2161811375723325}, {"determining": "Min( ( DDR * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( Min( MUM ,Min( ( ( RRSe / MUR ) + ( MLU / RMSe ) ) ,( RCSe / ( DS + MLU ) ) ) ) * ( MUM / RRSe ) ) )", "obj1": 0.4940944881889764, "obj2": 0.32642134326827715}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) * PN ) + ( ( BR + ( Min( FirstVNF_CPU ,( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( ( MUC + ( DS / MUC ) ) + ( DS / MUC ) ) ) + ( MUR + Max( MUC,Max( CS,( MUC + ( DS / MUC ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3558957631411331}, {"determining": "( ( ( Max( ( FirstVNF_Mem_Server / PN ),FirstVNF_CPU ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) * ARS ) + RRS )", "choosing": "( Min( ( RCSe * CS ) ,( RCSe * CS ) ) / ( DS - MUC ) )", "obj1": 0.07283464566929133, "obj2": 0.6200764203826529}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * FirstVNF_RAM ) - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.7165354330708661, "obj2": 0.12550147417462987}, {"determining": "( ( ( Min( Const ,RRS ) / PN ) * PN ) * ( ( FirstVNF_RAM_Server + Max( AMS,MRS ) ) * CRS ) )", "choosing": "( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / ( ( RCSe / MUR ) + ( MLU + CS ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7235480739423473}, {"determining": "Min( ( ( Const - ( MRS / Max( Const,PN ) ) ) * MRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / Max( MUM,MUR ) ) / CS ) * ( ( RMSe + RRSe ) * ( MUM / RRSe ) ) )", "obj1": 0.6318897637795275, "obj2": 0.24174565971114334}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( CRS,RRS ) ) )", "choosing": "( ( ( DS / CS ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.5570866141732284, "obj2": 0.30118459941854075}, {"determining": "( ( DDR / PN ) + ( DDR / PN ) )", "choosing": "( Min( Min( RRSe ,CS ) ,Min( RRSe ,CS ) ) / ( DS - MUC ) )", "obj1": 0.13188976377952755, "obj2": 0.6159596730334126}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - FirstVNF_Mem_Server ) ) * ( RRS - CRS ) ) / ( ( MRS * AMS ) - Min( BR ,ACS ) ) )", "choosing": "Min( ( MUM / RMSe ) ,( RRSe - RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.3209188374341898}, {"determining": "( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ),Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( MUC / RMSe ) * ( RCSe * MLU ) ) + ( ( ( ( DS / DS ) / CS ) / DS ) / CS ) )", "obj1": 0.16338582677165353, "obj2": 0.5573952603448448}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / Max( ( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( CS + ( ( RMSe * RCSe ) * ( Max( ( MUC * RCSe ),MUC ) / ( MUC + Max( MUM,MLU ) ) ) ) ) + Max( DS,DS ) ) ) )", "obj1": 0.14960629921259844, "obj2": 0.588279845403249}, {"determining": "( PN / Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( RMSe ,DS ) ) / ( ( ( MUC / DS ) + ( CS - MLU ) ) - Min( Min( DS ,RMSe ) ,( RRSe / MUC ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3737557612891318}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,Min( ( ACS - FirstVNF_CPU ) ,FirstVNF_CPU ) )", "choosing": "( ( ( DS / Max( Max( ( MUM - RCSe ),DS ),MUM ) ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.6417322834645669, "obj2": 0.23108968223514187}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,( RRSe - RCSe ) ) )", "obj1": 0.8740157480314961, "obj2": 0.09162057099500276}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) * PN ) + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) * PN ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,Max( CS,( MUC + ( CS / MUC ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.452174901057535}, {"determining": "( ( ARS - PN ) - Min( Max( ACS,( ( ARS - FirstVNF_Mem ) - Min( Max( ACS,FirstVNF_RAM_Server ) ,MDR ) ) ) ,MDR ) )", "choosing": "( ( MUM / RRSe ) + ( ( DS / ( CS * RCSe ) ) - CS ) )", "obj1": 0.27755905511811024, "obj2": 0.4774731245465421}, {"determining": "( ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( ( MUC / MLU ) + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.4746981141028596}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) - Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU - BR ) ) ) * ( FirstVNF_Mem_Server / PN ) ) + RRS )", "choosing": "( Min( RCSe ,( RCSe * Min( RCSe ,( RCSe * CS ) ) ) ) / ( DS - MUC ) )", "obj1": 0.13976377952755906, "obj2": 0.5950423542586807}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + DDR ) )", "choosing": "Min( ( ( ( RRSe - ( MLU + ( ( MUC * RMSe ) / MUR ) ) ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.2267355465979186}, {"determining": "( ( ARS * PN ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4217227928342498}, {"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - CS ) ) / Max( MUC,RCSe ) ) ) ) ) / CS ) - ( MUR / MUR ) )", "obj1": 0.3405511811023622, "obj2": 0.4343205087116999}, {"determining": "Min( ( ( PN - ( ( ( MRS * FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * Min( DS ,( RRSe + RRSe ) ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.3464566929133858, "obj2": 0.42907858165334256}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + RRS )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04370768710768548}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) * ARS ) + ( AMS - ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe / CS ) ,( RCSe * DS ) ) / ( DS - RRSe ) )", "obj1": 0.9389763779527559, "obj2": 0.03487051844722194}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( ( RRSe / MUC ),MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.5487963606235386}, {"determining": "( ( ( ( FirstVNF_CPU / RRS ) + ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / DDR ) * ( DDR + BR ) )", "choosing": "( ( ( Max( RMSe,CS ) * Max( RMSe,MUC ) ) - MUR ) * CS )", "obj1": 0.90748031496063, "obj2": 0.07038445767673089}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - RRS ) ) + ( ( FirstVNF_Mem_Server + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( Min( ( RRSe / MUM ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + MUM ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.05286625234717803}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) * PN ) + ( ( BR + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) * PN ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,Max( CS,( MUC + ( DS / MUC ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * Max( MUC,DS ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.3850632859411429}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * MUC )", "obj1": 0.32086614173228345, "obj2": 0.46596902151109226}, {"determining": "( ( ARS * PN ) + ( ( ( AMS / Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( MUM + MLU ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - RRSe ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4013516895192889}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( RRS - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( ( MLU * ( MUC - MUC ) ) - MUR ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.20669291338582677, "obj2": 0.5341248364212754}, {"determining": "( ( ( Const - MDR ) * ( Max( ACS,( RRS + RRS ) ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( MUR ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.50985404284318}, {"determining": "( ( ARS * PN ) + ( ( BR + ( ( ( ( ARS * PN ) + BR ) / FirstVNF_Mem ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( DS / ( MUM * MUR ) ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.40267622187834917}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,AMS ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * ( ( RMSe + MLU ) + ( MUR / MLU ) ) )", "obj1": 0.1968503937007874, "obj2": 0.5409148800979793}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ( MDR + FirstVNF_RAM ) ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - MUC ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5189024733365644}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( RRS * FirstVNF_RAM ) - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( MLU * ( MUC - MUC ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.5020339901523814}, {"determining": "( ( ( PN - Min( ARS ,FirstVNF_RAM_Server ) ) / PN ) + ( ( ARS / Min( ARS ,Const ) ) / FirstVNF_CPU ) )", "choosing": "( RRSe / ( DS - MUC ) )", "obj1": 0.9429133858267716, "obj2": 0.030065765712674247}, {"determining": "Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Min( Const ,RRS ) )", "choosing": "( Max( ( ( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) ) / DS ),( RCSe + CS ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7364360857010795}, {"determining": "Min( ( ( PN - ( Min( DDR ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( ( MUC - MUC ) * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.9862204724409449, "obj2": 0.003836226213948543}, {"determining": "( ( ( ( ACS + ( ( PN - FirstVNF_RAM_Server ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) ) ) / ( ACS + CRS ) ) * ( AMS * DDR ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( ( Max( RRSe,( MLU / MLU ) ) - MUM ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.492856923422053}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + ( Max( ACS,( RRS + RRS ) ) * ( Const + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( ( Max( RCSe,CS ) + ( DS + MLU ) ) - ( MUR + MUC ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5226079826261486}, {"determining": "( ( PN - ( ( AMS / RRS ) + FirstVNF_RAM_Server ) ) * ( DDR + ( Const - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( DS - RCSe ) + ( MUM + MLU ) ),Max( ( ( ( ( DS / RMSe ) * ( MLU - ( RCSe * RCSe ) ) ) - RCSe ) - RCSe ),( ( ( RRSe - MLU ) * RMSe ) / MUC ) ) )", "obj1": 0.9763779527559056, "obj2": 0.01295659584936656}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) * PN ) + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) * PN ) + ( ( BR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,CS ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.40876218984335877}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / Max( ACS,( ( ARS - PN ) - Min( Max( ACS,FirstVNF_RAM_Server ) ,MDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RRSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.4889044905541984}, {"determining": "( ( ARS * PN ) + Min( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) ,( ( ( ARS * ( ARS - FirstVNF_CPU_Server ) ) + Min( Min( FirstVNF_CPU ,( ARS - ( PN - FirstVNF_CPU_Server ) ) ) ,( BR + FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU - ( MUM * RCSe ) ) / ( ( ( RRSe + CS ) + ( Max( MUR,CS ) - DS ) ) / Max( MUC,RCSe ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.8917322834645669, "obj2": 0.086532959617591}, {"determining": "( ( ARS * PN ) + ( ( ( AMS / MRS ) + ( FirstVNF_CPU_Server * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( MLU * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MLU / MLU ) ),Max( RCSe,( MUM - RRSe ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.416217465566606}, {"determining": "( ( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) * PN ) + Min( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) ,( ( ( ARS * ( MDR * DDR ) ) + Min( Min( FirstVNF_CPU ,( ARS - ( PN - FirstVNF_CPU_Server ) ) ) ,( BR + FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU - ( MUM * RCSe ) ) / ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) ) ) - ( MUR / MUR ) )", "obj1": 0.8858267716535433, "obj2": 0.08905410311760924}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) - Min( ( FirstVNF_Mem_Server / PN ) ,( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) - BR ) ) ) * ARS ) + RRS )", "choosing": "( Min( RCSe ,( RCSe * CS ) ) / ( DS - MUC ) )", "obj1": 0.8956692913385826, "obj2": 0.07713025611619558}, {"determining": "Min( ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / Max( PN,ARS ) ) ) ,( ( CRS / DDR ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( DS / DS ) ) * ( ( CS / MLU ) * Max( MUC,RCSe ) ) ) * ( ( MLU - Max( CS,RRSe ) ) - MLU ) )", "obj1": 0.21653543307086615, "obj2": 0.5210311076797814}, {"determining": "( ( DDR - FirstVNF_RAM ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - Min( FirstVNF_CPU ,BR ) ) ) )", "choosing": "Max( ( ( ( ( ( MLU * RMSe ) - ( RCSe - MUM ) ) / MUM ) / ( ( RMSe + ( DS * DS ) ) * RMSe ) ) / Min( RRSe ,( MUM * CS ) ) ),( Max( RCSe,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9566929133858267, "obj2": 0.0258241575701415}, {"determining": "( ( ARS * PN ) + ( ( BR + ( Min( MDR ,FirstVNF_Mem_Server ) * PN ) ) / Max( MDR,CRS ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( DS / MUC ) ) ) + ( MUR + Max( MUC,( Max( MUC,DS ) * Max( MUC,( MUR * MUM ) ) ) ) ) ) / CS ) - Max( RRSe,( DS / ( MUM / ( Max( ( CS * ( MUC / MLU ) ),Max( RCSe,( MUM - MUR ) ) ) + Max( MUC,DS ) ) ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.41016067774052417}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * FirstVNF_RAM ) - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.7165354330708661, "obj2": 0.12550147417462987}, {"determining": "Min( ( FirstVNF_Mem - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / Max( DS,DS ) )", "obj1": 0.9606299212598425, "obj2": 0.01967169839196925}, {"determining": "( ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) * ( DDR * DDR ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM * ( Min( ( Max( MUM,( MLU / MLU ) ) - MUM ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ),( RMSe + ( MUM * ( Min( ( Max( MUM,( MLU / MLU ) ) - MUM ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.49019093410374553}, {"determining": "Min( ( ( PN - ( Min( Min( ACS ,( ( Const * FirstVNF_RAM ) - PN ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( ( RMSe * ( ( MUM + MUM ) + MUR ) ) * ( MUC - MUC ) ) - MUR ) ) ) + ( MUM + MLU ) )", "obj1": 0.9645669291338582, "obj2": 0.01632268714547414}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * MRS ) - DDR ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( Max( Max( MUC,( RRSe / RRSe ) ),RRSe ) * ( RRSe * DS ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + ( Const - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( DS - RCSe ) + ( MUM + MLU ) ),( RRSe / ( RRSe / RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.014860599565266492}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * Const ) )", "choosing": "Min( ( MUM * ( ( MLU * Max( MLU,RRSe ) ) - ( Max( RCSe,MUR ) + Max( RCSe,RCSe ) ) ) ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "Max( ( FirstVNF_RAM + BR ),( FirstVNF_Mem_Server - ( ( Max( MRS,MDR ) - FirstVNF_CPU_Server ) - ( ( ARS * DDR ) - PN ) ) ) )", "choosing": "( ( ( RMSe + MLU ) * RCSe ) / Max( Min( CS ,Max( ( Max( Max( CS,RMSe ),MLU ) * ( RMSe + RRSe ) ),MUC ) ),MUC ) )", "obj1": 0.687007874015748, "obj2": 0.22554685882513423}, {"determining": "( ( Min( RRS ,BR ) + MDR ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( ( ( DS - ( MLU / ( ( RRSe - MUM ) - ( DS + MUM ) ) ) ) * RRSe ) ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 0.9015748031496063, "obj2": 0.07661064591613405}, {"determining": "( ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) * ( AMS * DDR ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( ( Max( MUM,( MLU / MLU ) ) - MUM ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.49754764309028476}, {"determining": "Max( ( FirstVNF_RAM + ( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) ) ),( PN - FirstVNF_Mem ) )", "choosing": "( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) ,DS ) )", "obj1": 0.9921259842519685, "obj2": 0.0037148035424347248}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) ) ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - MUC ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) * ( AMS * DDR ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( Min( ( Max( MUM,( MLU / MLU ) ) - MUM ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) - CS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.49754764309028476}, {"determining": "( ( AMS * ( ( ( BR / ( PN + BR ) ) / ( ACS + CRS ) ) + ( ( PN - FirstVNF_RAM_Server ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),Min( ( Max( MUM,( MLU / MLU ) ) - MUM ) ,Min( Max( ( RRSe / CS ),CS ) ,( MLU - Max( RMSe,MUM ) ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.003246413100691977}, {"determining": "( ( ( DDR + FirstVNF_RAM_Server ) * ( ACS + ( ( PN - FirstVNF_RAM_Server ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) ) ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( RMSe + ( MUM * ( ( MLU - Max( RMSe,MUM ) ) - CS ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.4894841673502726}, {"determining": "( ( DDR - FirstVNF_RAM ) / Min( ( MDR + FirstVNF_CPU ) ,( DDR - Min( FirstVNF_CPU ,BR ) ) ) )", "choosing": "Max( ( ( ( MUC / MUM ) / ( ( RMSe + ( DS * DS ) ) * RMSe ) ) / Min( RRSe ,( MUM * CS ) ) ),( Max( RCSe,MUM ) - ( RCSe - MUM ) ) )", "obj1": 0.9566929133858267, "obj2": 0.0258241575701415}, {"determining": "Min( ( Const + ( ARS / ARS ) ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,Min( DS ,( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( FirstVNF_CPU * PN ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),( Min( DS ,( ( RMSe / MUC ) - MLU ) ) - DS ) )", "obj1": 0.9015748031496063, "obj2": 0.07661064591613405}, {"determining": "Min( ( ( PN - ( Min( Min( FirstVNF_CPU ,( ( Const * FirstVNF_RAM ) - RRS ) ) ,ACS ) - BR ) ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ACS / RRS ) )", "choosing": "( ( Min( MUC ,( ( ( RMSe * ( ( MUM + MUM ) + MUR ) ) * RMSe ) - CS ) ) * ( MUC - ( ( MLU * ( MUC - MUC ) ) - MUR ) ) ) + DS )", "obj1": 0.9980314960629921, "obj2": 0.0006975077085034848}, {"determining": "( ( ARS * PN ) + Min( Min( FirstVNF_CPU ,( ARS - FirstVNF_CPU_Server ) ) ,( ( ( ARS * PN ) + Min( Min( FirstVNF_CPU ,ARS ) ,( ARS - FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( CS,( MUC + ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / MUC ) ) ) + ( MUR + Max( MUC,( ( ( RRSe + CS ) + ( DS - DS ) ) / Max( MUC,RCSe ) ) ) ) ) / ( ( ( RRSe + CS ) + ( RCSe - DS ) ) / Max( MUC,RCSe ) ) ) - ( MUR / MUR ) )", "obj1": 0.9980314960629921, "obj2": 0.0006975077085034848}, {"determining": "Min( ( ( CRS - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + ACS ) ) ,Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( DS * Min( RMSe ,MUR ) ) / ( Min( ( DS / MUC ) ,( RCSe + RMSe ) ) - ( ( DS * RRSe ) / ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( ( FirstVNF_CPU_Server - PN ) + Max( DDR,FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( Min( Max( MLU,MUR ) ,( MUR + RMSe ) ) - ( ( ( ( DS * RCSe ) / Min( RMSe ,DS ) ) / Min( RMSe ,DS ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_Mem_Server * RRS ) + Max( DDR,AMS ) ) * AMS ) ,( FirstVNF_Mem / Const ) ) )", "choosing": "( ( Max( ( RRSe + MUR ),MLU ) + Max( MUC,RRSe ) ) - ( Min( ( RMSe * ( ( Max( Min( DS ,CS ),( MLU * MUM ) ) * DS ) / MUM ) ) ,Max( MUR,MUM ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( FirstVNF_Mem_Server ,AMS ) ) / ( ( ACS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( ( ( DS / MLU ) / ( MLU - RRSe ) ) + ( ( RCSe * MUC ) / ( CS + CS ) ) ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - DS ) ),( ( CS / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - FirstVNF_RAM ) ,AMS ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),Max( ( ( ( ( RRSe - ( ( MLU - RRSe ) * CS ) ) + MUM ) - ( MUR - ( ( MUM - MUC ) / ( Min( MUM ,RCSe ) + RCSe ) ) ) ) * DS ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Max( RRS,( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "Max( Min( Max( ( DS * RCSe ),MUM ) ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + ( ( FirstVNF_CPU * Max( FirstVNF_RAM,ARS ) ) + ( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( ( MUC - Min( RMSe ,MUM ) ) - RCSe ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( AMS - AMS ) / MDR ) )", "choosing": "( ( MLU + MLU ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN + DDR ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUC ,RMSe ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}]}