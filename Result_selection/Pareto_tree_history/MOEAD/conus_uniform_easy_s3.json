{"1": [{"determining": "Max( ( FirstVNF_Mem * MDR ),Max( MDR,FirstVNF_Mem ) )", "choosing": "Max( ( CS / MUC ),( CS * CS ) )", "obj1": 0.3031496062992126, "obj2": 0.6678448445299867}, {"determining": "Max( ( ( ( MRS + FirstVNF_CPU_Server ) + ( MDR / ARS ) ) * ( ( FirstVNF_Mem_Server - RRS ) - BR ) ),( DDR * ARS ) )", "choosing": "( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5907246544834391}, {"determining": "( ( Const + PN ) + Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Max( MLU,MUM ) * ( MLU - MLU ) )", "obj1": 0.35039370078740156, "obj2": 0.5085152914367752}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.4148880243572583}, {"determining": "( Max( ACS,FirstVNF_Mem ) + ( RRS * CRS ) )", "choosing": "( Max( MLU,RRSe ) / ( RCSe - DS ) )", "obj1": 0.40551181102362205, "obj2": 0.5129824084632875}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) )", "choosing": "( ( RMSe * RRSe ) / Max( RMSe,RMSe ) )", "obj1": 0.37598425196850394, "obj2": 0.48226417775012187}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Max( ACS,FirstVNF_Mem ) )", "choosing": "Min( ( MUR + RRSe ) ,( MUC - MUR ) )", "obj1": 0.28937007874015747, "obj2": 0.5699448189907277}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7474132794616593}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) / Max( PN,CRS ) )", "choosing": "( Max( MLU,DS ) + Min( MUC ,DS ) )", "obj1": 0.6732283464566929, "obj2": 0.24638229968636013}, {"determining": "( ( FirstVNF_RAM_Server + ( Const * FirstVNF_CPU ) ) + ( Min( BR ,PN ) - ( MRS * ACS ) ) )", "choosing": "Max( ( MLU / MUM ),Min( RMSe ,Max( Min( MUC ,Min( MUC ,Max( ( RMSe / ( CS - MUC ) ),Min( DS ,Max( DS,RCSe ) ) ) ) ),( ( RCSe + Min( RRSe ,( CS + ( CS - MUC ) ) ) ) * RMSe ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6073201345905823}, {"determining": "( ( Const / FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,RRS ) )", "choosing": "Min( Max( RRSe,MUM ) ,( MLU * CS ) )", "obj1": 0.452755905511811, "obj2": 0.4828559838207067}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU + DS ),( RMSe + RRSe ) )", "obj1": 0.4448818897637795, "obj2": 0.4447135365311465}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Max( Max( MUC,DS ),( RRSe * RRSe ) )", "obj1": 0.3720472440944882, "obj2": 0.4963103179874561}, {"determining": "Min( Min( AMS ,MDR ) ,( PN + BR ) )", "choosing": "Max( ( MLU * RMSe ),Min( MUR ,CS ) )", "obj1": 0.3858267716535433, "obj2": 0.487556666571921}, {"determining": "( Min( FirstVNF_RAM ,DDR ) - ( MDR / DDR ) )", "choosing": "( ( MUR - MUC ) - ( RRSe * MUR ) )", "obj1": 0.6909448818897638, "obj2": 0.23629071389260425}, {"determining": "( ( ACS / RRS ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,CS ) / ( MUM / MUM ) )", "obj1": 0.4744094488188976, "obj2": 0.4616826208394683}, {"determining": "Min( ( MRS + BR ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) + ( MLU / MUM ) )", "obj1": 0.44881889763779526, "obj2": 0.4370138337562505}, {"determining": "( ( Min( AMS ,PN ) + ( ARS - DDR ) ) * ( Max( MRS,ARS ) - Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "( ( Min( CS ,RMSe ) + Max( MLU,RMSe ) ) * ( ( RRSe - RMSe ) - ( DS / MUC ) ) )", "obj1": 0.07283464566929133, "obj2": 0.7422221175110953}, {"determining": "( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.7379372736518452}, {"determining": "Max( ( FirstVNF_Mem_Server + MRS ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * MUR ) )", "obj1": 0.08267716535433071, "obj2": 0.8123868755645198}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6403849111532507}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,RRSe ) ) )", "obj1": 0.905511811023622, "obj2": 0.07769247668676625}, {"determining": "Max( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( PN - Max( CRS,FirstVNF_RAM ) ) + Min( RRS ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( ( ( CS - Max( Max( ( MUC / DS ),Min( MUC ,( MUC * RMSe ) ) ),CS ) ) / CS ) ,RCSe ) )", "obj1": 0.35039370078740156, "obj2": 0.6174904654183716}, {"determining": "( ( ( RRS / FirstVNF_CPU_Server ) - ( MDR - DDR ) ) - ( ( PN + CRS ) - ( PN * RRS ) ) )", "choosing": "( ( Max( RCSe,DS ) + Max( DS,MUC ) ) + Min( ( RCSe * RRSe ) ,Max( MUM,RCSe ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4704653643019507}, {"determining": "( Min( ( FirstVNF_RAM_Server + RRS ) ,Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem_Server / PN ) / ( FirstVNF_CPU / MRS ) ) )", "choosing": "( ( Max( RCSe,MUM ) / ( RMSe + RRSe ) ) - Max( ( RMSe / MLU ),Max( MUR,CS ) ) )", "obj1": 0.2440944881889764, "obj2": 0.5725437605159938}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / RRS ) ,Max( MRS,BR ) ) / ( Min( PN ,DDR ) + ( CRS / ARS ) ) )", "choosing": "( Min( MUM ,RRSe ) * Min( CS ,( MUC - RCSe ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5787820439065481}, {"determining": "( ( ( FirstVNF_Mem + Const ) * MDR ) * ( MRS * ( DDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( DS * MUM ) / ( RMSe * MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6230344138606304}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) - ( PN - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * ( MUC / CS ) ) * ( Min( RCSe ,DS ) - RCSe ) )", "obj1": 0.29133858267716534, "obj2": 0.6532911486738955}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - MDR ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) / Min( ( FirstVNF_RAM_Server / Const ) ,( FirstVNF_CPU * ARS ) ) )", "choosing": "( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6503665440300144}, {"determining": "( ( RRS - MDR ) + ( ACS + BR ) )", "choosing": "( ( ( RMSe - RCSe ) + ( RCSe - DS ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.39763779527559057, "obj2": 0.47055196014583095}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Min( ( MUC / MUR ) ,( MLU / MUM ) ) + ( MUR - Min( RRSe ,RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5783824708963917}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "Min( ( FirstVNF_RAM_Server - MDR ) ,( MRS / MDR ) )", "choosing": "( ( RCSe + ( Min( MUC ,MUR ) * ( MUR - MUR ) ) ) - ( ( Min( CS ,( MUC - RCSe ) ) + MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "Min( ( ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + RRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( ACS - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( RMSe / Min( RCSe ,( RCSe + DS ) ) ) * Min( MUC ,( Min( RCSe ,MUR ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Max( ( FirstVNF_CPU + MDR ),( ARS / MDR ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( RRSe / ( RCSe - MUM ) ) + ( ( MLU + MUC ) - ( RCSe + MLU ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5465514389752871}, {"determining": "( ( Min( Min( MDR ,FirstVNF_RAM ) ,( Const * FirstVNF_RAM_Server ) ) - ( ( DDR / ARS ) * ( ACS + RRS ) ) ) * ( Min( ( PN * BR ) ,( FirstVNF_Mem * ACS ) ) - ( Min( MDR ,ARS ) * ( BR + MDR ) ) ) )", "choosing": "Max( ( ( ( CS - MUM ) * Min( DS ,DS ) ) / ( ( MUR - MUC ) / ( MUM * MUM ) ) ),Min( Min( Min( MLU ,MLU ) ,( MLU + MUM ) ) ,Min( ( MLU + RCSe ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4827239360566926}, {"determining": "( ( ARS * BR ) + Max( ( FirstVNF_CPU + FirstVNF_Mem ),RRS ) )", "choosing": "( ( MUM + DS ) * Max( ( MLU * RRSe ),Max( DS,( MUM - DS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6672468560060645}, {"determining": "Max( ( DDR - MRS ),( Const * DDR ) )", "choosing": "Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6199414258314522}, {"determining": "Max( ( ARS / PN ),( FirstVNF_Mem_Server * ACS ) )", "choosing": "( ( ( ( CS + MUM ) + ( MUR * DS ) ) + Min( Min( CS ,MLU ) ,( DS * DS ) ) ) - ( ( ( RCSe * MUC ) * ( RRSe * CS ) ) * ( ( RRSe - RCSe ) / ( MUM * MUR ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.43241766250760943}, {"determining": "Min( Min( FirstVNF_Mem_Server ,Max( CRS,AMS ) ) ,( ( Max( MDR,Const ) + ( ACS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( ( ( MUR * ( ( RCSe * ( RMSe / Min( MLU ,RCSe ) ) ) - RCSe ) ) + ( ( RMSe * ( MUM / MUC ) ) - RMSe ) ) * ( MLU - RCSe ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - Min( ( RCSe * ( Min( RMSe ,CS ) + MUC ) ) ,Min( Max( Min( RCSe ,RCSe ),RCSe ) ,MUM ) ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / Min( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ,( ( RMSe + Max( ( MUR * ( ( MUR / MUR ) + ( RRSe - DS ) ) ),MUC ) ) - Max( RCSe,RMSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5312650921502309}, {"determining": "( ( ( ( MDR + FirstVNF_Mem_Server ) - ( RRS / BR ) ) / ( ( BR * AMS ) * ( DDR + FirstVNF_Mem_Server ) ) ) + ( ( CRS - FirstVNF_RAM_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( MUR - MUM ) * ( MUM / MLU ) ) / ( ( RCSe - RRSe ) - ( MUM / DS ) ) ) * ( ( ( CS - DS ) * ( RRSe / MLU ) ) * ( ( MLU - RRSe ) / Max( CS,MUM ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5376536637803725}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) )", "choosing": "( ( CS + MLU ) - ( Max( RCSe,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + DDR ) - ( CRS - FirstVNF_RAM ) )", "choosing": "( ( ( ( MUR + DS ) + ( MUM - RMSe ) ) + ( ( MUM * CS ) + ( MLU + MUM ) ) ) - Max( ( ( MUR + RRSe ) - ( DS + DS ) ),( ( DS - MUM ) * ( MUC + MUR ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.4050024964554102}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}], "2": [{"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.04330708661417323, "obj2": 0.7474132794616593}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) )", "choosing": "( ( CS + MLU ) - ( Max( RCSe,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7474132794616593}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "Min( ( Min( FirstVNF_CPU ,CRS ) + BR ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) + MLU )", "obj1": 0.5866141732283464, "obj2": 0.3089650603300333}, {"determining": "( ( ( ( MDR + PN ) - ( RRS / BR ) ) / ( ( BR * AMS ) * ( ( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) ) + FirstVNF_Mem_Server ) ) ) + ( Max( ( FirstVNF_CPU / DDR ),( FirstVNF_CPU_Server + RRS ) ) - ( ( MDR + BR ) / ( MDR * RRS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) * Max( CS,MLU ) ) / ( ( ( CS + MLU ) - ( Max( RCSe,MLU ) + MUR ) ) - ( MUM / MUR ) ) ) * ( ( ( CS - DS ) * ( RRSe / MLU ) ) * ( ( MLU - RRSe ) / Max( CS,MUM ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.21411357330314382}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / RRS ) )", "choosing": "( ( RCSe - DS ) / Max( RMSe,RMSe ) )", "obj1": 0.08464566929133858, "obj2": 0.7271613232923029}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.046982867982581736}, {"determining": "( ( ( FirstVNF_Mem + Const ) * MDR ) * ( MRS * ( DDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( DS * MUM ) / ( RMSe * MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6230344138606304}, {"determining": "( Min( Const ,CRS ) * Max( Max( Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5402992507543527}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "Max( ( ( ( MRS + FirstVNF_CPU_Server ) + ( MDR / ARS ) ) * ( ( FirstVNF_Mem_Server - RRS ) - BR ) ),( DDR * ARS ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.3641732283464567, "obj2": 0.4472241082521522}, {"determining": "( ( ( ( MDR + PN ) - ( RRS / BR ) ) / ( ( BR * AMS ) * ( DDR + FirstVNF_Mem_Server ) ) ) + ( Max( ( FirstVNF_CPU / DDR ),( FirstVNF_CPU_Server + RRS ) ) - ( ( MDR + BR ) / ( MDR * RRS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) * Max( CS,MLU ) ) / ( ( RCSe - RRSe ) - ( MUM / MUR ) ) ) * ( ( ( CS - DS ) * ( RRSe / MLU ) ) * ( ( MLU - RRSe ) / Max( CS,MUM ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5260677187271219}, {"determining": "( ( Min( AMS ,PN ) + ( ARS - DDR ) ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,CS ) / ( ( ( RRSe - RMSe ) - ( DS / MUC ) ) / MUM ) )", "obj1": 0.297244094488189, "obj2": 0.4987212721049958}, {"determining": "Max( ( DDR - MRS ),( Const * DDR ) )", "choosing": "Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.4773242130108127}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "Min( Min( FirstVNF_Mem_Server ,Max( CRS,AMS ) ) ,( ( Max( MDR,Const ) + ( ACS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( ( ( MUR * ( ( RCSe * ( RMSe / Min( MLU ,RCSe ) ) ) - RCSe ) ) + ( ( RMSe * ( MUM / MUC ) ) - RMSe ) ) * ( MLU - RCSe ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.41491905638332716}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5270115355189283}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.24515714142687908}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.07217562264287844}, {"determining": "( ( Min( ( FirstVNF_Mem / RRS ) ,Max( MRS,BR ) ) / ( Min( PN ,DDR ) + ( CRS / ARS ) ) ) * ( MRS * ( DDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( DS * MUM ) / ( RMSe * ( Min( MUM ,RRSe ) * Min( CS ,( MUC - RCSe ) ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6234394879244604}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.639326246658799}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "( Max( ( DDR / Const ),Max( PN,Max( ( DDR * PN ),( ( ( FirstVNF_CPU - CRS ) - AMS ) / DDR ) ) ) ) / Max( MDR,BR ) )", "choosing": "( Max( ( MLU / RRSe ),RMSe ) / ( MUC * ( MLU * RMSe ) ) )", "obj1": 0.687007874015748, "obj2": 0.22610677819373437}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.4148880243572583}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( PN - PN ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( Min( MLU ,( MLU / CS ) ) + ( MLU + MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6556855377414356}, {"determining": "Max( ( ( RRS - DDR ) - ( BR - FirstVNF_Mem_Server ) ),( ( PN - PN ) + Min( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) ) ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( MLU ,( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) / CS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6420871342454311}, {"determining": "( ( Const / FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( MLU,DS ) + Min( MUC ,DS ) )", "obj1": 0.6850393700787402, "obj2": 0.23585951342005768}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "Max( ( DDR - MRS ),( Const * DDR ) )", "choosing": "Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4636601037210298}, {"determining": "Min( ( MRS + BR ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( CS ,RMSe ) + Max( MLU,RMSe ) ) * ( ( RRSe - RMSe ) - ( DS / MUC ) ) )", "obj1": 0.07086614173228346, "obj2": 0.7394814434548718}, {"determining": "Max( ( DDR - MRS ),( Const * DDR ) )", "choosing": "Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4636601037210298}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.0531496062992126, "obj2": 0.7432643500046754}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0018055220765059118}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - Min( ( RCSe * ( Min( RMSe ,CS ) + MUC ) ) ,Min( Max( Min( RCSe ,RCSe ),RCSe ) ,MUM ) ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / Min( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ,( ( RMSe + Max( ( MUR * ( ( MUR / MUR ) + ( RRSe - DS ) ) ),MUC ) ) - Max( RCSe,RMSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5312650921502309}, {"determining": "( ( Min( AMS ,PN ) + ( ARS - DDR ) ) * ( Max( MRS,ARS ) - Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "( ( Min( CS ,RMSe ) + Max( MLU,RMSe ) ) * ( ( RRSe - RMSe ) - ( DS / MUC ) ) )", "obj1": 0.0688976377952756, "obj2": 0.741401281480316}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0018055220765059118}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6403849111532507}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7439944860934701}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.4148880243572583}], "3": [{"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( DS + RRSe ) / ( CS - Min( Max( Max( Min( MUR ,DS ),Min( MLU ,CS ) ),( MUM / RMSe ) ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) )", "choosing": "( ( CS + MLU ) - ( Max( RCSe,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( Min( ( MUR + RRSe ) ,( MUC - MUR ) ) - RMSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7460048356829159}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "Min( ( Min( FirstVNF_CPU ,CRS ) + BR ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) + MLU )", "obj1": 0.5866141732283464, "obj2": 0.3089650603300333}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.046982867982581736}, {"determining": "( ( ( ( MDR + PN ) - ( RRS / BR ) ) / ( ( BR * AMS ) * ( ( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( ( Max( MDR,AMS ) + ( RRS / Const ) ) - ( ( FirstVNF_CPU / BR ) / ( FirstVNF_CPU_Server * Const ) ) ) ) + FirstVNF_Mem_Server ) ) ) + ( Max( ( FirstVNF_CPU / DDR ),( FirstVNF_CPU_Server + RRS ) ) - ( ( MDR + BR ) / ( MDR * RRS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) * Max( CS,MLU ) ) / ( ( ( CS + MLU ) - ( Max( RCSe,MLU ) + MUR ) ) - ( MUM / MUR ) ) ) * ( ( ( CS - DS ) * ( RRSe / MLU ) ) * ( ( MLU - RRSe ) / Max( CS,MUM ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.21411357330314382}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - Min( Max( ( CS / Max( Max( DS,Min( RRSe ,RMSe ) ),Max( MUM,Min( RCSe ,RMSe ) ) ) ),( RMSe / MUM ) ) ,MUC ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5249597979915882}, {"determining": "( ( Min( AMS ,PN ) + ( ARS - DDR ) ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,CS ) / ( ( ( RRSe - RMSe ) - ( DS / MUC ) ) / MUM ) )", "obj1": 0.297244094488189, "obj2": 0.4987212721049958}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "Max( ( DDR - MRS ),( Const * DDR ) )", "choosing": "Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.4773242130108127}, {"determining": "( Min( Const ,CRS ) * Max( Max( Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5402992507543527}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.639326246658799}, {"determining": "Min( Min( FirstVNF_Mem_Server ,Max( CRS,AMS ) ) ,( ( Max( MDR,Const ) + ( ACS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( ( ( MUR * ( ( RCSe * ( RMSe / Min( MLU ,RCSe ) ) ) - RCSe ) ) + ( ( RMSe * ( MUM / MUC ) ) - RMSe ) ) * ( MLU - RCSe ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,( ( Const + PN ) + Min( FirstVNF_Mem_Server ,CRS ) ) ) ) + Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Max( MLU,( ( DS + RRSe ) / ( MLU + RRSe ) ) ) * ( MLU - ( DS + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7008347327599849}, {"determining": "( ( ARS * BR ) + Max( ( FirstVNF_CPU + FirstVNF_Mem ),( DDR - MRS ) ) )", "choosing": "( Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) * Max( ( MLU * RRSe ),Max( DS,( MUM - DS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.44698880334355}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5270115355189283}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.07217562264287844}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.41491905638332716}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "Max( ( ( ( MRS + FirstVNF_CPU_Server ) + ( MDR / ARS ) ) * ( ( FirstVNF_Mem_Server - RRS ) - BR ) ),( DDR * ARS ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.3641732283464567, "obj2": 0.4472241082521522}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.4148880243572583}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( PN - PN ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( Min( MLU ,( MLU / CS ) ) + ( MLU + MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6556855377414356}, {"determining": "Min( ( MRS + BR ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( CS ,RMSe ) + Max( MLU,RMSe ) ) * ( ( RRSe - RMSe ) - ( DS / MUC ) ) )", "obj1": 0.07086614173228346, "obj2": 0.7394814434548718}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6614173228346457, "obj2": 0.25294122236555006}, {"determining": "Max( ( ( RRS - DDR ) - ( BR - FirstVNF_Mem_Server ) ),( ( PN - PN ) + Min( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) ) ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( MLU ,( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) / CS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6420871342454311}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.24515714142687908}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( MDR,FirstVNF_Mem ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.23010320927261285}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM * ( ARS * ARS ) ) ) )", "choosing": "( ( ( ( RMSe + MUR ) * ( CS * ( MUR / MUR ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.0984251968503937, "obj2": 0.7084795868124826}, {"determining": "Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6909448818897638, "obj2": 0.22602459580354417}, {"determining": "Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / RRS ) )", "choosing": "( ( RCSe - DS ) / Max( RMSe,RMSe ) )", "obj1": 0.08464566929133858, "obj2": 0.7271613232923029}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( ( ARS * BR ) + Max( ( FirstVNF_CPU + FirstVNF_Mem ),RRS ) )", "choosing": "Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.4638813888398052}, {"determining": "( Max( ACS,FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) ) )", "choosing": "( RMSe / ( ( DS + RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.08267716535433071, "obj2": 0.7279762694967932}, {"determining": "Min( ( FirstVNF_RAM / ( ( FirstVNF_CPU / CRS ) + Max( ( Max( DDR,FirstVNF_RAM ) / BR ),DDR ) ) ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.0531496062992126, "obj2": 0.7402563151462712}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0018055220765059118}, {"determining": "Max( ( DDR - MRS ),( Const * DDR ) )", "choosing": "Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4636601037210298}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - Min( ( RCSe * ( Min( RMSe ,CS ) + MUC ) ) ,Min( Max( Min( RCSe ,RCSe ),RCSe ) ,MUM ) ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / Min( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ,( ( RMSe + Max( ( MUR * ( ( MUR / MUR ) + ( RRSe - DS ) ) ),MUC ) ) - Max( RCSe,RMSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5312650921502309}], "4": [{"determining": "( ( ( Const - ( BR / ( BR * PN ) ) ) + Min( ( ( ( Const / BR ) * Max( ARS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( MUM / ( DS + ( Max( RCSe,RRSe ) / ( RRSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( DS + RRSe ) / ( CS - Min( Max( Max( Min( MUR ,DS ),Min( MLU ,CS ) ),( MUM / RMSe ) ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( Min( ( MUR + RRSe ) ,( MUC - MUR ) ) - RMSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7460048356829159}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.046982867982581736}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( ACS - Max( MDR,MRS ) )", "choosing": "( MUM / ( DS + ( ( ( Max( DS,Max( MUM,MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / MUR ) ) )", "obj1": 0.0984251968503937, "obj2": 0.6952466045884069}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( Min( Const ,CRS ) * Max( Max( Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5402992507543527}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.639326246658799}, {"determining": "Min( Min( FirstVNF_Mem_Server ,Max( CRS,AMS ) ) ,( ( Max( MDR,Const ) + ( ACS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( ( ( MUR * ( ( RCSe * ( RMSe / Min( MLU ,RCSe ) ) ) - RCSe ) ) + ( ( RMSe * ( MUM / MUC ) ) - RMSe ) ) * ( MLU - RCSe ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.234251968503937, "obj2": 0.5159879936967287}, {"determining": "( ( ARS * BR ) + Max( ( FirstVNF_CPU + FirstVNF_Mem ),( DDR - MRS ) ) )", "choosing": "( Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) * Max( ( MLU * RRSe ),Max( DS,( MUM - DS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.44698880334355}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( MDR,Max( RRS,BR ) ) )", "choosing": "( ( MLU * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6240157480314961, "obj2": 0.27455437238780445}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( MUM / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.1141732283464567, "obj2": 0.6892830135590008}, {"determining": "Max( ( DDR - MRS ),( Const * DDR ) )", "choosing": "Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.4773242130108127}, {"determining": "( ( FirstVNF_CPU / CRS ) + Max( Max( BR,( ( FirstVNF_CPU_Server + ( FirstVNF_Mem - Const ) ) * BR ) ),ARS ) )", "choosing": "Max( Min( RMSe ,RCSe ),( ( Max( ( ( ( ( CS * MUM ) + RCSe ) * MUM ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( MUM / Min( MLU ,DS ) ) ) ) + ( RRSe + RRSe ) ) / DS ) )", "obj1": 0.0531496062992126, "obj2": 0.7226238779142927}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,Min( ( CRS + AMS ) ,RRS ) ) ) - ( Max( Min( Min( FirstVNF_RAM ,ACS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( RRSe + ( ( Min( Min( MLU ,( MUC - RCSe ) ) ,MUM ) / DS ) / RCSe ) ) / MLU )", "obj1": 0.27755905511811024, "obj2": 0.47853825147966755}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.07217562264287844}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.41491905638332716}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.4148880243572583}, {"determining": "Max( ( ( ( MRS + FirstVNF_CPU_Server ) + ( MDR / ARS ) ) * ( ( FirstVNF_Mem_Server - RRS ) - BR ) ),( DDR * ARS ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.3641732283464567, "obj2": 0.4472241082521522}, {"determining": "Max( ( ( RRS - DDR ) - ( BR - FirstVNF_Mem_Server ) ),( ( PN - PN ) + Min( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) ) ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( MLU ,( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) / CS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6420871342454311}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.24515714142687908}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( PN - PN ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( Min( MLU ,( MLU / CS ) ) + ( MLU + MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6556855377414356}, {"determining": "( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.0531496062992126, "obj2": 0.7226238779142927}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0018055220765059118}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( Min( ACS ,FirstVNF_Mem ) / Max( RRS,BR ) )", "choosing": "( Max( MLU,MUM ) * ( ( RCSe / DS ) + ( Min( ( Min( MLU ,( MUR + RRSe ) ) + RRSe ) ,( MUC - MUR ) ) - RMSe ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7435333752378089}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) * FirstVNF_CPU_Server ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.21850393700787402, "obj2": 0.525783984025902}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * ( ( ( FirstVNF_Mem_Server * BR ) + Min( BR ,FirstVNF_RAM ) ) + ( MRS - ( ACS + FirstVNF_RAM ) ) ) ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + RRSe ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "( Min( CRS ,Min( ( ( ( Const / BR ) * Max( ARS,AMS ) ) / MRS ) ,CRS ) ) * ( BR / ( BR * PN ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( DS - Min( ( RCSe * ( Min( RMSe ,CS ) + MUC ) ) ,Min( Max( Min( RCSe ,RCSe ),RCSe ) ,MUM ) ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / Min( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ,( ( RMSe + Max( ( MUR * ( ( MUR / MUR ) + ( RRSe - DS ) ) ),MUC ) ) - Max( RCSe,RMSe ) ) ) )", "obj1": 0.3405511811023622, "obj2": 0.4691892862467488}], "5": [{"determining": "( ( BR + Min( ( ( ( Const / BR ) * Max( ARS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( MUM / ( DS + ( RMSe + Max( ( MUR * ( ( MUR / MUR ) + ( RRSe - DS ) ) ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - ( BR / ( BR * PN ) ) ) + Min( ( ( ( Const / BR ) * Max( ARS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( MUM / ( DS + ( Max( RCSe,RRSe ) / ( RRSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) - ( Const * FirstVNF_CPU ) )", "choosing": "( ( ( Max( DS,Max( MUM,MUM ) ) * RMSe ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7451762652108694}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.046982867982581736}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "Max( ( ( ( MRS + FirstVNF_CPU_Server ) + ( MDR / ARS ) ) * ( ( FirstVNF_Mem_Server - RRS ) - BR ) ),( DDR * ARS ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.3641732283464567, "obj2": 0.4472241082521522}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( Max( Min( ACS ,MRS ),PN ) / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU / ( ( CS * RRSe ) / MUR ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5308048323409515}, {"determining": "( ( FirstVNF_CPU / CRS ) + Max( Max( BR,( ( FirstVNF_CPU_Server + ( FirstVNF_Mem - Max( BR,FirstVNF_RAM ) ) ) * BR ) ),ARS ) )", "choosing": "Max( Min( RMSe ,RCSe ),( ( Max( ( ( ( ( RCSe * MUM ) + RCSe ) * MUM ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( MUM / Min( MLU ,DS ) ) ) ) + ( RRSe + RRSe ) ) / DS ) )", "obj1": 0.04921259842519685, "obj2": 0.7198086981797455}, {"determining": "( ACS - Max( MDR,MRS ) )", "choosing": "( MUM / ( DS + ( ( ( Max( DS,Max( MUM,MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / MUR ) ) )", "obj1": 0.0984251968503937, "obj2": 0.6952466045884069}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.639326246658799}, {"determining": "Min( Min( FirstVNF_Mem_Server ,Max( CRS,AMS ) ) ,( ( Max( MDR,Const ) + ( ACS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( ( ( MUR * ( ( RCSe * ( RMSe / Min( MLU ,RCSe ) ) ) - RCSe ) ) + ( ( RMSe * ( MUM / MUC ) ) - RMSe ) ) * ( MLU - RCSe ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "( ( ARS * BR ) + Max( ( FirstVNF_CPU + FirstVNF_Mem ),( DDR - MRS ) ) )", "choosing": "( Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) * Max( ( MLU * RRSe ),Max( DS,( MUM - DS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.44698880334355}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( MDR,Max( RRS,BR ) ) )", "choosing": "( ( MLU * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6240157480314961, "obj2": 0.27455437238780445}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( MUM / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.1141732283464567, "obj2": 0.6892830135590008}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.07217562264287844}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.41491905638332716}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.4148880243572583}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.234251968503937, "obj2": 0.5159879936967287}, {"determining": "Max( ( ( RRS - DDR ) - ( BR - FirstVNF_Mem_Server ) ),( ( PN - PN ) + Min( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) ) ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( MLU ,( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) / CS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6420871342454311}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6692913385826772, "obj2": 0.24515714142687908}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( PN - PN ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( Min( MLU ,( MLU / CS ) ) + ( MLU + MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6556855377414356}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) * FirstVNF_CPU_Server ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.21850393700787402, "obj2": 0.525783984025902}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0018055220765059118}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.045275590551181105, "obj2": 0.735059716659891}, {"determining": "( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( Max( MDR,MRS ) * FirstVNF_RAM_Server ) - MDR )", "choosing": "( ( DS + ( ( ( DS + RRSe ) / ( MLU + RRSe ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.5708661417322834, "obj2": 0.31550642849667476}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.234251968503937, "obj2": 0.5159879936967287}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.281496062992126, "obj2": 0.46929062749019496}], "6": [{"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * Min( CRS ,MDR ) ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( RCSe * ( Min( RMSe ,CS ) + MUC ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Min( ( ( ( Const / BR ) * Max( ARS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( MUM / ( DS + ( RMSe + Max( ( MUR * ( ( MUR / MUR ) + ( RRSe - DS ) ) ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( AMS + CRS ) * RRS ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04133858267716536, "obj2": 0.7505437559533319}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42913385826771655, "obj2": 0.3731699795968051}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.046982867982581736}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "Max( ( ( ( MRS + FirstVNF_CPU_Server ) + ( MDR / ARS ) ) * ( ( FirstVNF_Mem_Server - RRS ) - BR ) ),( DDR * ARS ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.3641732283464567, "obj2": 0.4472241082521522}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.639326246658799}, {"determining": "( ACS - Max( MDR,MRS ) )", "choosing": "( MUM / ( DS + ( ( ( Max( DS,Max( MUM,MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / MUR ) ) )", "obj1": 0.0984251968503937, "obj2": 0.6952466045884069}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU / ( CS * RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5340766669225862}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( ARS * BR ) + Max( ( FirstVNF_CPU + FirstVNF_Mem ),( DDR - MRS ) ) )", "choosing": "( Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) * Max( ( MLU * RRSe ),Max( DS,( MUM - DS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.44698880334355}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.41491905638332716}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( MDR,Max( RRS,BR ) ) )", "choosing": "( ( MLU * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6240157480314961, "obj2": 0.27455437238780445}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( MUM / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.1141732283464567, "obj2": 0.6892830135590008}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.07217562264287844}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5039386201005366}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "Max( ( ( RRS - DDR ) - ( BR - FirstVNF_Mem_Server ) ),( ( PN - PN ) + Min( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) ) ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( MLU ,( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) / CS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6420871342454311}, {"determining": "( ( ( ( Max( Const,( FirstVNF_Mem / ACS ) ) / ( Const * PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( DS + RRSe ) / ( DS + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.6692913385826772, "obj2": 0.2382137931214845}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( PN - PN ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( Min( MLU ,( MLU / CS ) ) + ( MLU + MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6556855377414356}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0018055220765059118}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.234251968503937, "obj2": 0.5153089650365323}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.045275590551181105, "obj2": 0.735059716659891}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.27755905511811024, "obj2": 0.47853825147966755}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( Max( MDR,MRS ) * FirstVNF_RAM_Server ) - MDR )", "choosing": "( ( DS + ( ( ( DS + RRSe ) / ( MLU + RRSe ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.5708661417322834, "obj2": 0.31550642849667476}, {"determining": "( ( FirstVNF_CPU / CRS ) + Max( Max( BR,( ( FirstVNF_CPU_Server + ( FirstVNF_Mem - Max( BR,FirstVNF_RAM ) ) ) * BR ) ),ARS ) )", "choosing": "Max( Min( RMSe ,RCSe ),( ( Max( ( ( ( ( RCSe * MUM ) + RCSe ) * MUM ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( MUM / Min( MLU ,DS ) ) ) ) + ( RRSe + RRSe ) ) / DS ) )", "obj1": 0.04921259842519685, "obj2": 0.7198086981797455}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}], "7": [{"determining": "( ( ( Max( FirstVNF_Mem_Server,Max( RRS,Min( ( CRS + AMS ) ,RRS ) ) ) - ( Max( Min( Min( FirstVNF_RAM ,ACS ) ,MRS ),PN ) + DDR ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( MUC - RCSe ) / ( MLU + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * Min( CRS ,MDR ) ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( RCSe * ( Min( RMSe ,CS ) + MUC ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42913385826771655, "obj2": 0.3731699795968051}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "Max( ( ( ( MRS + FirstVNF_CPU_Server ) + ( MDR / ARS ) ) * ( ( FirstVNF_Mem_Server - RRS ) - BR ) ),( DDR * ARS ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.3641732283464567, "obj2": 0.4472241082521522}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.046982867982581736}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.639326246658799}, {"determining": "( ACS - Max( MDR,MRS ) )", "choosing": "( MUM / ( DS + ( ( ( Max( DS,Max( MUM,MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / MUR ) ) )", "obj1": 0.0984251968503937, "obj2": 0.6952466045884069}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "( ( ARS * BR ) + Max( ( FirstVNF_CPU + FirstVNF_Mem ),( DDR - MRS ) ) )", "choosing": "( Min( ( MUM / ( CS / MUC ) ) ,( Max( MUM,RMSe ) + Max( RMSe,Min( DS ,RCSe ) ) ) ) * Max( ( MLU * RRSe ),Max( DS,( MUM - DS ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.44698880334355}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.41491905638332716}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( MDR,Max( RRS,BR ) ) )", "choosing": "( ( MLU * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6240157480314961, "obj2": 0.27455437238780445}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( MUM / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.1141732283464567, "obj2": 0.6892830135590008}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU / ( CS * RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5340766669225862}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( Max( FirstVNF_CPU,Min( FirstVNF_RAM_Server ,( ( CRS / ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / RRSe ) ) / ( RRSe + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9133858267716536, "obj2": 0.06348213843773182}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5039386201005366}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "Max( ( ( RRS - DDR ) - ( BR - FirstVNF_Mem_Server ) ),( ( PN - PN ) + Min( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) ) ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( MLU ,( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) / CS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6420871342454311}, {"determining": "( ( ( ( Max( Const,( FirstVNF_Mem / ACS ) ) / ( Const * PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( DS + RRSe ) / ( DS + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.6692913385826772, "obj2": 0.2382137931214845}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( PN - PN ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( Min( MLU ,( MLU / CS ) ) + ( MLU + MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6556855377414356}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * RRSe ) )", "obj1": 0.2125984251968504, "obj2": 0.5267466112452758}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0018055220765059118}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.07217562264287844}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.234251968503937, "obj2": 0.5153089650365323}, {"determining": "( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( Max( MDR,MRS ) * FirstVNF_RAM_Server ) - MDR )", "choosing": "( ( DS + ( ( ( DS + RRSe ) / ( MLU + RRSe ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.5708661417322834, "obj2": 0.31550642849667476}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.27755905511811024, "obj2": 0.47853825147966755}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( MDR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}], "8": [{"determining": "( ( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( DS + ( ( ( DS + RRSe ) / ( MLU + RRSe ) ) / ( MLU + RRSe ) ) ) * RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,Max( RRS,Min( ( CRS + AMS ) ,RRS ) ) ) - ( Max( Min( Min( FirstVNF_RAM ,ACS ) ,MRS ),PN ) + DDR ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( MUC - RCSe ) / ( MLU + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42913385826771655, "obj2": 0.3731699795968051}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( MUM / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.1141732283464567, "obj2": 0.6892830135590008}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + FirstVNF_Mem_Server ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( CS * RRSe ) / MUR ) / MUR ) )", "obj1": 0.35236220472440943, "obj2": 0.4463397143184673}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.41491905638332716}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.639326246658799}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU / ( CS * RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5340766669225862}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "( ( Max( ( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * CS ) / MUR ) )", "obj1": 0.3405511811023622, "obj2": 0.4511156955851125}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.046982867982581736}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( MDR,Max( RRS,BR ) ) )", "choosing": "( ( MLU * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6240157480314961, "obj2": 0.27455437238780445}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) / Min( DS ,MUC ) )", "obj1": 0.045275590551181105, "obj2": 0.7400490732902422}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( Max( FirstVNF_CPU,Min( FirstVNF_RAM_Server ,( ( CRS / ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / RRSe ) ) / ( RRSe + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9133858267716536, "obj2": 0.06348213843773182}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5039386201005366}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "Max( ( ( RRS - DDR ) - ( BR - FirstVNF_Mem_Server ) ),( ( PN - PN ) + Min( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) ) ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( MLU ,( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) / CS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6420871342454311}, {"determining": "( ( ( ( Max( Const,( FirstVNF_Mem / ACS ) ) / ( Const * PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( DS + RRSe ) / ( DS + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.6692913385826772, "obj2": 0.2382137931214845}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( PN - PN ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( Min( MLU ,( MLU / CS ) ) + ( MLU + MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6556855377414356}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MLU ) )", "obj1": 0.2283464566929134, "obj2": 0.5127289932966453}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( ( Min( ARS ,PN ) - FirstVNF_CPU ) / FirstVNF_RAM ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9960629921259843, "obj2": 0.0018055220765059118}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.07217562264287844}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( Min( ACS ,MRS ),PN ) + DDR ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.26968503937007876, "obj2": 0.4802576142371495}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( Max( MDR,MRS ) * FirstVNF_RAM_Server ) - MDR )", "choosing": "( ( DS + ( ( ( DS + RRSe ) / ( MLU + RRSe ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.5708661417322834, "obj2": 0.31550642849667476}], "9": [{"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MLU + RRSe ) / ( ( MLU / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( DS + ( ( ( DS + RRSe ) / ( MLU + RRSe ) ) / ( MLU + RRSe ) ) ) * RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( Max( ( ACS - ( Max( Max( DDR,FirstVNF_Mem ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),PN ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( ( MUC / CS ) * RRSe ) / MUR ) ) / ( MUM + RRSe ) ) ) / ( ( RMSe * MUC ) + RRSe ) )", "obj1": 0.7874015748031497, "obj2": 0.13362081552023702}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42913385826771655, "obj2": 0.3731699795968051}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.639326246658799}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.41491905638332716}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( MUM / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.1141732283464567, "obj2": 0.6892830135590008}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( ( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.046982867982581736}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( MDR,Max( RRS,BR ) ) )", "choosing": "( ( MLU * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6240157480314961, "obj2": 0.27455437238780445}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),Max( Min( Min( FirstVNF_RAM ,ACS ) ,MRS ),PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( RRSe + ( ( Min( Min( MLU ,( MUC - RCSe ) ) ,MUM ) / DS ) / RCSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.328740157480315, "obj2": 0.451711554485636}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5340766669225862}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Min( ARS ,( FirstVNF_RAM * DDR ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / DS ) )", "obj1": 0.4271653543307087, "obj2": 0.3870339472606894}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MLU ) )", "obj1": 0.2283464566929134, "obj2": 0.5127289932966453}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( Max( FirstVNF_CPU,Min( FirstVNF_RAM_Server ,( ( CRS / ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / RRSe ) ) / ( RRSe + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9133858267716536, "obj2": 0.06348213843773182}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * RRSe ) )", "obj1": 0.2106299212598425, "obj2": 0.5328655796990893}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "Max( ( ( ARS * MDR ) - ( Max( Max( FirstVNF_CPU,( RRS * ( MRS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),ACS ) * ( MRS * BR ) ) ),FirstVNF_CPU_Server )", "choosing": "( Min( ( DS * Min( RRSe ,Max( Max( MUM,( ( MUR + RMSe ) - ( DS + MUC ) ) ),MUM ) ) ) ,RCSe ) / ( ( ( Max( ( ( ( MLU / RCSe ) / CS ) * MUM ),MUM ) * ( CS / CS ) ) * RRSe ) + ( Max( ( MUM - Min( CS ,MLU ) ),DS ) * DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.6855982480713707}, {"determining": "Max( ( ( RRS - DDR ) - ( BR - FirstVNF_Mem_Server ) ),( ( PN - PN ) + Min( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) ) ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( MLU ,( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) / CS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6420871342454311}, {"determining": "( ( ( ( Max( Const,( FirstVNF_Mem / ACS ) ) / ( Const * PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( DS + RRSe ) / ( DS + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.6692913385826772, "obj2": 0.2382137931214845}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( PN - PN ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( Min( MLU ,( MLU / CS ) ) + ( MLU + MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6556855377414356}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + FirstVNF_Mem_Server ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( CS * RRSe ) / MUR ) / MUR ) )", "obj1": 0.35236220472440943, "obj2": 0.4463397143184673}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5039386201005366}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}], "10": [{"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MLU + RRSe ) / ( ( MLU / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MLU + RRSe ) / ( ( MLU / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( Max( ( ACS - ( Max( Max( DDR,FirstVNF_Mem ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),PN ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( ( MUC / CS ) * RRSe ) / MUR ) ) / ( MUM + RRSe ) ) ) / ( ( RMSe * MUC ) + RRSe ) )", "obj1": 0.7874015748031497, "obj2": 0.13362081552023702}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42913385826771655, "obj2": 0.3731699795968051}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.16535433070866143, "obj2": 0.639326246658799}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( Max( ( MUC - MLU ),Max( Max( ( RRSe * MUR ),RCSe ),Min( MUR ,MLU ) ) ) + MUR ) / ( ( ( MLU / MUM ) + DS ) / ( MLU + RRSe ) ) )", "obj1": 0.7480314960629921, "obj2": 0.2004372727788091}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),Max( Min( Min( FirstVNF_RAM ,ACS ) ,MRS ),PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( RRSe + ( ( Min( Min( MLU ,( MUC - RCSe ) ) ,MUM ) / DS ) / RCSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.328740157480315, "obj2": 0.451711554485636}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( Min( ( ACS * FirstVNF_RAM ) ,Max( FirstVNF_Mem,ARS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( Max( MUR,DS ) + ( RCSe / DS ) ) ) * ( Min( Min( RRSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.41491905638332716}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( ACS * ( ( FirstVNF_CPU - MDR ) * ( PN / MDR ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( ( MLU + RRSe ) / ( ( Min( RMSe ,Max( MLU,( ( MUR / RRSe ) - ( RRSe / MUR ) ) ) ) + MUR ) + ( ( DS + RRSe ) / ( MUC + RRSe ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04331334730132983}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.5512721578203075}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( MDR,Max( RRS,BR ) ) )", "choosing": "( ( MLU * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6240157480314961, "obj2": 0.27455437238780445}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( Min( CRS ,MDR ) * ( BR / ( BR * PN ) ) )", "choosing": "( MUM / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.1141732283464567, "obj2": 0.6892830135590008}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MLU ) )", "obj1": 0.2283464566929134, "obj2": 0.5127289932966453}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( Max( FirstVNF_CPU,Min( FirstVNF_RAM_Server ,( ( CRS / ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / RRSe ) ) / ( RRSe + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9133858267716536, "obj2": 0.06348213843773182}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Min( ARS ,( FirstVNF_RAM * DDR ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / DS ) )", "obj1": 0.4271653543307087, "obj2": 0.3870339472606894}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + FirstVNF_Mem_Server ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( CS * RRSe ) / MUR ) / MUR ) )", "obj1": 0.35236220472440943, "obj2": 0.4463397143184673}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "Max( ( ( RRS - DDR ) - ( BR - FirstVNF_Mem_Server ) ),( ( PN - PN ) + Min( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) ) ,DDR ) ) )", "choosing": "Min( Max( DS,CS ) ,Min( MLU ,( Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) ) / CS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6420871342454311}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ),( ( CRS / Const ) + ( Const + BR ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( MLU * CS ) ) ,( ( Min( RMSe ,MUC ) / CS ) + ( MLU + MUC ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6627684430956238}, {"determining": "( ( ( ( Max( Const,( FirstVNF_Mem / ACS ) ) / ( Const * PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( DS + RRSe ) / ( DS + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.6692913385826772, "obj2": 0.2382137931214845}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( PN - PN ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( Min( MLU ,( MLU / CS ) ) + ( MLU + MUC ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6556855377414356}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Max( Min( ( ( RRS + ( AMS * Const ) ) - FirstVNF_Mem ) ,ACS ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( DS + Min( ( ( RCSe - RRSe ) * MLU ) ,RCSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.685070300616056}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}], "11": [{"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MLU + RRSe ) / ( ( MLU / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MLU + RRSe ) / ( ( MLU / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.5512721578203075}, {"determining": "( ( ( Max( BR,DDR ) / ( MDR + DDR ) ) + Max( Min( RRS ,ACS ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( DS + Min( ( ( RCSe - RRSe ) * ( RCSe / RRSe ) ) ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.680090227002763}, {"determining": "( Max( ( ACS - ( Max( Max( DDR,FirstVNF_Mem ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),PN ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( ( MUC / CS ) * RRSe ) / MUR ) ) / ( MUM + RRSe ) ) ) / ( ( RMSe * MUC ) + RRSe ) )", "obj1": 0.7874015748031497, "obj2": 0.13362081552023702}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42913385826771655, "obj2": 0.3731699795968051}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.1515748031496063, "obj2": 0.6387828612433284}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( DS + ( RCSe / ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) ) ) / Min( RMSe ,MLU ) ) / Min( DS ,MUC ) )", "obj1": 0.12401574803149606, "obj2": 0.6523892704072449}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( Max( ( MUC - MLU ),Max( Max( ( RRSe * MUR ),RCSe ),Min( MUR ,MLU ) ) ) + MUR ) / ( ( ( MLU / MUM ) + DS ) / ( MLU + RRSe ) ) )", "obj1": 0.7480314960629921, "obj2": 0.2004372727788091}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( ( ACS * ( ( FirstVNF_CPU - MDR ) * ( PN / MDR ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( ( MLU + RRSe ) / ( ( Min( RMSe ,Max( MLU,( ( MUR / RRSe ) - ( RRSe / MUR ) ) ) ) + MUR ) + ( ( DS + RRSe ) / ( MUC + RRSe ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04331334730132983}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( Max( FirstVNF_CPU,Min( FirstVNF_RAM_Server ,( ( CRS / ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / RRSe ) ) / ( RRSe + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9133858267716536, "obj2": 0.06348213843773182}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),Max( Min( Min( FirstVNF_RAM ,ACS ) ,MRS ),PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( RRSe + ( ( Min( Min( MLU ,( MUC - RCSe ) ) ,MUM ) / DS ) / RCSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.328740157480315, "obj2": 0.451711554485636}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MLU ) )", "obj1": 0.2283464566929134, "obj2": 0.5127289932966453}, {"determining": "( ( ( ( MDR * FirstVNF_CPU_Server ) - RRS ) - ( MRS + FirstVNF_Mem_Server ) ) - Min( DDR ,BR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - ( ( Min( DS ,MUM ) + Min( MUR ,MUR ) ) + ( RCSe / DS ) ) ) * ( Min( Min( RCSe ,MUM ) ,( CS * RRSe ) ) + Max( ( MUR - MUM ),( RRSe * MUR ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( ( ( Max( Const,( FirstVNF_Mem / ACS ) ) / ( Const * PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( DS + RRSe ) / ( DS + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.6692913385826772, "obj2": 0.2382137931214845}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + FirstVNF_Mem_Server ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( CS * RRSe ) / MUR ) / MUR ) )", "obj1": 0.35236220472440943, "obj2": 0.4463397143184673}, {"determining": "( Min( ( ( Max( Min( MDR ,FirstVNF_RAM ),( MDR + DDR ) ) / AMS ) * ( ( ( FirstVNF_Mem_Server * BR ) + Min( Const ,FirstVNF_RAM ) ) + ( MRS - ( ACS + FirstVNF_RAM ) ) ) ) ,MDR ) + Max( Max( BR,Min( Max( MRS,MDR ) ,MDR ) ),ARS ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( ( ( CS * MUM ) + RCSe ) * MUM ) - Min( MUC ,DS ) ),( ( ( Max( MUM,RRSe ) + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / Min( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) ,RCSe ) ) )", "obj1": 0.421259842519685, "obj2": 0.39694092763233446}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( MUC / ( Max( CS,Max( Max( ( MUC + Max( MUM,Max( MUM,MLU ) ) ),RCSe ),RCSe ) ) - Max( ( MLU * Max( ( MUM - MUC ),DS ) ),RRSe ) ) )", "obj1": 0.7598425196850394, "obj2": 0.18108143042925492}, {"determining": "Min( ( DDR + ACS ) ,Min( Max( ( ( ( Max( Min( MDR ,FirstVNF_RAM ),( MDR + DDR ) ) / AMS ) * ( ( ( FirstVNF_Mem_Server * BR ) + Min( Const ,FirstVNF_RAM ) ) + ( MRS - ( ACS + FirstVNF_RAM ) ) ) ) * MDR ),FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,( MRS + BR ) ) ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( ( ( CS * MUM ) + RCSe ) * MUM ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / Min( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) ,RCSe ) ) )", "obj1": 0.1515748031496063, "obj2": 0.6387828612433284}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Min( ARS ,( FirstVNF_RAM * DDR ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / DS ) )", "obj1": 0.4271653543307087, "obj2": 0.3870339472606894}, {"determining": "( ( ( MDR * ( ( Max( ARS,BR ) + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( MUM,RCSe ) ) ) / RRSe ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9940944881889764, "obj2": 0.005258652099439516}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}], "12": [{"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MLU + RRSe ) / ( ( MLU / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MLU + RRSe ) / ( ( MLU / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( ( Max( BR,DDR ) / ( MDR + DDR ) ) + Max( Min( RRS ,ACS ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( DS + Min( ( ( RCSe - RRSe ) * ( RCSe / RRSe ) ) ,RCSe ) ) )", "obj1": 0.1062992125984252, "obj2": 0.680090227002763}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.5512721578203075}, {"determining": "( Max( ( ACS - ( Max( Max( DDR,FirstVNF_Mem ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),PN ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( ( MUC / CS ) * RRSe ) / MUR ) ) / ( MUM + RRSe ) ) ) / ( ( RMSe * MUC ) + RRSe ) )", "obj1": 0.7874015748031497, "obj2": 0.13362081552023702}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( Max( ( MUC - MLU ),Max( Max( ( RRSe * MUR ),RCSe ),Min( MUR ,MLU ) ) ) + MUR ) / ( ( ( MLU / MUM ) + DS ) / ( MLU + RRSe ) ) )", "obj1": 0.7480314960629921, "obj2": 0.2004372727788091}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),Max( Min( Min( FirstVNF_RAM ,ACS ) ,MRS ),PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( RRSe + ( ( Min( Min( MLU ,( MUC - RCSe ) ) ,MUM ) / DS ) / RCSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.328740157480315, "obj2": 0.451711554485636}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( ( ACS * ( ( FirstVNF_CPU - MDR ) * ( PN / MDR ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( ( MLU + RRSe ) / ( ( Min( RMSe ,Max( MLU,( ( MUR / RRSe ) - ( RRSe / MUR ) ) ) ) + MUR ) + ( ( DS + RRSe ) / ( MUC + RRSe ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04331334730132983}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( Max( FirstVNF_CPU,Min( FirstVNF_RAM_Server ,( ( CRS / ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / RRSe ) ) / ( RRSe + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9133858267716536, "obj2": 0.06348213843773182}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + FirstVNF_Mem_Server ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( CS * RRSe ) / MUR ) / MUR ) )", "obj1": 0.35236220472440943, "obj2": 0.4463397143184673}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Min( ARS ,( FirstVNF_RAM * DDR ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / DS ) )", "obj1": 0.4271653543307087, "obj2": 0.3870339472606894}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.012854517744257563}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( MUC / ( Max( CS,Max( Max( ( MUC + Max( MUM,Max( MUM,MLU ) ) ),RCSe ),RCSe ) ) - Max( ( MLU * Max( ( MUM - MUC ),DS ) ),RRSe ) ) )", "obj1": 0.7598425196850394, "obj2": 0.18108143042925492}, {"determining": "( ( ( MDR * ( ( Max( ARS,BR ) + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( MUM,RCSe ) ) ) / RRSe ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9940944881889764, "obj2": 0.005258652099439516}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( ( ( Max( Const,( FirstVNF_Mem / ACS ) ) / ( Const * PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( DS + RRSe ) / ( DS + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.6692913385826772, "obj2": 0.2382137931214845}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MLU ) )", "obj1": 0.2283464566929134, "obj2": 0.5127289932966453}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42913385826771655, "obj2": 0.3731699795968051}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( Min( RCSe ,MUM ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04133858267716536, "obj2": 0.7510563748666574}], "13": [{"determining": "( ( RRS / ( RRS / ( RRS / ( FirstVNF_CPU - DDR ) ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( RRSe + MLU ) / ( ( ( RRSe + MLU ) / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MLU + RRSe ) / ( ( MLU / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( ( RRS - MDR ) + ( ( ( FirstVNF_CPU_Server + RRS ) / ( AMS / PN ) ) + BR ) )", "choosing": "( ( Max( ( MUC - CS ),Min( CS ,CS ) ) * ( Max( RMSe,RCSe ) + ( MUC / MLU ) ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09079847568306118}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( Max( ( ACS - ( Max( Max( DDR,FirstVNF_Mem ),Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),PN ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( ( MUC / CS ) * RRSe ) / MUR ) ) / ( MUM + RRSe ) ) ) / ( ( RMSe * MUC ) + RRSe ) )", "obj1": 0.7874015748031497, "obj2": 0.13362081552023702}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.5512721578203075}, {"determining": "( Max( ( Min( ARS ,RRS ) + ( FirstVNF_Mem + AMS ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( MUC ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ( ( FirstVNF_Mem_Server - RRS ) - BR ) ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) - Max( Max( Max( RCSe,MUR ),Max( MUR,MLU ) ),( Max( DS,MUR ) + ( RCSe * MUM ) ) ) ) ) + MUR ) )", "obj1": 0.7736220472440944, "obj2": 0.1534197037877876}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( Max( ( MUC - MLU ),Max( Max( ( RRSe * MUR ),RCSe ),Min( MUR ,MLU ) ) ) + MUR ) / ( ( ( MLU / MUM ) + DS ) / ( MLU + RRSe ) ) )", "obj1": 0.7480314960629921, "obj2": 0.2004372727788091}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( ( ( RRS - DDR ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / ( MUC / DS ) ) )", "obj1": 0.8976377952755905, "obj2": 0.07975757645568739}, {"determining": "( ( ACS * ( ( FirstVNF_CPU - MDR ) * ( PN / MDR ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( ( MLU + RRSe ) / ( ( Min( RMSe ,Max( MLU,( ( MUR / RRSe ) - ( RRSe / MUR ) ) ) ) + MUR ) + ( ( DS + RRSe ) / ( MUC + RRSe ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04331334730132983}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Min( ARS ,( FirstVNF_RAM * DDR ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / DS ) )", "obj1": 0.4271653543307087, "obj2": 0.3870339472606894}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "Min( ( DDR + ACS ) ,Min( Max( ( ( ( Max( Min( MDR ,FirstVNF_RAM ),( MDR + DDR ) ) / AMS ) * ( ( ( FirstVNF_Mem_Server * BR ) + Min( Const ,FirstVNF_RAM ) ) + ( MRS - ( ACS + FirstVNF_RAM ) ) ) ) * MDR ),FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,( MRS + BR ) ) ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08267716535433071, "obj2": 0.6771805597055759}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( ( ( Max( Const,( FirstVNF_Mem / ACS ) ) / ( Const * PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( DS + RRSe ) / ( DS + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.6692913385826772, "obj2": 0.2382137931214845}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / ( MLU + RRSe ) )", "obj1": 0.7618110236220472, "obj2": 0.1791766309228204}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( FirstVNF_Mem_Server - ( FirstVNF_Mem * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.7539370078740157, "obj2": 0.18454701898604892}, {"determining": "( ( ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( MDR + FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) - ( Max( CRS,( Max( ARS,RRS ) - DDR ) ) + FirstVNF_CPU ) )", "choosing": "( Max( DS,( ( RRSe - Max( MLU,MLU ) ) - Min( MUR ,MUC ) ) ) / ( ( RCSe * Max( ( ( RMSe - ( ( MUR - DS ) - ( MUM * CS ) ) ) - ( ( Min( MUM ,MUR ) * MLU ) * ( MUM / RMSe ) ) ),( DS + MLU ) ) ) + RRSe ) )", "obj1": 0.9940944881889764, "obj2": 0.004483155705910293}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}], "14": [{"determining": "( ( RRS / ( ( ( Const * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,PN ) + Min( FirstVNF_RAM ,AMS ) ) ) - DDR ) / RRS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( Min( RMSe ,( MLU + MUR ) ),Min( RCSe ,MUR ) ) / RRSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( RRS / ( RRS / ( FirstVNF_CPU - DDR ) ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( RRSe + MLU ) / ( ( ( RRSe + MLU ) / MUM ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "( FirstVNF_Mem_Server - ( FirstVNF_Mem * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.7539370078740157, "obj2": 0.18454701898604892}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "Max( ( FirstVNF_Mem * MDR ),Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,( MUC * DS ) ) )", "obj1": 0.655511811023622, "obj2": 0.24777502872440385}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( Max( ( MUC - MLU ),Max( Max( ( RRSe * MUR ),RCSe ),Min( MUR ,MLU ) ) ) + MUR ) / ( ( ( MLU / MUM ) + DS ) / ( MLU + RRSe ) ) )", "obj1": 0.7480314960629921, "obj2": 0.2004372727788091}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( Max( ARS,MDR ) - ( ( MDR + CRS ) * RRS ) ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( CS + MUR ) - ( Min( DS ,RRSe ) - RRSe ) ) + RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.5349716631418268}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( ( ACS * ( ( FirstVNF_CPU - MDR ) * ( PN / MDR ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( ( MLU + RRSe ) / ( ( Min( RMSe ,Max( MLU,( ( MUR / RRSe ) - ( RRSe / MUR ) ) ) ) + MUR ) + ( ( DS + RRSe ) / ( MUC + RRSe ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04331334730132983}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.5512721578203075}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( ( ( Max( Const,( FirstVNF_Mem / ACS ) ) / ( Const * PN ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( DS + RRSe ) / ( DS + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.6692913385826772, "obj2": 0.2382137931214845}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "Min( ( DDR + ACS ) ,Min( Max( ( ( ( Max( Min( MDR ,FirstVNF_RAM ),( MDR + DDR ) ) / AMS ) * ( ( ( FirstVNF_Mem_Server * BR ) + Min( Const ,FirstVNF_RAM ) ) + ( MRS - ( ACS + FirstVNF_RAM ) ) ) ) * MDR ),FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,( MRS + BR ) ) ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08267716535433071, "obj2": 0.6771805597055759}, {"determining": "( ( ACS + MRS ) - ( ( DDR / ( Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * PN ) ,( Max( Const,BR ) / FirstVNF_CPU_Server ) ) ) + Min( RRS ,CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( DS - ( Max( ( Max( ( Max( MUC,MUC ) / RMSe ),( ( DS / MUR ) * MLU ) ) + DS ),CS ) + CS ) ) )", "obj1": 0.9822834645669292, "obj2": 0.007909670496447812}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),MDR ),ARS ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08267716535433071, "obj2": 0.6771805597055759}, {"determining": "( ( ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( MDR + FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) - ( Max( CRS,( Max( ARS,RRS ) - DDR ) ) + FirstVNF_CPU ) )", "choosing": "( Max( DS,( ( RRSe - Max( MLU,MLU ) ) - Min( MUR ,MUC ) ) ) / ( ( RCSe * Max( ( ( RMSe - ( ( MUR - DS ) - ( MUM * CS ) ) ) - ( ( Min( MUM ,MUR ) * MLU ) * ( MUM / RMSe ) ) ),( DS + MLU ) ) ) + RRSe ) )", "obj1": 0.9940944881889764, "obj2": 0.004483155705910293}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.968503937007874, "obj2": 0.017343912992599634}], "15": [{"determining": "( ( RRS / ( ( ( Const * ( ( Max( MDR,FirstVNF_Mem ) / AMS ) / FirstVNF_RAM ) ) - DDR ) / RRS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( RCSe + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( ( ( Const * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,PN ) + Min( FirstVNF_RAM ,AMS ) ) ) - DDR ) / RRS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( Min( RMSe ,( MLU + MUR ) ),Min( RCSe ,MUR ) ) / RRSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "( FirstVNF_Mem_Server - ( FirstVNF_Mem * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.7539370078740157, "obj2": 0.18454701898604892}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU_Server,MDR ) ) - Max( ( ARS / Min( FirstVNF_CPU_Server ,AMS ) ),MRS ) )", "choosing": "( MUC / ( Max( RRSe,DS ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.2362614768858075}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( Max( ( MUC - MLU ),Max( Max( ( RRSe * MUR ),RCSe ),Min( MUR ,MLU ) ) ) + MUR ) / ( ( ( MLU / MUM ) + DS ) / ( MLU + RRSe ) ) )", "obj1": 0.7480314960629921, "obj2": 0.2004372727788091}, {"determining": "( ( Max( ARS,MDR ) - ( ( MDR + CRS ) * RRS ) ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( CS + MUR ) - ( Min( DS ,RRSe ) - RRSe ) ) + RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.5349716631418268}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( ( MLU / ( CS * Max( MUM,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.5512721578203075}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( ACS * ( ( FirstVNF_CPU - MDR ) * ( PN / MDR ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( ( MLU + RRSe ) / ( ( Min( RMSe ,Max( MLU,( ( MUR / RRSe ) - ( RRSe / MUR ) ) ) ) + MUR ) + ( ( DS + RRSe ) / ( MUC + RRSe ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04331334730132983}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( ( FirstVNF_Mem_Server + ( MDR + ( ( ( FirstVNF_Mem_Server + ( MDR + FirstVNF_RAM ) ) - CRS ) - ( ( FirstVNF_RAM * ARS ) + AMS ) ) ) ) - CRS ) - ( ( FirstVNF_RAM * ARS ) + AMS ) )", "choosing": "( Max( MLU,( ( RRSe - Max( MLU,MLU ) ) - Min( RCSe ,MUC ) ) ) / ( Max( MLU,MLU ) + RRSe ) )", "obj1": 0.9488188976377953, "obj2": 0.04005621161763466}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),MDR ),ARS ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6773914155150074}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( MRS - ( ( PN - PN ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( Max( ( RMSe * RMSe ),RRSe ) / MUR ) )", "obj1": 0.5767716535433071, "obj2": 0.3072089159616349}, {"determining": "Min( ( DDR + ACS ) ,Min( Max( ( ( ( Max( Min( MDR ,FirstVNF_RAM ),( MDR + DDR ) ) / AMS ) * ( ( ( FirstVNF_Mem_Server * BR ) + Min( Const ,FirstVNF_RAM ) ) + ( MRS - ( ACS + FirstVNF_RAM ) ) ) ) * MDR ),FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,( MRS + BR ) ) ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( ( ACS + MRS ) - ( ( DDR / ( Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * PN ) ,( Max( Const,BR ) / FirstVNF_CPU_Server ) ) ) + Min( RRS ,CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( DS - ( Max( ( Max( ( Max( MUC,MUC ) / RMSe ),( ( DS / MUR ) * MLU ) ) + DS ),CS ) + CS ) ) )", "obj1": 0.9822834645669292, "obj2": 0.007909670496447812}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "( ( ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( MDR + FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) - ( Max( CRS,( Max( ARS,RRS ) - DDR ) ) + FirstVNF_CPU ) )", "choosing": "( Max( DS,( ( RRSe - Max( MLU,MLU ) ) - Min( MUR ,MUC ) ) ) / ( ( RCSe * Max( ( ( RMSe - ( ( MUR - DS ) - ( MUM * CS ) ) ) - ( ( Min( MUM ,MUR ) * MLU ) * ( MUM / RMSe ) ) ),( DS + MLU ) ) ) + RRSe ) )", "obj1": 0.9940944881889764, "obj2": 0.004483155705910293}], "16": [{"determining": "( ( Min( ( FirstVNF_CPU_Server * PN ) ,( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) / ( ( ( Const * ( ( AMS / Max( BR,FirstVNF_Mem ) ) / FirstVNF_RAM ) ) - DDR ) / RRS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( ( ( Const * ( ( Max( MDR,FirstVNF_Mem ) / AMS ) / FirstVNF_RAM ) ) - DDR ) / RRS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( RCSe + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( ( Const - PN ) + ( ( ( ( Const / BR ) * Max( ( Const - Min( AMS ,RRS ) ),AMS ) ) / MRS ) + CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( DS + RRSe ) / ( CS - ( MUM / RMSe ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5831280885873894}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "( FirstVNF_Mem_Server - Max( Const,( ( Min( RRS ,ACS ) * ACS ) - ( FirstVNF_RAM_Server * ACS ) ) ) )", "choosing": "( Min( RMSe ,( ( MUR / MUR ) - Min( MUR ,CS ) ) ) / ( ( RCSe / ( ( ( MUM - DS ) - DS ) - ( ( Max( DS,MLU ) + ( Min( CS ,CS ) + ( RMSe / CS ) ) ) + MUR ) ) ) + Max( MUC,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5486950698696139}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),MDR ),ARS ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6773914155150074}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( ACS * ( ( FirstVNF_CPU - MDR ) * ( PN / MDR ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( ( MLU + RRSe ) / ( ( Min( RMSe ,Max( MLU,( ( MUR / RRSe ) - ( RRSe / MUR ) ) ) ) + MUR ) + ( ( DS + RRSe ) / ( MUC + RRSe ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04331334730132983}, {"determining": "( ( Max( ARS,MDR ) - ( ( MDR + CRS ) * RRS ) ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( CS + MUR ) - ( Min( DS ,RRSe ) - RRSe ) ) + RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.5349716631418268}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( ( FirstVNF_Mem_Server + ( MDR + ( ( ( FirstVNF_Mem_Server + ( MDR + FirstVNF_RAM ) ) - CRS ) - ( ( FirstVNF_RAM * ARS ) + AMS ) ) ) ) - CRS ) - ( ( FirstVNF_RAM * ARS ) + AMS ) )", "choosing": "( Max( MLU,( ( RRSe - Max( MLU,MLU ) ) - Min( RCSe ,MUC ) ) ) / ( Max( MLU,MLU ) + RRSe ) )", "obj1": 0.9488188976377953, "obj2": 0.04005621161763466}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),Max( Min( ACS ,MRS ),PN ) ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / Min( MLU ,MUM ) ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.22244094488188976, "obj2": 0.5347051562392879}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "( ( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - RRSe ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6653543307086615, "obj2": 0.23265896123281093}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( MRS - ( ( PN - PN ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( Max( ( RMSe * RMSe ),RRSe ) / MUR ) )", "obj1": 0.5767716535433071, "obj2": 0.3072089159616349}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),MDR ),ARS ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU_Server,MDR ) ) - Max( ( ARS / Min( FirstVNF_CPU_Server ,AMS ) ),MRS ) )", "choosing": "( MUC / ( Max( RRSe,DS ) / MLU ) )", "obj1": 0.6535433070866141, "obj2": 0.2362614768858075}], "17": [{"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( MUR + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * PN ) ,( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) / ( ( ( Const * ( ( AMS / Max( BR,FirstVNF_Mem ) ) / FirstVNF_RAM ) ) - DDR ) / RRS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "Min( ( FirstVNF_RAM / ( MRS / ( FirstVNF_RAM / CRS ) ) ) ,Min( Max( ( MDR * ( ( FirstVNF_RAM - AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ( MRS + CRS ) ) ) )", "choosing": "( ( RCSe / ( MUC / MUC ) ) + ( Min( DS ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( MUC + MUM ) / CS ) ) ),( Max( RRSe,RRSe ) + RRSe ) ) ) - ( RCSe / RRSe ) ) )", "obj1": 0.5669291338582677, "obj2": 0.3178815943045619}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( ( Max( ARS,MDR ) - ( ( MDR + CRS ) * RRS ) ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( ( CS + MUR ) - ( Min( DS ,RRSe ) - RRSe ) ) + RRSe ) )", "obj1": 0.20669291338582677, "obj2": 0.5349716631418268}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( Min( ( MRS - ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - MDR ) ) ,( FirstVNF_RAM_Server - Min( ( MDR * DDR ) ,RRS ) ) ) + ( Max( BR,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) / PN ) ) - FirstVNF_Mem_Server )", "choosing": "( ( ( MUM + ( ( MUR * ( Max( MUR,RCSe ) + DS ) ) * RCSe ) ) - ( RMSe + ( MUM - MUM ) ) ) / ( Min( ( RRSe + MUM ) ,RCSe ) + DS ) )", "obj1": 0.17125984251968504, "obj2": 0.5834632355799513}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "( FirstVNF_Mem_Server - Max( Const,( ( Min( RRS ,ACS ) * ACS ) - ( FirstVNF_RAM_Server * ACS ) ) ) )", "choosing": "( Min( RMSe ,( ( MUR / MUR ) - Min( MUR ,CS ) ) ) / ( ( RCSe / ( ( ( MUM - DS ) - DS ) - ( ( Max( DS,MLU ) + ( Min( CS ,CS ) + ( RMSe / CS ) ) ) + MUR ) ) ) + Max( MUC,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5486950698696139}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( ACS * ( ( FirstVNF_CPU - MDR ) * ( PN / MDR ) ) ) - ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MLU ) / ( ( MLU + RRSe ) / ( ( Min( RMSe ,Max( MLU,( ( MUR / RRSe ) - ( RRSe / MUR ) ) ) ) + MUR ) + ( ( DS + RRSe ) / ( MUC + RRSe ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.04331334730132983}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( ( FirstVNF_Mem_Server + ( MDR + ( ( ( FirstVNF_Mem_Server + ( MDR + FirstVNF_RAM ) ) - CRS ) - ( ( FirstVNF_RAM * ARS ) + AMS ) ) ) ) - CRS ) - ( ( FirstVNF_RAM * ARS ) + AMS ) )", "choosing": "( Max( MLU,( ( RRSe - Max( MLU,MLU ) ) - Min( RCSe ,MUC ) ) ) / ( Max( MLU,MLU ) + RRSe ) )", "obj1": 0.9488188976377953, "obj2": 0.04005621161763466}, {"determining": "Min( ( ARS + Max( ARS,FirstVNF_Mem_Server ) ) ,( PN + MRS ) )", "choosing": "( ( ( DS - MUM ) * ( Min( ( ( Max( MUC,Max( DS,RMSe ) ) / MUM ) * MUM ) ,RRSe ) - RMSe ) ) + ( ( RCSe / DS ) / RMSe ) )", "obj1": 0.5807086614173228, "obj2": 0.3029281728021607}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( MLU - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.2204724409448819, "obj2": 0.5154196281288403}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( Max( Min( ACS ,MRS ),PN ) - Min( ACS ,( ( PN * DDR ) + MDR ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / Min( MUM ,RRSe ) ) ) / ( ( RMSe * MUC ) + ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0008603073236989849}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}, {"determining": "( ( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - RRSe ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6653543307086615, "obj2": 0.23265896123281093}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),MDR ),ARS ) )", "choosing": "Max( Min( RMSe ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( MUC + MUM ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}], "18": [{"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( MUR + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,Min( MLU ,( MUC - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28850538760131417}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8582677165354331, "obj2": 0.068122816827095}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( Min( ( MRS - ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - MDR ) ) ,( FirstVNF_RAM_Server - Min( ( MDR * DDR ) ,RRS ) ) ) + ( Max( BR,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) / PN ) ) - FirstVNF_Mem_Server )", "choosing": "( ( ( MUM + ( ( MUR * ( Max( MUR,RCSe ) + DS ) ) * RCSe ) ) - ( RMSe + ( MUM - MUM ) ) ) / ( Min( ( RRSe + MUM ) ,RCSe ) + DS ) )", "obj1": 0.17125984251968504, "obj2": 0.5834632355799513}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( ( FirstVNF_RAM_Server + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( CS * ( MLU / MUR ) ) )", "obj1": 0.36811023622047245, "obj2": 0.4399143750654457}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + ( MRS * Max( FirstVNF_RAM,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( MLU - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.20078740157480315, "obj2": 0.5338009876469272}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ) + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 0.8799212598425197, "obj2": 0.05600669186446123}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.10039370078740158, "obj2": 0.6673925124976711}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( ( MDR + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MLU / MUR ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.7368441867475815}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( FirstVNF_Mem_Server - Max( Const,( ( Min( RRS ,ACS ) * ACS ) - ( FirstVNF_RAM_Server * ACS ) ) ) )", "choosing": "( Min( RMSe ,( ( MUR / MUR ) - Min( MUR ,CS ) ) ) / ( ( RCSe / ( ( ( MUM - DS ) - DS ) - ( ( Max( DS,MLU ) + ( Min( CS ,CS ) + ( RMSe / CS ) ) ) + MUR ) ) ) + Max( MUC,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5486950698696139}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( MLU - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.2204724409448819, "obj2": 0.5154196281288403}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( Max( Min( ACS ,MRS ),PN ) - Min( ACS ,( ( PN * DDR ) + MDR ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / Min( MUM ,RRSe ) ) ) / ( ( RMSe * MUC ) + ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0008603073236989849}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( ( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - RRSe ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6653543307086615, "obj2": 0.23265896123281093}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( ( ( Const - FirstVNF_Mem ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU / MUR ) / ( ( Max( Min( MUM ,RRSe ),MUM ) * RMSe ) + Min( MUR ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( CS + MUC ) / Max( CS,RRSe ) ) ) ),( Min( Min( ( RRSe - MUC ) ,MUR ) ,Min( MLU ,RRSe ) ) * ( MUC * CS ) ) ) ) ) )", "obj1": 0.9291338582677166, "obj2": 0.04103938503537797}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}], "19": [{"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - Min( CRS ,( Min( ACS ,Const ) - ARS ) ) ) )", "choosing": "( ( RMSe + ( CS - RMSe ) ) / ( ( Max( RRSe,RRSe ) / RRSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,Min( MLU ,( MUC - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28850538760131417}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8582677165354331, "obj2": 0.068122816827095}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( DS + MUM ) ) / Min( ( ( ( DS + Max( Max( Max( DS,RCSe ),RMSe ),DS ) ) * Min( ( MUM * ( MUR + MUC ) ) ,( RRSe + Max( Min( MUR ,MUM ),( MUC * MUM ) ) ) ) ) * MUM ) ,RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.2822098824928222}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.10039370078740158, "obj2": 0.6673925124976711}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( Min( CS ,MUR ) + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.1437007874015748, "obj2": 0.5820488869966324}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + ( MRS * Max( FirstVNF_RAM,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( MLU - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.20078740157480315, "obj2": 0.5338009876469272}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ) + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 0.8799212598425197, "obj2": 0.05600669186446123}, {"determining": "( ( ( Const - FirstVNF_Mem ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU / MUR ) / ( ( Max( Min( MUM ,RRSe ),MUM ) * RMSe ) + Min( MUR ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( CS + MUC ) / Max( CS,RRSe ) ) ) ),( Min( Min( ( RRSe - MUC ) ,MUR ) ,Min( MLU ,RRSe ) ) * ( MUC * CS ) ) ) ) ) )", "obj1": 0.9291338582677166, "obj2": 0.04103938503537797}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( FirstVNF_Mem_Server - Max( Const,( ( Min( RRS ,ACS ) * ACS ) - ( FirstVNF_RAM_Server * ACS ) ) ) )", "choosing": "( Min( RMSe ,( ( MUR / MUR ) - Min( MUR ,CS ) ) ) / ( ( RCSe / ( ( ( MUM - DS ) - DS ) - ( ( Max( DS,MLU ) + ( Min( CS ,CS ) + ( RMSe / CS ) ) ) + MUR ) ) ) + Max( MUC,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5486950698696139}, {"determining": "( ( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - RRSe ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6653543307086615, "obj2": 0.23265896123281093}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( MLU - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.2204724409448819, "obj2": 0.5154196281288403}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * Max( ( FirstVNF_Mem_Server / CRS ),Max( BR,ACS ) ) ) ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,( Max( Max( Max( DS,RCSe ),RMSe ),DS ) / Min( MLU ,( MUC - RMSe ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.4404623255101833}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR * Min( MDR ,DDR ) ) * Max( ( FirstVNF_Mem_Server / CRS ),Max( BR,ACS ) ) ) )", "choosing": "( ( DS + ( ( MLU + RRSe ) / ( MUC * MUM ) ) ) / ( RCSe * MUM ) )", "obj1": 0.9940944881889764, "obj2": 0.0032815246156517944}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}], "20": [{"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( BR * Max( MRS,MRS ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( MUR + MUR ) + RMSe ) ) ) ,Max( ( MUM + ( MUC - MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - Min( CRS ,( Min( ACS ,Const ) - ARS ) ) ) )", "choosing": "( ( RMSe + ( CS - RMSe ) ) / ( ( Max( RRSe,RRSe ) / RRSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,Min( MLU ,( MUC - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28850538760131417}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8582677165354331, "obj2": 0.068122816827095}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( DS + MUM ) ) / Min( ( ( ( DS + Max( Max( Max( DS,RCSe ),RMSe ),DS ) ) * Min( ( MUM * ( MUR + MUC ) ) ,( RRSe + Max( Min( MUR ,MUM ),( MUC * MUM ) ) ) ) ) * MUM ) ,RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.2822098824928222}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.10039370078740158, "obj2": 0.6673925124976711}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( Min( CS ,MUR ) + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.1437007874015748, "obj2": 0.5820488869966324}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * Max( ( FirstVNF_Mem_Server / CRS ),Max( BR,ACS ) ) ) ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,( Max( Max( Max( DS,RCSe ),RMSe ),DS ) / Min( MLU ,( MUC - RMSe ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.4404623255101833}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Max( Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( Max( ( ( RCSe / RCSe ) - Min( MUC ,DS ) ),( ( ( Max( MUM,MLU ) - ( MLU / MLU ) ) - ( ( MUC / DS ) * MUC ) ) + ( ( Max( RRSe,DS ) / MLU ) / Min( MLU ,DS ) ) ) ),( RRSe - RRSe ) ) / ( Min( RRSe ,Max( Min( RMSe ,( CS / RRSe ) ),MLU ) ) / RCSe ) ) )", "obj1": 0.08858267716535433, "obj2": 0.6737630691061756}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ) + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 0.8799212598425197, "obj2": 0.05600669186446123}, {"determining": "( ( ( Const - FirstVNF_Mem ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU / MUR ) / ( ( Max( Min( MUM ,RRSe ),MUM ) * RMSe ) + Min( MUR ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( CS + MUC ) / Max( CS,RRSe ) ) ) ),( Min( Min( ( RRSe - MUC ) ,MUR ) ,Min( MLU ,RRSe ) ) * ( MUC * CS ) ) ) ) ) )", "obj1": 0.9291338582677166, "obj2": 0.04103938503537797}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * DDR ) ) )", "choosing": "( ( DS + ( ( DS + ( ( MLU / ( CS * Max( CS,MUC ) ) ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03426398684884344}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( FirstVNF_Mem_Server - Max( Const,( ( Min( RRS ,ACS ) * ACS ) - ( FirstVNF_RAM_Server * ACS ) ) ) )", "choosing": "( Min( RMSe ,( ( MUR / MUR ) - Min( MUR ,CS ) ) ) / ( ( RCSe / ( ( ( MUM - DS ) - DS ) - ( ( Max( DS,MLU ) + ( Min( CS ,CS ) + ( RMSe / CS ) ) ) + MUR ) ) ) + Max( MUC,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5486950698696139}, {"determining": "( ( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - RRSe ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6653543307086615, "obj2": 0.23265896123281093}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + ( MRS * Max( FirstVNF_RAM,Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( MLU - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.20078740157480315, "obj2": 0.5338009876469272}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR * Min( MDR ,DDR ) ) * Max( ( FirstVNF_Mem_Server / CRS ),Max( BR,ACS ) ) ) )", "choosing": "( ( DS + ( ( MLU + RRSe ) / ( MUC * MUM ) ) ) / ( RCSe * MUM ) )", "obj1": 0.9940944881889764, "obj2": 0.0032815246156517944}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + ( BR - FirstVNF_RAM ) ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( MUM + Min( MUR ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.20866141732283464, "obj2": 0.5308553132059405}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}], "21": [{"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( BR * Max( MRS,MRS ) ) )", "choosing": "( ( ( ( Max( Max( Min( Max( MUC,MUR ) ,RMSe ),MLU ),Max( ( DS * RCSe ),( ( RCSe * RRSe ) / MUR ) ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( BR * Max( MRS,MRS ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( MUR + MUR ) + RMSe ) ) ) ,Max( ( MUM + ( MUC - MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,Min( MLU ,( MUC - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28850538760131417}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( CS + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.6292214090487278}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8582677165354331, "obj2": 0.068122816827095}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( DS + MUM ) ) / Min( ( ( ( DS + Max( Max( Max( DS,RCSe ),RMSe ),DS ) ) * Min( ( MUM * ( MUR + MUC ) ) ,( RRSe + Max( Min( MUR ,MUM ),( MUC * MUM ) ) ) ) ) * MUM ) ,RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.2822098824928222}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( Min( CS ,MUR ) + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.1437007874015748, "obj2": 0.5820488869966324}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * Max( ( FirstVNF_Mem_Server / CRS ),Max( BR,ACS ) ) ) ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,( Max( Max( Max( DS,RCSe ),RMSe ),DS ) / Min( MLU ,( MUC - RMSe ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.4404623255101833}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ) + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 0.8799212598425197, "obj2": 0.05600669186446123}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( ( ( ( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - ( Max( Min( ACS ,MRS ),FirstVNF_RAM ) + DDR ) ) / BR ) / ARS ) - ( Min( ACS ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( Min( MLU ,MUM ) + ( ( DS + RRSe ) / Min( MUM ,RRSe ) ) ) / ( Max( Min( ( ( DS + DS ) - ( Max( Min( CS ,DS ),CS ) / RRSe ) ) ,( ( DS - RMSe ) - MUC ) ),MUR ) - RCSe ) )", "obj1": 0.9389763779527559, "obj2": 0.032691634616884235}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( ( Const - FirstVNF_Mem ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU / MUR ) / ( ( Max( Min( MUM ,RRSe ),MUM ) * RMSe ) + Min( MUR ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( CS + MUC ) / Max( CS,RRSe ) ) ) ),( Min( Min( ( RRSe - MUC ) ,MUR ) ,Min( MLU ,RRSe ) ) * ( MUC * CS ) ) ) ) ) )", "obj1": 0.9291338582677166, "obj2": 0.04103938503537797}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - RRSe ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6653543307086615, "obj2": 0.23265896123281093}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( FirstVNF_Mem_Server - Max( Const,( ( Min( RRS ,ACS ) * ACS ) - ( FirstVNF_RAM_Server * ACS ) ) ) )", "choosing": "( Min( RMSe ,( ( MUR / MUR ) - Min( MUR ,CS ) ) ) / ( ( RCSe / ( ( ( MUM - DS ) - DS ) - ( ( Max( DS,MLU ) + ( Min( CS ,CS ) + ( RMSe / CS ) ) ) + MUR ) ) ) + Max( MUC,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5486950698696139}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR * Min( MDR ,DDR ) ) * Max( ( FirstVNF_Mem_Server / CRS ),Max( BR,ACS ) ) ) )", "choosing": "( ( DS + ( ( MLU + RRSe ) / ( MUC * MUM ) ) ) / ( RCSe * MUM ) )", "obj1": 0.9940944881889764, "obj2": 0.0032815246156517944}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( DDR * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4330708661417323, "obj2": 0.36876556211454453}, {"determining": "( FirstVNF_CPU_Server - Min( CRS ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) + ( Min( ( BR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + ( MDR * Min( AMS ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR - MUM ) + CS ) ) / ( ( Max( ( MUM - DS ),DS ) * DS ) + RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5402382089601938}, {"determining": "( Max( Max( ( Max( ( FirstVNF_CPU + ( RRS * ( MRS - Const ) ) ),ACS ) + FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( FirstVNF_RAM * ( PN - PN ) ) ) ) - ( Max( ( RRS / MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( Max( Min( Max( MUC,MUR ) ,RMSe ),MLU ),Max( ( DS * RCSe ),( ( RCSe * RRSe ) / MUR ) ) ) / CS ) * RRSe ) / RRSe ) / MUR )", "obj1": 0.20669291338582677, "obj2": 0.5273190260321152}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( FirstVNF_RAM * ( PN - PN ) ) ) ) - ( Max( ( RRS / MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - ( BR * Max( MRS,MRS ) ) )", "choosing": "( ( ( ( Max( Max( Min( Max( MUC,MUR ) ,RMSe ),MLU ),Max( ( DS * ( MUC - MUM ) ),( ( RCSe * RRSe ) / MUR ) ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.21653543307086615, "obj2": 0.5205664048395927}], "22": [{"determining": "( FirstVNF_CPU_Server - Min( ( ( ARS / MRS ) * MDR ) ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( AMS - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) ) ) + ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( CRS * PN ) ) + ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem,FirstVNF_RAM ) / ARS ) ) * MDR ) ) ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,RCSe ) / ( ( ( Max( ( ( ( MLU / RCSe ) / CS ) * MUM ),RMSe ) * ( CS / CS ) ) * RRSe ) + ( Max( ( MUM - Min( RMSe ,MLU ) ),DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( BR * Max( MRS,MRS ) ) )", "choosing": "( ( ( ( Max( Max( Min( Max( MUC,MUR ) ,RMSe ),MLU ),Max( ( DS * RCSe ),( ( RCSe * RRSe ) / MUR ) ) ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8582677165354331, "obj2": 0.068122816827095}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( CS + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.6292214090487278}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,Min( MLU ,( MUC - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28850538760131417}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( DS + MUM ) ) / Min( ( ( ( DS + Max( Max( Max( DS,RCSe ),RMSe ),DS ) ) * Min( ( MUM * ( MUR + MUC ) ) ,( RRSe + Max( Min( MUR ,MUM ),( MUC * MUM ) ) ) ) ) * MUM ) ,RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.2822098824928222}, {"determining": "( ( ACS - Max( PN,DDR ) ) - Max( PN,DDR ) )", "choosing": "( Min( RMSe ,( RMSe / Min( RRSe ,( CS + RCSe ) ) ) ) / ( CS + RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.31630687671704766}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( Min( CS ,MUR ) + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.1437007874015748, "obj2": 0.5820488869966324}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ) + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 0.8799212598425197, "obj2": 0.05600669186446123}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - Max( ACS,( ( BR * FirstVNF_RAM ) / MDR ) ) )", "choosing": "( ( DS + RRSe ) / ( RRSe - ( Min( RCSe ,CS ) / ( Max( Max( DS,RCSe ),MUR ) / ( RCSe + DS ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5767551106358565}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( ( Const - FirstVNF_Mem ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU / MUR ) / ( ( Max( Min( MUM ,RRSe ),MUM ) * RMSe ) + Min( MUR ,Max( ( MUR / Min( Max( MUC,RMSe ) ,( ( CS + MUC ) / Max( CS,RRSe ) ) ) ),( Min( Min( ( RRSe - MUC ) ,MUR ) ,Min( MLU ,RRSe ) ) * ( MUC * CS ) ) ) ) ) )", "obj1": 0.9291338582677166, "obj2": 0.04103938503537797}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - RRSe ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6653543307086615, "obj2": 0.23265896123281093}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + PN ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( ( RMSe * Min( RCSe ,MUR ) ) - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( CS + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.430824898021093}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( FirstVNF_CPU_Server - Min( CRS ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) + ( Min( ( BR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + ( MDR * Min( AMS ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR - MUM ) + CS ) ) / ( ( Max( ( MUM - DS ),DS ) * DS ) + RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5402382089601938}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( ( Min( ARS ,PN ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( Max( Min( MUM ,RRSe ),MUM ) * RMSe ) / Min( RCSe ,DS ) ) / ( Min( MUR ,( MUC / DS ) ) / MUR ) )", "obj1": 0.045275590551181105, "obj2": 0.7435558584595435}, {"determining": "( FirstVNF_Mem_Server - Max( Const,( ( Min( RRS ,ACS ) * ACS ) - ( FirstVNF_RAM_Server * ACS ) ) ) )", "choosing": "( Min( RMSe ,( ( MUR / MUR ) - Min( MUR ,CS ) ) ) / ( ( RCSe / ( ( ( MUM - DS ) - DS ) - ( ( Max( DS,MLU ) + ( Min( CS ,CS ) + ( RMSe / CS ) ) ) + MUR ) ) ) + Max( MUC,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5486950698696139}, {"determining": "( Max( Max( ( Max( ( FirstVNF_CPU + ( RRS * ( MRS - Const ) ) ),ACS ) + FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( FirstVNF_RAM * ( PN - PN ) ) ) ) - ( Max( ( RRS / MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( Max( Min( Max( MUC,MUR ) ,RMSe ),MLU ),Max( ( DS * RCSe ),( ( RCSe * RRSe ) / MUR ) ) ) / CS ) * RRSe ) / RRSe ) / MUR )", "obj1": 0.20669291338582677, "obj2": 0.5273190260321152}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR * Min( MDR ,DDR ) ) * Max( ( FirstVNF_Mem_Server / CRS ),Max( BR,ACS ) ) ) )", "choosing": "( ( DS + ( ( MLU + RRSe ) / ( MUC * MUM ) ) ) / ( RCSe * MUM ) )", "obj1": 0.9940944881889764, "obj2": 0.0032815246156517944}, {"determining": "( ( ( ( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - ( Max( Min( ACS ,MRS ),FirstVNF_RAM ) + DDR ) ) / BR ) / ARS ) - ( Min( ACS ,Max( Min( ACS ,MRS ),FirstVNF_RAM ) ) * PN ) )", "choosing": "( ( Min( MLU ,Min( ( ( DS + DS ) - ( Max( Min( CS ,DS ),CS ) / RRSe ) ) ,( ( DS - RMSe ) - MUC ) ) ) + ( ( DS + RRSe ) / Min( MUM ,RRSe ) ) ) / ( Max( Min( ( ( DS + DS ) - ( Max( Min( CS ,DS ),CS ) / RRSe ) ) ,( ( DS - RMSe ) - MUC ) ),MUR ) - RCSe ) )", "obj1": 0.9468503937007874, "obj2": 0.030458652554827586}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}], "23": [{"determining": "( FirstVNF_CPU_Server - Min( ( ( ARS / MRS ) * MDR ) ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( AMS - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) ) ) + ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( CRS * PN ) ) + ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem,FirstVNF_RAM ) / ARS ) ) * MDR ) ) ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,RCSe ) / ( ( ( Max( ( ( ( MLU / RCSe ) / CS ) * MUM ),RMSe ) * ( CS / CS ) ) * RRSe ) + ( Max( ( MUM - Min( RMSe ,MLU ) ),DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - Min( ( ( ARS / MRS ) * MDR ) ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( AMS - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) ) ) + ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( CRS * PN ) ) + ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem,FirstVNF_RAM ) / ARS ) ) * MDR ) ) ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,RCSe ) / ( ( ( Max( ( ( ( MLU / RCSe ) / CS ) * MUM ),RMSe ) * ( CS / CS ) ) * RRSe ) + ( Max( ( MUM - Min( RMSe ,MLU ) ),DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( CS + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.6292214090487278}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8523622047244095, "obj2": 0.0710570443260172}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( ( ACS - Max( PN,DDR ) ) - Max( PN,DDR ) )", "choosing": "( Min( RMSe ,( RMSe / Min( RRSe ,( CS + RCSe ) ) ) ) / ( CS + RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.31630687671704766}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,Min( MLU ,( MUC - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28850538760131417}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( Min( CS ,MUR ) + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.1437007874015748, "obj2": 0.5820488869966324}, {"determining": "( FirstVNF_Mem_Server - ( ( FirstVNF_Mem - ( ( ( FirstVNF_Mem - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,( CS + ( DS / RMSe ) ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.628434188656553}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( MDR / ARS ),FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_Mem ) ) - Min( DDR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( Max( Max( RMSe,MUM ),MUC ) / Max( Max( RMSe,MUM ),MUC ) ) ) / Min( CS ,MUR ) )", "obj1": 0.5413385826771654, "obj2": 0.28630910428349443}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ) + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 0.8799212598425197, "obj2": 0.05600669186446123}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( MUM + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.16929133858267717, "obj2": 0.5724364504226088}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( DS + MUM ) ) / Min( ( ( ( DS + Max( Max( Max( DS,RCSe ),RMSe ),DS ) ) * Min( ( MUM * ( MUR + MUC ) ) ,( RRSe + Max( Min( MUR ,MUM ),( MUC * MUM ) ) ) ) ) * MUM ) ,RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.2822098824928222}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ARS ) - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - Min( MLU ,Min( RCSe ,MUM ) ) ) / Min( RMSe ,MLU ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "( ( Min( ARS ,PN ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( Max( Min( MUM ,RRSe ),MUM ) * RMSe ) / Min( RCSe ,DS ) ) / ( Min( MUR ,( MUC / DS ) ) / MUR ) )", "obj1": 0.045275590551181105, "obj2": 0.7435558584595435}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - RRSe ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6653543307086615, "obj2": 0.23265896123281093}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + PN ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( ( RMSe * Min( RCSe ,MUR ) ) - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( CS + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.430824898021093}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( FirstVNF_CPU_Server - Min( CRS ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) + ( Min( ( BR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + ( MDR * Min( AMS ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR - MUM ) + CS ) ) / ( ( Max( ( MUM - DS ),DS ) * DS ) + RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5402382089601938}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8582677165354331, "obj2": 0.068122816827095}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}, {"determining": "( FirstVNF_Mem_Server - Max( Const,( ( Min( RRS ,ACS ) * ACS ) - ( FirstVNF_RAM_Server * ACS ) ) ) )", "choosing": "( Min( RMSe ,( ( MUR / MUR ) - Min( MUR ,CS ) ) ) / ( ( RCSe / ( ( ( MUM - DS ) - DS ) - ( ( Max( DS,MLU ) + ( Min( CS ,CS ) + ( RMSe / CS ) ) ) + MUR ) ) ) + Max( MUC,MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5486950698696139}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR * Min( MDR ,DDR ) ) * Max( ( FirstVNF_Mem_Server / CRS ),Max( BR,ACS ) ) ) )", "choosing": "( ( DS + ( ( MLU + RRSe ) / ( MUC * MUM ) ) ) / ( RCSe * MUM ) )", "obj1": 0.9940944881889764, "obj2": 0.0032815246156517944}, {"determining": "( Max( ( MDR / ARS ),FirstVNF_CPU_Server ) - Min( ( ARS + ( FirstVNF_Mem_Server * ARS ) ) ,Max( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) * MDR ) / FirstVNF_Mem_Server ),( ( CRS - ( PN * FirstVNF_CPU ) ) * ( MDR - BR ) ) ) ) )", "choosing": "( Min( RMSe ,( RMSe / Max( Max( RMSe,MUM ),Max( RRSe,( ( MUM * MUC ) + RMSe ) ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.5246888172708565}], "24": [{"determining": "( FirstVNF_CPU_Server - Min( ( ( ARS / MRS ) * MDR ) ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( AMS - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) ) ) + ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( CRS * PN ) ) + ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem,FirstVNF_RAM ) / ARS ) ) * MDR ) ) ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,RCSe ) / ( ( ( Max( ( ( ( MLU / RCSe ) / CS ) * MUM ),RMSe ) * ( CS / CS ) ) * RRSe ) + ( Max( ( MUM - Min( RMSe ,MLU ) ),DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - Min( ( ( ARS / MRS ) * MDR ) ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( AMS - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) ) ) + ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( CRS * PN ) ) + ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem,FirstVNF_RAM ) / ARS ) ) * MDR ) ) ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,RCSe ) / ( ( ( Max( ( ( ( MLU / RCSe ) / CS ) * MUM ),RMSe ) * ( CS / CS ) ) * RRSe ) + ( Max( ( MUM - Min( RMSe ,MLU ) ),DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( CS + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.6292214090487278}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8523622047244095, "obj2": 0.0710570443260172}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( Max( ( MRS / ARS ),( PN + FirstVNF_Mem ) ) - ( AMS + MRS ) )", "choosing": "( ( DS + ( ( Max( Max( ( RMSe + Max( MUC,MUR ) ),MLU ),Max( ( ( MLU * MUM ) - ( RMSe * RMSe ) ),( ( RCSe * RRSe ) - MUR ) ) ) + DS ) / ( MLU - MLU ) ) ) / ( MLU + ( MLU - ( Max( RCSe,Max( RRSe,RRSe ) ) - ( ( Max( MUR,MUR ) * Max( ( MUR * RRSe ),MUM ) ) / MUR ) ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.046402086713074955}, {"determining": "( ( ACS - Max( PN,DDR ) ) - Max( PN,DDR ) )", "choosing": "( Min( RMSe ,( RMSe / Min( RRSe ,( CS + RCSe ) ) ) ) / ( CS + RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.31630687671704766}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,Min( MLU ,( MUC - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28850538760131417}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( Min( CS ,MUR ) + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.1437007874015748, "obj2": 0.5820488869966324}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + PN ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( ( RMSe * Min( RCSe ,MUR ) ) - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( CS + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.430824898021093}, {"determining": "( Max( ( Min( ACS ,FirstVNF_Mem_Server ) / ARS ),FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( Min( RMSe ,( RMSe / ( DS + ( ( DS + RRSe ) / Min( MUM ,RRSe ) ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.10039370078740158, "obj2": 0.6281991900686956}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( MDR / ARS ),FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_Mem ) ) - Min( DDR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( Max( Max( RMSe,MUM ),MUC ) / Max( Max( RMSe,MUM ),MUC ) ) ) / Min( CS ,MUR ) )", "obj1": 0.5413385826771654, "obj2": 0.28630910428349443}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ) + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 0.8799212598425197, "obj2": 0.05600669186446123}, {"determining": "Max( ( FirstVNF_Mem_Server + ( Min( Max( FirstVNF_Mem,FirstVNF_CPU ) ,( MDR / PN ) ) + ( Min( DDR ,PN ) * ( RRS * FirstVNF_Mem_Server ) ) ) ),Max( Const,MDR ) )", "choosing": "( Max( DS,CS ) / ( DS * ( ( CS - MUC ) - ( DS + Max( DS,MUM ) ) ) ) )", "obj1": 0.5885826771653543, "obj2": 0.27666285568092314}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( MUM + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.16929133858267717, "obj2": 0.5724364504226088}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( Max( ( MDR / ARS ),FirstVNF_CPU_Server ) - Min( ( ARS + ( FirstVNF_Mem_Server * ARS ) ) ,Max( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) * MDR ) / FirstVNF_Mem_Server ),( ( CRS - ( PN * FirstVNF_CPU ) ) * ( MDR - BR ) ) ) ) )", "choosing": "( Min( RMSe ,( RMSe / Max( Max( RMSe,MUM ),Max( RRSe,( ( MUM * MUC ) + RMSe ) ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.5246888172708565}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( Max( ARS,MDR ),( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + ( ( CS + MUR ) - ( Min( DS ,MUR ) - RRSe ) ) ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.3090551181102362, "obj2": 0.4610145812281706}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( DS + MUM ) ) / Min( ( ( ( DS + Max( Max( Max( DS,RCSe ),RMSe ),DS ) ) * Min( ( MUM * ( MUR + MUC ) ) ,( RRSe + Max( Min( MUR ,MUM ),( MUC * MUM ) ) ) ) ) * MUM ) ,RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.2822098824928222}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + PN ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( RMSe - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( CS + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.04836201346114992}, {"determining": "( ( Min( ARS ,PN ) + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( Max( Min( MUM ,RRSe ),MUM ) * RMSe ) / Min( RCSe ,DS ) ) / ( Min( MUR ,( MUC / DS ) ) / MUR ) )", "obj1": 0.045275590551181105, "obj2": 0.7435558584595435}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "( FirstVNF_CPU_Server - Min( CRS ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) + ( Min( ( BR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + ( MDR * Min( AMS ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR - MUM ) + CS ) ) / ( ( Max( ( MUM - DS ),DS ) * DS ) + RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5402382089601938}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( MRS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + DS ) / ( Max( DS,CS ) / ( Min( RMSe ,MLU ) + RMSe ) ) )", "obj1": 0.421259842519685, "obj2": 0.3939865364570819}, {"determining": "( ( DDR / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - RRSe ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6653543307086615, "obj2": 0.23265896123281093}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8582677165354331, "obj2": 0.068122816827095}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + ( PN * DDR ) ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) / RRSe ) / ( ( RMSe * MUC ) + ( MUC - MUR ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4204470632649914}], "25": [{"determining": "( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + DS ) / ( Max( DS,CS ) / ( MUR + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - Min( ( ( ARS / MRS ) * MDR ) ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( AMS - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ACS ) ) ) ) ) + ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( CRS * PN ) ) + ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem,FirstVNF_RAM ) / ARS ) ) * MDR ) ) ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,RCSe ) / ( ( ( Max( ( ( ( MLU / RCSe ) / CS ) * MUM ),RMSe ) * ( CS / CS ) ) * RRSe ) + ( Max( ( MUM - Min( RMSe ,MLU ) ),DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( Max( ( RRS * FirstVNF_RAM_Server ),( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( ( MUR + MUR ) + RMSe ) / CS ) * RRSe ) / RRSe ) / MLU )", "obj1": 0.7362204724409449, "obj2": 0.17000846911994275}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( CS + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.6292214090487278}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8523622047244095, "obj2": 0.0710570443260172}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( ( ( Max( BR,DDR ) / ( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server ) ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( MUM + Min( MLU ,MUM ) ) ) - Min( CS ,MUR ) ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.9153543307086615, "obj2": 0.03198825418360186}, {"determining": "( ( ACS - Max( PN,DDR ) ) - Max( PN,DDR ) )", "choosing": "( Min( RMSe ,( RMSe / Min( RRSe ,( CS + RCSe ) ) ) ) / ( CS + RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.31630687671704766}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,Min( MLU ,( MUC - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28850538760131417}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( Min( CS ,MUR ) + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.1437007874015748, "obj2": 0.5820488869966324}, {"determining": "( ( Max( ( MDR / ARS ),FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_Mem ) ) - Min( DDR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( Max( Max( RMSe,MUM ),MUC ) / Max( Max( RMSe,MUM ),MUC ) ) ) / Min( CS ,MUR ) )", "obj1": 0.5413385826771654, "obj2": 0.28630910428349443}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ) + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 0.8799212598425197, "obj2": 0.05600669186446123}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + PN ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( RMSe - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( CS + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.04836201346114992}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( MUM + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.16929133858267717, "obj2": 0.5724364504226088}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( Max( ( MDR / ARS ),FirstVNF_CPU_Server ) - Min( ( ARS + ( FirstVNF_Mem_Server * ARS ) ) ,Max( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) * MDR ) / FirstVNF_Mem_Server ),( ( CRS - ( PN * FirstVNF_CPU ) ) * ( MDR - BR ) ) ) ) )", "choosing": "( Min( RMSe ,( RMSe / Max( Max( RMSe,MUM ),Max( RRSe,( ( MUM * MUC ) + RMSe ) ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.5246888172708565}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( ( RMSe * Min( RCSe ,MUR ) ) - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( MUR + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.45689717087411996}, {"determining": "( Max( ( Min( ACS ,FirstVNF_Mem_Server ) / ARS ),FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( Min( RMSe ,( RMSe / ( DS + ( ( DS + RRSe ) / Min( MUM ,RRSe ) ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.10039370078740158, "obj2": 0.6281991900686956}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( DS + MUM ) ) / Min( ( ( ( DS + Max( Max( Max( DS,RCSe ),RMSe ),DS ) ) * Min( ( MUM * ( MUR + MUC ) ) ,( RRSe + Max( Min( MUR ,MUM ),( MUC * MUM ) ) ) ) ) * MUM ) ,RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.2822098824928222}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - ( MRS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + DS ) / ( Max( DS,CS ) / ( Min( RMSe ,MLU ) + RMSe ) ) )", "obj1": 0.421259842519685, "obj2": 0.3939865364570819}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8582677165354331, "obj2": 0.068122816827095}, {"determining": "( FirstVNF_CPU_Server - Min( CRS ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) + ( Min( ( BR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + ( MDR * Min( AMS ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR - MUM ) + CS ) ) / ( ( Max( ( MUM - DS ),DS ) * DS ) + RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5402382089601938}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + PN ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( ( RMSe * Min( RCSe ,MUR ) ) - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( CS + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.430824898021093}, {"determining": "( ( Min( ACS ,FirstVNF_Mem_Server ) * PN ) - ( Min( ACS ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( Min( RMSe ,( RMSe / ( DS + ( ( Min( MUM ,RRSe ) + RRSe ) / Min( MUM ,RRSe ) ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.5502178413557963}, {"determining": "( ( ( Max( BR,DDR ) / ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( MLU - DS ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.9940944881889764, "obj2": 0.002200684726720773}, {"determining": "( ( MDR + FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ARS ) )", "choosing": "( ( DS + Min( RCSe ,DS ) ) / Max( CS,( CS + MUC ) ) )", "obj1": 0.59251968503937, "obj2": 0.27053073156547236}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Min( PN ,( MDR * Const ) ) ),RRS ) / ( MDR + CRS ) ) * ( RRS - RRS ) ) - ( ( Max( ( FirstVNF_CPU_Server / Min( PN ,( MDR * Const ) ) ),RRS ) / ( MDR + CRS ) ) * ( RRS - RRS ) ) )", "choosing": "( ( DS + MUM ) / Min( RCSe ,Min( RCSe ,Min( MLU ,DS ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7376915650553507}], "26": [{"determining": "( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + DS ) / ( Max( DS,CS ) / ( MUR + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + DS ) / ( Max( DS,CS ) / ( MUR + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( ( Max( FirstVNF_CPU_Server,( MRS + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) ) + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,MUC ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.03937007874015748, "obj2": 0.7511674900839547}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Min( PN ,( MDR * Const ) ) ),RRS ) / ( MDR + CRS ) ) * ( RRS - RRS ) ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( ( ( RMSe + ( RMSe / RCSe ) ) + MUM ) / Min( RCSe ,Min( MLU ,DS ) ) )", "obj1": 0.7244094488188977, "obj2": 0.10339706391704619}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + RRSe ) / CS )", "obj1": 0.6968503937007874, "obj2": 0.20241809154827164}, {"determining": "( ( Max( ARS,MDR ) - FirstVNF_RAM_Server ) - ( AMS * ( Max( MDR,MRS ) - ( Max( PN,BR ) * AMS ) ) ) )", "choosing": "( MLU / ( ( ( MUR / Max( ( MLU - DS ),MUC ) ) * Min( ( RMSe + ( RMSe / RCSe ) ) ,CS ) ) + RRSe ) )", "obj1": 0.7559055118110236, "obj2": 0.07141204287143378}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS + ( MDR + ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + ( MLU / ( CS * RRSe ) ) ) / Min( DS ,MUC ) )", "obj1": 0.05511811023622047, "obj2": 0.6924580684408826}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( CS + DS ) )", "obj1": 0.08070866141732283, "obj2": 0.6292214090487278}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8523622047244095, "obj2": 0.0710570443260172}, {"determining": "( FirstVNF_Mem_Server - ( ( ( Max( Min( ACS ,MRS ),PN ) + DDR ) - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( ( CS * RRSe ) / MUM ) + DS ) )", "obj1": 0.11811023622047244, "obj2": 0.596748898692236}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.4468503937007874, "obj2": 0.36440939415498746}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + PN ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( ( RMSe * Min( RCSe ,MUR ) ) - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( CS + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.430824898021093}, {"determining": "( ( ( Max( BR,DDR ) / ( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server ) ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( MUM + Min( MLU ,MUM ) ) ) - Min( CS ,MUR ) ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.9153543307086615, "obj2": 0.03198825418360186}, {"determining": "( ( ACS - Max( PN,DDR ) ) - Max( PN,DDR ) )", "choosing": "( Min( RMSe ,( RMSe / Min( RRSe ,( CS + RCSe ) ) ) ) / ( CS + RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.31630687671704766}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) / Min( DS ,Min( MLU ,( MUC - RMSe ) ) ) )", "obj1": 0.5039370078740157, "obj2": 0.28850538760131417}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS * ( ( ( ( DS + RRSe ) / ( RRSe - DS ) ) + RRSe ) / ( RRSe - DS ) ) ) / ( MLU + RRSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01961425841236124}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4417531693571753}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( Min( CS ,MUR ) + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.1437007874015748, "obj2": 0.5820488869966324}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + PN ) ) - Max( MDR,MRS ) )", "choosing": "( ( MUC * DS ) / Max( Max( RMSe,MUM ),MUM ) )", "obj1": 0.6751968503937008, "obj2": 0.2246116167971779}, {"determining": "( ( ACS + MRS ) - Max( ( MRS / ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RRSe * DS ) - ( RRSe + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.24168018608269026}, {"determining": "( Max( ( Min( ACS ,FirstVNF_Mem_Server ) / ARS ),FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( Min( RMSe ,( RMSe / ( DS + ( ( DS + RRSe ) / Min( MUM ,RRSe ) ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.10039370078740158, "obj2": 0.6281991900686956}, {"determining": "( ( Max( ( MDR / ARS ),FirstVNF_CPU_Server ) - Min( DDR ,FirstVNF_Mem ) ) - Min( DDR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( Max( Max( RMSe,MUM ),MUC ) / Max( Max( RMSe,MUM ),MUC ) ) ) / Min( CS ,MUR ) )", "obj1": 0.5413385826771654, "obj2": 0.28630910428349443}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.42322834645669294, "obj2": 0.3750542607554501}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( DS + MUM ) ) / Min( ( ( ( DS + Max( Max( Max( DS,RCSe ),RMSe ),DS ) ) * Min( ( MUM * ( MUR + MUC ) ) ,( RRSe + Max( Min( MUR ,MUM ),( MUC * MUM ) ) ) ) ) * MUM ) ,RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.2822098824928222}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( MLU + DS ) / Min( ( ( MUM - RCSe ) + ( MUM - ( ( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ) + MUR ) + RMSe ) ) ) ,Max( RCSe,MUM ) ) )", "obj1": 0.8799212598425197, "obj2": 0.05600669186446123}, {"determining": "( ( MDR + FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ARS ) )", "choosing": "( ( DS + Min( RCSe ,DS ) ) / Max( CS,( CS + MUC ) ) )", "obj1": 0.59251968503937, "obj2": 0.27053073156547236}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + PN ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( RMSe - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( CS + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.04836201346114992}, {"determining": "( ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( Min( CS ,MUR ) * ( MUM + Min( MLU ,MUM ) ) ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.16929133858267717, "obj2": 0.5724364504226088}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.265748031496063, "obj2": 0.4717109567436518}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server * ACS ) + ( MDR + AMS ) ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( DS,Max( ( ( RRSe * Min( RCSe ,CS ) ) * ( ( MUR / MUR ) - Min( MUR ,CS ) ) ),( ( MUR / MUR ) - Min( MUR ,CS ) ) ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / Min( DS ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.7142225418717897}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( ( AMS / ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( ARS / RRS ) - FirstVNF_RAM ),Max( ( BR + MRS ),( RRS + PN ) ) ) / FirstVNF_RAM_Server ) ),( Max( Max( DDR,FirstVNF_Mem ),( ( ( FirstVNF_CPU + CRS ) * RRS ) * RRS ) ) - Max( Const,CRS ) ) ) ) - AMS )", "choosing": "( Max( ( MUR - RCSe ),RMSe ) / MLU )", "obj1": 0.25393700787401574, "obj2": 0.487547060455825}, {"determining": "( ( ( Const - PN ) + Min( ( ( ( Const / BR ) * Max( MRS,AMS ) ) / MRS ) ,CRS ) ) - Max( MDR,MRS ) )", "choosing": "( ( ( MUR / MUR ) - Min( MUR ,CS ) ) / ( DS + ( Max( RCSe,RRSe ) / MUR ) ) )", "obj1": 0.2874015748031496, "obj2": 0.4628358704606819}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server - ACS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( MLU / ( ( CS * RRSe ) / ( ( MLU / MUM ) + DS ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5027358758441438}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( MLU / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5143209753111028}, {"determining": "Max( ( ( ARS * ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ),FirstVNF_CPU_Server )", "choosing": "( ( MUC + RRSe ) / ( ( Max( RCSe,( ( Min( MLU ,( RMSe / CS ) ) - ( ( RMSe * MUR ) - ( MLU + MLU ) ) ) + ( ( MUR / DS ) - MUR ) ) ) / RRSe ) + DS ) )", "obj1": 0.6358267716535433, "obj2": 0.25685326074760817}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + FirstVNF_RAM ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( RMSe * DS ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.6043307086614174, "obj2": 0.2572588278398965}, {"determining": "( Max( ( MDR / ARS ),FirstVNF_CPU_Server ) - Min( ( ARS + ( FirstVNF_Mem_Server * ARS ) ) ,Max( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) * MDR ) / FirstVNF_Mem_Server ),( ( CRS - ( PN * FirstVNF_CPU ) ) * ( MDR - BR ) ) ) ) )", "choosing": "( Min( RMSe ,( RMSe / Max( Max( RMSe,MUM ),Max( RRSe,( ( MUM * MUC ) + RMSe ) ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.20866141732283464, "obj2": 0.5246888172708565}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( Max( DS,Max( ( ( RMSe * Min( RCSe ,MUR ) ) - ( ( MLU / MUR ) - Min( RRSe ,CS ) ) ),MUM ) ) * ( MUC * ( MLU + MUM ) ) ) + RRSe ) / ( MUR * ( Max( CS,( MUR + MUC ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.45689717087411996}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / Min( PN ,( MDR * Const ) ) ),RRS ) / ( MDR + CRS ) ) * ( RRS - RRS ) ) - ( ( Max( ( FirstVNF_CPU_Server / Min( PN ,( MDR * Const ) ) ),RRS ) / ( MDR + CRS ) ) * ( RRS - RRS ) ) )", "choosing": "( ( DS + MUM ) / Min( RCSe ,Min( RCSe ,Min( MLU ,DS ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7376915650553507}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( ( MLU + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) ) / RRSe ) / MLU )", "obj1": 0.1830708661417323, "obj2": 0.5614622100430503}, {"determining": "( FirstVNF_Mem_Server - ( ( Max( Max( DDR,FirstVNF_Mem ),( RRS * ( ( FirstVNF_CPU + CRS ) * RRS ) ) ) - ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( MLU ,MUM ) - Min( MUC ,CS ) ),( Max( RCSe,MUC ) - CS ) ) / CS ) * RRSe ) + RRSe ) / Min( ( CS + ( DS / RMSe ) ) ,Max( MUM,RCSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011407784892114569}, {"determining": "( FirstVNF_RAM_Server - Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + DS ) / ( Max( DS,CS ) / ( MUR + ( Max( DS,CS ) / ( MUR + RMSe ) ) ) ) )", "obj1": 0.41141732283464566, "obj2": 0.3928044738380492}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( AMS + CRS ) * RRS ) ) ) - ( Max( Min( Max( FirstVNF_RAM,CRS ) ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( ( DS + ( RMSe - CS ) ) / Max( RRSe,RRSe ) ) / ( ( CS * RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.3956692913385827, "obj2": 0.3952293278752124}, {"determining": "( ( Max( Max( MDR,AMS ),( Max( FirstVNF_Mem_Server,Max( RRS,( ( MDR + CRS ) * RRS ) ) ) - ( Max( Min( ACS ,MRS ),PN ) + DDR ) ) ) * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * ( RCSe / DS ) ) / MUR ) )", "obj1": 0.6791338582677166, "obj2": 0.20456936653084018}, {"determining": "Min( Max( MDR,AMS ) ,Min( ARS ,( RRS * DDR ) ) )", "choosing": "( ( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) ) + ( ( MUC * ( RMSe * DS ) ) - RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4105767373473893}, {"determining": "( ACS - ( Max( ARS,BR ) + Min( RRS ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + ( ( DS + RRSe ) / ( MLU + RRSe ) ) ) / ( ( CS * RRSe ) / MUR ) )", "obj1": 0.8582677165354331, "obj2": 0.068122816827095}, {"determining": "( FirstVNF_CPU_Server - Min( CRS ,( Max( AMS,Min( ( MRS * FirstVNF_CPU ) ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) + ( Min( ( BR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + ( MDR * Min( AMS ,( Min( FirstVNF_Mem_Server ,MDR ) / ARS ) ) ) ) ) ) )", "choosing": "( ( RCSe / ( ( MUR - MUM ) + CS ) ) / ( ( Max( ( MUM - DS ),DS ) * DS ) + RRSe ) )", "obj1": 0.19881889763779528, "obj2": 0.5402382089601938}, {"determining": "( ( Min( ACS ,FirstVNF_Mem_Server ) * PN ) - ( Min( ACS ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( Min( RMSe ,( RMSe / ( DS + ( ( Min( MUM ,RRSe ) + RRSe ) / Min( MUM ,RRSe ) ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.5502178413557963}, {"determining": "( ( ( Max( BR,DDR ) / ( ( Max( BR,DDR ) / PN ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) ) + Min( ( BR - FirstVNF_RAM ) ,( ( DDR + FirstVNF_CPU ) * MDR ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( MLU - DS ) / ( Min( ( ( ( MLU - DS ) - RRSe ) * RCSe ) ,RCSe ) + DS ) )", "obj1": 0.9940944881889764, "obj2": 0.002200684726720773}]}