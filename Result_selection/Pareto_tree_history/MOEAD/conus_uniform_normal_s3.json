{"1": [{"determining": "Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS / ARS ) )", "choosing": "( Max( RRSe,MUC ) * ( RCSe / DS ) )", "obj1": 0.1320754716981132, "obj2": 0.7679918210236351}, {"determining": "( ( ( ( PN / DDR ) / ( MRS + CRS ) ) - ( ( DDR / ARS ) - ( PN + FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_RAM / Const ),( FirstVNF_Mem_Server / ACS ) ) * ( ( MRS - FirstVNF_CPU_Server ) / ( MRS - Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( DS - MUM ) ) / ( ( CS + CS ) / ( DS + MUM ) ) ) * ( ( ( MLU + RMSe ) * ( RMSe - DS ) ) - Min( ( RMSe / MLU ) ,Max( MUM,RRSe ) ) ) )", "obj1": 0.37169811320754714, "obj2": 0.5764303591905958}, {"determining": "Max( Max( Const,PN ),( RRS * CRS ) )", "choosing": "Min( Max( RMSe,MLU ) ,( CS * RRSe ) )", "obj1": 0.41320754716981134, "obj2": 0.5606065546381508}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( RCSe + RCSe ) + ( MUM * RMSe ) )", "obj1": 0.42452830188679247, "obj2": 0.5107182503193833}, {"determining": "( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( Min( CS ,MUM ) / ( RCSe - MUM ) )", "obj1": 0.7132075471698113, "obj2": 0.27611375063396926}, {"determining": "( ( MDR + AMS ) - ( FirstVNF_CPU_Server + ACS ) )", "choosing": "( ( MUR + MUR ) * Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Const + ARS ) )", "choosing": "( ( CS - CS ) * Max( MUC,RRSe ) )", "obj1": 0.5113207547169811, "obj2": 0.4527190466394442}, {"determining": "( ( FirstVNF_CPU + ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUR - RRSe ) * ( MUR + RMSe ) )", "obj1": 0.3320754716981132, "obj2": 0.5986180393266829}, {"determining": "Min( Max( ACS,BR ) ,Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,DS ) - ( MUM / CS ) )", "obj1": 0.3471698113207547, "obj2": 0.625818078314144}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + MUR ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Max( ( RMSe - DS ),( MUC / DS ) )", "obj1": 0.11509433962264151, "obj2": 0.774687751500611}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "Min( Max( FirstVNF_Mem_Server,DDR ) ,( FirstVNF_Mem + FirstVNF_RAM ) )", "choosing": "( ( DS - MUM ) * ( MLU / CS ) )", "obj1": 0.3452830188679245, "obj2": 0.5732997489731894}, {"determining": "( ( FirstVNF_CPU + BR ) / ( FirstVNF_CPU + PN ) )", "choosing": "( ( MUC + RRSe ) / ( MUC / RCSe ) )", "obj1": 0.3452830188679245, "obj2": 0.5877658986145283}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( Min( MUC ,MLU ) / ( MUM / MUC ) )", "obj1": 0.3886792452830189, "obj2": 0.5465816686689001}, {"determining": "( Max( BR,PN ) / Min( AMS ,FirstVNF_RAM ) )", "choosing": "( ( MUM + RCSe ) + ( MLU + MLU ) )", "obj1": 0.45660377358490567, "obj2": 0.48818566060244784}, {"determining": "Min( ( MRS * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RMSe / MUR ) - ( DS - MLU ) )", "obj1": 0.3905660377358491, "obj2": 0.5363622800660739}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( ( CS + RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.32264150943396225, "obj2": 0.5664132078148002}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,Min( PN ,PN ) ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( PN ,RRS ) ) )", "choosing": "Max( ( ( MUC * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * ( MUC - MUM ) ) )", "obj1": 0.44339622641509435, "obj2": 0.45851311855433635}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( MUR + DS ) * MUC ) )", "obj1": 0.5867924528301887, "obj2": 0.3355333022637175}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / Max( CRS,Min( PN ,MDR ) ) )", "choosing": "Min( Max( ( MLU / MUR ),( MUR - RCSe ) ) ,( Max( RMSe,CS ) - Max( MUC,RRSe ) ) )", "obj1": 0.360377358490566, "obj2": 0.6230394035811468}, {"determining": "( Min( DDR ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( RCSe,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( Max( RRS,ARS ) / Max( BR,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RMSe + MUC ),Min( RCSe ,MUR ) ) * Min( ( MLU / MUC ) ,Min( CS ,MUC ) ) )", "obj1": 0.4716981132075472, "obj2": 0.4982332580276493}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) + ( CRS / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( Min( RRSe ,RMSe ) * Max( RRSe,RCSe ) ) )", "obj1": 0.29245283018867924, "obj2": 0.6570405557154982}, {"determining": "( Min( MRS ,PN ) * ( FirstVNF_RAM + Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUR / MUC ) * ( MUC * MUM ) ),Min( ( RMSe / MLU ) ,( RRSe / MUC ) ) )", "obj1": 0.37169811320754714, "obj2": 0.5752641268056409}, {"determining": "Max( ( Const * Min( FirstVNF_CPU ,Const ) ),( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( MUC * MUC ) * Max( MUM,MUR ) ),( CS * RRSe ) )", "obj1": 0.4528301886792453, "obj2": 0.4942289013182683}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "Max( ( MUR + ( MUC / RRSe ) ),( Max( CS,RCSe ) - MLU ) )", "obj1": 0.4320754716981132, "obj2": 0.5052407396570108}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Min( RRS ,DDR ) ),( ( FirstVNF_CPU_Server - CRS ) / Max( FirstVNF_RAM,ARS ) ) )", "choosing": "Min( ( ( MUC - MUC ) + ( MUR / CS ) ) ,( ( MLU * RMSe ) / ( RRSe - RRSe ) ) )", "obj1": 0.44339622641509435, "obj2": 0.5358402840081345}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Max( Min( ACS ,ACS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RCSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "Min( ( ( Const / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + CRS ) ,( MRS / MRS ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + MUC ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( ( ( FirstVNF_RAM_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( MDR / CRS ) - Min( RRS ,RRS ) ) )", "choosing": "( Max( RMSe,MLU ) / ( ( RRSe * MUR ) / Min( RCSe ,RMSe ) ) )", "obj1": 0.2358490566037736, "obj2": 0.6789067363807962}, {"determining": "( ( ( PN / MRS ) - ( Const * DDR ) ) / Max( Min( ACS ,CRS ),( ACS / PN ) ) )", "choosing": "Min( Max( ( MUC * MUC ),( MLU * RRSe ) ) ,( Max( CS,RCSe ) + ( MLU * MUM ) ) )", "obj1": 0.46037735849056605, "obj2": 0.4787207780858626}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( ( ( MDR + MRS ) * ( ACS - MRS ) ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) + ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) ,( ( MLU - RCSe ) / ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( MUR ,( MUM + MUC ) ) - ( ( RCSe / MUR ) / ( CS * MLU ) ) ) / Max( MUC,RRSe ) )", "obj1": 0.40943396226415096, "obj2": 0.5596606269835778}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( FirstVNF_CPU_Server ,BR ) * ( CRS / FirstVNF_CPU_Server ) ) ) - Max( Max( ( ACS + FirstVNF_Mem ),Min( RRS ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) )", "choosing": "( ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,RRS ) - Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( ( MUM / RMSe ) ,Max( CS,CS ) ) ) )", "obj1": 0.6924528301886792, "obj2": 0.28659533006115967}, {"determining": "( ( ACS / DDR ) - ( Const - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / MLU ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( RMSe ,CS ) ) ) )", "obj1": 0.3264150943396226, "obj2": 0.5772037896551659}, {"determining": "Min( ( ACS / BR ) ,( Max( Max( AMS,Const ),DDR ) / Const ) )", "choosing": "Max( Min( ( ( MUC - MUC ) / Min( CS ,DS ) ) ,MUR ),( ( Min( MUC ,DS ) + ( RMSe * RMSe ) ) - ( ( MUC * MLU ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.3867924528301887, "obj2": 0.5668787956584395}, {"determining": "Min( ( Max( ( ARS - DDR ),Max( MRS,AMS ) ) * Max( Max( MRS,FirstVNF_CPU ),Max( Const,Const ) ) ) ,( ( ( MDR * FirstVNF_CPU_Server ) * Max( MRS,MRS ) ) - ( ( FirstVNF_CPU + BR ) / ( BR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / RRSe ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / DS ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.6788421896440237}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( ARS / ARS ) ) / ( Max( CRS,FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) / Max( ( ( ACS + PN ) * ( FirstVNF_Mem_Server - CRS ) ),( Max( FirstVNF_RAM_Server,MRS ) + Max( FirstVNF_CPU_Server,MDR ) ) ) )", "choosing": "Min( Min( MUR ,( ( MLU - RCSe ) * RCSe ) ) ,Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_CPU ) / Min( MRS ,DDR ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.41132075471698115, "obj2": 0.5168480681307497}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7584018956611637}, {"determining": "( ( ( ( ACS + BR ) - ( BR / DDR ) ) + Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * RRSe ) ,MLU ) ) )", "obj1": 0.42641509433962266, "obj2": 0.508490847910814}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + FirstVNF_RAM ) ) + ( ( BR - MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.33773584905660375, "obj2": 0.6096161360133223}, {"determining": "( ( ( ( MRS * BR ) * FirstVNF_RAM ) + Const ) / ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( MUM + RCSe ) * ( MUM - Max( Min( RMSe ,RCSe ),RMSe ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5951483456452916}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( BR - FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( DS ,MUR ),( MUM - RMSe ) ) ) / ( Max( ( CS * DS ),Min( MLU ,MUR ) ) + Min( ( DS * MUM ) ,( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( BR - FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( DS ,MUR ),( MUM - RMSe ) ) ) / ( Max( ( CS * DS ),Min( MLU ,MUR ) ) + Min( ( DS * MUM ) ,( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + AMS ) - ( FirstVNF_CPU_Server + ACS ) )", "choosing": "( ( MUR + MUR ) * Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( MRS / FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR + RMSe ) * ( RMSe - RCSe ) ) - DS ),( DS / CS ) )", "obj1": 0.10377358490566038, "obj2": 0.7742367678898102}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( DS ,MUR ),( MUM - RMSe ) ) ) / ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.930188679245283, "obj2": 0.05980737152374196}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "( ( Const + FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ,MLU ) ) )", "obj1": 0.7471698113207547, "obj2": 0.1813803594432906}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) * ( ( RRSe * DS ) * Min( MUC ,MLU ) ) ) )", "obj1": 0.6792452830188679, "obj2": 0.24756585082107915}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.20566037735849058, "obj2": 0.7079214139023801}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( BR * MRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUR / MUR ) * MLU ) ) )", "obj1": 0.13773584905660377, "obj2": 0.7558356029983652}, {"determining": "( ( RRS / FirstVNF_CPU ) / Min( MRS ,DDR ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.7132075471698113, "obj2": 0.2251572056952195}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,Min( PN ,PN ) ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( PN ,RRS ) ) )", "choosing": "Max( ( ( MUC * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * ( MUC - MUM ) ) )", "obj1": 0.44339622641509435, "obj2": 0.45851311855433635}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.6320754716981132, "obj2": 0.29054930782221505}, {"determining": "( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - ( ( ( ( DDR - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( FirstVNF_CPU_Server ,BR ) * ( CRS / FirstVNF_CPU_Server ) ) ) - Max( Max( ( ACS + FirstVNF_Mem ),Min( RRS ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,RRS ) - Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( MLU ,CS ) ) )", "obj1": 0.9735849056603774, "obj2": 0.03666145673059704}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5339622641509434, "obj2": 0.3881618724773139}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5018867924528302, "obj2": 0.42673817232511374}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,MUR ) / ( MUM / MUC ) )", "obj1": 0.5056603773584906, "obj2": 0.41844909281009474}, {"determining": "( ( Max( Max( AMS,Const ),DDR ) * DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( RCSe ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.35660377358490564, "obj2": 0.526845928647117}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.4339622641509434, "obj2": 0.4769074599622985}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( ( CS + RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6425560996984818}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "( Min( ( ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( DS * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.2943396226415094, "obj2": 0.6307785436913054}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Min( RRS ,DDR ) ),( ( FirstVNF_CPU_Server - CRS ) / Max( FirstVNF_RAM,ARS ) ) )", "choosing": "Min( ( ( MUC - MUC ) + ( MUR / CS ) ) ,( ( MLU * RMSe ) / ( RRSe - RRSe ) ) )", "obj1": 0.4056603773584906, "obj2": 0.48357531877430693}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / DS ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.6788421896440237}, {"determining": "( Min( Min( DDR ,( RRS + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.12075471698113208, "obj2": 0.7603080496773622}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5801787664883004}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "Min( ( ( Const / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + CRS ) ,( MRS / MRS ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + MUC ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + RMSe ) - Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + ( ( RMSe / MUR ) - ( DS - MLU ) ) ) ) )", "obj1": 0.33584905660377357, "obj2": 0.5437171979165768}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "( ( ( FirstVNF_RAM_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( MDR / CRS ) - Min( RRS ,RRS ) ) )", "choosing": "( Max( RMSe,MLU ) / ( ( RRSe * MUR ) / Min( RCSe ,RMSe ) ) )", "obj1": 0.2358490566037736, "obj2": 0.6789067363807962}, {"determining": "Min( ( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( MLU + MLU ) - ( DS - MLU ) )", "obj1": 0.3, "obj2": 0.6137050247674602}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Min( RRS ,DDR ) ),( ( FirstVNF_CPU_Server - CRS ) / Max( FirstVNF_RAM,ARS ) ) )", "choosing": "Min( ( ( MUC - MUC ) + ( MUR / CS ) ) ,( ( MLU * RMSe ) / ( RRSe - RRSe ) ) )", "obj1": 0.39622641509433965, "obj2": 0.4971841371821597}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( ( CS + RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6425560996984818}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( Min( DDR ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( RCSe,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "Max( ( ( AMS + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Max( Min( ACS ,ACS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RCSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "Min( ( ( ( Min( Min( Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,ARS ) ) ,Max( Min( FirstVNF_Mem_Server ,BR ),( PN / RRS ) ) ) ,( Max( ( CRS * MDR ),Min( RRS ,FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * Max( AMS,FirstVNF_RAM ) ) ) ) * Max( ( ( ( Const + PN ) - Max( MRS,AMS ) ) + ( ( BR - Const ) / ( CRS * FirstVNF_Mem ) ) ),( Max( Max( FirstVNF_Mem_Server,CRS ),( DDR - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server + Const ) / Min( Const ,ACS ) ) ) ) ) + ( ( ( ( ( Const * FirstVNF_RAM ) + ( MRS - DDR ) ) + ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_Mem - MRS ) * ( ARS / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem_Server - PN ) + ( FirstVNF_Mem_Server - MRS ) ) ) ) + ( ( ( ( DDR * ACS ) * ( MDR + ACS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( MRS + CRS ) ) ) - ( Max( ( RRS / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server + PN ) ) - ( Min( Const ,DDR ) + Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) ) ) * ( Max( ( ( Min( Max( PN,FirstVNF_Mem_Server ) ,Max( DDR,PN ) ) * ( Max( DDR,BR ) + Min( ARS ,DDR ) ) ) / ( Max( ( PN - ACS ),( BR - FirstVNF_Mem ) ) / ( ( DDR + FirstVNF_Mem ) + ( FirstVNF_Mem_Server * BR ) ) ) ),( ( ( ( FirstVNF_CPU / BR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) * ( ( PN * ARS ) * Max( Const,RRS ) ) ) / Max( ( Min( FirstVNF_CPU_Server ,CRS ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ),( ( MRS * MDR ) / ( FirstVNF_RAM_Server + AMS ) ) ) ) ) / ( ( ( ( ( DDR * FirstVNF_Mem_Server ) * ( MRS + BR ) ) + Max( ( RRS / BR ),( FirstVNF_RAM + DDR ) ) ) - ( ( ( ARS + Const ) - Min( DDR ,MDR ) ) - ( ( FirstVNF_Mem_Server + ACS ) * ( RRS / FirstVNF_CPU_Server ) ) ) ) - Min( ( Max( ( PN - MDR ),( FirstVNF_Mem_Server - DDR ) ) / ( ( FirstVNF_RAM_Server * BR ) / ( Const * RRS ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM ) - Max( PN,Const ) ) - Min( ( ACS * CRS ) ,( AMS / PN ) ) ) ) ) ) ) ,Min( Max( Min( Min( ( ( ( DDR * ACS ) - ( AMS + FirstVNF_CPU_Server ) ) - Min( ( MRS - RRS ) ,( CRS - BR ) ) ) ,( ( Max( ARS,ARS ) / ( PN * MDR ) ) - Min( Min( Const ,FirstVNF_RAM ) ,( MRS - CRS ) ) ) ) ,Max( ( ( ( FirstVNF_Mem + PN ) / Max( BR,FirstVNF_CPU ) ) - Min( ( ARS + ACS ) ,( ARS * FirstVNF_RAM_Server ) ) ),Min( ( ( Const / CRS ) / Min( MRS ,BR ) ) ,( ( FirstVNF_CPU_Server / RRS ) + ( ACS + DDR ) ) ) ) ),( Min( ( ( ( AMS / DDR ) - ( FirstVNF_RAM + ARS ) ) / Max( ( Const + MDR ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ) ,Min( Max( ( MDR + Const ),( Const * CRS ) ) ,( Min( FirstVNF_RAM_Server ,ACS ) + ( BR / FirstVNF_RAM ) ) ) ) + ( Min( Min( ( ACS * ARS ) ,( PN + ARS ) ) ,( ( FirstVNF_Mem / BR ) + Min( ARS ,FirstVNF_CPU ) ) ) + ( ( Max( ARS,FirstVNF_CPU ) / ( MRS - ARS ) ) - ( ( FirstVNF_Mem_Server * AMS ) - Max( MDR,CRS ) ) ) ) ) ) ,Min( ( ( Min( ( ( BR * FirstVNF_RAM ) / Min( MDR ,AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( ACS / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_CPU_Server / RRS ) + ( FirstVNF_Mem_Server - Const ) ) + ( ( ACS - MDR ) - ( RRS / DDR ) ) ) ) + ( ( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ),( BR - FirstVNF_Mem ) ) / ( ( RRS * BR ) - Max( FirstVNF_Mem,RRS ) ) ) * ( ( ( CRS + Const ) / Max( CRS,CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( ACS - MRS ) ) ) ) ) ,( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( ACS / MDR ) ) * Max( ( BR - FirstVNF_CPU ),Min( MDR ,MRS ) ) ) / Max( ( ( DDR + FirstVNF_RAM_Server ) + ( ARS * FirstVNF_CPU ) ),( Min( ARS ,FirstVNF_CPU_Server ) - ( RRS * BR ) ) ) ) * Min( ( ( ( CRS * MDR ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) - Max( Max( MRS,CRS ),( FirstVNF_RAM_Server / RRS ) ) ) ,( ( ( ACS + FirstVNF_RAM_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( Max( MDR,FirstVNF_RAM ) / ( BR - AMS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( ( ( Min( MUC ,RRSe ) * Min( MLU ,RMSe ) ) - ( ( MLU * MUC ) + Max( RCSe,CS ) ) ) ,( ( Min( MUC ,MUR ) * ( RRSe - DS ) ) + Min( ( CS + DS ) ,( RCSe - RCSe ) ) ) ) * ( Min( ( ( MLU + RCSe ) + ( MUC + RRSe ) ) ,Min( ( MUR - RRSe ) ,( MUM + MUR ) ) ) * Min( Min( Max( RMSe,MUC ) ,( CS * DS ) ) ,( ( MUC + MUM ) * ( MUR - CS ) ) ) ) ) * ( ( ( ( Max( MUC,MUM ) * ( RRSe - MUC ) ) + ( ( MUM + DS ) + ( DS + MUM ) ) ) + ( Min( ( RCSe * MLU ) ,( RRSe * CS ) ) - ( ( RCSe / RMSe ) - ( DS * RRSe ) ) ) ) + ( Min( ( Max( RCSe,RCSe ) * Min( MLU ,RMSe ) ) ,( Min( RMSe ,DS ) + ( MUM * RRSe ) ) ) / Max( Max( ( RRSe - MUM ),( RMSe + MUC ) ),Max( ( CS + RRSe ),( RCSe - MUM ) ) ) ) ) ),( Min( ( ( ( ( MLU - DS ) / ( RCSe * MLU ) ) / ( ( MUR * CS ) / ( RCSe / RRSe ) ) ) - Min( ( ( CS + RRSe ) * Min( MUR ,CS ) ) ,Min( ( MUM + RMSe ) ,( MUR / DS ) ) ) ) ,( ( Max( Min( MUR ,RMSe ),( MUC / RRSe ) ) + ( ( MLU - DS ) * Max( RCSe,RCSe ) ) ) / ( Max( Max( MUR,CS ),( RMSe - MUR ) ) * ( Min( MUM ,CS ) - Min( CS ,RMSe ) ) ) ) ) - Max( Max( ( ( ( MUC / CS ) - Min( RRSe ,CS ) ) * ( ( MUC + RRSe ) / ( DS + DS ) ) ),Min( ( Min( DS ,RRSe ) / ( MUC / RCSe ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUM ) ) ) ),( ( ( ( MLU - MLU ) * Max( MLU,RCSe ) ) - Max( Min( DS ,MUM ),( MUM * RMSe ) ) ) * Max( ( ( MUC * RMSe ) - Min( MLU ,RRSe ) ),Max( ( MUR / RRSe ),Max( MLU,DS ) ) ) ) ) ) ) + ( ( Min( ( ( Min( ( DS + MUM ) ,( RMSe - MLU ) ) / Max( ( RMSe / MUR ),Min( RCSe ,DS ) ) ) * ( ( ( RMSe * MLU ) / ( MUC - MUR ) ) / Min( ( CS / RCSe ) ,( RRSe * RMSe ) ) ) ) ,( ( ( ( MUM * MUR ) * Max( MLU,CS ) ) * Max( ( RMSe - MUR ),( RMSe / MLU ) ) ) - ( ( Max( MLU,DS ) + Max( MUC,RRSe ) ) - ( ( CS * MUM ) + ( MUM + MUC ) ) ) ) ) / Max( ( ( Min( ( RRSe - RCSe ) ,Max( RMSe,RRSe ) ) - ( ( MUR / RMSe ) * ( RMSe * DS ) ) ) * Min( Max( ( MLU - DS ),( MUC - RCSe ) ) ,( ( RCSe - RRSe ) - ( RRSe + RRSe ) ) ) ),( Max( Min( ( DS - DS ) ,( MLU * MUC ) ),Max( ( MUM * RCSe ),( RRSe - CS ) ) ) / ( ( ( MUC + RMSe ) * Max( MUR,DS ) ) + Min( ( RMSe / DS ) ,Min( RMSe ,MUR ) ) ) ) ) ) / ( ( ( ( ( Min( CS ,MUR ) - ( RRSe / MUR ) ) / ( Min( MUM ,MUC ) / ( MUR + MUR ) ) ) * ( ( ( MUR + RRSe ) / Max( CS,RRSe ) ) - ( Min( MLU ,RMSe ) - ( RRSe * MUM ) ) ) ) - ( ( ( ( MUC + MLU ) - Min( RRSe ,RRSe ) ) * ( ( MUM * MLU ) * ( MUM * RCSe ) ) ) + ( ( ( MUR - RMSe ) / ( CS + RCSe ) ) / Max( ( RCSe - DS ),( DS * MUM ) ) ) ) ) + ( Min( ( ( Min( RCSe ,MUM ) / ( RRSe / MUC ) ) - Max( ( DS - RMSe ),( MUR - MUC ) ) ) ,( ( ( MUR - RCSe ) * Min( RMSe ,CS ) ) * ( ( RRSe + DS ) + ( RCSe * RMSe ) ) ) ) + ( ( ( ( MUC * RCSe ) / ( RRSe - MUC ) ) + Max( Min( MLU ,MUR ),( DS * MLU ) ) ) - ( Max( Min( MUC ,RRSe ),( RCSe + DS ) ) / Max( ( RRSe / RCSe ),Max( RRSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.9905660377358491, "obj2": 0.005320076052181177}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "Min( ( ACS / BR ) ,( Max( Max( AMS,Const ),DDR ) / Const ) )", "choosing": "( ( Min( Min( RMSe ,MUC ) ,Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUR ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.6788421896440237}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( ( RCSe + RMSe ) - Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.33962264150943394, "obj2": 0.5393990841155915}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + MUR ) * ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( ( ( MDR + MRS ) * ( ACS - MRS ) ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) + ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) ,( ( MLU - RCSe ) / ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( FirstVNF_CPU_Server ,BR ) * ( CRS / FirstVNF_CPU_Server ) ) ) - Max( Max( ( ACS + FirstVNF_Mem ),Min( RRS ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) )", "choosing": "( ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ARS - DDR ),Max( MRS,AMS ) ) * Max( Max( MRS,FirstVNF_CPU ),Max( Const,Const ) ) ) ,( ( ( MDR * FirstVNF_CPU_Server ) * Max( MRS,MRS ) ) - ( ( FirstVNF_CPU + BR ) / ( BR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / RRSe ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( ( PN / DDR ) / ( MRS + CRS ) ) - ( ( DDR / ARS ) - ( PN + FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_RAM / Const ),( FirstVNF_Mem_Server / ACS ) ) * ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( DS - MUM ) ) / ( ( CS + CS ) / ( DS + MUM ) ) ) * ( Max( ( MUR / CS ),( RCSe - MLU ) ) - Min( ( RMSe / MLU ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( BR - FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( DS ,MUR ),( MUM - RMSe ) ) ) / ( Max( ( CS * DS ),Min( MLU ,MUR ) ) + Min( ( DS * MUM ) ,( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "( ( MDR + MDR ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + MUR ) * ( ( MUR + DS ) * MUC ) )", "obj1": 0.9245283018867925, "obj2": 0.061641520690621864}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) * ( ( RRSe * DS ) * Min( MUC ,MLU ) ) ) )", "obj1": 0.6792452830188679, "obj2": 0.24756585082107915}, {"determining": "( ( Const + FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ,MLU ) ) )", "obj1": 0.7471698113207547, "obj2": 0.1813803594432906}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,Min( PN ,PN ) ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( PN ,RRS ) ) )", "choosing": "Max( ( ( MUC * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * ( MUC - MUM ) ) )", "obj1": 0.44339622641509435, "obj2": 0.45851311855433635}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.6320754716981132, "obj2": 0.29054930782221505}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5339622641509434, "obj2": 0.3881618724773139}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5018867924528302, "obj2": 0.42673817232511374}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( ( ( MRS * RRS ) * Const ) ,Const ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MUR + RCSe ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.7118686779362059}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) ),MLU ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6650507818800275}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - ( ( ( ( DDR - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( FirstVNF_CPU_Server ,BR ) * ( CRS / FirstVNF_CPU_Server ) ) ) - Max( Max( ( ACS + FirstVNF_Mem ),Min( RRS ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,RRS ) - Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( MLU ,CS ) ) )", "obj1": 0.9735849056603774, "obj2": 0.03666145673059704}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,MUR ) / ( MUM / MUC ) )", "obj1": 0.5056603773584906, "obj2": 0.41844909281009474}, {"determining": "( ( Max( Max( AMS,Const ),DDR ) * DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( RCSe ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.35660377358490564, "obj2": 0.526845928647117}, {"determining": "( ( ( MRS + DDR ) * DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( MUC - MUM ) * ( MLU * ( MUM / RCSe ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.04361232461376263}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.4339622641509434, "obj2": 0.4769074599622985}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "Min( ( ( Const / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + CRS ) ,( MRS / MRS ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + MUC ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Min( RRS ,DDR ) ),( ( FirstVNF_CPU_Server - CRS ) / Max( FirstVNF_RAM,ARS ) ) )", "choosing": "Min( ( ( MUC - MUC ) + ( MUR / CS ) ) ,( ( MLU * RMSe ) / ( RRSe - RRSe ) ) )", "obj1": 0.4056603773584906, "obj2": 0.48357531877430693}, {"determining": "Max( ( PN + ( FirstVNF_CPU + ACS ) ),( Const + AMS ) )", "choosing": "( ( DS + CS ) * ( ( DS + CS ) * Max( ( MUR - RRSe ),DS ) ) )", "obj1": 0.7358490566037735, "obj2": 0.2219141401497255}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "Max( ( PN + ( FirstVNF_CPU + ACS ) ),( Const + AMS ) )", "choosing": "( ( DS + CS ) * Max( ( MUR - RRSe ),DS ) )", "obj1": 0.7433962264150943, "obj2": 0.21210645366834305}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5801787664883004}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( ( PN + FirstVNF_RAM ),ARS ) )", "choosing": "( ( MUR + RCSe ) * ( ( MUM / MUC ) - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.27358490566037735, "obj2": 0.6410332562214605}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( DS ,MUR ),( MUM - RMSe ) ) ) / ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.930188679245283, "obj2": 0.05980737152374196}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Min( RRS ,DDR ) ),( ( FirstVNF_CPU_Server - CRS ) / Max( FirstVNF_RAM,ARS ) ) )", "choosing": "Min( ( ( MUC - MUC ) + ( MUR / CS ) ) ,( ( MLU * RMSe ) / ( RRSe - RRSe ) ) )", "obj1": 0.39622641509433965, "obj2": 0.4971841371821597}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.2320754716981132, "obj2": 0.6775638512176761}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7467826798671928}, {"determining": "( MDR / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "Max( Min( ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) ,RMSe ),( ( MUR + DS ) * MUC ) )", "obj1": 0.5679245283018868, "obj2": 0.3619570113408428}, {"determining": "Min( MDR ,( MRS - MRS ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.3320754716981132, "obj2": 0.5581467385731125}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.2320754716981132, "obj2": 0.6775638512176761}, {"determining": "( Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + RMSe ) - Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + ( ( RMSe / MUR ) - ( DS - MLU ) ) ) ) )", "obj1": 0.33584905660377357, "obj2": 0.5437171979165768}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( Min( Min( DDR ,( RRS + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.12075471698113208, "obj2": 0.7603080496773622}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( ( CS + RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6425560996984818}, {"determining": "( Min( ( ( MRS * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.20943396226415095, "obj2": 0.7003365543585333}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.1169811320754717, "obj2": 0.7667931975064781}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}], "4": [{"determining": "Min( ( Min( ( PN / FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - DDR ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( MUC - MUM ) * ( ( ( RMSe / Min( MUC ,MLU ) ) - ( DS - CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / DDR ) / ( MRS + CRS ) ) - ( ( DDR / ARS ) - ( PN + FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_RAM / Const ),( FirstVNF_Mem_Server / ACS ) ) * ( FirstVNF_Mem_Server / ( MRS - Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( DS - MUM ) ) / ( ( CS + CS ) / ( DS + MUM ) ) ) * ( Max( ( MUR / CS ),( RCSe - MLU ) ) - Min( ( RMSe / MLU ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( AMS - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + Max( ( MUR - RRSe ),DS ) ) * Max( RCSe,RCSe ) )", "obj1": 0.8169811320754717, "obj2": 0.12109578364053904}, {"determining": "( ( MDR + MDR ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + MUR ) * ( ( MUR + DS ) * MUC ) )", "obj1": 0.9245283018867925, "obj2": 0.061641520690621864}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5339622641509434, "obj2": 0.3881618724773139}, {"determining": "( ( Const + FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ,MLU ) ) )", "obj1": 0.7471698113207547, "obj2": 0.1813803594432906}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) * ( ( RRSe * DS ) * Min( MUC ,MLU ) ) ) )", "obj1": 0.6792452830188679, "obj2": 0.24756585082107915}, {"determining": "( Min( Min( DDR ,( Const + ( CRS - FirstVNF_RAM ) ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.1538595165714605}, {"determining": "( ( MRS + ARS ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ARS ) )", "choosing": "Max( Max( ( ( ( ( Min( Min( RRSe ,DS ) ,Min( RMSe ,RCSe ) ) + ( ( MLU * DS ) * Max( MLU,DS ) ) ) * ( Min( ( DS + MUM ) ,( MUR + CS ) ) + Min( ( MUR * MUM ) ,( RCSe - DS ) ) ) ) + Min( Max( Max( ( MUM / DS ),( RCSe + RRSe ) ),Max( ( RRSe + MLU ),( CS - MUR ) ) ) ,( ( Min( RCSe ,MLU ) / Min( RRSe ,RRSe ) ) * ( Max( MUC,MUC ) - ( MUC + RMSe ) ) ) ) ) * Max( ( ( ( ( RCSe - MUR ) * ( MLU / MUR ) ) * Max( ( MUR - MLU ),( MUR - DS ) ) ) / Max( Max( Min( RMSe ,MLU ),( MUC / DS ) ),( Max( MUC,CS ) * Min( RRSe ,MLU ) ) ) ),( ( Max( Max( MLU,RCSe ),( CS * RCSe ) ) + ( ( RCSe * MLU ) + Min( RCSe ,MUC ) ) ) / ( ( ( RCSe * RRSe ) + Min( RCSe ,RCSe ) ) - ( ( CS + RMSe ) - ( MUC / RMSe ) ) ) ) ) ),( ( Max( ( ( Min( DS ,DS ) / ( MUC + RRSe ) ) / Max( ( RRSe - DS ),Min( RRSe ,RRSe ) ) ),Min( ( ( CS / MUC ) - ( RRSe - RMSe ) ) ,Min( ( CS + RCSe ) ,( MUM / RRSe ) ) ) ) * ( Min( Min( ( RMSe - MLU ) ,( MUR + MUC ) ) ,Min( ( MUC * RMSe ) ,( MUM * DS ) ) ) / Max( ( ( MUC - MLU ) - ( DS / MLU ) ),( Max( MUC,CS ) * ( MLU / CS ) ) ) ) ) - Max( ( ( ( ( MUM / RRSe ) - ( MUC / MUC ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) / ( ( ( DS / MLU ) * ( MUM - MUR ) ) / ( ( MUM * RCSe ) / Max( RMSe,RRSe ) ) ) ),( ( ( ( CS + MUR ) + Min( RRSe ,RRSe ) ) + ( ( CS * RRSe ) + Min( RMSe ,RMSe ) ) ) + ( ( ( DS * RCSe ) + ( MUC + MUR ) ) * ( ( MUM / MLU ) / ( CS * MUM ) ) ) ) ) ) ),( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6566037735849056, "obj2": 0.27937307966379127}, {"determining": "Max( Max( Const,PN ),( Const + AMS ) )", "choosing": "( ( RCSe + MUR ) + ( ( DS + CS ) * Max( MUC,DS ) ) )", "obj1": 0.49245283018867925, "obj2": 0.4468290262973671}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,Min( PN ,PN ) ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( PN ,RRS ) ) )", "choosing": "Max( ( ( MUC * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * ( MUC - MUM ) ) )", "obj1": 0.44339622641509435, "obj2": 0.45851311855433635}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( ( ( MRS * RRS ) * Const ) ,Const ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MUR + RCSe ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.7118686779362059}, {"determining": "Max( ( PN + ( FirstVNF_CPU + ACS ) ),( Const + AMS ) )", "choosing": "( ( DS + CS ) * Max( ( MUR - RRSe ),DS ) )", "obj1": 0.7433962264150943, "obj2": 0.21210645366834305}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) ),MLU ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6650507818800275}, {"determining": "( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - ( ( ( ( DDR - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( FirstVNF_CPU_Server ,BR ) * ( CRS / FirstVNF_CPU_Server ) ) ) - Max( Max( ( ACS + FirstVNF_Mem ),Min( RRS ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,RRS ) - Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( MLU ,CS ) ) )", "obj1": 0.9735849056603774, "obj2": 0.03666145673059704}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,MUR ) / ( MUM / MUC ) )", "obj1": 0.5056603773584906, "obj2": 0.41844909281009474}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + Const ) ) - DDR ) ,( MRS + DDR ) )", "choosing": "( ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) * ( MLU * ( MUM / RCSe ) ) )", "obj1": 0.6056603773584905, "obj2": 0.3170970091728598}, {"determining": "Min( ( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUC ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) ) - MUM ) * ( MLU + CS ) )", "obj1": 0.22075471698113208, "obj2": 0.6680018670426638}, {"determining": "( ( ( MRS + DDR ) * DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( MUC - MUM ) * ( MLU * ( MUM / RCSe ) ) ) )", "obj1": 0.9509433962264151, "obj2": 0.04361232461376263}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.4339622641509434, "obj2": 0.4769074599622985}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.6320754716981132, "obj2": 0.29054930782221505}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Min( RRS ,DDR ) ),( ( FirstVNF_CPU_Server - CRS ) / Max( FirstVNF_RAM,ARS ) ) )", "choosing": "Min( ( ( MUC - MUC ) + ( MUR / CS ) ) ,( ( MLU * RMSe ) / ( RRSe - RRSe ) ) )", "obj1": 0.4056603773584906, "obj2": 0.48357531877430693}, {"determining": "( ( Max( Max( AMS,Const ),DDR ) * DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( RCSe ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.35660377358490564, "obj2": 0.526845928647117}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5801787664883004}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "Min( ( ( Const / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + CRS ) ,( MRS / MRS ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + MUC ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( DS ,MUR ),( MUM - RMSe ) ) ) / ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.930188679245283, "obj2": 0.05980737152374196}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( ( CS + RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6425560996984818}, {"determining": "( Min( ( ( MRS * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( RMSe ,RCSe ),MLU ) ) )", "obj1": 0.2811320754716981, "obj2": 0.6362855594913694}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5018867924528302, "obj2": 0.42673817232511374}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) ) ) )", "choosing": "Max( ( Min( RRSe ,RCSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.38301886792452833, "obj2": 0.5160953300603611}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Min( RRS ,DDR ) ),( ( FirstVNF_CPU_Server - CRS ) / Max( FirstVNF_RAM,ARS ) ) )", "choosing": "Min( ( ( MUC - MUC ) + ( MUR / CS ) ) ,( ( MLU * RMSe ) / ( RRSe - RRSe ) ) )", "obj1": 0.39622641509433965, "obj2": 0.4971841371821597}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + RMSe ) - Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + ( ( RMSe / MUR ) - ( DS - MLU ) ) ) ) )", "obj1": 0.33584905660377357, "obj2": 0.5437171979165768}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}, {"determining": "( ( MDR + FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( RRS / ARS ) ) )", "choosing": "( ( MUR + MUM ) * DS )", "obj1": 0.7094339622641509, "obj2": 0.21879222806857607}, {"determining": "( ( MRS + ARS ) / ( ( CRS - FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7442563575837414}, {"determining": "( MDR / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "Max( Min( ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) ,RMSe ),( ( MUR + DS ) * MUC ) )", "obj1": 0.5679245283018868, "obj2": 0.3619570113408428}, {"determining": "Min( MDR ,( MRS - MRS ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.3320754716981132, "obj2": 0.5581467385731125}], "5": [{"determining": "( ( MDR + ( RRS / ARS ) ) - ( ARS / ACS ) )", "choosing": "( ( MUR + MUR ) + ( ( RCSe + MUR ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( PN / FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - DDR ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( MUC - MUM ) * ( ( ( RMSe / Min( MUC ,MLU ) ) - ( DS - CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( ( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_CPU + DDR ) ) * DDR ) - ( DDR - PN ) )", "choosing": "( MUM - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8169811320754717, "obj2": 0.08826484962136517}, {"determining": "( ( MDR + MDR ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + MUR ) * ( ( MUR + DS ) * MUC ) )", "obj1": 0.9245283018867925, "obj2": 0.061641520690621864}, {"determining": "( Min( Min( DDR ,( Const + ( CRS - FirstVNF_RAM ) ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.1538595165714605}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5339622641509434, "obj2": 0.3881618724773139}, {"determining": "( ( Const + FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ,MLU ) ) )", "obj1": 0.7471698113207547, "obj2": 0.1813803594432906}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( ( ( MRS * RRS ) * Const ) ,Const ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MUR + RCSe ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.7118686779362059}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) * ( ( RRSe * DS ) * Min( MUC ,MLU ) ) ) )", "obj1": 0.6792452830188679, "obj2": 0.24756585082107915}, {"determining": "( ( MRS + ARS ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ARS ) )", "choosing": "Max( Max( ( ( ( ( Min( Min( RRSe ,DS ) ,Min( RMSe ,RCSe ) ) + ( ( MLU * DS ) * Max( MLU,DS ) ) ) * ( Min( ( DS + MUM ) ,( MUR + CS ) ) + Min( ( MUR * MUM ) ,( RCSe - DS ) ) ) ) + Min( Max( Max( ( MUM / DS ),( RCSe + RRSe ) ),Max( ( RRSe + MLU ),( CS - MUR ) ) ) ,( ( Min( RCSe ,MLU ) / Min( RRSe ,RRSe ) ) * ( Max( MUC,MUC ) - ( MUC + RMSe ) ) ) ) ) * Max( ( ( ( ( RCSe - MUR ) * ( MLU / MUR ) ) * Max( ( MUR - MLU ),( MUR - DS ) ) ) / Max( Max( Min( RMSe ,MLU ),( MUC / DS ) ),( Max( MUC,CS ) * Min( RRSe ,MLU ) ) ) ),( ( Max( Max( MLU,RCSe ),( CS * RCSe ) ) + ( ( RCSe * MLU ) + Min( RCSe ,MUC ) ) ) / ( ( ( RCSe * RRSe ) + Min( RCSe ,RCSe ) ) - ( ( CS + RMSe ) - ( MUC / RMSe ) ) ) ) ) ),( ( Max( ( ( Min( DS ,DS ) / ( MUC + RRSe ) ) / Max( ( RRSe - DS ),Min( RRSe ,RRSe ) ) ),Min( ( ( CS / MUC ) - ( RRSe - RMSe ) ) ,Min( ( CS + RCSe ) ,( MUM / RRSe ) ) ) ) * ( Min( Min( ( RMSe - MLU ) ,( MUR + MUC ) ) ,Min( ( MUC * RMSe ) ,( MUM * DS ) ) ) / Max( ( ( MUC - MLU ) - ( DS / MLU ) ),( Max( MUC,CS ) * ( MLU / CS ) ) ) ) ) - Max( ( ( ( ( MUM / RRSe ) - ( MUC / MUC ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) / ( ( ( DS / MLU ) * ( MUM - MUR ) ) / ( ( MUM * RCSe ) / Max( RMSe,RRSe ) ) ) ),( ( ( ( CS + MUR ) + Min( RRSe ,RRSe ) ) + ( ( CS * RRSe ) + Min( RMSe ,RMSe ) ) ) + ( ( ( DS * RCSe ) + ( MUC + MUR ) ) * ( ( MUM / MLU ) / ( CS * MUM ) ) ) ) ) ) ),( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.6566037735849056, "obj2": 0.27937307966379127}, {"determining": "Max( ( ( Max( ( ( Min( ( Const * PN ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * Max( ( ( RRS / AMS ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ),( ( RRS + BR ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ),( ( ( ( RRS / MDR ) * ( RRS * PN ) ) / Max( Max( PN,PN ),( PN * MRS ) ) ) + ( ( Min( BR ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ACS - CRS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Max( PN,ACS ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * Min( ( Min( PN ,RRS ) - Min( PN ,ACS ) ) ,( Max( ARS,FirstVNF_RAM_Server ) - ( BR * FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( AMS,AMS ) + ( CRS - PN ) ) - ( ( ACS - FirstVNF_Mem_Server ) + ( DDR - FirstVNF_CPU_Server ) ) ) * Max( Min( Min( AMS ,FirstVNF_CPU_Server ) ,( DDR * FirstVNF_Mem_Server ) ),( ( PN - FirstVNF_RAM_Server ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ) - Max( Min( Max( Max( ( ( CRS - ACS ) - ( AMS / PN ) ),( ( AMS + Const ) * ( RRS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_RAM / DDR ) / ( FirstVNF_RAM - MRS ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) * Min( CRS ,Const ) ) ) ) ,( Min( ( ( Const + ARS ) + Max( CRS,FirstVNF_Mem ) ) ,( Max( Const,Const ) / ( ACS * FirstVNF_CPU ) ) ) * Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( FirstVNF_CPU / DDR ) ) ,Min( ( BR / Const ) ,( ACS * RRS ) ) ) ) ),Max( Min( Max( Min( ( AMS * PN ) ,( FirstVNF_Mem * ACS ) ),( Min( BR ,FirstVNF_CPU ) * Min( AMS ,FirstVNF_CPU ) ) ) ,( ( ( AMS * FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ARS ) ) * Min( Min( FirstVNF_CPU ,MDR ) ,Max( CRS,ACS ) ) ) ),( ( Max( ( DDR * BR ),Max( RRS,FirstVNF_Mem_Server ) ) * ( Max( Const,BR ) + ( FirstVNF_RAM / AMS ) ) ) * ( ( ( ACS - FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * ( ( CRS + Const ) - Min( Const ,PN ) ) ) ) ) ) ),Max( ( ( ( Min( ( ( DDR * Const ) - ( FirstVNF_Mem / MDR ) ) ,( Min( AMS ,PN ) * ( ACS / FirstVNF_CPU ) ) ) * ( ( Min( AMS ,ACS ) / ( ACS + ARS ) ) * ( ( AMS * ACS ) / ( PN * FirstVNF_RAM ) ) ) ) / Max( ( Min( Max( FirstVNF_RAM,MDR ) ,( CRS - CRS ) ) - ( ( BR * BR ) - ( FirstVNF_RAM - DDR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) / Min( AMS ,FirstVNF_RAM_Server ) ) + ( Max( Const,AMS ) + ( AMS * FirstVNF_Mem ) ) ) ) ) + ( ( Max( Max( ( RRS - FirstVNF_RAM ),( PN / ACS ) ),( ( FirstVNF_Mem - PN ) + Min( MRS ,AMS ) ) ) * ( ( ( ACS - ACS ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) + ( ( BR + ACS ) * Max( FirstVNF_RAM,AMS ) ) ) ) * Min( Max( ( ( FirstVNF_RAM + PN ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),( Min( BR ,BR ) + Max( MRS,DDR ) ) ) ,( ( ( FirstVNF_RAM / ARS ) + ( PN - BR ) ) + ( ( PN + BR ) + Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Max( ( PN - FirstVNF_RAM_Server ),( ARS * MDR ) ) - Min( ( RRS + CRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) - ( ( ARS * FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( Const / ACS ) ) * Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,Min( ACS ,ARS ) ) ) / ( ( Max( PN,RRS ) - Min( ARS ,MDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Min( Max( BR,FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ),( ( ACS / FirstVNF_RAM ) + ( ACS + MDR ) ) ) ,( ( ( FirstVNF_RAM + ACS ) * ( MRS + MDR ) ) / ( Max( RRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - AMS ) ) ) ) / ( ( ( Max( PN,RRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / ( Min( ARS ,CRS ) + Max( FirstVNF_RAM,Const ) ) ) * ( ( ( FirstVNF_CPU_Server + MRS ) + ( DDR / MRS ) ) - Min( ( AMS - MRS ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( RMSe + MLU ) / ( RRSe / RCSe ) ),( Max( MLU,CS ) - ( MUM * DS ) ) ) * Max( ( Max( DS,MUR ) / Max( CS,RRSe ) ),( ( MUR / MLU ) / Min( MUR ,RRSe ) ) ) ) * Max( Min( ( Min( MUC ,MLU ) + Max( MLU,RRSe ) ) ,Max( ( MUR - MLU ),( RCSe - CS ) ) ),( ( ( CS * MUR ) + Max( RRSe,MLU ) ) + ( Max( RCSe,DS ) * ( MUR / MUC ) ) ) ) ) - ( Min( ( ( ( MLU * MLU ) - ( MUR + MUM ) ) + ( Max( RCSe,MUM ) * ( MLU - MUR ) ) ) ,( Max( ( RRSe * MUR ),Min( CS ,RMSe ) ) / ( ( CS / MLU ) * Min( MUC ,CS ) ) ) ) - Min( ( ( ( MUR + MUC ) * Max( MUC,CS ) ) - ( Min( MUC ,RCSe ) / Min( MLU ,MUC ) ) ) ,( ( Max( MLU,CS ) + ( RCSe * MUC ) ) * Min( Max( MUR,MLU ) ,Max( RRSe,MUC ) ) ) ) ) ) + ( Max( Min( Max( ( ( RMSe + CS ) - ( MUC / RMSe ) ),( ( MUR - MLU ) * Max( MUR,MUC ) ) ) ,( ( ( MUR - RMSe ) * ( MUC + MLU ) ) * ( ( RMSe + RRSe ) / Min( MUM ,MUM ) ) ) ),( Max( Max( Min( RMSe ,MUM ),( MUR / MUM ) ),( ( RCSe - RCSe ) / ( DS * DS ) ) ) + ( ( Max( MUR,RMSe ) + ( MLU + MUM ) ) - ( ( MUR / CS ) - ( MUM * DS ) ) ) ) ) / ( Max( ( ( ( DS - DS ) / ( MUC * DS ) ) + Max( ( RRSe - MUC ),( DS + MUR ) ) ),( ( Max( RRSe,RRSe ) + ( RCSe - MLU ) ) * ( ( RMSe / DS ) - Max( MUR,DS ) ) ) ) + Min( Max( ( ( DS * MUR ) * Max( DS,MUM ) ),( ( MUC - MUM ) / Min( MUM ,RMSe ) ) ) ,( Max( ( MUR + MUC ),( MUC * MUM ) ) / ( ( RMSe * DS ) + ( MUM * RCSe ) ) ) ) ) ) ) + ( Min( Max( ( ( ( ( MUC - MUC ) - ( DS / CS ) ) - ( ( MLU * DS ) * ( CS + RMSe ) ) ) / ( Min( ( CS + RCSe ) ,( RCSe + MUM ) ) * ( ( MUC - DS ) / ( MUR / RMSe ) ) ) ),( Min( ( Min( MUM ,RMSe ) + ( MUM + RMSe ) ) ,( Min( MUC ,RRSe ) - ( RRSe * DS ) ) ) * ( Min( ( CS - RRSe ) ,( DS - MLU ) ) - ( ( MLU * RCSe ) * ( MUR * DS ) ) ) ) ) ,( Min( ( ( ( MUC + MUM ) - ( CS - CS ) ) - ( ( RRSe / MUR ) + ( CS + CS ) ) ) ,( Min( ( DS + MUR ) ,( MLU - MUR ) ) - ( ( MUM / RRSe ) + ( RCSe - MLU ) ) ) ) + ( ( ( ( RRSe * RMSe ) * Min( MUM ,RRSe ) ) + Min( Min( MUR ,MUC ) ,Max( RMSe,MUM ) ) ) + ( ( Min( DS ,MUM ) + ( MUC / RCSe ) ) / ( Max( RRSe,RMSe ) - ( MLU / MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS * RCSe ) / Max( MUC,MUM ) ) + Max( ( MUC - MLU ),Min( RRSe ,MUR ) ) ) - ( Max( ( RMSe - MUC ),( RRSe + MUC ) ) - ( ( RRSe / RMSe ) + ( CS + DS ) ) ) ) * ( Max( ( ( RRSe + RCSe ) / ( MLU + MUM ) ),( ( CS + DS ) / Min( DS ,CS ) ) ) * ( Max( ( MUR / CS ),( MLU - RRSe ) ) / ( ( DS + MUC ) * Min( MLU ,CS ) ) ) ) ) - ( ( ( ( Min( RMSe ,RRSe ) * ( RMSe / MLU ) ) - Min( ( MUM - MUM ) ,( RMSe * RRSe ) ) ) - ( ( ( RMSe - DS ) + ( RMSe + MUR ) ) / ( ( RRSe + MUC ) * Max( RRSe,MUC ) ) ) ) * Max( ( ( ( CS + MUC ) * ( MUM / MUC ) ) / ( Max( RCSe,RMSe ) - ( RCSe * RCSe ) ) ),( Max( ( RMSe * MUR ),( RMSe / CS ) ) * Min( ( MUM + RRSe ) ,( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.47924528301886793, "obj2": 0.43683247438398004}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,Min( PN ,PN ) ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( PN ,RRS ) ) )", "choosing": "Max( ( ( MUC * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * ( MUC - MUM ) ) )", "obj1": 0.44339622641509435, "obj2": 0.45851311855433635}, {"determining": "Max( ( PN + ( FirstVNF_CPU + ACS ) ),( Const + AMS ) )", "choosing": "( ( DS + CS ) * Max( ( MUR - RRSe ),DS ) )", "obj1": 0.7433962264150943, "obj2": 0.21210645366834305}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "( ( MDR + MDR ) - Max( Const,PN ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,MUM ) )", "obj1": 0.969811320754717, "obj2": 0.034991552713434376}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + Const ) ) - DDR ) ,( MRS + DDR ) )", "choosing": "( ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) * ( MLU * ( MUM / RCSe ) ) )", "obj1": 0.6056603773584905, "obj2": 0.3170970091728598}, {"determining": "Min( ( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUC ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) ) - MUM ) * ( MLU + CS ) )", "obj1": 0.22075471698113208, "obj2": 0.6680018670426638}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,MUR ) / ( MUM / MUC ) )", "obj1": 0.5056603773584906, "obj2": 0.41844909281009474}, {"determining": "( ( ACS * DDR ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - Min( CS ,RCSe ) )", "obj1": 0.9490566037735849, "obj2": 0.03956764062080569}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.4339622641509434, "obj2": 0.4769074599622985}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.6320754716981132, "obj2": 0.29054930782221505}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( ( MDR + MDR ) - ( FirstVNF_CPU_Server / ACS ) ) ) + MDR ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( Min( CS ,RCSe ) / ( RCSe - ( MUR + MUR ) ) ) * Max( RCSe,RCSe ) )", "obj1": 0.4037735849056604, "obj2": 0.4831395493039117}, {"determining": "( ( MDR + FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( RRS / ARS ) ) )", "choosing": "( ( MUR + MUM ) * DS )", "obj1": 0.7094339622641509, "obj2": 0.21879222806857607}, {"determining": "( ( Max( Max( AMS,Const ),DDR ) * DDR ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( RCSe ,MUR ) ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.35660377358490564, "obj2": 0.526845928647117}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "( Min( ( ( MRS * RRS ) * Const ) ,( FirstVNF_Mem_Server + Const ) ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( RMSe ,RCSe ),CS ) ) )", "obj1": 0.37924528301886795, "obj2": 0.511529528067481}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "( Min( ( ( MRS * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( RMSe ,RCSe ),MLU ) ) )", "obj1": 0.2811320754716981, "obj2": 0.6362855594913694}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5801787664883004}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( DS ,MUR ),( MUM - RMSe ) ) ) / ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.930188679245283, "obj2": 0.05980737152374196}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) ),MLU ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6650507818800275}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Min( RRS ,DDR ) ),( ( FirstVNF_CPU_Server - CRS ) / Max( FirstVNF_RAM,ARS ) ) )", "choosing": "Min( ( ( MUC - MUC ) + ( MUR / CS ) ) ,( ( MLU * RMSe ) / ( RRSe - RRSe ) ) )", "obj1": 0.39622641509433965, "obj2": 0.4971841371821597}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "Min( ( FirstVNF_Mem_Server - DDR ) ,Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUC - MUM ) * ( MLU + ( RCSe + RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.5996006556688608}, {"determining": "Min( MDR ,( MRS - MRS ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.3320754716981132, "obj2": 0.5581467385731125}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5018867924528302, "obj2": 0.42673817232511374}, {"determining": "( Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + RMSe ) - Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + ( ( RMSe / MUR ) - ( DS - MLU ) ) ) ) )", "obj1": 0.33584905660377357, "obj2": 0.5437171979165768}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.20943396226415095, "obj2": 0.7003365543585333}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - Max( FirstVNF_RAM_Server,ACS ) ) / ( ( FirstVNF_RAM / CRS ) * Min( RRS ,RRS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( ( ( MUC + MUM ) * ( MLU * MUM ) ) * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.26037735849056604, "obj2": 0.6610700413986946}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( ( MRS + ARS ) / ( ( CRS - FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7442563575837414}], "6": [{"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_CPU ) - Min( ( FirstVNF_CPU / AMS ) ,MDR ) )", "choosing": "( Min( MUC ,MUR ) * ( ( ( ( Max( ( ( MUC / MLU ) / Max( MLU,RRSe ) ),MUM ) - DS ) / ( ( MLU / MUM ) - MUR ) ) / CS ) * ( ( ( ( Min( ( DS / MLU ) ,( MLU + MLU ) ) / ( MUR * RRSe ) ) / ( Min( ( MLU + MUM ) ,MLU ) / MUM ) ) / MUR ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( RRS / ARS ) ) - ( ARS / ACS ) )", "choosing": "( ( MUR + MUR ) + ( ( RCSe + MUR ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( ( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_CPU + DDR ) ) * DDR ) - ( DDR - PN ) )", "choosing": "( MUM - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8169811320754717, "obj2": 0.08826484962136517}, {"determining": "( ( MDR + MDR ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + MUR ) * ( ( MUR + DS ) * MUC ) )", "obj1": 0.9245283018867925, "obj2": 0.061641520690621864}, {"determining": "( Min( Min( DDR ,( Const + ( CRS - FirstVNF_RAM ) ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.1538595165714605}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( ( ( MRS * RRS ) * Const ) ,Const ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MUR + RCSe ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.7118686779362059}, {"determining": "( ( FirstVNF_CPU_Server + ( MDR + MDR ) ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( DS * Max( RCSe,RCSe ) ) )", "obj1": 0.6528301886792452, "obj2": 0.26949877834607555}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) * ( ( RRSe * DS ) * Min( MUC ,MLU ) ) ) )", "obj1": 0.6792452830188679, "obj2": 0.24756585082107915}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "( ( Const + FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ,MLU ) ) )", "obj1": 0.7471698113207547, "obj2": 0.1813803594432906}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5339622641509434, "obj2": 0.3881618724773139}, {"determining": "( ( MDR + MDR ) - Max( Const,PN ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,MUM ) )", "obj1": 0.969811320754717, "obj2": 0.034991552713434376}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + Const ) ) - DDR ) ,( MRS + DDR ) )", "choosing": "( ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) * ( MLU * ( MUM / RCSe ) ) )", "obj1": 0.6056603773584905, "obj2": 0.3170970091728598}, {"determining": "Min( ( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUC ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) ) - MUM ) * ( MLU + CS ) )", "obj1": 0.22075471698113208, "obj2": 0.6680018670426638}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.6320754716981132, "obj2": 0.29054930782221505}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.4339622641509434, "obj2": 0.4769074599622985}, {"determining": "Max( ( ( Max( ( ( Min( ( Const * PN ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * Max( ( ( RRS / AMS ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ),( ( RRS + BR ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ),( ( ( ( RRS / MDR ) * ( RRS * PN ) ) / Max( Max( PN,PN ),( PN * MRS ) ) ) + ( ( Min( BR ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ACS - CRS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Max( PN,ACS ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) * Min( ( Min( PN ,RRS ) - Min( PN ,ACS ) ) ,( Max( ARS,FirstVNF_RAM_Server ) - ( BR * FirstVNF_RAM_Server ) ) ) ) + ( ( ( Max( AMS,AMS ) + ( CRS - PN ) ) - ( ( ACS - FirstVNF_Mem_Server ) + ( DDR - FirstVNF_CPU_Server ) ) ) * Max( Min( Min( AMS ,FirstVNF_CPU_Server ) ,( DDR * FirstVNF_Mem_Server ) ),( ( PN - FirstVNF_RAM_Server ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ) - Max( Min( Max( Max( ( ( CRS - ACS ) - ( AMS / PN ) ),( ( AMS + Const ) * ( RRS - FirstVNF_RAM ) ) ),( ( ( FirstVNF_RAM / DDR ) / ( FirstVNF_RAM - MRS ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) * Min( CRS ,Const ) ) ) ) ,( Min( ( ( Const + ARS ) + Max( CRS,FirstVNF_Mem ) ) ,( Max( Const,Const ) / ( ACS * FirstVNF_CPU ) ) ) * Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / ( FirstVNF_CPU / DDR ) ) ,Min( ( BR / Const ) ,( ACS * RRS ) ) ) ) ),Max( Min( Max( Min( ( AMS * PN ) ,( FirstVNF_Mem * ACS ) ),( Min( BR ,FirstVNF_CPU ) * Min( AMS ,FirstVNF_CPU ) ) ) ,( ( ( AMS * FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ARS ) ) * Min( Min( FirstVNF_CPU ,MDR ) ,Max( CRS,ACS ) ) ) ),( ( Max( ( DDR * BR ),Max( RRS,FirstVNF_Mem_Server ) ) * ( Max( Const,BR ) + ( FirstVNF_RAM / AMS ) ) ) * ( ( ( ACS - FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) * ( ( CRS + Const ) - Min( Const ,PN ) ) ) ) ) ) ),Max( ( ( ( Min( ( ( DDR * Const ) - ( FirstVNF_Mem / MDR ) ) ,( Min( AMS ,PN ) * ( ACS / FirstVNF_CPU ) ) ) * ( ( Min( AMS ,ACS ) / ( ACS + ARS ) ) * ( ( AMS * ACS ) / ( PN * FirstVNF_RAM ) ) ) ) / Max( ( Min( Max( FirstVNF_RAM,MDR ) ,( CRS - CRS ) ) - ( ( BR * BR ) - ( FirstVNF_RAM - DDR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) / Min( AMS ,FirstVNF_RAM_Server ) ) + ( Max( Const,AMS ) + ( AMS * FirstVNF_Mem ) ) ) ) ) + ( ( Max( Max( ( RRS - FirstVNF_RAM ),( PN / ACS ) ),( ( FirstVNF_Mem - PN ) + Min( MRS ,AMS ) ) ) * ( ( ( ACS - ACS ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) + ( ( BR + ACS ) * Max( FirstVNF_RAM,AMS ) ) ) ) * Min( Max( ( ( FirstVNF_RAM + PN ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),( Min( BR ,BR ) + Max( MRS,DDR ) ) ) ,( ( ( FirstVNF_RAM / ARS ) + ( PN - BR ) ) + ( ( PN + BR ) + Max( MDR,RRS ) ) ) ) ) ),( ( ( ( Max( ( PN - FirstVNF_RAM_Server ),( ARS * MDR ) ) - Min( ( RRS + CRS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) - ( ( ARS * FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( Const / ACS ) ) * Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,Min( ACS ,ARS ) ) ) / ( ( Max( PN,RRS ) - Min( ARS ,MDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Min( Max( BR,FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ),( ( ACS / FirstVNF_RAM ) + ( ACS + MDR ) ) ) ,( ( ( FirstVNF_RAM + ACS ) * ( MRS + MDR ) ) / ( Max( RRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - AMS ) ) ) ) / ( ( ( Max( PN,RRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / ( Min( ARS ,CRS ) + Max( FirstVNF_RAM,Const ) ) ) * ( ( ( FirstVNF_CPU_Server + MRS ) + ( DDR / MRS ) ) - Min( ( AMS - MRS ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( RMSe + MLU ) / ( RRSe / RCSe ) ),( Max( MLU,CS ) - ( MUM * DS ) ) ) * Max( ( Max( DS,MUR ) / Max( CS,RRSe ) ),( ( MUR / MLU ) / Min( MUR ,RRSe ) ) ) ) * Max( Min( ( Min( MUC ,MLU ) + Max( MLU,RRSe ) ) ,Max( ( MUR - MLU ),( RCSe - CS ) ) ),( ( ( CS * MUR ) + Max( RRSe,MLU ) ) + ( Max( RCSe,DS ) * ( MUR / MUC ) ) ) ) ) - ( Min( ( ( ( MLU * MLU ) - ( MUR + MUM ) ) + ( Max( RCSe,MUM ) * ( MLU - MUR ) ) ) ,( Max( ( RRSe * MUR ),Min( CS ,RMSe ) ) / ( ( CS / MLU ) * Min( MUC ,CS ) ) ) ) - Min( ( ( ( MUR + MUC ) * Max( MUC,CS ) ) - ( Min( MUC ,RCSe ) / Min( MLU ,MUC ) ) ) ,( ( Max( MLU,CS ) + ( RCSe * MUC ) ) * Min( Max( MUR,MLU ) ,Max( RRSe,MUC ) ) ) ) ) ) + ( Max( Min( Max( ( ( RMSe + CS ) - ( MUC / RMSe ) ),( ( MUR - MLU ) * Max( MUR,MUC ) ) ) ,( ( ( MUR - RMSe ) * ( MUC + MLU ) ) * ( ( RMSe + RRSe ) / Min( MUM ,MUM ) ) ) ),( Max( Max( Min( RMSe ,MUM ),( MUR / MUM ) ),( ( RCSe - RCSe ) / ( DS * DS ) ) ) + ( ( Max( MUR,RMSe ) + ( MLU + MUM ) ) - ( ( MUR / CS ) - ( MUM * DS ) ) ) ) ) / ( Max( ( ( ( DS - DS ) / ( MUC * DS ) ) + Max( ( RRSe - MUC ),( DS + MUR ) ) ),( ( Max( RRSe,RRSe ) + ( RCSe - MLU ) ) * ( ( RMSe / DS ) - Max( MUR,DS ) ) ) ) + Min( Max( ( ( DS * MUR ) * Max( DS,MUM ) ),( ( MUC - MUM ) / Min( MUM ,RMSe ) ) ) ,( Max( ( MUR + MUC ),( MUC * MUM ) ) / ( ( RMSe * DS ) + ( MUM * RCSe ) ) ) ) ) ) ) + ( Min( Max( ( ( ( ( MUC - MUC ) - ( DS / CS ) ) - ( ( MLU * DS ) * ( CS + RMSe ) ) ) / ( Min( ( CS + RCSe ) ,( RCSe + MUM ) ) * ( ( MUC - DS ) / ( MUR / RMSe ) ) ) ),( Min( ( Min( MUM ,RMSe ) + ( MUM + RMSe ) ) ,( Min( MUC ,RRSe ) - ( RRSe * DS ) ) ) * ( Min( ( CS - RRSe ) ,( DS - MLU ) ) - ( ( MLU * RCSe ) * ( MUR * DS ) ) ) ) ) ,( Min( ( ( ( MUC + MUM ) - ( CS - CS ) ) - ( ( RRSe / MUR ) + ( CS + CS ) ) ) ,( Min( ( DS + MUR ) ,( MLU - MUR ) ) - ( ( MUM / RRSe ) + ( RCSe - MLU ) ) ) ) + ( ( ( ( RRSe * RMSe ) * Min( MUM ,RRSe ) ) + Min( Min( MUR ,MUC ) ,Max( RMSe,MUM ) ) ) + ( ( Min( DS ,MUM ) + ( MUC / RCSe ) ) / ( Max( RRSe,RMSe ) - ( MLU / MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS * RCSe ) / Max( MUC,MUM ) ) + Max( ( MUC - MLU ),Min( RRSe ,MUR ) ) ) - ( Max( ( RMSe - MUC ),( RRSe + MUC ) ) - ( ( RRSe / RMSe ) + ( CS + DS ) ) ) ) * ( Max( ( ( RRSe + RCSe ) / ( MLU + MUM ) ),( ( CS + DS ) / Min( DS ,CS ) ) ) * ( Max( ( MUR / CS ),( MLU - RRSe ) ) / ( ( DS + MUC ) * Min( MLU ,CS ) ) ) ) ) - ( ( ( ( Min( RMSe ,RRSe ) * ( RMSe / MLU ) ) - Min( ( MUM - MUM ) ,( RMSe * RRSe ) ) ) - ( ( ( RMSe - DS ) + ( RMSe + MUR ) ) / ( ( RRSe + MUC ) * Max( RRSe,MUC ) ) ) ) * Max( ( ( ( CS + MUC ) * ( MUM / MUC ) ) / ( Max( RCSe,RMSe ) - ( RCSe * RCSe ) ) ),( Max( ( RMSe * MUR ),( RMSe / CS ) ) * Min( ( MUM + RRSe ) ,( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.47924528301886793, "obj2": 0.43683247438398004}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( ( MDR + MDR ) - ( FirstVNF_CPU_Server / ACS ) ) ) + MDR ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( Min( CS ,RCSe ) / ( RCSe - ( MUR + MUR ) ) ) * Max( RCSe,RCSe ) )", "obj1": 0.4037735849056604, "obj2": 0.4831395493039117}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "Min( ( FirstVNF_Mem_Server - DDR ) ,Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUC - MUM ) * ( MLU + ( RCSe + RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.5996006556688608}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ARS / ACS ) )", "choosing": "( ( MUR + MUR ) * ( ( RCSe + MUR ) + ( ( ( MUR + MUR ) * Min( MUM ,RCSe ) ) * RMSe ) ) )", "obj1": 0.5113207547169811, "obj2": 0.4147038334266911}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "Max( Max( Const,PN ),( RRS * ( RRS + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RCSe ) + ( MUM * DS ) )", "obj1": 0.7226415094339622, "obj2": 0.20770053522665605}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( DS * Max( RCSe,RCSe ) )", "obj1": 0.7452830188679245, "obj2": 0.19695234976623394}, {"determining": "Max( Max( Const,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.3867924528301887, "obj2": 0.49371507414803867}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + FirstVNF_RAM ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.5547169811320755, "obj2": 0.3870727274736919}, {"determining": "( Min( ( ( MRS * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( RMSe ,RCSe ),MLU ) ) )", "obj1": 0.2811320754716981, "obj2": 0.6362855594913694}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5801787664883004}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server )", "choosing": "( Min( Max( RCSe,RCSe ) ,RCSe ) / ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) )", "obj1": 0.27358490566037735, "obj2": 0.6445910953263124}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,Min( PN ,PN ) ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( PN ,RRS ) ) )", "choosing": "Max( ( ( MUC * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * ( MUC - MUM ) ) )", "obj1": 0.44339622641509435, "obj2": 0.45851311855433635}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) ),MLU ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6650507818800275}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5018867924528302, "obj2": 0.42673817232511374}, {"determining": "( ( MDR + FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( RRS / ARS ) ) )", "choosing": "( ( MUR + MUM ) * DS )", "obj1": 0.7094339622641509, "obj2": 0.21879222806857607}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,( MRS + MRS ) ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( Max( ( ( ( MUR + DS ) * ( DS - RRSe ) ) - DS ),( MUC / DS ) ) / Max( RRSe,CS ) ) )", "obj1": 0.11886792452830189, "obj2": 0.7596348515851185}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "Min( MDR ,( MRS - MRS ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.3320754716981132, "obj2": 0.5581467385731125}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( FirstVNF_RAM / CRS ) * Min( RRS ,RRS ) ) ) ) ,( MRS / FirstVNF_RAM ) )", "choosing": "( ( MUC + MUM ) * MLU )", "obj1": 0.469811320754717, "obj2": 0.45768139932705515}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUC - MUM ) * ( MLU * ( MUM / DS ) ) )", "obj1": 0.25849056603773585, "obj2": 0.6589860369400369}, {"determining": "( ( ARS / ACS ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( MUR + MUR ) * Min( MUM ,( ( RCSe + MUR ) + ( MUM * RMSe ) ) ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "( Max( BR,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + RMSe ) - Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + ( ( RMSe / MUR ) - ( DS - MLU ) ) ) ) )", "obj1": 0.33584905660377357, "obj2": 0.5437171979165768}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( DS ,MUR ),( MUM - RMSe ) ) ) / ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.930188679245283, "obj2": 0.05980737152374196}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}], "7": [{"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) + ( ( MRS * RRS ) * FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) + MDR ) )", "choosing": "( ( ( Min( CS ,RCSe ) / ( RCSe - ( MUR + RCSe ) ) ) * Max( RCSe,RCSe ) ) * Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_CPU ) - Min( ( FirstVNF_CPU / AMS ) ,MDR ) )", "choosing": "( Min( MUC ,MUR ) * ( ( ( ( Max( ( ( MUC / MLU ) / Max( MLU,RRSe ) ),MUM ) - DS ) / ( ( MLU / MUM ) - MUR ) ) / CS ) * ( ( ( ( Min( ( DS / MLU ) ,( MLU + MLU ) ) / ( MUR * RRSe ) ) / ( Min( ( MLU + MUM ) ,MLU ) / MUM ) ) / MUR ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( ( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_CPU + DDR ) ) * DDR ) - ( DDR - PN ) )", "choosing": "( MUM - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8169811320754717, "obj2": 0.08826484962136517}, {"determining": "( Min( ( ( ( ( Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( ( FirstVNF_RAM / BR ) * ( DDR + FirstVNF_RAM_Server ) ) ) + Min( Max( Min( CRS ,CRS ),( PN * BR ) ) ,( ( CRS + BR ) + ( Const - Const ) ) ) ) / ( Max( ( Max( PN,ACS ) * Min( BR ,FirstVNF_CPU_Server ) ),( ( MDR + Const ) / ( ACS - MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( AMS ,Const ) ) ,( ( FirstVNF_Mem - ACS ) - Min( MRS ,MDR ) ) ) ) ) - Min( Min( ( Min( Min( FirstVNF_RAM_Server ,MRS ) ,Min( Const ,FirstVNF_CPU_Server ) ) * ( ( PN - Const ) / Min( FirstVNF_Mem_Server ,BR ) ) ) ,( ( ( BR * MRS ) - Max( AMS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + Max( RRS,CRS ) ) ) ) ,Max( Min( Max( Max( RRS,Const ),( BR * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,ARS ) * Max( AMS,BR ) ) ),Max( ( ( CRS / FirstVNF_Mem_Server ) - ( RRS / FirstVNF_RAM ) ),( ( CRS * AMS ) * ( AMS + Const ) ) ) ) ) ) ,( Min( Max( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_RAM_Server - RRS ) ,Max( DDR,FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * ( RRS * ACS ) ),Min( ( RRS * BR ) ,( MDR + PN ) ) ) ) ,( Min( ( Max( MRS,ACS ) / ( FirstVNF_RAM - DDR ) ) ,Max( ( ACS * PN ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( ( ( CRS + RRS ) - ( Const / FirstVNF_Mem ) ) - Max( Min( MRS ,CRS ),Max( Const,DDR ) ) ) ) ) * ( ( Max( ( ( BR + FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_CPU_Server ) ),Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_Mem_Server / Const ) + ( CRS + MDR ) ) ,( Min( ARS ,PN ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU / MDR ) ) / ( ( Const * PN ) / Max( FirstVNF_CPU_Server,PN ) ) ),( ( ( ARS * FirstVNF_RAM ) / ( BR + FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - BR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) ) * Max( ( ( Min( Min( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM - ACS ) ) ,Min( ( MRS + CRS ) ,( ARS * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * ( CRS * Const ) ) - Min( ( RRS / DDR ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) / ( Max( ( ( FirstVNF_RAM - FirstVNF_Mem ) + ( CRS / ACS ) ),( ( AMS / RRS ) + ( RRS + FirstVNF_RAM_Server ) ) ) * Max( ( ( DDR * FirstVNF_CPU ) * Max( MDR,PN ) ),( ( FirstVNF_Mem_Server * ACS ) + Min( DDR ,AMS ) ) ) ) ) / ( Max( Max( ( Min( BR ,ARS ) * Min( Const ,DDR ) ),Max( ( MDR + PN ),Max( BR,FirstVNF_RAM ) ) ),( ( Min( MRS ,AMS ) - ( Const + FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * Max( ACS,ARS ) ) ) ) / ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / Max( Min( MRS ,ACS ),( FirstVNF_RAM_Server / AMS ) ) ) - ( ( ( AMS * MDR ) / ( AMS + AMS ) ) / ( ( MDR - FirstVNF_CPU ) + ( MDR + MRS ) ) ) ) ) ),Max( ( ( ( Max( Max( MDR,RRS ),( AMS - FirstVNF_RAM ) ) / Min( ( Const - FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) / Min( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Max( Const,MDR ) ) ,( ( BR + FirstVNF_CPU ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - ( ( Max( ( MRS * Const ),( FirstVNF_RAM / DDR ) ) * ( ( BR * Const ) - Min( Const ,MRS ) ) ) / ( ( ( PN - MDR ) * ( FirstVNF_CPU_Server - PN ) ) + Max( Min( MRS ,MRS ),Min( MRS ,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,CRS ) ) + Min( Max( ARS,FirstVNF_Mem_Server ) ,( Const + AMS ) ) ) - ( ( ( FirstVNF_Mem * ACS ) / Min( DDR ,FirstVNF_CPU_Server ) ) + Min( ( AMS * FirstVNF_Mem_Server ) ,( RRS - MDR ) ) ) ) + Min( ( ( ( AMS + DDR ) - ( FirstVNF_CPU_Server + Const ) ) - Min( Min( FirstVNF_Mem_Server ,PN ) ,( BR * FirstVNF_CPU_Server ) ) ) ,Max( Max( Max( ARS,FirstVNF_Mem ),( FirstVNF_CPU_Server - AMS ) ),( ( MDR / FirstVNF_RAM ) + Min( AMS ,PN ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) / ( CS + MUC ) )", "obj1": 0.8905660377358491, "obj2": 0.08088517263405544}, {"determining": "Max( Max( Const,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.4320754716981132, "obj2": 0.4332257449795565}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( ( ( MRS * RRS ) * Const ) ,Const ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MUR + RCSe ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.7118686779362059}, {"determining": "( Min( Min( DDR ,( Const + ( CRS - FirstVNF_RAM ) ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.1538595165714605}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5018867924528302, "obj2": 0.42673817232511374}, {"determining": "( ( FirstVNF_CPU_Server + ( MDR + MDR ) ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( DS * Max( RCSe,RCSe ) ) )", "obj1": 0.6528301886792452, "obj2": 0.26949877834607555}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) * ( ( RRSe * DS ) * Min( MUC ,MLU ) ) ) )", "obj1": 0.6792452830188679, "obj2": 0.24756585082107915}, {"determining": "( ( Const + FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ,MLU ) ) )", "obj1": 0.7471698113207547, "obj2": 0.1813803594432906}, {"determining": "( ( MDR + AMS ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( DS - CS ) * Max( MUC,RRSe ) )", "obj1": 0.4188679245283019, "obj2": 0.46943392062196193}, {"determining": "( ( MDR + MDR ) - Max( Const,PN ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,MUM ) )", "obj1": 0.969811320754717, "obj2": 0.034991552713434376}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ARS / ACS ) )", "choosing": "( ( MUR + MUR ) * ( ( RCSe + MUR ) + ( ( ( MUR + MUR ) * Min( MUM ,RCSe ) ) * RMSe ) ) )", "obj1": 0.5113207547169811, "obj2": 0.4147038334266911}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.5339622641509434, "obj2": 0.3881618724773139}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + Const ) ) - DDR ) ,( MRS + DDR ) )", "choosing": "( ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) * ( MLU * ( MUM / RCSe ) ) )", "obj1": 0.6056603773584905, "obj2": 0.3170970091728598}, {"determining": "Min( ( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUC ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) ) - MUM ) * ( MLU + CS ) )", "obj1": 0.22075471698113208, "obj2": 0.6680018670426638}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.6320754716981132, "obj2": 0.29054930782221505}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "Max( Max( Const,PN ),( RRS * ( RRS + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RCSe ) + ( MUM * DS ) )", "obj1": 0.7226415094339622, "obj2": 0.20770053522665605}, {"determining": "Min( ( FirstVNF_Mem_Server - DDR ) ,Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUC - MUM ) * ( MLU + ( RCSe + RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.5996006556688608}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Max( Max( Const,PN ),( RRS * ( RRS / ARS ) ) ) + ARS ) )", "choosing": "( ( DS - CS ) * Max( MUC,DS ) )", "obj1": 0.39811320754716983, "obj2": 0.4765569179674173}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( RCSe - MUM ) )", "obj1": 0.9226415094339623, "obj2": 0.06313049610404582}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( DS * Max( RCSe,RCSe ) )", "obj1": 0.7452830188679245, "obj2": 0.19695234976623394}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + FirstVNF_RAM ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.5547169811320755, "obj2": 0.3870727274736919}, {"determining": "Max( ( PN + FirstVNF_CPU ),( RRS + ARS ) )", "choosing": "( ( RCSe - CS ) * ( ( MUR + MUR ) * ( ( RCSe + MUR ) + ( MUM * RMSe ) ) ) )", "obj1": 0.3641509433962264, "obj2": 0.5155088596937952}, {"determining": "( Min( ( ( MRS * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( RMSe ,RCSe ),MLU ) ) )", "obj1": 0.2811320754716981, "obj2": 0.6362855594913694}, {"determining": "Max( Max( Const,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.3867924528301887, "obj2": 0.49371507414803867}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5801787664883004}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server )", "choosing": "( Min( Max( RCSe,RCSe ) ,RCSe ) / ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) )", "obj1": 0.27358490566037735, "obj2": 0.6445910953263124}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.3584905660377358, "obj2": 0.530544908900366}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) ),MLU ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6650507818800275}, {"determining": "Max( Max( Const,PN ),Max( ( PN + FirstVNF_CPU ),( Const + ARS ) ) )", "choosing": "( ( ( ( RCSe - CS ) * Max( MUC,DS ) ) - CS ) * Max( MUC,DS ) )", "obj1": 0.3754716981132076, "obj2": 0.5005566768344832}, {"determining": "( ( AMS / ACS ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( DS * Max( RCSe,RCSe ) ) * Max( RCSe,RCSe ) )", "obj1": 0.7037735849056603, "obj2": 0.21791750615363908}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,( MRS + MRS ) ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( Max( ( ( ( MUR + DS ) * ( DS - RRSe ) ) - DS ),( MUC / DS ) ) / Max( RRSe,CS ) ) )", "obj1": 0.11886792452830189, "obj2": 0.7596348515851185}, {"determining": "( ACS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MUR ) + MUR ) * Min( MUM ,RCSe ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUC - MUM ) * ( MLU * ( MUM / DS ) ) )", "obj1": 0.25849056603773585, "obj2": 0.6589860369400369}, {"determining": "Max( ( Min( FirstVNF_Mem ,Const ) + FirstVNF_CPU ),( Const / ARS ) )", "choosing": "( ( DS - CS ) * MUM )", "obj1": 0.33773584905660375, "obj2": 0.5341811198102684}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}], "8": [{"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( FirstVNF_Mem * Const ) ) + MDR ) - ( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( FirstVNF_Mem * Const ) ) + MDR ) + MDR ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RCSe - ( ( Max( CS,RCSe ) / ( RCSe - MUM ) ) * Max( RCSe,RCSe ) ) ) ) * Max( RCSe,RCSe ) ) * Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) + ( ( MRS * RRS ) * FirstVNF_RAM ) ) - ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) + MDR ) )", "choosing": "( ( ( Min( CS ,RCSe ) / ( RCSe - ( MUR + RCSe ) ) ) * Max( RCSe,RCSe ) ) * Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( ( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_CPU + DDR ) ) * DDR ) - ( DDR - PN ) )", "choosing": "( MUM - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8169811320754717, "obj2": 0.08826484962136517}, {"determining": "( Min( ( ( ( ( Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( ( FirstVNF_RAM / BR ) * ( DDR + FirstVNF_RAM_Server ) ) ) + Min( Max( Min( CRS ,CRS ),( PN * BR ) ) ,( ( CRS + BR ) + ( Const - Const ) ) ) ) / ( Max( ( Max( PN,ACS ) * Min( BR ,FirstVNF_CPU_Server ) ),( ( MDR + Const ) / ( ACS - MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( AMS ,Const ) ) ,( ( FirstVNF_Mem - ACS ) - Min( MRS ,MDR ) ) ) ) ) - Min( Min( ( Min( Min( FirstVNF_RAM_Server ,MRS ) ,Min( Const ,FirstVNF_CPU_Server ) ) * ( ( PN - Const ) / Min( FirstVNF_Mem_Server ,BR ) ) ) ,( ( ( BR * MRS ) - Max( AMS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + Max( RRS,CRS ) ) ) ) ,Max( Min( Max( Max( RRS,Const ),( BR * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,ARS ) * Max( AMS,BR ) ) ),Max( ( ( CRS / FirstVNF_Mem_Server ) - ( RRS / FirstVNF_RAM ) ),( ( CRS * AMS ) * ( AMS + Const ) ) ) ) ) ) ,( Min( Max( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_RAM_Server - RRS ) ,Max( DDR,FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * ( RRS * ACS ) ),Min( ( RRS * BR ) ,( MDR + PN ) ) ) ) ,( Min( ( Max( MRS,ACS ) / ( FirstVNF_RAM - DDR ) ) ,Max( ( ACS * PN ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( ( ( CRS + RRS ) - ( Const / FirstVNF_Mem ) ) - Max( Min( MRS ,CRS ),Max( Const,DDR ) ) ) ) ) * ( ( Max( ( ( BR + FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_CPU_Server ) ),Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_Mem_Server / Const ) + ( CRS + MDR ) ) ,( Min( ARS ,PN ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU / MDR ) ) / ( ( Const * PN ) / Max( FirstVNF_CPU_Server,PN ) ) ),( ( ( ARS * FirstVNF_RAM ) / ( BR + FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - BR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) ) * Max( ( ( Min( Min( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM - ACS ) ) ,Min( ( MRS + CRS ) ,( ARS * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * ( CRS * Const ) ) - Min( ( RRS / DDR ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) / ( Max( ( ( FirstVNF_RAM - FirstVNF_Mem ) + ( CRS / ACS ) ),( ( AMS / RRS ) + ( RRS + FirstVNF_RAM_Server ) ) ) * Max( ( ( DDR * FirstVNF_CPU ) * Max( MDR,PN ) ),( ( FirstVNF_Mem_Server * ACS ) + Min( DDR ,AMS ) ) ) ) ) / ( Max( Max( ( Min( BR ,ARS ) * Min( Const ,DDR ) ),Max( ( MDR + PN ),Max( BR,FirstVNF_RAM ) ) ),( ( Min( MRS ,AMS ) - ( Const + FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * Max( ACS,ARS ) ) ) ) / ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / Max( Min( MRS ,ACS ),( FirstVNF_RAM_Server / AMS ) ) ) - ( ( ( AMS * MDR ) / ( AMS + AMS ) ) / ( ( MDR - FirstVNF_CPU ) + ( MDR + MRS ) ) ) ) ) ),Max( ( ( ( Max( Max( MDR,RRS ),( AMS - FirstVNF_RAM ) ) / Min( ( Const - FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) / Min( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Max( Const,MDR ) ) ,( ( BR + FirstVNF_CPU ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - ( ( Max( ( MRS * Const ),( FirstVNF_RAM / DDR ) ) * ( ( BR * Const ) - Min( Const ,MRS ) ) ) / ( ( ( PN - MDR ) * ( FirstVNF_CPU_Server - PN ) ) + Max( Min( MRS ,MRS ),Min( MRS ,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,CRS ) ) + Min( Max( ARS,FirstVNF_Mem_Server ) ,( Const + AMS ) ) ) - ( ( ( FirstVNF_Mem * ACS ) / Min( DDR ,FirstVNF_CPU_Server ) ) + Min( ( AMS * FirstVNF_Mem_Server ) ,( RRS - MDR ) ) ) ) + Min( ( ( ( AMS + DDR ) - ( FirstVNF_CPU_Server + Const ) ) - Min( Min( FirstVNF_Mem_Server ,PN ) ,( BR * FirstVNF_CPU_Server ) ) ) ,Max( Max( Max( ARS,FirstVNF_Mem ),( FirstVNF_CPU_Server - AMS ) ),( ( MDR / FirstVNF_RAM ) + Min( AMS ,PN ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) / ( CS + MUC ) )", "obj1": 0.8905660377358491, "obj2": 0.08088517263405544}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( ( ( MRS * RRS ) * Const ) ,Const ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MUR + RCSe ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.7118686779362059}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) - ( FirstVNF_Mem * Const ) ) + MDR ) - ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) + MDR ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RCSe - MUM ) ) * RCSe ) * Max( RCSe,RCSe ) )", "obj1": 0.5339622641509434, "obj2": 0.38480858073166757}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "( ( FirstVNF_CPU_Server + ( MDR + MDR ) ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( DS * Max( RCSe,RCSe ) ) )", "obj1": 0.6528301886792452, "obj2": 0.26949877834607555}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( RCSe - MUM ) )", "obj1": 0.9226415094339623, "obj2": 0.06313049610404582}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) * ( ( RRSe * DS ) * Min( MUC ,MLU ) ) ) )", "obj1": 0.6792452830188679, "obj2": 0.24756585082107915}, {"determining": "( Min( Min( DDR ,( Const + ( CRS - FirstVNF_RAM ) ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.1538595165714605}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) ) ) ) + ( MUM * RMSe ) )", "obj1": 0.49433962264150944, "obj2": 0.42305810228831153}, {"determining": "Max( Max( Const,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.4320754716981132, "obj2": 0.4332257449795565}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + Const ) ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( CS + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4543853875683642}, {"determining": "( ( MDR + MDR ) - Max( Const,PN ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,MUM ) )", "obj1": 0.969811320754717, "obj2": 0.034991552713434376}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Max( Max( Const,PN ),( RRS * ( RRS / ARS ) ) ) + ARS ) )", "choosing": "( ( DS - CS ) * Max( MUC,DS ) )", "obj1": 0.39811320754716983, "obj2": 0.4765569179674173}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "Min( MDR ,( MRS + MRS ) )", "choosing": "Max( ( ( ( MUR + DS ) * ( DS - RRSe ) ) - DS ),DS )", "obj1": 0.7641509433962265, "obj2": 0.17737773647446994}, {"determining": "Min( ( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUC ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) ) - MUM ) * ( MLU + CS ) )", "obj1": 0.22075471698113208, "obj2": 0.6680018670426638}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR + MUR ) * MUR )", "obj1": 0.630188679245283, "obj2": 0.2888189190488169}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ARS / ACS ) )", "choosing": "( ( MUR + MUR ) * ( ( RCSe + MUR ) + ( ( ( MUR + MUR ) * Min( MUM ,RCSe ) ) * RMSe ) ) )", "obj1": 0.5113207547169811, "obj2": 0.4147038334266911}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Const + ARS ) )", "choosing": "( ( MUR + MUR ) * Min( RCSe ,DS ) )", "obj1": 0.7188679245283018, "obj2": 0.2068206663796216}, {"determining": "Min( ( FirstVNF_Mem_Server - DDR ) ,Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUC - MUM ) * ( MLU + ( RCSe + RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.5996006556688608}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( DS * Max( RCSe,RCSe ) )", "obj1": 0.7452830188679245, "obj2": 0.19695234976623394}, {"determining": "Max( ( PN + ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ),( Const + ARS ) )", "choosing": "( ( ( RCSe - MUM ) - CS ) * Max( MUC,RRSe ) )", "obj1": 0.33584905660377357, "obj2": 0.54484835637389}, {"determining": "Max( Max( Const,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.3867924528301887, "obj2": 0.49371507414803867}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server )", "choosing": "( Min( Max( RCSe,RCSe ) ,RCSe ) / ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) )", "obj1": 0.27358490566037735, "obj2": 0.6445910953263124}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + Const ) ) - DDR ) ,( MRS + DDR ) )", "choosing": "( ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) * ( MLU * ( MUM / RCSe ) ) )", "obj1": 0.6056603773584905, "obj2": 0.3170970091728598}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server )", "choosing": "( Min( RCSe ,RCSe ) / ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) )", "obj1": 0.2811320754716981, "obj2": 0.6334958481589121}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "( Min( ( RCSe + RMSe ) ,Min( MUC ,RCSe ) ) / ( Min( CS ,RCSe ) - ( MLU + MLU ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5801787664883004}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( MUR + MUR ) * Min( ( MUR + MUR ) ,RCSe ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}, {"determining": "Max( ( PN + FirstVNF_CPU ),( RRS + ARS ) )", "choosing": "( ( RCSe - CS ) * ( ( MUR + MUR ) * ( ( RCSe + MUR ) + ( MUM * RMSe ) ) ) )", "obj1": 0.3641509433962264, "obj2": 0.5155088596937952}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) ),MLU ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6650507818800275}, {"determining": "Max( Max( Const,PN ),( RRS * ( ( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) / ARS ) ) )", "choosing": "( ( DS - CS ) * RMSe )", "obj1": 0.37169811320754714, "obj2": 0.49935584406658695}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11886792452830189, "obj2": 0.755341421564537}, {"determining": "( ( AMS / ACS ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( DS * Max( RCSe,RCSe ) ) * Max( RCSe,RCSe ) )", "obj1": 0.7037735849056603, "obj2": 0.21791750615363908}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUC - MUM ) * ( MLU * ( MUM / DS ) ) )", "obj1": 0.25849056603773585, "obj2": 0.6589860369400369}, {"determining": "( ( Const + FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ,MLU ) ) )", "obj1": 0.7471698113207547, "obj2": 0.1813803594432906}, {"determining": "Max( ( Min( FirstVNF_Mem ,Const ) + FirstVNF_CPU ),( Const / ARS ) )", "choosing": "( ( DS - CS ) * MUM )", "obj1": 0.33773584905660375, "obj2": 0.5341811198102684}], "9": [{"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( ( RCSe + MUM ) + ( MUM * RCSe ) ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( FirstVNF_Mem * Const ) ) + MDR ) - ( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( FirstVNF_Mem * Const ) ) + MDR ) + MDR ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RCSe - ( ( Max( CS,RCSe ) / ( RCSe - MUM ) ) * Max( RCSe,RCSe ) ) ) ) * Max( RCSe,RCSe ) ) * Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( ( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_CPU + DDR ) ) * DDR ) - ( DDR - PN ) )", "choosing": "( MUM - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8169811320754717, "obj2": 0.08826484962136517}, {"determining": "( Min( ( ( ( ( Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( ( FirstVNF_RAM / BR ) * ( DDR + FirstVNF_RAM_Server ) ) ) + Min( Max( Min( CRS ,CRS ),( PN * BR ) ) ,( ( CRS + BR ) + ( Const - Const ) ) ) ) / ( Max( ( Max( PN,ACS ) * Min( BR ,FirstVNF_CPU_Server ) ),( ( MDR + Const ) / ( ACS - MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( AMS ,Const ) ) ,( ( FirstVNF_Mem - ACS ) - Min( MRS ,MDR ) ) ) ) ) - Min( Min( ( Min( Min( FirstVNF_RAM_Server ,MRS ) ,Min( Const ,FirstVNF_CPU_Server ) ) * ( ( PN - Const ) / Min( FirstVNF_Mem_Server ,BR ) ) ) ,( ( ( BR * MRS ) - Max( AMS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + Max( RRS,CRS ) ) ) ) ,Max( Min( Max( Max( RRS,Const ),( BR * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,ARS ) * Max( AMS,BR ) ) ),Max( ( ( CRS / FirstVNF_Mem_Server ) - ( RRS / FirstVNF_RAM ) ),( ( CRS * AMS ) * ( AMS + Const ) ) ) ) ) ) ,( Min( Max( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_RAM_Server - RRS ) ,Max( DDR,FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * ( RRS * ACS ) ),Min( ( RRS * BR ) ,( MDR + PN ) ) ) ) ,( Min( ( Max( MRS,ACS ) / ( FirstVNF_RAM - DDR ) ) ,Max( ( ACS * PN ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( ( ( CRS + RRS ) - ( Const / FirstVNF_Mem ) ) - Max( Min( MRS ,CRS ),Max( Const,DDR ) ) ) ) ) * ( ( Max( ( ( BR + FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_CPU_Server ) ),Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_Mem_Server / Const ) + ( CRS + MDR ) ) ,( Min( ARS ,PN ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU / MDR ) ) / ( ( Const * PN ) / Max( FirstVNF_CPU_Server,PN ) ) ),( ( ( ARS * FirstVNF_RAM ) / ( BR + FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - BR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) ) * Max( ( ( Min( Min( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM - ACS ) ) ,Min( ( MRS + CRS ) ,( ARS * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * ( CRS * Const ) ) - Min( ( RRS / DDR ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) / ( Max( ( ( FirstVNF_RAM - FirstVNF_Mem ) + ( CRS / ACS ) ),( ( AMS / RRS ) + ( RRS + FirstVNF_RAM_Server ) ) ) * Max( ( ( DDR * FirstVNF_CPU ) * Max( MDR,PN ) ),( ( FirstVNF_Mem_Server * ACS ) + Min( DDR ,AMS ) ) ) ) ) / ( Max( Max( ( Min( BR ,ARS ) * Min( Const ,DDR ) ),Max( ( MDR + PN ),Max( BR,FirstVNF_RAM ) ) ),( ( Min( MRS ,AMS ) - ( Const + FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * Max( ACS,ARS ) ) ) ) / ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / Max( Min( MRS ,ACS ),( FirstVNF_RAM_Server / AMS ) ) ) - ( ( ( AMS * MDR ) / ( AMS + AMS ) ) / ( ( MDR - FirstVNF_CPU ) + ( MDR + MRS ) ) ) ) ) ),Max( ( ( ( Max( Max( MDR,RRS ),( AMS - FirstVNF_RAM ) ) / Min( ( Const - FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) / Min( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Max( Const,MDR ) ) ,( ( BR + FirstVNF_CPU ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - ( ( Max( ( MRS * Const ),( FirstVNF_RAM / DDR ) ) * ( ( BR * Const ) - Min( Const ,MRS ) ) ) / ( ( ( PN - MDR ) * ( FirstVNF_CPU_Server - PN ) ) + Max( Min( MRS ,MRS ),Min( MRS ,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,CRS ) ) + Min( Max( ARS,FirstVNF_Mem_Server ) ,( Const + AMS ) ) ) - ( ( ( FirstVNF_Mem * ACS ) / Min( DDR ,FirstVNF_CPU_Server ) ) + Min( ( AMS * FirstVNF_Mem_Server ) ,( RRS - MDR ) ) ) ) + Min( ( ( ( AMS + DDR ) - ( FirstVNF_CPU_Server + Const ) ) - Min( Min( FirstVNF_Mem_Server ,PN ) ,( BR * FirstVNF_CPU_Server ) ) ) ,Max( Max( Max( ARS,FirstVNF_Mem ),( FirstVNF_CPU_Server - AMS ) ),( ( MDR / FirstVNF_RAM ) + Min( AMS ,PN ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) / ( CS + MUC ) )", "obj1": 0.8905660377358491, "obj2": 0.08088517263405544}, {"determining": "( ( BR * FirstVNF_Mem ) - ( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,RRSe ) )", "obj1": 0.5943396226415094, "obj2": 0.2868994362662629}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( ( ( MRS * RRS ) * Const ) ,Const ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MUR + RCSe ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.7118686779362059}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) - ( FirstVNF_Mem * Const ) ) + MDR ) - ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) + MDR ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RCSe - MUM ) ) * RCSe ) * Max( RCSe,RCSe ) )", "obj1": 0.5339622641509434, "obj2": 0.38480858073166757}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( RCSe - MUM ) )", "obj1": 0.9226415094339623, "obj2": 0.06313049610404582}, {"determining": "( Min( Min( DDR ,( Const + ( CRS - FirstVNF_RAM ) ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.1538595165714605}, {"determining": "( ( FirstVNF_CPU_Server + ( MDR + MDR ) ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( DS * Max( RCSe,RCSe ) ) )", "obj1": 0.6528301886792452, "obj2": 0.26949877834607555}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( MDR + MDR ) - Max( Const,PN ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,MUM ) )", "obj1": 0.969811320754717, "obj2": 0.034991552713434376}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ARS / ACS ) )", "choosing": "( ( MUR + MUR ) * ( ( RCSe + MUR ) + ( ( ( MUR + MUR ) * Min( MUM ,RCSe ) ) * RMSe ) ) )", "obj1": 0.5113207547169811, "obj2": 0.4147038334266911}, {"determining": "Min( ( FirstVNF_Mem_Server - DDR ) ,Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUC - MUM ) * ( MLU + ( RCSe + RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.5996006556688608}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( MUR + MUR ) * Min( ( MUR + MUR ) ,RCSe ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "Max( Max( ARS,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,Max( MUC,RRSe ) ) )", "obj1": 0.3622641509433962, "obj2": 0.5103621242325336}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( PN ,Const ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) )", "obj1": 0.47358490566037736, "obj2": 0.42679834509290987}, {"determining": "Min( MDR ,( MRS + MRS ) )", "choosing": "Max( ( ( ( MUR + DS ) * ( DS - RRSe ) ) - DS ),DS )", "obj1": 0.7641509433962265, "obj2": 0.17737773647446994}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "Min( ( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUC ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) ) - MUM ) * ( MLU + CS ) )", "obj1": 0.22075471698113208, "obj2": 0.6680018670426638}, {"determining": "( ( BR * FirstVNF_Mem ) - ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( ( ( CS - CS ) * Max( MUC,RRSe ) ) - CS ) * Max( MUC,RRSe ) )", "obj1": 0.30943396226415093, "obj2": 0.5628165268635293}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Max( Max( Const,PN ),( RRS * ( RRS / ARS ) ) ) + ARS ) )", "choosing": "( ( DS - CS ) * Max( MUC,DS ) )", "obj1": 0.39811320754716983, "obj2": 0.4765569179674173}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "Max( ( Min( FirstVNF_Mem ,Const ) + FirstVNF_CPU ),( Const / ARS ) )", "choosing": "( ( DS - CS ) * MUM )", "obj1": 0.33773584905660375, "obj2": 0.5341811198102684}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,RCSe ) * Min( MUM ,RCSe ) )", "obj1": 0.5867924528301887, "obj2": 0.3220856624591047}, {"determining": "Max( Max( Const,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.4320754716981132, "obj2": 0.4332257449795565}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) * ( ( RRSe * DS ) * Min( MUC ,MLU ) ) ) )", "obj1": 0.6792452830188679, "obj2": 0.24756585082107915}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Const + ARS ) )", "choosing": "( ( MUR + MUR ) * Min( RCSe ,DS ) )", "obj1": 0.7188679245283018, "obj2": 0.2068206663796216}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "( ( MDR + MDR ) - MDR )", "choosing": "( DS * Max( RCSe,MUR ) )", "obj1": 0.7358490566037735, "obj2": 0.1945262372676352}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + Const ) ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( CS + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4543853875683642}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) ) ) ) + ( MUM * RMSe ) )", "obj1": 0.49433962264150944, "obj2": 0.42305810228831153}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server )", "choosing": "( Min( RCSe ,RCSe ) / ( ( MUR + MUR ) * Max( RCSe,RCSe ) ) )", "obj1": 0.2811320754716981, "obj2": 0.6334958481589121}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}, {"determining": "( ( Const + FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ,MLU ) ) )", "obj1": 0.7471698113207547, "obj2": 0.1813803594432906}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) ),MLU ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6650507818800275}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS / ACS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - Min( RRSe ,( Max( RCSe,CS ) / ( RMSe / CS ) ) ) )", "obj1": 0.3264150943396226, "obj2": 0.5563319093125401}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11886792452830189, "obj2": 0.755341421564537}, {"determining": "( ( ( Max( ( Min( ( ( MRS * BR ) + ( FirstVNF_RAM_Server + DDR ) ) ,( ( MRS / FirstVNF_Mem_Server ) * Min( MDR ,PN ) ) ) * ( ( Max( Const,FirstVNF_Mem ) / ( MDR * FirstVNF_RAM_Server ) ) + ( ( PN + ACS ) * ( FirstVNF_RAM - MDR ) ) ) ),Max( ( ( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( MRS - PN ) / ( FirstVNF_Mem / PN ) ) ),( ( Max( FirstVNF_CPU,MDR ) + ( ARS + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server - ACS ) ) ) ) ) - Max( ( Max( ( Max( RRS,DDR ) + Max( BR,FirstVNF_RAM ) ),( ( AMS - FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( ARS / FirstVNF_CPU_Server ) ) + ( ( CRS + AMS ) - ( FirstVNF_RAM * Const ) ) ) ),Max( ( ( ( ARS / RRS ) - ( FirstVNF_Mem_Server - Const ) ) * ( Min( MDR ,PN ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) + ( ACS + CRS ) ) / Max( Max( CRS,RRS ),( DDR * FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( Max( Min( ( DDR - Const ) ,( FirstVNF_RAM + PN ) ),( Min( Const ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_Mem_Server ,PN ) * Min( FirstVNF_Mem_Server ,PN ) ) / ( Min( PN ,BR ) + ( RRS + FirstVNF_RAM ) ) ) ) + ( ( ( ( ACS - DDR ) * Min( Const ,RRS ) ) / ( ( MDR + ACS ) - ( CRS + DDR ) ) ) - ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Max( Const,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) - Min( ( ( ( Min( MDR ,PN ) + ( FirstVNF_Mem - BR ) ) - Min( ( FirstVNF_Mem_Server * Const ) ,Max( CRS,BR ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR - ARS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( PN / CRS ) ) ) ) ,Max( ( ( Min( MRS ,FirstVNF_CPU_Server ) - ( PN * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server / AMS ) * ( AMS + FirstVNF_Mem_Server ) ) ),( ( ( Const - FirstVNF_CPU ) - Max( PN,DDR ) ) * Min( ( MRS + RRS ) ,( FirstVNF_CPU + CRS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( MRS + PN ) / ( Const + FirstVNF_CPU ) ) - ( Max( FirstVNF_RAM,AMS ) + ( FirstVNF_RAM - RRS ) ) ) + Min( Min( ( ARS + BR ) ,Min( MRS ,FirstVNF_Mem ) ) ,( ( DDR - Const ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) * ( ( ( ( ACS * PN ) * ( AMS - Const ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( RRS - CRS ) ) ) - ( ( Max( ACS,MRS ) * ( PN / FirstVNF_CPU ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + ( BR / FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( FirstVNF_Mem_Server + Const ) * ( ACS * MDR ) ) / ( ( FirstVNF_Mem / Const ) + ( MDR + FirstVNF_Mem_Server ) ) ),Max( ( Max( FirstVNF_CPU,RRS ) + Max( PN,RRS ) ),( ( CRS + FirstVNF_CPU_Server ) + ( AMS * FirstVNF_CPU ) ) ) ),Min( ( ( Max( FirstVNF_RAM,BR ) + ( DDR - PN ) ) - ( Min( FirstVNF_Mem_Server ,AMS ) + ( MDR * DDR ) ) ) ,Min( Min( ( ARS - MDR ) ,( AMS + FirstVNF_Mem ) ) ,( Max( FirstVNF_Mem,AMS ) + Max( AMS,RRS ) ) ) ) ) ) * ( ( ( ( Min( ( CRS - CRS ) ,( ARS + FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,CRS ) * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) + ( ( Max( ARS,Const ) + Min( RRS ,FirstVNF_RAM ) ) + ( Max( DDR,BR ) - ( AMS + CRS ) ) ) ) * ( Max( Max( ( AMS * MRS ),Min( FirstVNF_RAM_Server ,ARS ) ),( Min( ARS ,FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) - ( ( ( PN * FirstVNF_RAM ) * ( RRS * CRS ) ) - Max( ( RRS / AMS ),( PN / RRS ) ) ) ) ) - ( Max( Max( ( Max( ARS,FirstVNF_RAM ) - ( MRS / AMS ) ),( ( FirstVNF_Mem / DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),( ( ( AMS + AMS ) / Min( MRS ,PN ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( CRS / Const ) ) ) ) * Max( Min( Max( ( MRS * FirstVNF_Mem ),Min( PN ,FirstVNF_Mem ) ) ,( ( DDR + FirstVNF_RAM_Server ) - Max( PN,ACS ) ) ),( Max( Min( PN ,PN ),( MRS - ARS ) ) / ( Min( FirstVNF_RAM ,AMS ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( Max( ( ( ( MUM * MUC ) - Min( RMSe ,MUC ) ) / ( ( MUM - MUM ) * ( MUM * RMSe ) ) ),( Max( ( MUC * DS ),Min( MUM ,CS ) ) / Max( ( MUM + CS ),( MLU * MUR ) ) ) ),( Min( ( ( MUM - DS ) + ( RCSe * RCSe ) ) ,( ( DS + MUR ) * Max( DS,RCSe ) ) ) * ( ( ( CS + RRSe ) * ( MLU - RMSe ) ) + ( ( MLU + RRSe ) + ( CS * MUM ) ) ) ) ) - Max( ( ( ( ( CS / RRSe ) * ( MUC * MUM ) ) / Max( ( RMSe + DS ),Min( MUC ,RRSe ) ) ) / ( ( Min( CS ,MUC ) * ( RCSe + MLU ) ) / Min( ( CS - RRSe ) ,Max( RCSe,MUM ) ) ) ),( Max( ( Max( RRSe,CS ) * ( MUM + DS ) ),Min( ( MLU - MUR ) ,( DS + MUC ) ) ) - ( ( ( MLU / MLU ) - ( DS / DS ) ) / ( ( RRSe * DS ) + Min( RCSe ,MLU ) ) ) ) ) ) - Max( ( Min( Min( Max( Max( CS,RMSe ),( RRSe / RMSe ) ) ,( ( RCSe * MUR ) + ( MUR / DS ) ) ) ,Min( ( ( CS * RMSe ) + Max( MUR,CS ) ) ,( Max( DS,RMSe ) - Min( DS ,CS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * ( RRSe / DS ) ),Min( ( DS / MUC ) ,Min( MUR ,RMSe ) ) ) + ( ( ( DS - RCSe ) + ( RRSe * MUM ) ) / ( ( RMSe * MUM ) * ( RRSe - RMSe ) ) ) ) ),( ( Min( ( ( MUC / CS ) / ( MLU - DS ) ) ,( ( RRSe * RRSe ) + ( MLU / DS ) ) ) - Max( ( ( RMSe / RMSe ) - ( MLU + MUM ) ),Max( ( MUC - MUM ),( CS - RCSe ) ) ) ) / ( Min( Max( ( RCSe + RRSe ),( RCSe - RMSe ) ) ,Max( ( MUC - MLU ),( MUM * RMSe ) ) ) - Max( ( Min( MLU ,MLU ) * ( RMSe / RMSe ) ),( ( DS * DS ) + Max( MUR,DS ) ) ) ) ) ) ) + Min( Min( Min( ( ( ( Min( RMSe ,CS ) / Max( CS,RCSe ) ) - Min( ( MUR + RMSe ) ,( DS * CS ) ) ) - ( ( Max( MLU,CS ) * ( MUR + MLU ) ) + ( ( RCSe - MLU ) * Max( RRSe,MLU ) ) ) ) ,( Min( Min( ( RMSe - MUR ) ,( MUM - DS ) ) ,( ( MUR / MUR ) * ( MLU - MUC ) ) ) * Max( Max( Max( MUC,RRSe ),( MUM / RMSe ) ),( Max( MUR,CS ) + ( MLU + DS ) ) ) ) ) ,Min( Min( ( ( ( DS / MUM ) / ( RMSe * MLU ) ) / Max( Min( RRSe ,RRSe ),Min( MUM ,MUC ) ) ) ,( Max( ( RMSe + MUC ),( CS + RCSe ) ) * ( ( MUC / RCSe ) / ( MLU + MUM ) ) ) ) ,( ( Max( Min( RRSe ,MUR ),Min( DS ,CS ) ) - Max( ( MLU * MLU ),( RRSe / MUR ) ) ) / Min( ( Max( RRSe,DS ) + ( MUM - MUM ) ) ,( ( RRSe / DS ) * ( MUC / RMSe ) ) ) ) ) ) ,( ( ( ( Min( ( MUM * RCSe ) ,Max( RMSe,DS ) ) - ( Min( MLU ,CS ) + ( CS + RMSe ) ) ) - Max( ( ( MUC - RMSe ) - ( MUM - CS ) ),( ( MUR / CS ) - ( RRSe - RMSe ) ) ) ) + ( ( Min( ( MUR + MLU ) ,( RRSe * MLU ) ) * Max( ( RRSe / MUR ),( MUC - MLU ) ) ) + ( ( ( DS / RRSe ) / ( RRSe * RRSe ) ) * ( ( RMSe - MUR ) + ( RRSe - RCSe ) ) ) ) ) - ( ( ( ( Max( MUR,RCSe ) / ( MUM * MUR ) ) + ( Min( DS ,RRSe ) + Min( MUM ,RCSe ) ) ) + ( ( Min( CS ,MUM ) + Min( CS ,RCSe ) ) * ( ( MUC - RRSe ) - ( MUR + RCSe ) ) ) ) - ( ( ( ( RRSe / CS ) - ( MLU * RCSe ) ) - ( ( CS / MUC ) - Max( CS,RRSe ) ) ) + Min( Max( ( MLU / RMSe ),( MUC / RRSe ) ) ,( ( RRSe + MUR ) - ( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.6660377358490566, "obj2": 0.2516323756025836}, {"determining": "Max( Max( Const,PN ),( RRS * ( ( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) / ARS ) ) )", "choosing": "( ( DS - CS ) * RMSe )", "obj1": 0.37169811320754714, "obj2": 0.49935584406658695}, {"determining": "( ( AMS / ACS ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( DS * Max( RCSe,RCSe ) ) * Max( RCSe,RCSe ) )", "obj1": 0.7037735849056603, "obj2": 0.21791750615363908}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "Min( MDR ,( MRS + MRS ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.42641509433962266, "obj2": 0.4523442908867226}, {"determining": "Max( ( PN + ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ),( Const + ARS ) )", "choosing": "( ( ( RCSe - MUM ) - CS ) * Max( MUC,RRSe ) )", "obj1": 0.33584905660377357, "obj2": 0.54484835637389}, {"determining": "( ( MDR + AMS ) - ( FirstVNF_CPU_Server + ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( ( MUR + MUR ) * Min( ( Min( CS ,MUM ) / ( RCSe - MUM ) ) ,DS ) )", "obj1": 0.6547169811320754, "obj2": 0.2651083044696365}], "10": [{"determining": "( ( ACS * DDR ) - FirstVNF_RAM_Server )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / MLU ) + DS ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( ( RCSe + MUM ) + ( MUM * RCSe ) ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( ( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_CPU + DDR ) ) * DDR ) - ( DDR - PN ) )", "choosing": "( MUM - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8169811320754717, "obj2": 0.08826484962136517}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_CPU ,Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) * Max( MUC,RRSe ) )", "obj1": 0.5207547169811321, "obj2": 0.35930996667108933}, {"determining": "( ( BR * FirstVNF_Mem ) - ( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,RRSe ) )", "obj1": 0.5943396226415094, "obj2": 0.2868994362662629}, {"determining": "( Min( ( ( ( ( Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( ( FirstVNF_RAM / BR ) * ( DDR + FirstVNF_RAM_Server ) ) ) + Min( Max( Min( CRS ,CRS ),( PN * BR ) ) ,( ( CRS + BR ) + ( Const - Const ) ) ) ) / ( Max( ( Max( PN,ACS ) * Min( BR ,FirstVNF_CPU_Server ) ),( ( MDR + Const ) / ( ACS - MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( AMS ,Const ) ) ,( ( FirstVNF_Mem - ACS ) - Min( MRS ,MDR ) ) ) ) ) - Min( Min( ( Min( Min( FirstVNF_RAM_Server ,MRS ) ,Min( Const ,FirstVNF_CPU_Server ) ) * ( ( PN - Const ) / Min( FirstVNF_Mem_Server ,BR ) ) ) ,( ( ( BR * MRS ) - Max( AMS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + Max( RRS,CRS ) ) ) ) ,Max( Min( Max( Max( RRS,Const ),( BR * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,ARS ) * Max( AMS,BR ) ) ),Max( ( ( CRS / FirstVNF_Mem_Server ) - ( RRS / FirstVNF_RAM ) ),( ( CRS * AMS ) * ( AMS + Const ) ) ) ) ) ) ,( Min( Max( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_RAM_Server - RRS ) ,Max( DDR,FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * ( RRS * ACS ) ),Min( ( RRS * BR ) ,( MDR + PN ) ) ) ) ,( Min( ( Max( MRS,ACS ) / ( FirstVNF_RAM - DDR ) ) ,Max( ( ACS * PN ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( ( ( CRS + RRS ) - ( Const / FirstVNF_Mem ) ) - Max( Min( MRS ,CRS ),Max( Const,DDR ) ) ) ) ) * ( ( Max( ( ( BR + FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_CPU_Server ) ),Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_Mem_Server / Const ) + ( CRS + MDR ) ) ,( Min( ARS ,PN ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU / MDR ) ) / ( ( Const * PN ) / Max( FirstVNF_CPU_Server,PN ) ) ),( ( ( ARS * FirstVNF_RAM ) / ( BR + FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - BR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) ) * Max( ( ( Min( Min( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM - ACS ) ) ,Min( ( MRS + CRS ) ,( ARS * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * ( CRS * Const ) ) - Min( ( RRS / DDR ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) / ( Max( ( ( FirstVNF_RAM - FirstVNF_Mem ) + ( CRS / ACS ) ),( ( AMS / RRS ) + ( RRS + FirstVNF_RAM_Server ) ) ) * Max( ( ( DDR * FirstVNF_CPU ) * Max( MDR,PN ) ),( ( FirstVNF_Mem_Server * ACS ) + Min( DDR ,AMS ) ) ) ) ) / ( Max( Max( ( Min( BR ,ARS ) * Min( Const ,DDR ) ),Max( ( MDR + PN ),Max( BR,FirstVNF_RAM ) ) ),( ( Min( MRS ,AMS ) - ( Const + FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * Max( ACS,ARS ) ) ) ) / ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / Max( Min( MRS ,ACS ),( FirstVNF_RAM_Server / AMS ) ) ) - ( ( ( AMS * MDR ) / ( AMS + AMS ) ) / ( ( MDR - FirstVNF_CPU ) + ( MDR + MRS ) ) ) ) ) ),Max( ( ( ( Max( Max( MDR,RRS ),( AMS - FirstVNF_RAM ) ) / Min( ( Const - FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) / Min( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Max( Const,MDR ) ) ,( ( BR + FirstVNF_CPU ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - ( ( Max( ( MRS * Const ),( FirstVNF_RAM / DDR ) ) * ( ( BR * Const ) - Min( Const ,MRS ) ) ) / ( ( ( PN - MDR ) * ( FirstVNF_CPU_Server - PN ) ) + Max( Min( MRS ,MRS ),Min( MRS ,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,CRS ) ) + Min( Max( ARS,FirstVNF_Mem_Server ) ,( Const + AMS ) ) ) - ( ( ( FirstVNF_Mem * ACS ) / Min( DDR ,FirstVNF_CPU_Server ) ) + Min( ( AMS * FirstVNF_Mem_Server ) ,( RRS - MDR ) ) ) ) + Min( ( ( ( AMS + DDR ) - ( FirstVNF_CPU_Server + Const ) ) - Min( Min( FirstVNF_Mem_Server ,PN ) ,( BR * FirstVNF_CPU_Server ) ) ) ,Max( Max( Max( ARS,FirstVNF_Mem ),( FirstVNF_CPU_Server - AMS ) ),( ( MDR / FirstVNF_RAM ) + Min( AMS ,PN ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) / ( CS + MUC ) )", "obj1": 0.8905660377358491, "obj2": 0.08088517263405544}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) )", "obj1": 0.6528301886792452, "obj2": 0.2624311111207231}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( ( ( MRS * RRS ) * Const ) ,Const ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MUR + RCSe ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.7118686779362059}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ARS / ACS ) )", "choosing": "( ( MUR + MUR ) * ( ( RCSe + MUR ) + ( ( ( MUR + MUR ) * Min( MUM ,RCSe ) ) * RMSe ) ) )", "obj1": 0.5113207547169811, "obj2": 0.4147038334266911}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Max( Max( Const,PN ),( RRS * ( RRS / ARS ) ) ) + ARS ) )", "choosing": "( ( DS - CS ) * Max( MUC,DS ) )", "obj1": 0.39811320754716983, "obj2": 0.4765569179674173}, {"determining": "( Min( Min( DDR ,( Const + ( CRS - FirstVNF_RAM ) ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.1538595165714605}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( ( MDR + MDR ) - Max( Const,PN ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,MUM ) )", "obj1": 0.969811320754717, "obj2": 0.034991552713434376}, {"determining": "Min( ( FirstVNF_Mem_Server - DDR ) ,Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUC - MUM ) * ( MLU + ( RCSe + RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.5996006556688608}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( MUR + MUR ) * Min( ( MUR + MUR ) ,RCSe ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "( ( BR * FirstVNF_Mem ) - ( FirstVNF_Mem + ( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR - MUR ) * ( DS - RRSe ) ) * Min( RCSe ,DS ) )", "obj1": 0.27169811320754716, "obj2": 0.6573452520945013}, {"determining": "Max( Max( Const,PN ),( RRS * ( ( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) / ARS ) ) )", "choosing": "( ( DS - CS ) * RMSe )", "obj1": 0.37169811320754714, "obj2": 0.49935584406658695}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( PN ,Const ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) )", "obj1": 0.47358490566037736, "obj2": 0.42679834509290987}, {"determining": "Min( MDR ,( MRS + MRS ) )", "choosing": "Max( ( ( ( MUR + DS ) * ( DS - RRSe ) ) - DS ),DS )", "obj1": 0.7641509433962265, "obj2": 0.17737773647446994}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "Min( ( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUC ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) ) - MUM ) * ( MLU + CS ) )", "obj1": 0.22075471698113208, "obj2": 0.6680018670426638}, {"determining": "( ( BR * FirstVNF_Mem ) - ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( ( ( CS - CS ) * Max( MUC,RRSe ) ) - CS ) * Max( MUC,RRSe ) )", "obj1": 0.30943396226415093, "obj2": 0.5628165268635293}, {"determining": "Max( ( ( MRS / MRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( ( MUR + RCSe ) * ( RMSe - RRSe ) ) / Max( MLU,CS ) ) )", "obj1": 0.2811320754716981, "obj2": 0.6215884429453546}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,RCSe ) * Min( MUM ,RCSe ) )", "obj1": 0.5867924528301887, "obj2": 0.3220856624591047}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.4320754716981132, "obj2": 0.4332257449795565}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) ),MLU ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6650507818800275}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) )", "obj1": 0.6735849056603773, "obj2": 0.24375949770765257}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Const + ARS ) )", "choosing": "( ( MUR + MUR ) * Min( RCSe ,DS ) )", "obj1": 0.7188679245283018, "obj2": 0.2068206663796216}, {"determining": "( ( MDR + MDR ) - MDR )", "choosing": "( DS * Max( RCSe,MUR ) )", "obj1": 0.7358490566037735, "obj2": 0.1945262372676352}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + Const ) ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( CS + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4543853875683642}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - FirstVNF_Mem )", "choosing": "( ( CS - CS ) * Max( MUC,CS ) )", "obj1": 0.9188679245283019, "obj2": 0.06522607348080821}, {"determining": "Min( Max( FirstVNF_Mem_Server,DDR ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( DS - MUM ) * ( MLU + CS ) )", "obj1": 0.3490566037735849, "obj2": 0.5245731057807178}, {"determining": "Max( Max( ARS,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,Max( MUC,RRSe ) ) )", "obj1": 0.3622641509433962, "obj2": 0.5103621242325336}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) ) ) ) + ( MUM * RMSe ) )", "obj1": 0.49433962264150944, "obj2": 0.42305810228831153}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( RCSe - MUM ) )", "obj1": 0.9226415094339623, "obj2": 0.06313049610404582}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "( ( Const + FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ,MLU ) ) )", "obj1": 0.7471698113207547, "obj2": 0.1813803594432906}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS / ACS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - Min( RRSe ,( Max( RCSe,CS ) / ( RMSe / CS ) ) ) )", "obj1": 0.3264150943396226, "obj2": 0.5563319093125401}, {"determining": "( ( AMS / ACS ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( DS * Max( RCSe,RCSe ) ) * Max( RCSe,RCSe ) )", "obj1": 0.7037735849056603, "obj2": 0.21791750615363908}, {"determining": "( ( ( Max( ( Min( ( ( MRS * BR ) + ( FirstVNF_RAM_Server + DDR ) ) ,( ( MRS / FirstVNF_Mem_Server ) * Min( MDR ,PN ) ) ) * ( ( Max( Const,FirstVNF_Mem ) / ( MDR * FirstVNF_RAM_Server ) ) + ( ( PN + ACS ) * ( FirstVNF_RAM - MDR ) ) ) ),Max( ( ( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( MRS - PN ) / ( FirstVNF_Mem / PN ) ) ),( ( Max( FirstVNF_CPU,MDR ) + ( ARS + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server - ACS ) ) ) ) ) - Max( ( Max( ( Max( RRS,DDR ) + Max( BR,FirstVNF_RAM ) ),( ( AMS - FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( ARS / FirstVNF_CPU_Server ) ) + ( ( CRS + AMS ) - ( FirstVNF_RAM * Const ) ) ) ),Max( ( ( ( ARS / RRS ) - ( FirstVNF_Mem_Server - Const ) ) * ( Min( MDR ,PN ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) + ( ACS + CRS ) ) / Max( Max( CRS,RRS ),( DDR * FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( Max( Min( ( DDR - Const ) ,( FirstVNF_RAM + PN ) ),( Min( Const ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_Mem_Server ,PN ) * Min( FirstVNF_Mem_Server ,PN ) ) / ( Min( PN ,BR ) + ( RRS + FirstVNF_RAM ) ) ) ) + ( ( ( ( ACS - DDR ) * Min( Const ,RRS ) ) / ( ( MDR + ACS ) - ( CRS + DDR ) ) ) - ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Max( Const,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) - Min( ( ( ( Min( MDR ,PN ) + ( FirstVNF_Mem - BR ) ) - Min( ( FirstVNF_Mem_Server * Const ) ,Max( CRS,BR ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR - ARS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( PN / CRS ) ) ) ) ,Max( ( ( Min( MRS ,FirstVNF_CPU_Server ) - ( PN * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server / AMS ) * ( AMS + FirstVNF_Mem_Server ) ) ),( ( ( Const - FirstVNF_CPU ) - Max( PN,DDR ) ) * Min( ( MRS + RRS ) ,( FirstVNF_CPU + CRS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( MRS + PN ) / ( Const + FirstVNF_CPU ) ) - ( Max( FirstVNF_RAM,AMS ) + ( FirstVNF_RAM - RRS ) ) ) + Min( Min( ( ARS + BR ) ,Min( MRS ,FirstVNF_Mem ) ) ,( ( DDR - Const ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) * ( ( ( ( ACS * PN ) * ( AMS - Const ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( RRS - CRS ) ) ) - ( ( Max( ACS,MRS ) * ( PN / FirstVNF_CPU ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + ( BR / FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( FirstVNF_Mem_Server + Const ) * ( ACS * MDR ) ) / ( ( FirstVNF_Mem / Const ) + ( MDR + FirstVNF_Mem_Server ) ) ),Max( ( Max( FirstVNF_CPU,RRS ) + Max( PN,RRS ) ),( ( CRS + FirstVNF_CPU_Server ) + ( AMS * FirstVNF_CPU ) ) ) ),Min( ( ( Max( FirstVNF_RAM,BR ) + ( DDR - PN ) ) - ( Min( FirstVNF_Mem_Server ,AMS ) + ( MDR * DDR ) ) ) ,Min( Min( ( ARS - MDR ) ,( AMS + FirstVNF_Mem ) ) ,( Max( FirstVNF_Mem,AMS ) + Max( AMS,RRS ) ) ) ) ) ) * ( ( ( ( Min( ( CRS - CRS ) ,( ARS + FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,CRS ) * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) + ( ( Max( ARS,Const ) + Min( RRS ,FirstVNF_RAM ) ) + ( Max( DDR,BR ) - ( AMS + CRS ) ) ) ) * ( Max( Max( ( AMS * MRS ),Min( FirstVNF_RAM_Server ,ARS ) ),( Min( ARS ,FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) - ( ( ( PN * FirstVNF_RAM ) * ( RRS * CRS ) ) - Max( ( RRS / AMS ),( PN / RRS ) ) ) ) ) - ( Max( Max( ( Max( ARS,FirstVNF_RAM ) - ( MRS / AMS ) ),( ( FirstVNF_Mem / DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),( ( ( AMS + AMS ) / Min( MRS ,PN ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( CRS / Const ) ) ) ) * Max( Min( Max( ( MRS * FirstVNF_Mem ),Min( PN ,FirstVNF_Mem ) ) ,( ( DDR + FirstVNF_RAM_Server ) - Max( PN,ACS ) ) ),( Max( Min( PN ,PN ),( MRS - ARS ) ) / ( Min( FirstVNF_RAM ,AMS ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( Max( ( ( ( MUM * MUC ) - Min( RMSe ,MUC ) ) / ( ( MUM - MUM ) * ( MUM * RMSe ) ) ),( Max( ( MUC * DS ),Min( MUM ,CS ) ) / Max( ( MUM + CS ),( MLU * MUR ) ) ) ),( Min( ( ( MUM - DS ) + ( RCSe * RCSe ) ) ,( ( DS + MUR ) * Max( DS,RCSe ) ) ) * ( ( ( CS + RRSe ) * ( MLU - RMSe ) ) + ( ( MLU + RRSe ) + ( CS * MUM ) ) ) ) ) - Max( ( ( ( ( CS / RRSe ) * ( MUC * MUM ) ) / Max( ( RMSe + DS ),Min( MUC ,RRSe ) ) ) / ( ( Min( CS ,MUC ) * ( RCSe + MLU ) ) / Min( ( CS - RRSe ) ,Max( RCSe,MUM ) ) ) ),( Max( ( Max( RRSe,CS ) * ( MUM + DS ) ),Min( ( MLU - MUR ) ,( DS + MUC ) ) ) - ( ( ( MLU / MLU ) - ( DS / DS ) ) / ( ( RRSe * DS ) + Min( RCSe ,MLU ) ) ) ) ) ) - Max( ( Min( Min( Max( Max( CS,RMSe ),( RRSe / RMSe ) ) ,( ( RCSe * MUR ) + ( MUR / DS ) ) ) ,Min( ( ( CS * RMSe ) + Max( MUR,CS ) ) ,( Max( DS,RMSe ) - Min( DS ,CS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * ( RRSe / DS ) ),Min( ( DS / MUC ) ,Min( MUR ,RMSe ) ) ) + ( ( ( DS - RCSe ) + ( RRSe * MUM ) ) / ( ( RMSe * MUM ) * ( RRSe - RMSe ) ) ) ) ),( ( Min( ( ( MUC / CS ) / ( MLU - DS ) ) ,( ( RRSe * RRSe ) + ( MLU / DS ) ) ) - Max( ( ( RMSe / RMSe ) - ( MLU + MUM ) ),Max( ( MUC - MUM ),( CS - RCSe ) ) ) ) / ( Min( Max( ( RCSe + RRSe ),( RCSe - RMSe ) ) ,Max( ( MUC - MLU ),( MUM * RMSe ) ) ) - Max( ( Min( MLU ,MLU ) * ( RMSe / RMSe ) ),( ( DS * DS ) + Max( MUR,DS ) ) ) ) ) ) ) + Min( Min( Min( ( ( ( Min( RMSe ,CS ) / Max( CS,RCSe ) ) - Min( ( MUR + RMSe ) ,( DS * CS ) ) ) - ( ( Max( MLU,CS ) * ( MUR + MLU ) ) + ( ( RCSe - MLU ) * Max( RRSe,MLU ) ) ) ) ,( Min( Min( ( RMSe - MUR ) ,( MUM - DS ) ) ,( ( MUR / MUR ) * ( MLU - MUC ) ) ) * Max( Max( Max( MUC,RRSe ),( MUM / RMSe ) ),( Max( MUR,CS ) + ( MLU + DS ) ) ) ) ) ,Min( Min( ( ( ( DS / MUM ) / ( RMSe * MLU ) ) / Max( Min( RRSe ,RRSe ),Min( MUM ,MUC ) ) ) ,( Max( ( RMSe + MUC ),( CS + RCSe ) ) * ( ( MUC / RCSe ) / ( MLU + MUM ) ) ) ) ,( ( Max( Min( RRSe ,MUR ),Min( DS ,CS ) ) - Max( ( MLU * MLU ),( RRSe / MUR ) ) ) / Min( ( Max( RRSe,DS ) + ( MUM - MUM ) ) ,( ( RRSe / DS ) * ( MUC / RMSe ) ) ) ) ) ) ,( ( ( ( Min( ( MUM * RCSe ) ,Max( RMSe,DS ) ) - ( Min( MLU ,CS ) + ( CS + RMSe ) ) ) - Max( ( ( MUC - RMSe ) - ( MUM - CS ) ),( ( MUR / CS ) - ( RRSe - RMSe ) ) ) ) + ( ( Min( ( MUR + MLU ) ,( RRSe * MLU ) ) * Max( ( RRSe / MUR ),( MUC - MLU ) ) ) + ( ( ( DS / RRSe ) / ( RRSe * RRSe ) ) * ( ( RMSe - MUR ) + ( RRSe - RCSe ) ) ) ) ) - ( ( ( ( Max( MUR,RCSe ) / ( MUM * MUR ) ) + ( Min( DS ,RRSe ) + Min( MUM ,RCSe ) ) ) + ( ( Min( CS ,MUM ) + Min( CS ,RCSe ) ) * ( ( MUC - RRSe ) - ( MUR + RCSe ) ) ) ) - ( ( ( ( RRSe / CS ) - ( MLU * RCSe ) ) - ( ( CS / MUC ) - Max( CS,RRSe ) ) ) + Min( Max( ( MLU / RMSe ),( MUC / RRSe ) ) ,( ( RRSe + MUR ) - ( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.6660377358490566, "obj2": 0.2516323756025836}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,Min( Max( FirstVNF_Mem_Server,DDR ) ,( MRS + FirstVNF_RAM ) ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - DS )", "obj1": 0.21509433962264152, "obj2": 0.7050428206572891}, {"determining": "Min( MDR ,( MRS + MRS ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.42641509433962266, "obj2": 0.4523442908867226}, {"determining": "Max( ( PN + ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ),( Const + ARS ) )", "choosing": "( ( ( RCSe - MUM ) - CS ) * Max( MUC,RRSe ) )", "obj1": 0.33584905660377357, "obj2": 0.54484835637389}], "11": [{"determining": "Min( ( ( MRS * BR ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( DS / MUR ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * DDR ) - FirstVNF_RAM_Server )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( ( MUC / MLU ) + DS ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( ( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_CPU + DDR ) ) * DDR ) - ( DDR - PN ) )", "choosing": "( MUM - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8169811320754717, "obj2": 0.08826484962136517}, {"determining": "( ( BR * FirstVNF_Mem ) - ( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,RRSe ) )", "obj1": 0.5943396226415094, "obj2": 0.2868994362662629}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_CPU ,Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) * Max( MUC,RRSe ) )", "obj1": 0.5207547169811321, "obj2": 0.35930996667108933}, {"determining": "( Min( ( ( ( ( Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( ( FirstVNF_RAM / BR ) * ( DDR + FirstVNF_RAM_Server ) ) ) + Min( Max( Min( CRS ,CRS ),( PN * BR ) ) ,( ( CRS + BR ) + ( Const - Const ) ) ) ) / ( Max( ( Max( PN,ACS ) * Min( BR ,FirstVNF_CPU_Server ) ),( ( MDR + Const ) / ( ACS - MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( AMS ,Const ) ) ,( ( FirstVNF_Mem - ACS ) - Min( MRS ,MDR ) ) ) ) ) - Min( Min( ( Min( Min( FirstVNF_RAM_Server ,MRS ) ,Min( Const ,FirstVNF_CPU_Server ) ) * ( ( PN - Const ) / Min( FirstVNF_Mem_Server ,BR ) ) ) ,( ( ( BR * MRS ) - Max( AMS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + Max( RRS,CRS ) ) ) ) ,Max( Min( Max( Max( RRS,Const ),( BR * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,ARS ) * Max( AMS,BR ) ) ),Max( ( ( CRS / FirstVNF_Mem_Server ) - ( RRS / FirstVNF_RAM ) ),( ( CRS * AMS ) * ( AMS + Const ) ) ) ) ) ) ,( Min( Max( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_RAM_Server - RRS ) ,Max( DDR,FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * ( RRS * ACS ) ),Min( ( RRS * BR ) ,( MDR + PN ) ) ) ) ,( Min( ( Max( MRS,ACS ) / ( FirstVNF_RAM - DDR ) ) ,Max( ( ACS * PN ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( ( ( CRS + RRS ) - ( Const / FirstVNF_Mem ) ) - Max( Min( MRS ,CRS ),Max( Const,DDR ) ) ) ) ) * ( ( Max( ( ( BR + FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_CPU_Server ) ),Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_Mem_Server / Const ) + ( CRS + MDR ) ) ,( Min( ARS ,PN ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU / MDR ) ) / ( ( Const * PN ) / Max( FirstVNF_CPU_Server,PN ) ) ),( ( ( ARS * FirstVNF_RAM ) / ( BR + FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - BR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) ) * Max( ( ( Min( Min( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM - ACS ) ) ,Min( ( MRS + CRS ) ,( ARS * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * ( CRS * Const ) ) - Min( ( RRS / DDR ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) / ( Max( ( ( FirstVNF_RAM - FirstVNF_Mem ) + ( CRS / ACS ) ),( ( AMS / RRS ) + ( RRS + FirstVNF_RAM_Server ) ) ) * Max( ( ( DDR * FirstVNF_CPU ) * Max( MDR,PN ) ),( ( FirstVNF_Mem_Server * ACS ) + Min( DDR ,AMS ) ) ) ) ) / ( Max( Max( ( Min( BR ,ARS ) * Min( Const ,DDR ) ),Max( ( MDR + PN ),Max( BR,FirstVNF_RAM ) ) ),( ( Min( MRS ,AMS ) - ( Const + FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * Max( ACS,ARS ) ) ) ) / ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / Max( Min( MRS ,ACS ),( FirstVNF_RAM_Server / AMS ) ) ) - ( ( ( AMS * MDR ) / ( AMS + AMS ) ) / ( ( MDR - FirstVNF_CPU ) + ( MDR + MRS ) ) ) ) ) ),Max( ( ( ( Max( Max( MDR,RRS ),( AMS - FirstVNF_RAM ) ) / Min( ( Const - FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) / Min( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Max( Const,MDR ) ) ,( ( BR + FirstVNF_CPU ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - ( ( Max( ( MRS * Const ),( FirstVNF_RAM / DDR ) ) * ( ( BR * Const ) - Min( Const ,MRS ) ) ) / ( ( ( PN - MDR ) * ( FirstVNF_CPU_Server - PN ) ) + Max( Min( MRS ,MRS ),Min( MRS ,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,CRS ) ) + Min( Max( ARS,FirstVNF_Mem_Server ) ,( Const + AMS ) ) ) - ( ( ( FirstVNF_Mem * ACS ) / Min( DDR ,FirstVNF_CPU_Server ) ) + Min( ( AMS * FirstVNF_Mem_Server ) ,( RRS - MDR ) ) ) ) + Min( ( ( ( AMS + DDR ) - ( FirstVNF_CPU_Server + Const ) ) - Min( Min( FirstVNF_Mem_Server ,PN ) ,( BR * FirstVNF_CPU_Server ) ) ) ,Max( Max( Max( ARS,FirstVNF_Mem ),( FirstVNF_CPU_Server - AMS ) ),( ( MDR / FirstVNF_RAM ) + Min( AMS ,PN ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) / ( CS + MUC ) )", "obj1": 0.8905660377358491, "obj2": 0.08088517263405544}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "Min( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( ( ( MRS * RRS ) * Const ) ,Const ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MUR + RCSe ) ),MUC ) ,( ( MUR / MUR ) - MLU ) )", "obj1": 0.19811320754716982, "obj2": 0.7118686779362059}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Max( Max( Const,PN ),( RRS * ( RRS / ARS ) ) ) + ARS ) )", "choosing": "( ( DS - CS ) * Max( MUC,DS ) )", "obj1": 0.39811320754716983, "obj2": 0.4765569179674173}, {"determining": "( Min( Min( DDR ,( Const + ( CRS - FirstVNF_RAM ) ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.1538595165714605}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) )", "obj1": 0.6528301886792452, "obj2": 0.2624311111207231}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( ( MDR + MDR ) - Max( Const,PN ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,MUM ) )", "obj1": 0.969811320754717, "obj2": 0.034991552713434376}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}, {"determining": "( ( ARS * FirstVNF_Mem ) - PN )", "choosing": "( ( ( DS - CS ) * Max( MUC,( ( DS - CS ) * Max( MUC,MLU ) ) ) ) + ( MUM * RMSe ) )", "obj1": 0.5132075471698113, "obj2": 0.409905249988037}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( ARS + Const ) ) - Max( FirstVNF_Mem,Const ) ) + Const ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( Max( ( RCSe + ( MLU * MUR ) ),MUC ) / ( RCSe - MUM ) )", "obj1": 0.2981132075471698, "obj2": 0.5906307862496737}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "Max( Max( Const,PN ),( RRS * ( ( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) / ARS ) ) )", "choosing": "( ( DS - CS ) * RMSe )", "obj1": 0.37169811320754714, "obj2": 0.49935584406658695}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( PN ,Const ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) )", "obj1": 0.47358490566037736, "obj2": 0.42679834509290987}, {"determining": "Min( MDR ,( MRS + MRS ) )", "choosing": "Max( ( ( ( MUR + DS ) * ( DS - RRSe ) ) - DS ),DS )", "obj1": 0.7641509433962265, "obj2": 0.17737773647446994}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "Min( ( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUC ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) ) - MUM ) * ( MLU + CS ) )", "obj1": 0.22075471698113208, "obj2": 0.6680018670426638}, {"determining": "( ( BR * FirstVNF_Mem ) - ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( ( ( CS - CS ) * Max( MUC,RRSe ) ) - CS ) * Max( MUC,RRSe ) )", "obj1": 0.30943396226415093, "obj2": 0.5628165268635293}, {"determining": "Max( ( ( MRS / MRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( ( MUR + RCSe ) * ( RMSe - RRSe ) ) / Max( MLU,CS ) ) )", "obj1": 0.2811320754716981, "obj2": 0.6215884429453546}, {"determining": "Min( Max( FirstVNF_Mem_Server,DDR ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( DS - MUM ) * ( MLU + CS ) )", "obj1": 0.3490566037735849, "obj2": 0.5245731057807178}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,RCSe ) * Min( MUM ,RCSe ) )", "obj1": 0.5867924528301887, "obj2": 0.3220856624591047}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.4320754716981132, "obj2": 0.4332257449795565}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "Max( ( PN + ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ),( Const + ARS ) )", "choosing": "( ( ( RCSe - MUM ) - CS ) * Max( MUC,RRSe ) )", "obj1": 0.33584905660377357, "obj2": 0.54484835637389}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Const + ARS ) )", "choosing": "( ( MUR + MUR ) * Min( RCSe ,DS ) )", "obj1": 0.7188679245283018, "obj2": 0.2068206663796216}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( MUR / MUR ) - MLU ) ),MLU ) ) )", "obj1": 0.25471698113207547, "obj2": 0.6650507818800275}, {"determining": "( ( BR * FirstVNF_Mem ) - ( FirstVNF_Mem + ( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR - MUR ) * ( DS - RRSe ) ) * Min( RCSe ,DS ) )", "obj1": 0.27169811320754716, "obj2": 0.6573452520945013}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + Const ) ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( CS + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4543853875683642}, {"determining": "( ( MDR + MDR ) - MDR )", "choosing": "( DS * Max( RCSe,MUR ) )", "obj1": 0.7358490566037735, "obj2": 0.1945262372676352}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - FirstVNF_Mem )", "choosing": "( ( CS - CS ) * Max( MUC,CS ) )", "obj1": 0.9188679245283019, "obj2": 0.06522607348080821}, {"determining": "Max( Max( ARS,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,Max( MUC,RRSe ) ) )", "obj1": 0.3622641509433962, "obj2": 0.5103621242325336}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( RCSe - MUM ) )", "obj1": 0.9226415094339623, "obj2": 0.06313049610404582}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) )", "obj1": 0.6735849056603773, "obj2": 0.24375949770765257}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_Mem ) )", "choosing": "( ( MUR + MUR ) * Min( MUM ,( ( MUR + MUR ) * Min( MUM ,RCSe ) ) ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS / ACS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - Min( RRSe ,( Max( RCSe,CS ) / ( RMSe / CS ) ) ) )", "obj1": 0.3264150943396226, "obj2": 0.5563319093125401}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) ) ) ) + ( MUM * RMSe ) )", "obj1": 0.49433962264150944, "obj2": 0.42305810228831153}, {"determining": "( ( AMS / ACS ) - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( DS * Max( RCSe,RCSe ) ) * Max( RCSe,RCSe ) )", "obj1": 0.7037735849056603, "obj2": 0.21791750615363908}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,Min( Max( FirstVNF_Mem_Server,DDR ) ,( MRS + FirstVNF_RAM ) ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - DS )", "obj1": 0.21509433962264152, "obj2": 0.7050428206572891}, {"determining": "Min( MDR ,( MRS + MRS ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.42641509433962266, "obj2": 0.4523442908867226}, {"determining": "( ( ARS * FirstVNF_Mem ) - ( ( BR * FirstVNF_Mem ) - Min( Const ,Const ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( ( MUR + MUR ) * Min( RCSe ,MLU ) ) )", "obj1": 0.5037735849056604, "obj2": 0.41405361667588647}, {"determining": "( ( ( Max( ( Min( ( ( MRS * BR ) + ( FirstVNF_RAM_Server + DDR ) ) ,( ( MRS / FirstVNF_Mem_Server ) * Min( MDR ,PN ) ) ) * ( ( Max( Const,FirstVNF_Mem ) / ( MDR * FirstVNF_RAM_Server ) ) + ( ( PN + ACS ) * ( FirstVNF_RAM - MDR ) ) ) ),Max( ( ( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( MRS - PN ) / ( FirstVNF_Mem / PN ) ) ),( ( Max( FirstVNF_CPU,MDR ) + ( ARS + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server - ACS ) ) ) ) ) - Max( ( Max( ( Max( RRS,DDR ) + Max( BR,FirstVNF_RAM ) ),( ( AMS - FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( ARS / FirstVNF_CPU_Server ) ) + ( ( CRS + AMS ) - ( FirstVNF_RAM * Const ) ) ) ),Max( ( ( ( ARS / RRS ) - ( FirstVNF_Mem_Server - Const ) ) * ( Min( MDR ,PN ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) + ( ACS + CRS ) ) / Max( Max( CRS,RRS ),( DDR * FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( Max( Min( ( DDR - Const ) ,( FirstVNF_RAM + PN ) ),( Min( Const ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_Mem_Server ,PN ) * Min( FirstVNF_Mem_Server ,PN ) ) / ( Min( PN ,BR ) + ( RRS + FirstVNF_RAM ) ) ) ) + ( ( ( ( ACS - DDR ) * Min( Const ,RRS ) ) / ( ( MDR + ACS ) - ( CRS + DDR ) ) ) - ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Max( Const,PN ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) - Min( ( ( ( Min( MDR ,PN ) + ( FirstVNF_Mem - BR ) ) - Min( ( FirstVNF_Mem_Server * Const ) ,Max( CRS,BR ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR - ARS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( PN / CRS ) ) ) ) ,Max( ( ( Min( MRS ,FirstVNF_CPU_Server ) - ( PN * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server / AMS ) * ( AMS + FirstVNF_Mem_Server ) ) ),( ( ( Const - FirstVNF_CPU ) - Max( PN,DDR ) ) * Min( ( MRS + RRS ) ,( FirstVNF_CPU + CRS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( MRS + PN ) / ( Const + FirstVNF_CPU ) ) - ( Max( FirstVNF_RAM,AMS ) + ( FirstVNF_RAM - RRS ) ) ) + Min( Min( ( ARS + BR ) ,Min( MRS ,FirstVNF_Mem ) ) ,( ( DDR - Const ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) * ( ( ( ( ACS * PN ) * ( AMS - Const ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( RRS - CRS ) ) ) - ( ( Max( ACS,MRS ) * ( PN / FirstVNF_CPU ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + ( BR / FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( FirstVNF_Mem_Server + Const ) * ( ACS * MDR ) ) / ( ( FirstVNF_Mem / Const ) + ( MDR + FirstVNF_Mem_Server ) ) ),Max( ( Max( FirstVNF_CPU,RRS ) + Max( PN,RRS ) ),( ( CRS + FirstVNF_CPU_Server ) + ( AMS * FirstVNF_CPU ) ) ) ),Min( ( ( Max( FirstVNF_RAM,BR ) + ( DDR - PN ) ) - ( Min( FirstVNF_Mem_Server ,AMS ) + ( MDR * DDR ) ) ) ,Min( Min( ( ARS - MDR ) ,( AMS + FirstVNF_Mem ) ) ,( Max( FirstVNF_Mem,AMS ) + Max( AMS,RRS ) ) ) ) ) ) * ( ( ( ( Min( ( CRS - CRS ) ,( ARS + FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,CRS ) * ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) + ( ( Max( ARS,Const ) + Min( RRS ,FirstVNF_RAM ) ) + ( Max( DDR,BR ) - ( AMS + CRS ) ) ) ) * ( Max( Max( ( AMS * MRS ),Min( FirstVNF_RAM_Server ,ARS ) ),( Min( ARS ,FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) - ( ( ( PN * FirstVNF_RAM ) * ( RRS * CRS ) ) - Max( ( RRS / AMS ),( PN / RRS ) ) ) ) ) - ( Max( Max( ( Max( ARS,FirstVNF_RAM ) - ( MRS / AMS ) ),( ( FirstVNF_Mem / DDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),( ( ( AMS + AMS ) / Min( MRS ,PN ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( CRS / Const ) ) ) ) * Max( Min( Max( ( MRS * FirstVNF_Mem ),Min( PN ,FirstVNF_Mem ) ) ,( ( DDR + FirstVNF_RAM_Server ) - Max( PN,ACS ) ) ),( Max( Min( PN ,PN ),( MRS - ARS ) ) / ( Min( FirstVNF_RAM ,AMS ) / Min( AMS ,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( Max( ( ( ( MUM * MUC ) - Min( RMSe ,MUC ) ) / ( ( MUM - MUM ) * ( MUM * RMSe ) ) ),( Max( ( MUC * DS ),Min( MUM ,CS ) ) / Max( ( MUM + CS ),( MLU * MUR ) ) ) ),( Min( ( ( MUM - DS ) + ( RCSe * RCSe ) ) ,( ( DS + MUR ) * Max( DS,RCSe ) ) ) * ( ( ( CS + RRSe ) * ( MLU - RMSe ) ) + ( ( MLU + RRSe ) + ( CS * MUM ) ) ) ) ) - Max( ( ( ( ( CS / RRSe ) * ( MUC * MUM ) ) / Max( ( RMSe + DS ),Min( MUC ,RRSe ) ) ) / ( ( Min( CS ,MUC ) * ( RCSe + MLU ) ) / Min( ( CS - RRSe ) ,Max( RCSe,MUM ) ) ) ),( Max( ( Max( RRSe,CS ) * ( MUM + DS ) ),Min( ( MLU - MUR ) ,( DS + MUC ) ) ) - ( ( ( MLU / MLU ) - ( DS / DS ) ) / ( ( RRSe * DS ) + Min( RCSe ,MLU ) ) ) ) ) ) - Max( ( Min( Min( Max( Max( CS,RMSe ),( RRSe / RMSe ) ) ,( ( RCSe * MUR ) + ( MUR / DS ) ) ) ,Min( ( ( CS * RMSe ) + Max( MUR,CS ) ) ,( Max( DS,RMSe ) - Min( DS ,CS ) ) ) ) / ( Max( ( Max( MLU,MUM ) * ( RRSe / DS ) ),Min( ( DS / MUC ) ,Min( MUR ,RMSe ) ) ) + ( ( ( DS - RCSe ) + ( RRSe * MUM ) ) / ( ( RMSe * MUM ) * ( RRSe - RMSe ) ) ) ) ),( ( Min( ( ( MUC / CS ) / ( MLU - DS ) ) ,( ( RRSe * RRSe ) + ( MLU / DS ) ) ) - Max( ( ( RMSe / RMSe ) - ( MLU + MUM ) ),Max( ( MUC - MUM ),( CS - RCSe ) ) ) ) / ( Min( Max( ( RCSe + RRSe ),( RCSe - RMSe ) ) ,Max( ( MUC - MLU ),( MUM * RMSe ) ) ) - Max( ( Min( MLU ,MLU ) * ( RMSe / RMSe ) ),( ( DS * DS ) + Max( MUR,DS ) ) ) ) ) ) ) + Min( Min( Min( ( ( ( Min( RMSe ,CS ) / Max( CS,RCSe ) ) - Min( ( MUR + RMSe ) ,( DS * CS ) ) ) - ( ( Max( MLU,CS ) * ( MUR + MLU ) ) + ( ( RCSe - MLU ) * Max( RRSe,MLU ) ) ) ) ,( Min( Min( ( RMSe - MUR ) ,( MUM - DS ) ) ,( ( MUR / MUR ) * ( MLU - MUC ) ) ) * Max( Max( Max( MUC,RRSe ),( MUM / RMSe ) ),( Max( MUR,CS ) + ( MLU + DS ) ) ) ) ) ,Min( Min( ( ( ( DS / MUM ) / ( RMSe * MLU ) ) / Max( Min( RRSe ,RRSe ),Min( MUM ,MUC ) ) ) ,( Max( ( RMSe + MUC ),( CS + RCSe ) ) * ( ( MUC / RCSe ) / ( MLU + MUM ) ) ) ) ,( ( Max( Min( RRSe ,MUR ),Min( DS ,CS ) ) - Max( ( MLU * MLU ),( RRSe / MUR ) ) ) / Min( ( Max( RRSe,DS ) + ( MUM - MUM ) ) ,( ( RRSe / DS ) * ( MUC / RMSe ) ) ) ) ) ) ,( ( ( ( Min( ( MUM * RCSe ) ,Max( RMSe,DS ) ) - ( Min( MLU ,CS ) + ( CS + RMSe ) ) ) - Max( ( ( MUC - RMSe ) - ( MUM - CS ) ),( ( MUR / CS ) - ( RRSe - RMSe ) ) ) ) + ( ( Min( ( MUR + MLU ) ,( RRSe * MLU ) ) * Max( ( RRSe / MUR ),( MUC - MLU ) ) ) + ( ( ( DS / RRSe ) / ( RRSe * RRSe ) ) * ( ( RMSe - MUR ) + ( RRSe - RCSe ) ) ) ) ) - ( ( ( ( Max( MUR,RCSe ) / ( MUM * MUR ) ) + ( Min( DS ,RRSe ) + Min( MUM ,RCSe ) ) ) + ( ( Min( CS ,MUM ) + Min( CS ,RCSe ) ) * ( ( MUC - RRSe ) - ( MUR + RCSe ) ) ) ) - ( ( ( ( RRSe / CS ) - ( MLU * RCSe ) ) - ( ( CS / MUC ) - Max( CS,RRSe ) ) ) + Min( Max( ( MLU / RMSe ),( MUC / RRSe ) ) ,( ( RRSe + MUR ) - ( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.6660377358490566, "obj2": 0.2516323756025836}], "12": [{"determining": "( ( BR * FirstVNF_Mem ) - ( FirstVNF_Mem + ( Min( BR ,Max( MRS,AMS ) ) / ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR - MUR ) * ( ( MUC * RRSe ) - RRSe ) ) * Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * BR ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) ,( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * MUR ) ),MUC ) ,( ( DS / MUR ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( MUM / MUC ) ) )", "obj1": 0.08113207547169811, "obj2": 0.7804847842022418}, {"determining": "( ( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_CPU + DDR ) ) * DDR ) - ( DDR - PN ) )", "choosing": "( MUM - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.8169811320754717, "obj2": 0.08826484962136517}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_CPU ,Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) * Max( MUC,RRSe ) )", "obj1": 0.5207547169811321, "obj2": 0.35930996667108933}, {"determining": "( Min( ( ( ( ( Max( ( PN / FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( ( FirstVNF_RAM / BR ) * ( DDR + FirstVNF_RAM_Server ) ) ) + Min( Max( Min( CRS ,CRS ),( PN * BR ) ) ,( ( CRS + BR ) + ( Const - Const ) ) ) ) / ( Max( ( Max( PN,ACS ) * Min( BR ,FirstVNF_CPU_Server ) ),( ( MDR + Const ) / ( ACS - MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( AMS ,Const ) ) ,( ( FirstVNF_Mem - ACS ) - Min( MRS ,MDR ) ) ) ) ) - Min( Min( ( Min( Min( FirstVNF_RAM_Server ,MRS ) ,Min( Const ,FirstVNF_CPU_Server ) ) * ( ( PN - Const ) / Min( FirstVNF_Mem_Server ,BR ) ) ) ,( ( ( BR * MRS ) - Max( AMS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + Max( RRS,CRS ) ) ) ) ,Max( Min( Max( Max( RRS,Const ),( BR * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,ARS ) * Max( AMS,BR ) ) ),Max( ( ( CRS / FirstVNF_Mem_Server ) - ( RRS / FirstVNF_RAM ) ),( ( CRS * AMS ) * ( AMS + Const ) ) ) ) ) ) ,( Min( Max( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_RAM_Server - RRS ) ,Max( DDR,FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * ( RRS * ACS ) ),Min( ( RRS * BR ) ,( MDR + PN ) ) ) ) ,( Min( ( Max( MRS,ACS ) / ( FirstVNF_RAM - DDR ) ) ,Max( ( ACS * PN ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( ( ( CRS + RRS ) - ( Const / FirstVNF_Mem ) ) - Max( Min( MRS ,CRS ),Max( Const,DDR ) ) ) ) ) * ( ( Max( ( ( BR + FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_CPU_Server ) ),Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_Mem_Server / Const ) + ( CRS + MDR ) ) ,( Min( ARS ,PN ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU / MDR ) ) / ( ( Const * PN ) / Max( FirstVNF_CPU_Server,PN ) ) ),( ( ( ARS * FirstVNF_RAM ) / ( BR + FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - BR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) ) ) * Max( ( ( Min( Min( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( FirstVNF_RAM - ACS ) ) ,Min( ( MRS + CRS ) ,( ARS * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * ( CRS * Const ) ) - Min( ( RRS / DDR ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) / ( Max( ( ( FirstVNF_RAM - FirstVNF_Mem ) + ( CRS / ACS ) ),( ( AMS / RRS ) + ( RRS + FirstVNF_RAM_Server ) ) ) * Max( ( ( DDR * FirstVNF_CPU ) * Max( MDR,PN ) ),( ( FirstVNF_Mem_Server * ACS ) + Min( DDR ,AMS ) ) ) ) ) / ( Max( Max( ( Min( BR ,ARS ) * Min( Const ,DDR ) ),Max( ( MDR + PN ),Max( BR,FirstVNF_RAM ) ) ),( ( Min( MRS ,AMS ) - ( Const + FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * Max( ACS,ARS ) ) ) ) / ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / Max( Min( MRS ,ACS ),( FirstVNF_RAM_Server / AMS ) ) ) - ( ( ( AMS * MDR ) / ( AMS + AMS ) ) / ( ( MDR - FirstVNF_CPU ) + ( MDR + MRS ) ) ) ) ) ),Max( ( ( ( Max( Max( MDR,RRS ),( AMS - FirstVNF_RAM ) ) / Min( ( Const - FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) / Min( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Max( Const,MDR ) ) ,( ( BR + FirstVNF_CPU ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - ( ( Max( ( MRS * Const ),( FirstVNF_RAM / DDR ) ) * ( ( BR * Const ) - Min( Const ,MRS ) ) ) / ( ( ( PN - MDR ) * ( FirstVNF_CPU_Server - PN ) ) + Max( Min( MRS ,MRS ),Min( MRS ,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,CRS ) ) + Min( Max( ARS,FirstVNF_Mem_Server ) ,( Const + AMS ) ) ) - ( ( ( FirstVNF_Mem * ACS ) / Min( DDR ,FirstVNF_CPU_Server ) ) + Min( ( AMS * FirstVNF_Mem_Server ) ,( RRS - MDR ) ) ) ) + Min( ( ( ( AMS + DDR ) - ( FirstVNF_CPU_Server + Const ) ) - Min( Min( FirstVNF_Mem_Server ,PN ) ,( BR * FirstVNF_CPU_Server ) ) ) ,Max( Max( Max( ARS,FirstVNF_Mem ),( FirstVNF_CPU_Server - AMS ) ),( ( MDR / FirstVNF_RAM ) + Min( AMS ,PN ) ) ) ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) / ( CS + MUC ) )", "obj1": 0.8905660377358491, "obj2": 0.08088517263405544}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.8037735849056604, "obj2": 0.12975254552669188}, {"determining": "Min( ( ACS / DDR ) ,( MRS + DDR ) )", "choosing": "( ( ( MUC / MLU ) - MUM ) * ( MLU * ( MUM / DS ) ) )", "obj1": 0.17169811320754716, "obj2": 0.709622905464729}, {"determining": "Min( MDR ,( MRS + MRS ) )", "choosing": "Max( ( ( ( MUR + DS ) * ( DS - RRSe ) ) - DS ),DS )", "obj1": 0.7641509433962265, "obj2": 0.17737773647446994}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Max( Max( Const,PN ),( RRS * ( RRS / ARS ) ) ) + ARS ) )", "choosing": "( ( DS - CS ) * Max( MUC,DS ) )", "obj1": 0.39811320754716983, "obj2": 0.4765569179674173}, {"determining": "( Min( Min( DDR ,( Const + ( CRS - FirstVNF_RAM ) ) ) ,AMS ) * Max( MDR,RRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( Min( CS ,MUM ) / ( MUM * CS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.1538595165714605}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( Min( Min( ( MRS + FirstVNF_RAM ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7336302836532557}, {"determining": "( ( MDR + MDR ) - Max( Const,PN ) )", "choosing": "( ( MUR + MUR ) * Max( RCSe,MUM ) )", "obj1": 0.969811320754717, "obj2": 0.034991552713434376}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( MRS ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( MUC / DS ) / Max( RRSe,CS ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7533912467776966}, {"determining": "( ( ARS * FirstVNF_Mem ) - PN )", "choosing": "( ( ( DS - CS ) * Max( MUC,( ( DS - CS ) * Max( MUC,MLU ) ) ) ) + ( MUM * RMSe ) )", "obj1": 0.5132075471698113, "obj2": 0.409905249988037}, {"determining": "( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( MDR,CRS ) )", "choosing": "( ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * MUC ) * Min( MUC ,MLU ) ) * ( Min( MUC ,CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7696362326675555}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - MDR )", "choosing": "( ( DS * Max( RCSe,RCSe ) ) * Min( MUM ,RCSe ) )", "obj1": 0.6471698113207547, "obj2": 0.26880488530315244}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_Mem ) )", "choosing": "( ( MUR + MUR ) * Min( MUM ,( ( MUR + MUR ) * Min( MUM ,RCSe ) ) ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "( ( MDR + MDR ) - MDR )", "choosing": "( DS * Max( RCSe,MUR ) )", "obj1": 0.7358490566037735, "obj2": 0.1945262372676352}, {"determining": "Min( ( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUC ) ) + ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) ) - MUM ) * ( MLU + CS ) )", "obj1": 0.22075471698113208, "obj2": 0.6680018670426638}, {"determining": "Max( Max( Const,PN ),( RRS * ( ( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) / ARS ) ) )", "choosing": "( ( DS - CS ) * RMSe )", "obj1": 0.37169811320754714, "obj2": 0.49935584406658695}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( PN ,Const ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) )", "obj1": 0.47358490566037736, "obj2": 0.42679834509290987}, {"determining": "Min( Const ,( MRS / FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR + RMSe ) * ( RMSe - RCSe ) ) - DS ),( DS / CS ) )", "obj1": 0.5981132075471698, "obj2": 0.2843247333512031}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( MDR / DDR ) ) + AMS ) - ( MDR / ACS ) )", "choosing": "( Min( ( Max( RCSe,RCSe ) - MUM ) ,Max( RRSe,MUM ) ) - ( MLU - MUC ) )", "obj1": 0.2490566037735849, "obj2": 0.6549946761952709}, {"determining": "Max( ( FirstVNF_Mem_Server - PN ),( FirstVNF_CPU_Server + BR ) )", "choosing": "Min( ( ( ( ( ( Min( ( DS - MLU ) ,( CS - MUC ) ) + Max( Min( RMSe ,MUR ),( MUR / MLU ) ) ) * ( ( Min( RCSe ,MLU ) - Min( MLU ,RRSe ) ) / ( Max( RMSe,MUM ) - ( MUM + RCSe ) ) ) ) / ( ( Min( ( RCSe - MUM ) ,Max( RMSe,MUM ) ) - ( ( MUC + MUC ) / ( CS + MUC ) ) ) * Max( ( Max( CS,RRSe ) - ( MLU + RRSe ) ),Min( ( MUR + MUC ) ,Max( DS,MUC ) ) ) ) ) / ( ( ( ( Min( MUM ,DS ) * ( RCSe * MUR ) ) - ( Max( MUR,MUR ) / ( CS - MUC ) ) ) * ( ( ( MUM - MUC ) + Max( RMSe,DS ) ) * Max( ( MUM + CS ),( CS - MLU ) ) ) ) / ( Max( Min( Min( RRSe ,MLU ) ,Max( MUM,MLU ) ),( ( RRSe - MUR ) + ( RMSe * DS ) ) ) - Min( Min( Max( RMSe,MLU ) ,( RMSe / MUC ) ) ,( Max( DS,MUR ) * ( MLU / RCSe ) ) ) ) ) ) - Max( Min( Min( ( Min( ( MUC / CS ) ,( MUR * DS ) ) * ( Min( MUR ,RCSe ) - ( RRSe * RCSe ) ) ) ,( Min( Min( RRSe ,RCSe ) ,( MUR * RCSe ) ) / Max( ( RRSe / MLU ),( RMSe / MUM ) ) ) ) ,( Max( ( Max( MUM,MLU ) / Max( RRSe,DS ) ),Max( ( RCSe - MLU ),( MUR / MUC ) ) ) + ( Max( ( RRSe / MUM ),( MUM * RRSe ) ) * Max( ( MLU - MUC ),Max( RMSe,DS ) ) ) ) ),( Min( Max( Min( Min( RMSe ,RMSe ) ,Max( MUR,MUM ) ),( Min( MUR ,MUC ) * ( MUC / RCSe ) ) ) ,( ( ( RMSe / DS ) + ( MUM * RMSe ) ) * ( ( MUC - RRSe ) - ( MUM - MLU ) ) ) ) - Max( ( ( Min( RRSe ,RMSe ) * ( DS / DS ) ) + ( ( RRSe - RMSe ) - ( MUM * RRSe ) ) ),Max( ( ( RRSe - DS ) - ( RMSe + MUM ) ),( ( RRSe + RMSe ) / ( RCSe * RRSe ) ) ) ) ) ) ) ,Min( Max( ( ( ( Max( ( CS - MUR ),( MUR * RRSe ) ) + ( Max( MLU,RRSe ) - Max( RCSe,RMSe ) ) ) / Max( ( ( RMSe * RCSe ) + ( RCSe - RCSe ) ),Min( ( MLU * MUC ) ,( MUR / CS ) ) ) ) / ( Min( ( ( RRSe - MUC ) / ( DS - MUC ) ) ,( ( RMSe - MUR ) * ( RMSe - MUC ) ) ) + Min( Max( Max( RCSe,MLU ),( RCSe - DS ) ) ,( ( RRSe + MLU ) - ( CS * RRSe ) ) ) ) ),( ( Max( ( ( DS * RCSe ) + ( RMSe * RCSe ) ),( ( RCSe * MLU ) + ( CS / RMSe ) ) ) * ( ( ( MUM - MUR ) + Min( RCSe ,MUR ) ) * ( Max( MLU,MUC ) - ( RCSe - MUC ) ) ) ) + ( Min( ( ( DS + MUR ) * ( MUC / MLU ) ) ,Max( ( MUM - MUM ),( RCSe / MUR ) ) ) / Max( ( Max( CS,MUM ) - ( MLU - DS ) ),( ( RRSe * CS ) + ( MUR + RMSe ) ) ) ) ) ) ,( Min( ( ( ( ( MUM * MLU ) + ( CS - MUM ) ) + ( Max( RCSe,MUR ) - ( MUC / MUM ) ) ) + ( ( ( MUC - RRSe ) + ( MUM / MUM ) ) + ( ( MUM * RRSe ) / ( MUM / MUC ) ) ) ) ,( Max( ( ( RRSe * MUR ) * ( DS * DS ) ),( ( MUR - DS ) - ( MUM * RCSe ) ) ) * Max( Max( ( RMSe + RRSe ),( RRSe / RMSe ) ),Min( Max( MLU,MLU ) ,( RMSe - RMSe ) ) ) ) ) / ( Min( ( ( ( MUR / MUR ) + ( RCSe + MLU ) ) - Min( Max( DS,DS ) ,( CS - MUR ) ) ) ,Max( Min( ( MUM - MUM ) ,( RCSe / MUC ) ),Min( ( MUR - CS ) ,( RMSe + MLU ) ) ) ) - ( ( Max( ( MUC / MUC ),( DS + MUM ) ) + Min( ( MLU / MUC ) ,( MUR - MLU ) ) ) / ( ( ( RRSe + RMSe ) - ( MLU - RMSe ) ) + Max( Max( MUC,RMSe ),( MLU + RMSe ) ) ) ) ) ) ) )", "obj1": 0.2528301886792453, "obj2": 0.6337511200905049}, {"determining": "( CRS - ( DDR - PN ) )", "choosing": "( ( ( RCSe - MLU ) / ( RRSe - MUC ) ) - ( ( ( MUC / CS ) + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.006279168824472598}, {"determining": "Min( Max( FirstVNF_Mem_Server,DDR ) ,( MRS + FirstVNF_RAM ) )", "choosing": "( ( DS - MUM ) * ( MLU + CS ) )", "obj1": 0.3490566037735849, "obj2": 0.5245731057807178}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( DS / RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.5792452830188679, "obj2": 0.3291224201064391}, {"determining": "Min( Const ,( MRS / FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR + RMSe ) * ( RMSe - RCSe ) ) - DS ),( DS / CS ) )", "obj1": 0.5867924528301887, "obj2": 0.30157751344593725}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,Min( Max( FirstVNF_Mem_Server,DDR ) ,( MRS + FirstVNF_RAM ) ) ),( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( RRS + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Max( Min( RMSe ,MUC ),Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - DS )", "obj1": 0.21509433962264152, "obj2": 0.7050428206572891}, {"determining": "Max( Max( Const,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.4320754716981132, "obj2": 0.4332257449795565}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) )", "obj1": 0.6735849056603773, "obj2": 0.24375949770765257}, {"determining": "( ( MDR + AMS ) - FirstVNF_Mem )", "choosing": "( MUM * Min( RCSe ,DS ) )", "obj1": 0.7169811320754716, "obj2": 0.20549301407236747}, {"determining": "Max( ( PN + ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ),( Const + ARS ) )", "choosing": "( ( ( RCSe - MUM ) - CS ) * Max( MUC,RRSe ) )", "obj1": 0.33584905660377357, "obj2": 0.54484835637389}, {"determining": "Max( ( ( MRS / MRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( ( MUR + RCSe ) * ( RMSe - RRSe ) ) / Max( MLU,CS ) ) )", "obj1": 0.2811320754716981, "obj2": 0.6215884429453546}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( MUM ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) )", "obj1": 0.6943396226415094, "obj2": 0.22273734305633136}, {"determining": "( ( BR * FirstVNF_Mem ) - ( ( BR * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) )", "choosing": "( ( ( ( CS - CS ) * Max( MUC,RRSe ) ) - CS ) * Max( MUC,RRSe ) )", "obj1": 0.30943396226415093, "obj2": 0.5628165268635293}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( ARS + Const ) ) - Max( FirstVNF_Mem,Const ) ) + Const ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( Max( ( RCSe + ( MLU * MUR ) ),MUC ) / ( RCSe - MUM ) )", "obj1": 0.2981132075471698, "obj2": 0.5906307862496737}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + Const ) ) - ( DDR - PN ) )", "choosing": "( ( ( Max( MLU,MUR ) * ( RRSe / RRSe ) ) - ( ( MUR * RCSe ) - Min( DS ,MUR ) ) ) - ( ( CS + ( RMSe / MUR ) ) / ( Max( RMSe,MUC ) - Min( MUM ,CS ) ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4543853875683642}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - FirstVNF_Mem )", "choosing": "( ( CS - CS ) * Max( MUC,CS ) )", "obj1": 0.9188679245283019, "obj2": 0.06522607348080821}, {"determining": "Max( Max( ARS,PN ),( RRS * ( CRS / ARS ) ) )", "choosing": "( ( DS - CS ) * Max( MUC,Max( MUC,RRSe ) ) )", "obj1": 0.3622641509433962, "obj2": 0.5103621242325336}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / ACS ) )", "choosing": "( ( MUR + MUR ) * ( RCSe - MUM ) )", "obj1": 0.9226415094339623, "obj2": 0.06313049610404582}, {"determining": "( ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( PN + CRS ) ) + ( ( BR * MRS ) - ( FirstVNF_CPU_Server - MRS ) ) ) - ( ( Min( MRS ,MDR ) + ( FirstVNF_Mem_Server + Const ) ) + ( Min( ARS ,Const ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RCSe + ( MLU * RCSe ) ),MUC ) ,( ( DS / MUR ) - MLU ) )", "obj1": 0.2169811320754717, "obj2": 0.6935209335434595}, {"determining": "( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,( ( ARS * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( MUM * RMSe ) ) ) ) + ( MUM * RMSe ) )", "obj1": 0.49433962264150944, "obj2": 0.42305810228831153}, {"determining": "( AMS - Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( MUR + MUR ) * Min( ( RCSe + RMSe ) ,DS ) )", "obj1": 0.7018867924528301, "obj2": 0.21774199609664238}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem * CRS ) )", "choosing": "Min( Min( ( Min( ( RCSe - MLU ) ,MLU ) - MUM ) ,( RCSe + RMSe ) ) ,( MUM * Min( MUC ,MUM ) ) )", "obj1": 0.2849056603773585, "obj2": 0.610805992824069}, {"determining": "Min( MDR ,( MRS + MRS ) )", "choosing": "( ( DS - CS ) * Max( MUC,MLU ) )", "obj1": 0.42641509433962266, "obj2": 0.4523442908867226}, {"determining": "( ( ( ( FirstVNF_RAM * FirstVNF_Mem ) * Max( MDR,DDR ) ) + ARS ) - ( MDR / ( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( ( Max( RCSe,RCSe ) - MUM ) ,( RRSe - MUM ) ) - MUM ) ,( RRSe - MUM ) ) * ( MLU - MUC ) )", "obj1": 0.29245283018867924, "obj2": 0.597638315339011}, {"determining": "( ( ARS * FirstVNF_Mem ) - ( ( BR * FirstVNF_Mem ) - Min( Const ,Const ) ) )", "choosing": "( ( ( DS - CS ) * Max( MUC,RRSe ) ) + ( ( MUR + MUR ) * Min( RCSe ,MLU ) ) )", "obj1": 0.5037735849056604, "obj2": 0.41405361667588647}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( AMS / ACS ) )", "choosing": "( Min( Min( RRSe ,MUM ) ,DS ) - Min( RRSe ,( Max( RCSe,CS ) / ( RMSe / CS ) ) ) )", "obj1": 0.3264150943396226, "obj2": 0.5563319093125401}]}