{"1": [{"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) )", "choosing": "Max( ( RRSe + DS ),( MUR / MUC ) )", "obj1": 0.8226415094339623, "obj2": 0.14646452600911303}, {"determining": "( ( Min( PN ,AMS ) * ( DDR / PN ) ) * ( BR * MDR ) )", "choosing": "( ( DS - ( MUR / DS ) ) - Max( ( Max( DS,MUM ) + MUM ),DS ) )", "obj1": 0.5943396226415094, "obj2": 0.3384967375934815}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( MRS ,( Max( FirstVNF_RAM_Server,MDR ) - AMS ) ) ) - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( CS / ( MLU / RMSe ) ) + ( MLU - CS ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "( ( ARS + Const ) / Max( ( DDR / RRS ),BR ) )", "choosing": "Min( ( Min( ( RRSe * RCSe ) ,RCSe ) * MUC ) ,( CS - RMSe ) )", "obj1": 0.30377358490566037, "obj2": 0.6839682973874112}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ( MRS * MRS ) ) )", "choosing": "( Min( DS ,MLU ) + Min( ( CS / RCSe ) ,( Min( RMSe ,( CS / MUM ) ) - MLU ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "( Min( ( ACS - PN ) ,AMS ) * ( RRS / ACS ) )", "choosing": "Min( ( MUR - DS ) ,( RMSe + MUM ) )", "obj1": 0.3169811320754717, "obj2": 0.6248217269872135}, {"determining": "( Max( ( ( MDR / FirstVNF_CPU_Server ) / BR ),BR ) + ( RRS / RRS ) )", "choosing": "Min( ( ( ( RRSe + MUM ) - ( DS - CS ) ) + RMSe ) ,Min( CS ,CS ) )", "obj1": 0.4, "obj2": 0.5967172290708811}, {"determining": "Max( ( CRS - Min( DDR ,ACS ) ),Min( PN ,AMS ) )", "choosing": "Max( Max( MUM,RCSe ),( ( RRSe + MUC ) / RMSe ) )", "obj1": 0.42641509433962266, "obj2": 0.5074000997236711}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "Min( ( MDR + Const ) ,( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "Min( ( MUM * CS ) ,( MUC * DS ) )", "obj1": 0.7264150943396226, "obj2": 0.21099240399725533}, {"determining": "( ( Const * FirstVNF_CPU_Server ) / Max( RRS,FirstVNF_Mem ) )", "choosing": "( ( MUM * MUR ) - Min( MUR ,RRSe ) )", "obj1": 0.4037735849056604, "obj2": 0.5322924542217883}, {"determining": "( ( ACS / RRS ) - Max( Const,DDR ) )", "choosing": "( Max( MUC,RMSe ) - ( MLU / RCSe ) )", "obj1": 0.2943396226415094, "obj2": 0.6442853450189476}, {"determining": "( ( ACS / Const ) + ( Const / ACS ) )", "choosing": "( Max( RMSe,MUM ) / ( RMSe - RRSe ) )", "obj1": 0.3264150943396226, "obj2": 0.6184210028376175}, {"determining": "Max( Min( BR ,ACS ),( ACS / FirstVNF_RAM ) )", "choosing": "Min( Max( RMSe,MUM ) ,( MUC * MLU ) )", "obj1": 0.44716981132075473, "obj2": 0.5019142013496415}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( Max( MRS,FirstVNF_RAM ),FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( ( RCSe + MUR ) / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "Min( ( FirstVNF_RAM_Server / DDR ) ,( PN * FirstVNF_CPU ) )", "choosing": "( Max( MUC,MUR ) / Max( CS,MUR ) )", "obj1": 0.39811320754716983, "obj2": 0.5241142876508259}, {"determining": "Max( Max( RRS,Const ),Max( CRS,( Max( AMS,FirstVNF_Mem_Server ) + ACS ) ) )", "choosing": "Max( ( Max( RCSe,Min( RCSe ,CS ) ) - CS ),( MUM / CS ) )", "obj1": 0.39245283018867927, "obj2": 0.5086944536754348}, {"determining": "( ( Max( FirstVNF_RAM,PN ) + FirstVNF_CPU_Server ) * ( ACS / Const ) )", "choosing": "( ( ( ( RCSe / RCSe ) - DS ) - MUR ) * Min( DS ,MUC ) )", "obj1": 0.3490566037735849, "obj2": 0.5791699780754357}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( MUM / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( RRSe - ( RMSe - DS ) ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( MUM * MUR ) )", "obj1": 0.29056603773584905, "obj2": 0.6133302173055211}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( RCSe - MUR ) * ( DS + MLU ) )", "obj1": 0.330188679245283, "obj2": 0.5956776812274587}, {"determining": "( ( FirstVNF_CPU * DDR ) + ( Const + DDR ) )", "choosing": "Max( ( RRSe - MUM ),Min( RCSe ,MUR ) )", "obj1": 0.43018867924528303, "obj2": 0.5059720127907679}, {"determining": "( Min( MDR ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( ( DS * CS ) - ( MUC - CS ) )", "obj1": 0.3471698113207547, "obj2": 0.6541636076993274}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( FirstVNF_CPU * DDR ) )", "choosing": "( ( DS / RCSe ) * ( DS - RRSe ) )", "obj1": 0.2018867924528302, "obj2": 0.7210670302342115}, {"determining": "Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) )", "choosing": "( Max( DS,CS ) - Min( RRSe ,MUM ) )", "obj1": 0.2943396226415094, "obj2": 0.665266753830121}, {"determining": "Max( ( PN / FirstVNF_RAM ),( PN / RRS ) )", "choosing": "( Max( RRSe,CS ) + Max( RMSe,MUC ) )", "obj1": 0.44716981132075473, "obj2": 0.49021088760996234}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - ( AMS - CRS ) ) - Min( MDR ,DDR ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( RMSe - ( ( MUC + RCSe ) / MLU ) ) ,( ( ( RCSe / ( MUM * RCSe ) ) / DS ) * MUC ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( MDR + RRS ) + Max( AMS,( DDR / ( FirstVNF_RAM_Server + Min( ( FirstVNF_Mem_Server + Max( BR,( FirstVNF_Mem_Server - DDR ) ) ) ,Const ) ) ) ) )", "choosing": "Max( ( Min( MUR ,( ( Min( DS ,( RCSe / ( RCSe + MLU ) ) ) + ( MUC + RMSe ) ) - Min( MUM ,RMSe ) ) ) / MUC ),( RMSe + RMSe ) )", "obj1": 0.4320754716981132, "obj2": 0.4963445851217055}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - ( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) / Const ) )", "choosing": "( ( ( ( Min( RCSe ,DS ) - MUM ) + ( ( CS * MUM ) * RCSe ) ) / CS ) / Min( DS ,CS ) )", "obj1": 0.5188679245283019, "obj2": 0.4354823064269744}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( BR - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( RCSe * CS ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + Min( Const ,ACS ) ) )", "choosing": "( ( ( RRSe * MUM ) + Max( MUR,DS ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) * ( FirstVNF_RAM_Server - Const ) )", "choosing": "( Min( MUC ,CS ) * ( Min( RCSe ,MUM ) / DS ) )", "obj1": 0.4716981132075472, "obj2": 0.4856797931830235}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - ( MUR - CS ) ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "( Max( ACS,ACS ) + Min( FirstVNF_Mem_Server ,( ARS + FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( CS ,MLU ) + ( RMSe + CS ) ) ,Min( Min( RRSe ,CS ) ,Max( CS,RCSe ) ) )", "obj1": 0.4509433962264151, "obj2": 0.5046605315441668}, {"determining": "( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUC - MUM ) ,( DS / DS ) ) + Min( ( MUC - MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.3283018867924528, "obj2": 0.5872849471027951}, {"determining": "( ( AMS / Const ) - ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( CS,RCSe ) ,( MUR + RRSe ) ) / Min( DS ,RCSe ) )", "obj1": 0.10754716981132076, "obj2": 0.7977356489974547}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * MRS ) - AMS ) ) )", "choosing": "( ( RCSe - ( RCSe + DS ) ) - ( ( MUR + Max( MUR,MUM ) ) + Max( RCSe,RMSe ) ) )", "obj1": 0.9905660377358491, "obj2": 0.004113643199977306}, {"determining": "( ( DDR * BR ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + MUC ) * ( RCSe + MUR ) )", "obj1": 0.5622641509433962, "obj2": 0.3709421407863846}, {"determining": "Max( ( ( PN / ARS ) + ( FirstVNF_RAM - CRS ) ),( ( FirstVNF_Mem / ( FirstVNF_CPU + DDR ) ) - ( Const - Const ) ) )", "choosing": "( ( CS * RMSe ) + Min( Max( ( MLU / ( CS + ( DS / ( Max( RMSe,MUR ) / RCSe ) ) ) ),RMSe ) ,RCSe ) )", "obj1": 0.4377358490566038, "obj2": 0.5204140103159667}, {"determining": "( Max( ARS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * Min( ( ( BR + ( ACS - FirstVNF_Mem_Server ) ) + Min( CRS ,AMS ) ) ,Const ) ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - ( RCSe * MUR ) ) + ( Min( ( MUM - RMSe ) ,( RMSe - Max( Max( ( MUR + MUM ),( ( RMSe * DS ) - Max( DS,MLU ) ) ),CS ) ) ) + ( MLU * DS ) ) )", "obj1": 0.39433962264150946, "obj2": 0.5342384679924255}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( ( Const - MRS ) * ( ACS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( Min( ( DS * DS ) ,Min( DS ,Min( RMSe ,MUC ) ) ) - RMSe ) / ( MLU - RRSe ) ) * RRSe ) / Min( MUR ,DS ) ) + ( ( RCSe - RRSe ) * Min( MLU ,MUM ) ) )", "obj1": 0.19433962264150945, "obj2": 0.7315861556628441}, {"determining": "Max( ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ),( ( ( PN - CRS ) * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( RCSe / ( ( MUM * ( ( MUM / MUC ) - MLU ) ) / ( ( ( ( RMSe * MUR ) + ( RCSe * CS ) ) - Min( CS ,RMSe ) ) + DS ) ) ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "( ( BR - ( FirstVNF_CPU / Const ) ) * ( AMS - ( FirstVNF_Mem_Server / PN ) ) )", "choosing": "Max( ( MUM + RMSe ),Min( ( MUR - RCSe ) ,MUC ) )", "obj1": 0.4037735849056604, "obj2": 0.5256211202603047}, {"determining": "( ( ( DDR + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) + ( ( CRS / FirstVNF_CPU ) + ( FirstVNF_RAM + MRS ) ) )", "choosing": "( Min( MUR ,RMSe ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 0.360377358490566, "obj2": 0.56655115132628}, {"determining": "Max( ( BR - FirstVNF_RAM ),Min( FirstVNF_CPU ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - Max( CS,CS ) )", "obj1": 0.39622641509433965, "obj2": 0.5033766190607741}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "( Min( AMS ,CRS ) * ( ( FirstVNF_RAM_Server * ( CRS + MDR ) ) / RRS ) )", "choosing": "Max( ( RRSe * ( DS - MUR ) ),Min( Min( RCSe ,MUC ) ,MUR ) )", "obj1": 0.44150943396226416, "obj2": 0.49426941567319294}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Min( ( RRS * FirstVNF_Mem_Server ) ,AMS ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + Min( RRSe ,MUM ) )", "obj1": 0.4849056603773585, "obj2": 0.4492607129413254}, {"determining": "( ( CRS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( FirstVNF_RAM - ACS ) )", "choosing": "( Min( ( CS - MUM ) ,MLU ) + ( ( DS + MUC ) + MUM ) )", "obj1": 0.930188679245283, "obj2": 0.08109540554937512}, {"determining": "( ( Min( ARS ,RRS ) * ( FirstVNF_CPU_Server + Const ) ) + ( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_RAM / ( ARS - ( RRS * FirstVNF_RAM ) ) ) + AMS ) ) )", "choosing": "( ( Max( MUR,RRSe ) * Min( CS ,( RRSe * Min( MLU ,MUC ) ) ) ) + Min( Max( DS,CS ) ,Min( RRSe ,DS ) ) )", "obj1": 0.5056603773584906, "obj2": 0.43959161645377237}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server - AMS ) ,FirstVNF_Mem ) ) + ( FirstVNF_CPU + ( ARS / ARS ) ) )", "choosing": "( Min( RMSe ,RCSe ) + Max( Min( RMSe ,RCSe ),MUR ) )", "obj1": 0.5245283018867924, "obj2": 0.466008683744099}, {"determining": "( ( MDR * PN ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( Min( ( MUC - MUC ) ,( Max( DS,Max( ( MLU / Min( RMSe ,MUR ) ),RRSe ) ) * RRSe ) ) + ( RMSe + CS ) ) )", "obj1": 0.9245283018867925, "obj2": 0.07868853083573585}, {"determining": "( ( ( FirstVNF_Mem / CRS ) / ( CRS / FirstVNF_Mem ) ) + ( Min( AMS ,ACS ) - ( MDR - MRS ) ) )", "choosing": "Max( ( ( RRSe * CS ) * Max( CS,RMSe ) ),( ( RMSe + DS ) - ( CS / RCSe ) ) )", "obj1": 0.4830188679245283, "obj2": 0.48455247729398065}, {"determining": "( Min( Const ,PN ) / ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( RRSe,Max( RCSe,CS ) ) / ( ( RMSe + MUM ) + ( RRSe / MLU ) ) )", "obj1": 0.33584905660377357, "obj2": 0.6180421581342157}, {"determining": "( ( ( ( ( DDR / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + FirstVNF_Mem ) + CRS ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( AMS ,AMS ) * ( PN + RRS ) ) )", "choosing": "( Min( RRSe ,RCSe ) - ( Min( RMSe ,CS ) - ( RCSe + CS ) ) )", "obj1": 0.3339622641509434, "obj2": 0.6101341974610426}, {"determining": "( ( FirstVNF_CPU_Server / ( MDR / MRS ) ) - Min( BR ,ACS ) )", "choosing": "( ( ( DS / MUC ) - RMSe ) * Max( MUR,MLU ) )", "obj1": 0.6849056603773584, "obj2": 0.3184885304543091}, {"determining": "( ( Max( Min( FirstVNF_Mem ,CRS ),RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU / MUC ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( Max( FirstVNF_RAM_Server,Const ) / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( ( ( ( RCSe * Max( RRSe,CS ) ) * MLU ) - ( MUC * CS ) ) * MLU ) / RCSe ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,PN ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / Max( ( ( Max( MDR,( ( PN * AMS ) + ARS ) ) - FirstVNF_Mem ) * FirstVNF_Mem_Server ),Max( ACS,MRS ) ) )", "choosing": "( ( ( MLU + DS ) - Min( MUC ,RMSe ) ) - Max( CS,DS ) )", "obj1": 0.3886792452830189, "obj2": 0.567417159571241}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( MRS / MDR ) )", "choosing": "( ( MUM / RCSe ) - ( MLU + DS ) )", "obj1": 0.9113207547169812, "obj2": 0.10993052631860312}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( CS - MUC ) / MUR ) - ( CS + CS ) ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.4339622641509434, "obj2": 0.48726661111337416}, {"determining": "( ( ( FirstVNF_CPU - ( ACS + AMS ) ) / BR ) - ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( CS * ( MUC - DS ) ) - ( ( MUR + RCSe ) - ( CS - MLU ) ) )", "obj1": 0.32075471698113206, "obj2": 0.647856917994524}, {"determining": "( Max( FirstVNF_RAM,MRS ) * ( AMS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe * RCSe ) - MUM ) / ( ( MLU + MLU ) / MUM ) )", "obj1": 0.3867924528301887, "obj2": 0.5315057039663836}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,AMS ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( Max( DS,RCSe ) * ( MLU - RCSe ) ) )", "obj1": 0.25660377358490566, "obj2": 0.6654496425143182}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( ACS + ARS ) ) - ( PN - DDR ) )", "choosing": "( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Max( ( MUM / MLU ),Min( CS ,DS ) ) / Max( Min( RRSe ,MUM ),Max( RRSe,MUC ) ) ) )", "obj1": 0.24528301886792453, "obj2": 0.6807093699066564}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( MLU,RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server * CRS ),( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( CS * CS ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / MUR ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) )", "obj1": 0.5679245283018868, "obj2": 0.36675247715321546}, {"determining": "Max( ( ( ( CRS / FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + ( Min( ACS ,RRS ) + Min( MRS ,FirstVNF_Mem ) ) ),Max( Max( Min( CRS ,ACS ),Min( FirstVNF_RAM ,Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ),Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,RRS ) ) ) )", "choosing": "Max( Min( Min( ( CS - MUM ) ,( RRSe - RMSe ) ) ,Max( Min( CS ,MUM ),( RMSe / RRSe ) ) ),Max( ( MUC * MUC ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.32452830188679244, "obj2": 0.6015544526339333}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( Min( ( PN * Const ) ,( FirstVNF_CPU_Server * ARS ) ) + ( Min( ARS ,AMS ) + ( FirstVNF_CPU_Server * MDR ) ) ) * Max( Max( ( FirstVNF_RAM - FirstVNF_CPU ),( FirstVNF_RAM * RRS ) ),( ( FirstVNF_RAM_Server * AMS ) + ( MDR / RRS ) ) ) )", "choosing": "Min( ( Max( ( DS * MUC ),( RMSe + MUR ) ) + ( ( MUM + RCSe ) * ( RRSe * MLU ) ) ) ,( ( ( MLU - MLU ) * Max( MLU,RRSe ) ) * Max( ( RMSe - MUC ),( DS / MUR ) ) ) )", "obj1": 0.4018867924528302, "obj2": 0.5425613436547421}, {"determining": "( ( PN / FirstVNF_RAM ) / ( Min( DDR ,Const ) / MDR ) )", "choosing": "( ( ( Min( MLU ,DS ) / ( MUR * MUM ) ) / Max( ( RRSe - RMSe ),( RMSe - RCSe ) ) ) + ( ( ( CS * MUM ) / ( MUM / MLU ) ) * Min( ( MUM * RCSe ) ,Min( DS ,DS ) ) ) )", "obj1": 0.38301886792452833, "obj2": 0.5518250359249712}, {"determining": "Min( ( MRS * PN ) ,( FirstVNF_Mem + ( FirstVNF_RAM_Server + Max( MDR,RRS ) ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( MUM - RCSe ) )", "obj1": 0.32264150943396225, "obj2": 0.628833836792572}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( Max( ( PN + ARS ),( BR / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) * ( ACS - RRS ) ) ) + ( Min( FirstVNF_Mem ,DDR ) + ( Max( ARS,AMS ) - ( BR + AMS ) ) ) )", "choosing": "( Max( ( Min( DS ,MUC ) + ( MUR + DS ) ),RRSe ) + ( CS * RRSe ) )", "obj1": 0.7943396226415095, "obj2": 0.1843042304141109}, {"determining": "( ( CRS - MRS ) / ( Max( ARS,RRS ) - DDR ) )", "choosing": "( ( ( Max( ( MUM - MUM ),MLU ) * ( MUM + MLU ) ) * Max( ( MUM - RRSe ),( RRSe / MLU ) ) ) + ( Min( ( RRSe * RRSe ) ,( MUR / RMSe ) ) + ( ( CS / MUR ) * ( MLU / RMSe ) ) ) )", "obj1": 0.6037735849056604, "obj2": 0.3615719476512424}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,RRS ) ) ) )", "choosing": "Min( Min( ( ( MUC * MLU ) / ( MUC / MUR ) ) ,( ( MUR - RCSe ) * ( DS * RMSe ) ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.576464599446187}, {"determining": "Min( Max( ( FirstVNF_CPU_Server / BR ),Const ) ,Min( ( FirstVNF_CPU * BR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( CS * MUM ) ) + Max( ( MUM - MUC ),( MLU / MUR ) ) ) ,( ( Min( ( Max( ( MUR / CS ),Min( ( MUM * RMSe ) ,( MUM / MUC ) ) ) / Max( Min( MUC ,RCSe ),MUM ) ) ,MUR ) - MUM ) * Min( Max( RRSe,MLU ) ,( MUR / MUR ) ) ) )", "obj1": 0.4358490566037736, "obj2": 0.48823427334035224}, {"determining": "Min( ( BR * MRS ) ,Min( ( Max( FirstVNF_Mem,AMS ) + ( BR - FirstVNF_Mem ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - ( Min( DS ,RRSe ) - ( RCSe + RCSe ) ) ) ) ) ,Min( RMSe ,Min( ( DS - RRSe ) ,RMSe ) ) )", "obj1": 0.35471698113207545, "obj2": 0.5695113418073122}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Const ) ) + Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) ) - Min( ( Min( FirstVNF_RAM ,PN ) / Max( AMS,ACS ) ) ,( ( FirstVNF_CPU - ACS ) + ( FirstVNF_CPU_Server / ACS ) ) ) )", "choosing": "Max( ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) + ( ( RRSe * CS ) * Max( MUR,RCSe ) ) ),( Min( ( CS - RCSe ) ,( MUM + RMSe ) ) - ( ( RMSe + RMSe ) - ( CS / MLU ) ) ) )", "obj1": 0.43018867924528303, "obj2": 0.5158805045656931}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( ( MDR * BR ) * ( FirstVNF_CPU_Server * DDR ) )", "choosing": "Min( ( MUC + Max( DS,( ( RRSe / MUC ) * DS ) ) ) ,Max( CS,Max( ( ( RCSe + MLU ) * Max( Max( Min( Min( MUR ,RRSe ) ,RRSe ),MUC ),Max( RRSe,( CS * MUR ) ) ) ),( Min( CS ,Min( MUC ,CS ) ) / MUM ) ) ) )", "obj1": 0.4509433962264151, "obj2": 0.47928585981894867}, {"determining": "Min( Max( ( RRS + FirstVNF_Mem_Server ),Const ) ,Min( ( ( DDR * MDR ) - PN ) ,PN ) )", "choosing": "( Min( ( ( MUC * MUM ) - Max( DS,MUM ) ) ,( ( CS - MLU ) / Min( DS ,MUR ) ) ) * Max( ( ( CS / RRSe ) - ( MUM + RCSe ) ),( Max( DS,CS ) * ( CS / RMSe ) ) ) )", "obj1": 0.7584905660377359, "obj2": 0.3201158081728542}, {"determining": "( ( ( ( MDR + BR ) + ( CRS * RRS ) ) - Min( FirstVNF_RAM ,ARS ) ) * Min( ( Max( FirstVNF_Mem,PN ) - ( PN * FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server / Max( Min( MDR ,Min( RRS ,MDR ) ),FirstVNF_CPU_Server ) ) / ( PN - PN ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MLU ) ,RRSe ) * ( Min( RCSe ,( Max( MUM,MUR ) + RCSe ) ) - ( RRSe * DS ) ) ) ,( ( RMSe / ( RMSe / CS ) ) - RCSe ) )", "obj1": 0.28867924528301886, "obj2": 0.6998224999492759}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) )", "choosing": "( ( ( ( RCSe * MLU ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) - Max( ( ( RCSe + MUC ) / ( RRSe / RCSe ) ),( ( CS + CS ) - ( MUC + DS ) ) ) )", "obj1": 0.9188679245283019, "obj2": 0.10092744706923497}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( BR * FirstVNF_CPU ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( RCSe,CS ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "Max( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * MDR ) ) - Min( ( ACS - MRS ) ,( PN + FirstVNF_RAM ) ) ),( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * Max( Min( RRS ,AMS ),( MRS * FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( MLU * MUC ) / ( MLU * RRSe ) ),Max( RMSe,MUM ) ) ,( DS + MUM ) )", "obj1": 0.930188679245283, "obj2": 0.08621344153934944}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Min( CRS ,ARS ) - ( FirstVNF_RAM_Server - BR ) ) ),( ( Max( Const,PN ) + ( FirstVNF_RAM_Server - Const ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( Max( ( MUR * RCSe ),( MUM - RCSe ) ) * ( ( CS * RRSe ) - ( MUM / RRSe ) ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.6313499839911025}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) - Const ) - ( Const * FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Max( MUC,RMSe ) ,Max( RMSe,MUR ) ) ,Max( ( RMSe + RRSe ),Min( CS ,RMSe ) ) ) / Min( Min( ( RCSe * MLU ) ,Min( MUM ,MUR ) ) ,( ( RMSe / RMSe ) - ( MLU / RCSe ) ) ) )", "obj1": 0.4037735849056604, "obj2": 0.5019958249106065}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}], "2": [{"determining": "( ( Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RCSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( MUM / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( ( FirstVNF_Mem_Server - DDR ) + ( MRS - ( PN / MDR ) ) ) )", "choosing": "( ( DS + Max( ( RMSe * MUM ),RMSe ) ) / Min( DS ,RCSe ) )", "obj1": 0.08113207547169811, "obj2": 0.7985216270344495}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( Const * AMS ) )", "choosing": "( ( RCSe - ( RCSe + DS ) ) - ( DS + CS ) )", "obj1": 0.15849056603773584, "obj2": 0.6729766648284605}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "Max( Min( MDR ,AMS ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( Max( DS,RCSe ) * ( MLU - RCSe ) ) )", "obj1": 0.25660377358490566, "obj2": 0.6654496425143182}, {"determining": "( ( PN / FirstVNF_RAM ) / ( Min( ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) ,Const ) / MDR ) )", "choosing": "( ( ( Min( MLU ,DS ) / ( MUR * MUM ) ) / Max( ( RRSe - Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) ) ),( RMSe - RCSe ) ) ) + ( ( ( CS * MUM ) / ( MUM / MLU ) ) * Min( ( MUM * RCSe ) ,Min( DS ,DS ) ) ) )", "obj1": 0.8264150943396227, "obj2": 0.12158468449713367}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) )", "choosing": "( ( DS / RCSe ) * ( DS - Max( DS,CS ) ) )", "obj1": 0.15660377358490565, "obj2": 0.7199837739236579}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,( MUM * DS ) )", "obj1": 0.7132075471698113, "obj2": 0.21781817797700914}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "( ( MDR * ( PN / Min( ( FirstVNF_CPU_Server - AMS ) ,FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( Min( ( MUC - Min( RMSe ,RCSe ) ) ,( Max( DS,Max( ( MLU / Min( RMSe ,MUR ) ),RRSe ) ) * RRSe ) ) + ( RMSe + CS ) ) )", "obj1": 0.9207547169811321, "obj2": 0.07844543006302523}, {"determining": "( Min( ( PN / BR ) ,Max( BR,FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU + ( ARS / ARS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( ( Min( RMSe ,RCSe ) + MUR ) + ( RMSe + CS ) ) )", "obj1": 0.3320754716981132, "obj2": 0.5448502478061031}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( MUM * MUR ) )", "obj1": 0.29056603773584905, "obj2": 0.6133302173055211}, {"determining": "Max( ( BR - FirstVNF_RAM ),( AMS + ACS ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - ( MLU + ( MLU * Max( ( RRSe * MUM ),Min( RMSe ,MUR ) ) ) ) )", "obj1": 0.3169811320754717, "obj2": 0.5747828733159351}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( BR - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * ( MUR + MUC ) ) )", "obj1": 0.4641509433962264, "obj2": 0.46897319253771014}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.40943396226415096, "obj2": 0.47396505092898106}, {"determining": "Max( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ),( ( Max( Const,PN ) + ( FirstVNF_RAM_Server - Const ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) * ( ( CS * RRSe ) - ( MUM / RRSe ) ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.2962264150943396, "obj2": 0.5790599865207092}, {"determining": "( ( ACS - Min( ( ( ( ( ACS - Min( DDR ,MRS ) ) - FirstVNF_RAM_Server ) + MRS ) + FirstVNF_Mem_Server ) ,DDR ) ) - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MUR / ( Min( ( MUR * RRSe ) ,( DS + Min( CS ,( ( CS / MLU ) * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.9358490566037736, "obj2": 0.05227030699323318}, {"determining": "( Max( Min( CRS ,( RRS / PN ) ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) )", "choosing": "( ( ( ( RCSe * MLU ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * ( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) ) ) ) ) - Max( ( ( RCSe + MUC ) / ( RRSe / RCSe ) ),( ( CS + CS ) - ( MUC + DS ) ) ) )", "obj1": 0.5207547169811321, "obj2": 0.4030361072928948}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ACS * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.9641509433962264, "obj2": 0.007673370602156716}, {"determining": "( ( Max( Const,( ACS / ( ARS * DDR ) ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe + RCSe ) + ( MLU - Max( RRSe,MUC ) ) ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1509433962264151, "obj2": 0.7599015627966109}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Min( ( RRS * FirstVNF_Mem_Server ) ,CRS ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + Min( ( Min( ( CS - MUM ) ,MLU ) + ( ( DS + MUC ) + MUM ) ) ,MUM ) )", "obj1": 0.4981132075471698, "obj2": 0.42018322040494455}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) ),RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.8962264150943396, "obj2": 0.09758127386774952}, {"determining": "( ( Min( PN ,AMS ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * ( BR * MDR ) )", "choosing": "( ( DS - ( MUR / DS ) ) - Max( ( Max( DS,MUM ) + MUM ),( ( MUC - MLU ) / ( MUC + MLU ) ) ) )", "obj1": 0.5415094339622641, "obj2": 0.3815237561387655}, {"determining": "Max( PN,( MDR * ACS ) )", "choosing": "( Min( DS ,MLU ) + Max( ( CS / ( MUC + MUM ) ),RMSe ) )", "obj1": 0.5773584905660377, "obj2": 0.3465619782118682}, {"determining": "Max( ( BR - ( ARS + MDR ) ),( FirstVNF_RAM + ACS ) )", "choosing": "( ( ( ( DS * MUC ) / MUC ) - ( CS * CS ) ) - ( MLU + ( MLU * CS ) ) )", "obj1": 0.36981132075471695, "obj2": 0.5105139346375072}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Min( ( RRS * FirstVNF_Mem_Server ) ,AMS ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + Min( RRSe ,MUM ) )", "obj1": 0.4849056603773585, "obj2": 0.4492607129413254}, {"determining": "Max( ( BR - FirstVNF_RAM ),Min( FirstVNF_CPU ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - Max( CS,CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5215103657693918}, {"determining": "( Max( ACS,Const ) / ( Min( BR ,ARS ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / CS ) - ( RCSe * CS ) )", "obj1": 0.5830188679245283, "obj2": 0.31559204988272554}, {"determining": "Min( Min( Const ,MDR ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( ( ( RRSe + MUC ) / RMSe ) * DS ) )", "obj1": 0.9584905660377359, "obj2": 0.03738441612515657}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) )", "choosing": "Max( ( RRSe + DS ),( MUR / MUC ) )", "obj1": 0.8226415094339623, "obj2": 0.14646452600911303}, {"determining": "( ( Min( BR ,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) + ( Min( AMS ,AMS ) * ( FirstVNF_CPU_Server / ( MDR / MRS ) ) ) )", "choosing": "( Min( ( RMSe - MLU ) ,( RMSe - ( ( DS / MUC ) - RMSe ) ) ) - ( Min( RMSe ,CS ) - ( RCSe + CS ) ) )", "obj1": 0.269811320754717, "obj2": 0.6646329265164181}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( Const ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),( ( ( CS * MUM ) / ( MUM / MLU ) ) * Min( ( MUM * RCSe ) ,Min( DS ,DS ) ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.1679830977078597}, {"determining": "Max( Min( Min( AMS ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( ( RRSe - RCSe ) * ( DS - RCSe ) ) )", "obj1": 0.27547169811320754, "obj2": 0.6338932084259312}, {"determining": "( Max( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * MDR ) ) - Min( ( ACS - MRS ) ,( PN + FirstVNF_RAM ) ) ),( ( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * Max( Min( RRS ,AMS ),( MRS * FirstVNF_RAM ) ) ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS + MUM ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.5075471698113208, "obj2": 0.4111026848719217}, {"determining": "( ( ( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) / Const ) - ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( CS,RCSe ) ,( MUR + Min( ( MUC - MUR ) ,Min( MUR ,DS ) ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.9566037735849057, "obj2": 0.049334485597001564}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,Max( PN,FirstVNF_RAM_Server ) ),Min( FirstVNF_RAM ,( RRS - RRS ) ) ) * ( FirstVNF_RAM_Server * RRS ) )", "choosing": "( ( MUM / MLU ) / Max( MUC,Max( RCSe,( MUR * Min( CS ,MUM ) ) ) ) )", "obj1": 0.27735849056603773, "obj2": 0.6282024462275039}, {"determining": "Max( ARS,( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / DS ) + RMSe )", "obj1": 0.12075471698113208, "obj2": 0.772836280848915}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - ( AMS - CRS ) ) - Min( MDR ,DDR ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( RMSe - ( ( MUC + RCSe ) / MLU ) ) ,( ( ( RCSe / ( MUM * RCSe ) ) / DS ) * MUC ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( Min( ACS ,RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( Max( Min( Min( ( CS - MUM ) ,( RRSe - RMSe ) ) ,Max( Min( CS ,MUM ),( RMSe / RRSe ) ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7547169811320755, "obj2": 0.1864569419347773}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,ACS ) ) )", "choosing": "( ( ( Min( CS ,MLU ) + ( RMSe + CS ) ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.39811320754716983, "obj2": 0.47508190824594304}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Const ) ) + Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) ) - ( Max( FirstVNF_Mem,AMS ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) + ( ( RRSe * CS ) * Max( MUR,RCSe ) ) ),( Min( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - RCSe ) ,( MUM + RMSe ) ) - ( ( RMSe + RMSe ) - ( CS / MLU ) ) ) )", "obj1": 0.569811320754717, "obj2": 0.3589300535558025}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),ACS ) + Min( FirstVNF_Mem_Server ,( ARS + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) ,Min( Min( RRSe ,CS ) ,Max( CS,RCSe ) ) )", "obj1": 0.3905660377358491, "obj2": 0.4883482705934595}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ( FirstVNF_RAM_Server / MDR ) * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RCSe * DS ) )", "obj1": 0.7415094339622641, "obj2": 0.19409993171014037}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,AMS ) - ( MDR * ( ( ACS - PN ) + ( ( FirstVNF_RAM_Server + Min( Const ,CRS ) ) - MDR ) ) ) )", "choosing": "( ( ( ( RCSe - ( MUM / MUC ) ) + ( ( RRSe * ( MUR - Min( MUM ,( RCSe - MUC ) ) ) ) * DS ) ) - ( RCSe * MUR ) ) + ( RMSe - MLU ) )", "obj1": 0.4867924528301887, "obj2": 0.46270725843442245}, {"determining": "Max( ( ( PN / ARS ) + ( FirstVNF_RAM - CRS ) ),Min( ( BR + ARS ) ,AMS ) )", "choosing": "( ( CS * ( ( MLU - MLU ) + ( MLU * DS ) ) ) + Min( RMSe ,RCSe ) )", "obj1": 0.5547169811320755, "obj2": 0.3776289951454904}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( Max( Max( RRS,Const ),Max( ACS,Const ) ),FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - Max( ( RCSe - CS ),( MUM / CS ) ) )", "obj1": 0.09433962264150944, "obj2": 0.7951251865480577}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( MRS ,( Max( FirstVNF_RAM_Server,MDR ) - AMS ) ) ) - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( CS / ( MLU / RMSe ) ) + ( MLU - CS ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "Min( ( MDR + ( Const * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM - Min( MRS ,PN ) ) )", "choosing": "Min( RRSe ,( MUC + MUM ) )", "obj1": 0.7245283018867924, "obj2": 0.2046815866790659}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( BR * MDR ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( DS - ( MUR / DS ) ) - Max( ( Max( DS,MUM ) + MUM ),DS ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20255554799069417}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( BR - ( DDR + ( ( MRS - FirstVNF_Mem ) - FirstVNF_RAM ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * ( Min( ( MUM * RMSe ) ,Max( RCSe,MUR ) ) + MUC ) ) )", "obj1": 0.47547169811320755, "obj2": 0.4667621257292756}, {"determining": "Max( ( ( CRS / PN ) * ( ( Max( MDR,( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( Const - MRS ) * ( ACS / FirstVNF_CPU_Server ) ) ) + PN ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( ( Min( Max( DS,MUM ) ,( CS / ( MUC + RRSe ) ) ) / MLU ) * RRSe ) / Min( MUR ,DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.11132075471698114, "obj2": 0.7807829993903619}, {"determining": "Max( ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ),( ( ( PN - CRS ) * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( RCSe / ( ( MUM * ( ( MUM / MUC ) - MLU ) ) / ( ( ( ( RMSe * MUR ) + ( RCSe * CS ) ) - Min( CS ,RMSe ) ) + DS ) ) ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( DDR * BR ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + MUC ) * ( RCSe + MUR ) )", "obj1": 0.5622641509433962, "obj2": 0.3709421407863846}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ( MRS * MRS ) ) )", "choosing": "( Min( DS ,MLU ) + Min( ( CS / RCSe ) ,( Min( RMSe ,( CS / MUM ) ) - MLU ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - ( MUR - CS ) ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Min( ( RRS * FirstVNF_Mem_Server ) ,AMS ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + Min( RRSe ,MUM ) )", "obj1": 0.5641509433962264, "obj2": 0.36537470227433566}, {"determining": "( Max( ACS,Const ) / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( RCSe * CS ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "Min( ( MRS * ACS ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,Max( ( RCSe + RCSe ),( RMSe + RMSe ) ) ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( Max( Min( FirstVNF_Mem ,CRS ),RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU / MUC ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( DDR / RRS ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( MLU ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Max( ( BR - FirstVNF_RAM ),Min( FirstVNF_CPU ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - Max( CS,CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5215103657693918}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( Max( MRS,FirstVNF_RAM ),FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( ( RCSe + MUR ) / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( MDR * RRS ) * Const ) ) / ( ( FirstVNF_RAM + MDR ) + ( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( RRSe + DS ) + MLU ) * ( ( MUM + ( DS / MUR ) ) / DS ) ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + RMSe ) )", "obj1": 0.3867924528301887, "obj2": 0.4967303941386889}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( Max( MRS,FirstVNF_RAM ),FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( ( RCSe + MUR ) / RMSe ) )", "obj1": 0.1018867924528302, "obj2": 0.7850494753700145}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( RRSe - ( RMSe - DS ) ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( BR - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + Min( Const ,ACS ) ) )", "choosing": "( ( ( RRSe * MUM ) + Max( MUR,DS ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( Max( FirstVNF_RAM_Server,Const ) / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( ( ( ( RCSe * Max( RRSe,CS ) ) * MLU ) - ( MUC * CS ) ) * MLU ) / RCSe ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( MLU,RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( ( ACS + FirstVNF_CPU_Server ) * ( ( AMS / MRS ) / Const ) ) )", "choosing": "Max( ( ( Min( RCSe ,RMSe ) * CS ) / MLU ),RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( MUM / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( Max( RCSe,MUR ) / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,PN ) - ( ( ARS * FirstVNF_Mem ) * ARS ) ) * ( PN / AMS ) )", "choosing": "( ( MUR + MUM ) / Max( MUM,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( CS * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + MUR ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Max( ACS,Const ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Const ,ACS ) - ( MDR + AMS ) ) ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( RMSe - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ACS ) - ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( CS,RCSe ) ,( MUR + RRSe ) ) / Min( DS ,( ( MLU + MUC ) * ( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR + ARS ) ,( ( FirstVNF_CPU * RRS ) - ( Const - Const ) ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - CS ) + ( ( MLU - MLU ) + ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Min( ( RRS * FirstVNF_Mem_Server ) ,AMS ) ) - FirstVNF_CPU ) ) + ( FirstVNF_RAM - ACS ) )", "choosing": "( DS + ( ( DS + MUC ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,RRS ) * ( FirstVNF_CPU_Server + Const ) ) + ( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_RAM / ( ARS - ( RRS * FirstVNF_RAM ) ) ) + AMS ) ) )", "choosing": "( ( Max( MUR,RRSe ) * Min( CS ,( RRSe * Min( MLU ,MUC ) ) ) ) + Min( Max( DS,CS ) ,Min( RRSe ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( Max( FirstVNF_RAM_Server,Const ) / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( ( ( ( RCSe * Max( RRSe,CS ) ) * MLU ) - ( MUC * CS ) ) * MLU ) / RCSe ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ACS + AMS ) ) / BR ) - ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( CS * ( MUC - DS ) ) - ( ( MUR + RCSe ) - ( CS - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( ACS + ( AMS * FirstVNF_CPU_Server ) ) ) / BR ) - ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( CS * ( MUC - DS ) ) - ( ( MUR + RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( BR - FirstVNF_CPU ) / ( ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) + ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ) ) ) + ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RCSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( ( FirstVNF_Mem_Server - DDR ) + ( MRS - ( PN / MDR ) ) ) )", "choosing": "( ( DS + Max( ( RMSe * MUM ),RMSe ) ) / Min( DS ,RCSe ) )", "obj1": 0.08113207547169811, "obj2": 0.7985216270344495}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( Const * AMS ) )", "choosing": "( ( RCSe - ( RCSe + DS ) ) - ( DS + CS ) )", "obj1": 0.15849056603773584, "obj2": 0.6729766648284605}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) * ( FirstVNF_RAM_Server - Const ) )", "choosing": "( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) * ( Min( RCSe ,MUM ) / DS ) )", "obj1": 0.2339622641509434, "obj2": 0.6260378907360031}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) ),Const ) / ( Min( BR ,ARS ) - CRS ) )", "choosing": "( ( Min( RRSe ,( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) ) ) / CS ) - ( RCSe * CS ) )", "obj1": 0.4867924528301887, "obj2": 0.38770006949552455}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( Min( BR ,ARS ) - CRS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.4339622641509434, "obj2": 0.43848864966301687}, {"determining": "( Max( ( ( ( CRS / FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + ( Min( ACS ,RRS ) + Min( MRS ,FirstVNF_Mem ) ) ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( RRSe * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.6245283018867924, "obj2": 0.24928445047710357}, {"determining": "( ( PN / FirstVNF_RAM ) / ( Min( ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) ,Const ) / MDR ) )", "choosing": "( ( ( Min( MLU ,DS ) / ( MUR * MUM ) ) / Max( ( RRSe - Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) ) ),( RMSe - RCSe ) ) ) + ( ( ( CS * MUM ) / ( MUM / MLU ) ) * Min( ( MUM * RCSe ) ,Min( DS ,DS ) ) ) )", "obj1": 0.8264150943396227, "obj2": 0.12158468449713367}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) )", "choosing": "( ( DS / RCSe ) * ( DS - Max( DS,CS ) ) )", "obj1": 0.15660377358490565, "obj2": 0.7199837739236579}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( ( Max( DDR,PN ) - ( ( ARS * FirstVNF_Mem ) * ARS ) ) * ( PN / AMS ) )", "choosing": "( ( MUR + MUM ) / Max( MUM,RMSe ) )", "obj1": 0.8886792452830189, "obj2": 0.10590487875990617}, {"determining": "Max( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ),( ( Max( Const,PN ) + ( FirstVNF_RAM_Server - Const ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) * ( ( CS * RRSe ) - ( MUM / RRSe ) ) ) + ( ( ( CS - RCSe ) + Max( MLU,RCSe ) ) - ( Min( CS ,CS ) * ( MLU + RCSe ) ) ) )", "obj1": 0.2962264150943396, "obj2": 0.5790599865207092}, {"determining": "( ( Max( CRS,( Max( AMS,FirstVNF_Mem_Server ) + ACS ) ) + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server )", "choosing": "( ( Max( ( Max( RCSe,Min( RCSe ,CS ) ) - CS ),( MUM / CS ) ) / Max( CS,MUR ) ) * Min( DS ,MUC ) )", "obj1": 0.6490566037735849, "obj2": 0.24332224145197345}, {"determining": "Max( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) ) ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) )", "choosing": "( ( DS / RCSe ) * DS )", "obj1": 0.6867924528301886, "obj2": 0.23274617774308287}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( MDR * RRS ) * Const ) ) / ( ( FirstVNF_RAM + MDR ) + ( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( RRSe + DS ) + MLU ) * ( ( MUM + ( DS / MUR ) ) / DS ) ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + RMSe ) )", "obj1": 0.3132075471698113, "obj2": 0.5486255031618723}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( Min( PN ,AMS ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * ( BR * MDR ) )", "choosing": "( ( DS - ( MUR / DS ) ) - Max( ( Max( DS,MUM ) + MUM ),( ( MUC - MLU ) / ( MUC + MLU ) ) ) )", "obj1": 0.5415094339622641, "obj2": 0.3815237561387655}, {"determining": "( ( MDR * ( PN / Min( ( FirstVNF_CPU_Server - AMS ) ,FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( Min( ( MUC - Min( RMSe ,RCSe ) ) ,( Max( DS,Max( ( MLU / Min( RMSe ,MUR ) ),RRSe ) ) * RRSe ) ) + ( RMSe + CS ) ) )", "obj1": 0.9207547169811321, "obj2": 0.07844543006302523}, {"determining": "( ARS + Min( FirstVNF_Mem_Server ,( ARS + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( DS / DS ) ) ) ,Min( Min( RRSe ,CS ) ,Max( CS,RCSe ) ) )", "obj1": 0.36981132075471695, "obj2": 0.501810259305747}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ACS * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.9641509433962264, "obj2": 0.007673370602156716}, {"determining": "( ( Max( Const,( ACS / ( ARS * DDR ) ) ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe + RCSe ) + ( MLU - Max( RRSe,MUC ) ) ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1509433962264151, "obj2": 0.7599015627966109}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) ) )", "choosing": "( Max( DS,CS ) * ( DS - Max( DS,CS ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4426042346634184}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) ),RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.8962264150943396, "obj2": 0.09758127386774952}, {"determining": "Max( PN,( MDR * ACS ) )", "choosing": "( Min( DS ,MLU ) + Max( ( CS / ( MUC + MUM ) ),RMSe ) )", "obj1": 0.5773584905660377, "obj2": 0.3465619782118682}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( MUM * MUR ) )", "obj1": 0.29056603773584905, "obj2": 0.6133302173055211}, {"determining": "Max( ( BR - FirstVNF_RAM ),Min( FirstVNF_CPU ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - Max( CS,CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5215103657693918}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.40943396226415096, "obj2": 0.47396505092898106}, {"determining": "Max( ( MRS + ARS ),( ( FirstVNF_RAM_Server - ( ( AMS + PN ) - ACS ) ) + ( PN / BR ) ) )", "choosing": "( Max( MUR,( MUM / MUR ) ) - ( Max( ( MUM - ( MUM / RCSe ) ),Min( ( ( Max( DS,( RCSe * DS ) ) / MUM ) * MUM ) ,DS ) ) - CS ) )", "obj1": 0.2830188679245283, "obj2": 0.6204153993503438}, {"determining": "( Max( ACS,Const ) / ( Min( BR ,ARS ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / CS ) - ( RCSe * CS ) )", "obj1": 0.5830188679245283, "obj2": 0.31559204988272554}, {"determining": "( Min( ( PN / BR ) ,Max( BR,FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU + ( ARS / ARS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( ( Min( RMSe ,RCSe ) + MUR ) + ( RMSe + CS ) ) )", "obj1": 0.3320754716981132, "obj2": 0.5448502478061031}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) )", "choosing": "Max( ( RRSe + DS ),( MUR / MUC ) )", "obj1": 0.8226415094339623, "obj2": 0.14646452600911303}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( Const ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),( ( ( CS * MUM ) / ( MUM / MLU ) ) * Min( ( MUM * RCSe ) ,Min( DS ,DS ) ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.1679830977078597}, {"determining": "Min( Min( Const ,MDR ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( ( ( RRSe + MUC ) / RMSe ) * DS ) )", "obj1": 0.9584905660377359, "obj2": 0.03738441612515657}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe * Min( ( MUR * MLU ) ,( CS - ( RCSe / DS ) ) ) ) ,RCSe ) * MUC ),( MUR / MUC ) )", "obj1": 0.9264150943396227, "obj2": 0.060186375680974694}, {"determining": "Max( FirstVNF_RAM_Server,( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) )", "choosing": "( ( DS / RCSe ) * ( DS - ( DS - RRSe ) ) )", "obj1": 0.7094339622641509, "obj2": 0.21766137263558985}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),ACS ) + Min( FirstVNF_Mem_Server ,( ARS + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) ,Min( Min( RRSe ,CS ) ,Max( CS,RCSe ) ) )", "obj1": 0.3905660377358491, "obj2": 0.4883482705934595}, {"determining": "( ( ARS + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR * MLU ) ,( Max( CS,( MLU + ( ( RCSe + RCSe ) * MUC ) ) ) - ( RCSe / DS ) ) )", "obj1": 0.7037735849056603, "obj2": 0.22383761753576406}, {"determining": "( ( MDR + RRS ) + ( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) / CRS ) )", "choosing": "Max( ( Min( MUR ,( ( MUC * Min( MLU ,DS ) ) - Min( MUM ,RMSe ) ) ) / MUC ),( RMSe + RMSe ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "( ( ACS - Min( ( ( ( ( ACS - Min( DDR ,MRS ) ) - FirstVNF_RAM_Server ) + MRS ) + FirstVNF_Mem_Server ) ,DDR ) ) - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MUR / ( Min( ( MUR * RRSe ) ,( DS + Min( CS ,( ( CS / MLU ) * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.9358490566037736, "obj2": 0.05227030699323318}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - ( AMS - CRS ) ) - Min( MDR ,DDR ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( RMSe - ( ( MUC + RCSe ) / MLU ) ) ,( ( ( RCSe / ( MUM * RCSe ) ) / DS ) * MUC ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( ( Min( Const ,PN ) / ( FirstVNF_RAM_Server - MDR ) ) * MRS ) ) * DDR ) )", "choosing": "( Max( RRSe,Max( RCSe,CS ) ) * ( DS - Max( DS,CS ) ) )", "obj1": 0.37169811320754714, "obj2": 0.48870365929234916}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( Min( ACS ,RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( Max( Min( Min( ( CS - MUM ) ,( RRSe - RMSe ) ) ,Max( Min( CS ,MUM ),( RMSe / RRSe ) ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7547169811320755, "obj2": 0.1864569419347773}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,ACS ) ) )", "choosing": "( ( ( Min( CS ,MLU ) + ( RMSe + CS ) ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.39811320754716983, "obj2": 0.47508190824594304}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Const ) ) + Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) ) - ( Max( FirstVNF_Mem,AMS ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) + ( ( RRSe * CS ) * Max( MUR,RCSe ) ) ),( Min( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - RCSe ) ,( MUM + RMSe ) ) - ( ( RMSe + RMSe ) - ( CS / MLU ) ) ) )", "obj1": 0.569811320754717, "obj2": 0.3589300535558025}, {"determining": "Min( ( MDR + ( Const * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM - Min( MRS ,PN ) ) )", "choosing": "Min( RRSe ,( MUC + MUM ) )", "obj1": 0.7245283018867924, "obj2": 0.2046815866790659}, {"determining": "( Max( CRS,BR ) + ( Max( CRS,BR ) + ( MDR * ( MRS * MRS ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( Min( DS ,MLU ) + Min( ( CS / RCSe ) ,( Min( RMSe ,MLU ) - MLU ) ) ) )", "obj1": 0.5471698113207547, "obj2": 0.37644354315532585}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( MRS ,( Max( FirstVNF_RAM_Server,MDR ) - AMS ) ) ) - ARS ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( CS / ( MLU / RMSe ) ) + ( MLU - CS ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "( ( DDR * BR ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + MUC ) * ( RCSe + MUR ) )", "obj1": 0.5622641509433962, "obj2": 0.3709421407863846}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "Max( ( BR - FirstVNF_RAM ),Min( FirstVNF_CPU ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - Max( CS,CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5215103657693918}, {"determining": "( ( Max( Const,RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + CRS ) )", "choosing": "Max( Min( ( RMSe - ( ( MUC + RCSe ) / MLU ) ) ,Min( DS ,CS ) ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7798624605699771}, {"determining": "Max( ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ),( ( ( PN - CRS ) * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( RCSe / ( ( MUM * ( ( MUM / MUC ) - MLU ) ) / ( ( ( ( RMSe * MUR ) + ( RCSe * CS ) ) - Min( CS ,RMSe ) ) + DS ) ) ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( AMS / ( ARS * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - AMS ) ) ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,( DS / DS ) ) + RCSe ) + Max( RCSe,RMSe ) ) / Min( DS ,RCSe ) )", "obj1": 0.11886792452830189, "obj2": 0.7763043606279278}, {"determining": "( ( MDR * BR ) * Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,MRS ) )", "choosing": "Min( ( MUC + Max( DS,( DS * DS ) ) ) ,( MLU * DS ) )", "obj1": 0.7358490566037735, "obj2": 0.1961023935984493}, {"determining": "Max( ARS,( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / DS ) + RMSe )", "obj1": 0.12075471698113208, "obj2": 0.772836280848915}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ( MRS * MRS ) ) )", "choosing": "( Min( DS ,MLU ) + Min( ( CS / RCSe ) ,( Min( RMSe ,( CS / MUM ) ) - MLU ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( Max( Max( RRS,Const ),Max( ACS,Const ) ),FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - Max( ( RCSe - CS ),( MUM / CS ) ) )", "obj1": 0.09433962264150944, "obj2": 0.7951251865480577}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Min( ( RRS * FirstVNF_Mem_Server ) ,AMS ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + Min( RRSe ,MUM ) )", "obj1": 0.5641509433962264, "obj2": 0.36537470227433566}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( BR * MDR ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( DS - ( MUR / DS ) ) - Max( ( Max( DS,MUM ) + MUM ),DS ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20255554799069417}, {"determining": "Min( ( MRS * ACS ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,Max( ( RCSe + RCSe ),( RMSe + RMSe ) ) ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( Max( Min( FirstVNF_Mem ,CRS ),RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU / MUC ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( DDR / RRS ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( MLU ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ( FirstVNF_RAM_Server / MDR ) * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RCSe * DS ) )", "obj1": 0.7415094339622641, "obj2": 0.19409993171014037}, {"determining": "Max( ( MRS + ARS ),( ( FirstVNF_RAM_Server - ( ( AMS + PN ) - ACS ) ) + ( PN / BR ) ) )", "choosing": "( Max( MUR,( MUM / MUR ) ) - ( Max( ( MUM - ( MUM / RCSe ) ),Min( ( ( Max( DS,( RCSe * DS ) ) / MUM ) * MUM ) ,DS ) ) - CS ) )", "obj1": 0.2830188679245283, "obj2": 0.6204153993503438}, {"determining": "Min( ( MDR + Const ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( ( MUM * CS ) ,( ( ( RRSe + RCSe ) / RMSe ) * DS ) )", "obj1": 0.9584905660377359, "obj2": 0.03738441612515657}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( Max( MRS,FirstVNF_RAM ),FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( ( RCSe + MUR ) / RMSe ) )", "obj1": 0.1018867924528302, "obj2": 0.7850494753700145}, {"determining": "Max( ( ( CRS / PN ) * ( ( ( ( DDR - PN ) + ( ACS + FirstVNF_RAM ) ) - ( ( Const - MRS ) * ( ACS / FirstVNF_CPU_Server ) ) ) + PN ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( ( ( RMSe * RRSe ) / Min( MUR ,DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) ) / Min( MUR ,DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 0.08867924528301886, "obj2": 0.7958493825444012}, {"determining": "( ( AMS / Const ) - ( ( FirstVNF_Mem_Server - DDR ) + ( MRS - ( PN / MDR ) ) ) )", "choosing": "( ( DS + Max( ( RMSe * MUM ),RMSe ) ) / Min( DS ,RCSe ) )", "obj1": 0.08679245283018867, "obj2": 0.7976912891307518}, {"determining": "( ( AMS / Const ) - ( ( MRS - ( PN / MDR ) ) + ( MRS - ( PN / MDR ) ) ) )", "choosing": "( ( DS + Max( ( RMSe * MUM ),RMSe ) ) / Min( DS ,RCSe ) )", "obj1": 0.08679245283018867, "obj2": 0.7976912891307518}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( MUM / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( RRSe - ( RMSe - DS ) ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( BR - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + Min( Const ,ACS ) ) )", "choosing": "( ( ( RRSe * MUM ) + Max( MUR,DS ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( Max( FirstVNF_RAM_Server,Const ) / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( ( ( ( RCSe * Max( RRSe,CS ) ) * MLU ) - ( MUC * CS ) ) * MLU ) / RCSe ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( MLU,RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( ( ACS + FirstVNF_CPU_Server ) * ( ( AMS / MRS ) / Const ) ) )", "choosing": "Max( ( ( Min( RCSe ,RMSe ) * CS ) / MLU ),RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( MUM / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( Max( RCSe,MUR ) / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,PN ) - ( ( ARS * FirstVNF_Mem ) * ARS ) ) * ( PN / AMS ) )", "choosing": "( ( MUR + MUM ) / Max( MUM,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( CS * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + MUR ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Max( ACS,Const ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Const ,ACS ) - ( MDR + AMS ) ) ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( RMSe - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ACS ) - ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( CS,RCSe ) ,( MUR + RRSe ) ) / Min( DS ,( ( MLU + MUC ) * ( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR + ARS ) ,( ( FirstVNF_CPU * RRS ) - ( Const - Const ) ) ) - Min( CRS ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - RRSe ) - CS ) + ( ( MLU - MLU ) + ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Min( ( RRS * FirstVNF_Mem_Server ) ,AMS ) ) - FirstVNF_CPU ) ) + ( FirstVNF_RAM - ACS ) )", "choosing": "( DS + ( ( DS + MUC ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,RRS ) * ( FirstVNF_CPU_Server + Const ) ) + ( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_RAM / ( ARS - ( RRS * FirstVNF_RAM ) ) ) + AMS ) ) )", "choosing": "( ( Max( MUR,RRSe ) * Min( CS ,( RRSe * Min( MLU ,MUC ) ) ) ) + Min( Max( DS,CS ) ,Min( RRSe ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( Max( FirstVNF_RAM_Server,Const ) / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( ( ( ( RCSe * Max( RRSe,CS ) ) * MLU ) - ( MUC * CS ) ) * MLU ) / RCSe ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( FirstVNF_RAM_Server * DDR ) * ( DDR - Const ) )", "choosing": "( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) ) ) ) * ( Min( RCSe ,MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_CPU ) / ( ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) + ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ) ) ) + ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( ( FirstVNF_Mem_Server - DDR ) + ( MRS - ( PN / MDR ) ) ) )", "choosing": "( ( DS + Max( ( RMSe * MUM ),RMSe ) ) / Min( DS ,RCSe ) )", "obj1": 0.08113207547169811, "obj2": 0.7985216270344495}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( Const * AMS ) )", "choosing": "( ( RCSe - ( RCSe + DS ) ) - ( DS + CS ) )", "obj1": 0.15849056603773584, "obj2": 0.6729766648284605}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) * ( FirstVNF_RAM_Server - Const ) )", "choosing": "( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) * ( Min( RCSe ,MUM ) / DS ) )", "obj1": 0.2339622641509434, "obj2": 0.6260378907360031}, {"determining": "( Max( ( ( ( CRS / FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + ( Min( ACS ,RRS ) + Min( MRS ,FirstVNF_Mem ) ) ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( RRSe * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.6245283018867924, "obj2": 0.24928445047710357}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - ( ( ( ( FirstVNF_CPU_Server - ( AMS - CRS ) ) + ( BR / CRS ) ) / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) / Const ) )", "choosing": "( ( ( ( ( MUC + RCSe ) / MLU ) + ( ( CS * MUM ) * RCSe ) ) / CS ) / Min( DS ,CS ) )", "obj1": 0.15471698113207547, "obj2": 0.7180982421874653}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) ),Const ) / ( Min( BR ,ARS ) - CRS ) )", "choosing": "( ( Min( RRSe ,( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) ) ) / CS ) - ( RCSe * CS ) )", "obj1": 0.4867924528301887, "obj2": 0.38770006949552455}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( ( AMS / Const ) - ( ( FirstVNF_Mem_Server - DDR ) + ( MRS - ( PN / MDR ) ) ) ) ) )", "choosing": "( ( RCSe - ( RCSe + RMSe ) ) - ( DS + CS ) )", "obj1": 0.28679245283018867, "obj2": 0.5736455908711642}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + ( FirstVNF_CPU * MRS ) ),( FirstVNF_CPU * MRS ) ) * DDR ) ,FirstVNF_RAM_Server ),FirstVNF_RAM )", "choosing": "( ( MUC / ( ( DS / RCSe ) * ( ( MUC / ( ( DS / RCSe ) * ( DS - Max( DS,CS ) ) ) ) * ( DS - RRSe ) ) ) ) * ( DS - RRSe ) )", "obj1": 0.46226415094339623, "obj2": 0.41403725452832124}, {"determining": "( ( PN / FirstVNF_RAM ) / ( Min( ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) ,Const ) / MDR ) )", "choosing": "( ( ( Min( MLU ,DS ) / ( MUR * MUM ) ) / Max( ( RRSe - Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) ) ),( RMSe - RCSe ) ) ) + ( ( ( CS * MUM ) / ( MUM / MLU ) ) * Min( ( MUM * RCSe ) ,Min( DS ,DS ) ) ) )", "obj1": 0.8264150943396227, "obj2": 0.12158468449713367}, {"determining": "Max( ( MRS + ARS ),( ( FirstVNF_RAM_Server - ( ( AMS + PN ) - ACS ) ) + ( PN / BR ) ) )", "choosing": "( Max( MUR,( MUM / MUR ) ) - ( Max( ( MUM - ( MUM / RCSe ) ),Min( ( ( Max( DS,( RCSe * DS ) ) / MUM ) * MUM ) ,DS ) ) - CS ) )", "obj1": 0.2830188679245283, "obj2": 0.6204153993503438}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( ( Max( DDR,PN ) - ( ( ARS * FirstVNF_Mem ) * ARS ) ) * ( PN / AMS ) )", "choosing": "( ( MUR + MUM ) / Max( MUM,RMSe ) )", "obj1": 0.8886792452830189, "obj2": 0.10590487875990617}, {"determining": "Max( ( ( FirstVNF_RAM_Server - Const ) + Const ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * CRS ) )", "choosing": "( ( DS / RCSe ) * ( RCSe / RRSe ) )", "obj1": 0.12452830188679245, "obj2": 0.7449485852201427}, {"determining": "( ( Max( CRS,( Max( AMS,FirstVNF_Mem_Server ) + ACS ) ) + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server )", "choosing": "( ( Max( ( Max( RCSe,Min( RCSe ,CS ) ) - CS ),( MUM / CS ) ) / Max( CS,MUR ) ) * Min( DS ,MUC ) )", "obj1": 0.6490566037735849, "obj2": 0.24332224145197345}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( MDR * RRS ) * Const ) ) / ( ( FirstVNF_RAM + MDR ) + ( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( RRSe + DS ) + MLU ) * ( ( MUM + ( DS / MUR ) ) / DS ) ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + RMSe ) )", "obj1": 0.3132075471698113, "obj2": 0.5486255031618723}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( Min( BR ,ARS ) - CRS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.4339622641509434, "obj2": 0.43848864966301687}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( Min( PN ,AMS ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) * ( BR * MDR ) )", "choosing": "( ( DS - ( MUR / DS ) ) - Max( ( Max( DS,MUM ) + MUM ),( ( MUC - MLU ) / ( MUC + MLU ) ) ) )", "obj1": 0.5415094339622641, "obj2": 0.3815237561387655}, {"determining": "( ARS + Min( FirstVNF_Mem_Server ,( ARS + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( DS / DS ) ) ) ,Min( Min( RRSe ,CS ) ,Max( CS,RCSe ) ) )", "obj1": 0.36981132075471695, "obj2": 0.501810259305747}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ACS * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.9641509433962264, "obj2": 0.007673370602156716}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) ) )", "choosing": "( Max( DS,CS ) * ( DS - Max( DS,CS ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4426042346634184}, {"determining": "Max( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) ) ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) )", "choosing": "( ( DS / RCSe ) * DS )", "obj1": 0.6867924528301886, "obj2": 0.23274617774308287}, {"determining": "Max( ( BR - FirstVNF_RAM ),Min( FirstVNF_CPU ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - Max( CS,CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5215103657693918}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.40943396226415096, "obj2": 0.47396505092898106}, {"determining": "( Min( ( PN / BR ) ,Max( BR,FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU + ( ARS / ARS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( ( Min( RMSe ,RCSe ) + MUR ) + ( RMSe + CS ) ) )", "obj1": 0.3320754716981132, "obj2": 0.5448502478061031}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) )", "choosing": "Max( ( RRSe + DS ),( MUR / MUC ) )", "obj1": 0.8226415094339623, "obj2": 0.14646452600911303}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( Const ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),( ( ( CS * MUM ) / ( MUM / MLU ) ) * Min( ( MUM * RCSe ) ,Min( DS ,DS ) ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.1679830977078597}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) ),RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.8962264150943396, "obj2": 0.09758127386774952}, {"determining": "Min( Min( Const ,MDR ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( ( ( RRSe + MUC ) / RMSe ) * Min( RMSe ,MUM ) ) )", "obj1": 0.9113207547169812, "obj2": 0.08286514329552443}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe * Min( ( MUR * MLU ) ,( CS - ( RCSe / DS ) ) ) ) ,RCSe ) * MUC ),( MUR / MUC ) )", "obj1": 0.9264150943396227, "obj2": 0.060186375680974694}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),ACS ) + Min( FirstVNF_Mem_Server ,( ARS + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) ,Min( Min( RRSe ,CS ) ,Max( CS,RCSe ) ) )", "obj1": 0.3905660377358491, "obj2": 0.4883482705934595}, {"determining": "( Min( Const ,ACS ) - ( Min( CRS ,DDR ) * ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "( ( ( RRSe * ( Min( RCSe ,( Min( RCSe ,MUM ) / DS ) ) / DS ) ) + Max( MUR,DS ) ) - Max( DS,CS ) )", "obj1": 0.12075471698113208, "obj2": 0.7648562535822153}, {"determining": "Max( PN,( MDR * ACS ) )", "choosing": "( Min( DS ,MLU ) + Max( ( CS / ( MUC + MUM ) ),RMSe ) )", "obj1": 0.5773584905660377, "obj2": 0.3465619782118682}, {"determining": "( ( ACS - Min( ( BR + FirstVNF_Mem_Server ) ,DDR ) ) - DDR )", "choosing": "Max( Max( MLU,RMSe ),Min( ( MUR * RRSe ) ,( DS + Min( CS ,( RRSe * ( RCSe * RMSe ) ) ) ) ) )", "obj1": 0.5792452830188679, "obj2": 0.33099851821575105}, {"determining": "( ( MDR * ( PN / Min( ( FirstVNF_CPU_Server - AMS ) ,FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( Min( ( MUC - Min( RMSe ,RCSe ) ) ,( Max( DS,Max( ( MLU / Min( RMSe ,MUR ) ),RRSe ) ) * RRSe ) ) + ( RMSe + CS ) ) )", "obj1": 0.9207547169811321, "obj2": 0.07844543006302523}, {"determining": "Min( Min( Const ,MDR ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( ( ( RRSe + MUC ) / RMSe ) * DS ) )", "obj1": 0.9584905660377359, "obj2": 0.03738441612515657}, {"determining": "( ( ACS - Min( ( ( ( ( ACS - Min( DDR ,MRS ) ) - FirstVNF_RAM_Server ) + MRS ) + FirstVNF_Mem_Server ) ,DDR ) ) - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MUR / ( Min( ( MUR * RRSe ) ,( DS + Min( CS ,( ( CS / MLU ) * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.9358490566037736, "obj2": 0.05227030699323318}, {"determining": "( Max( ACS,Const ) / ( Min( BR ,ARS ) - CRS ) )", "choosing": "( ( Min( RRSe ,MUM ) / CS ) - ( RCSe * CS ) )", "obj1": 0.5830188679245283, "obj2": 0.31559204988272554}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - ( AMS - CRS ) ) - Min( MDR ,DDR ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( RMSe - ( ( MUC + RCSe ) / MLU ) ) ,( ( ( RCSe / ( MUM * RCSe ) ) / DS ) * MUC ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( ( Min( Const ,PN ) / ( FirstVNF_RAM_Server - MDR ) ) * MRS ) ) * DDR ) )", "choosing": "( Max( RRSe,Max( RCSe,CS ) ) * ( DS - Max( DS,CS ) ) )", "obj1": 0.37169811320754714, "obj2": 0.48870365929234916}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( Min( ACS ,RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( Max( Min( Min( ( CS - MUM ) ,( RRSe - RMSe ) ) ,Max( Min( CS ,MUM ),( RMSe / RRSe ) ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7547169811320755, "obj2": 0.1864569419347773}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,ACS ) ) )", "choosing": "( ( ( Min( CS ,MLU ) + ( RMSe + CS ) ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.39811320754716983, "obj2": 0.47508190824594304}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ( FirstVNF_CPU_Server * Const ) ) + Max( Max( CRS,FirstVNF_RAM_Server ),( CRS * ARS ) ) ) - ( Max( FirstVNF_Mem,AMS ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( Max( MUC,MUM ),( RCSe + MLU ) ) + ( ( RRSe * CS ) * Max( MUR,RCSe ) ) ),( Min( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - RCSe ) ,( MUM + RMSe ) ) - ( ( RMSe + RMSe ) - ( CS / MLU ) ) ) )", "obj1": 0.569811320754717, "obj2": 0.3589300535558025}, {"determining": "( ( AMS / ( ARS * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( MRS - AMS ) ) ) )", "choosing": "( ( ( Min( ( MUC - MUM ) ,( DS / DS ) ) + RCSe ) + Max( RCSe,RMSe ) ) / Min( DS ,RCSe ) )", "obj1": 0.11886792452830189, "obj2": 0.7763043606279278}, {"determining": "( ( MDR + RRS ) + ( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) / CRS ) )", "choosing": "Max( ( Min( MUR ,( ( MUC * Min( MLU ,DS ) ) - Min( MUM ,RMSe ) ) ) / MUC ),( RMSe + RMSe ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "( Max( CRS,BR ) + ( Max( CRS,BR ) + ( MDR * ( MRS * MRS ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( Min( DS ,MLU ) + Min( ( CS / RCSe ) ,( Min( RMSe ,MLU ) - MLU ) ) ) )", "obj1": 0.5471698113207547, "obj2": 0.37644354315532585}, {"determining": "( ( ARS + ( FirstVNF_CPU - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / ( ARS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR * MLU ) ,( Max( CS,( MLU + ( ( ( ( RCSe + RCSe ) * MUC ) + RCSe ) * MUC ) ) ) - ( RCSe / DS ) ) )", "obj1": 0.7113207547169811, "obj2": 0.2101972386736259}, {"determining": "( ( DDR * BR ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + MUC ) * ( RCSe + MUR ) )", "obj1": 0.5622641509433962, "obj2": 0.3709421407863846}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( ( FirstVNF_RAM_Server - Const ) * DDR ) * ( FirstVNF_RAM_Server - Const ) )", "choosing": "( ( Min( RCSe ,MUM ) / DS ) * ( Min( RCSe ,MUM ) / DS ) )", "obj1": 0.0830188679245283, "obj2": 0.7925786249357526}, {"determining": "Max( ( BR - FirstVNF_RAM ),Min( FirstVNF_CPU ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - Max( CS,CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5215103657693918}, {"determining": "Min( Max( FirstVNF_RAM_Server,ARS ) ,( FirstVNF_RAM + AMS ) )", "choosing": "( ( DS * MUM ) / Max( MLU,RMSe ) )", "obj1": 0.6924528301886792, "obj2": 0.22428310996385992}, {"determining": "( ( Max( Const,RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + CRS ) )", "choosing": "Max( Min( ( RMSe - ( ( MUC + RCSe ) / MLU ) ) ,Min( DS ,CS ) ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7798624605699771}, {"determining": "( ( MDR * BR ) * Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,MRS ) )", "choosing": "Min( ( MUC + Max( DS,( DS * DS ) ) ) ,( MLU * DS ) )", "obj1": 0.7358490566037735, "obj2": 0.1961023935984493}, {"determining": "Min( ( MDR + ( Const * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM - Min( MRS ,PN ) ) )", "choosing": "Min( RRSe ,( MUC + MUM ) )", "obj1": 0.7245283018867924, "obj2": 0.2046815866790659}, {"determining": "( ( Max( Min( FirstVNF_Mem ,CRS ),RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU / MUC ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.09811320754716982, "obj2": 0.7884393812776898}, {"determining": "Max( FirstVNF_RAM_Server,( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) )", "choosing": "( ( DS / RCSe ) * ( DS - ( DS - RRSe ) ) )", "obj1": 0.7094339622641509, "obj2": 0.21766137263558985}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ( MRS * MRS ) ) )", "choosing": "( Min( DS ,MLU ) + Min( ( CS / RCSe ) ,( Min( RMSe ,( CS / MUM ) ) - MLU ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "Min( Min( Min( Const ,MDR ) ,MDR ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( ( ( RRSe + ( ( RRSe + MUC ) / RMSe ) ) / RMSe ) * DS ) )", "obj1": 0.9528301886792453, "obj2": 0.038188962940595726}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Min( ( RRS * FirstVNF_Mem_Server ) ,AMS ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + Min( RRSe ,MUM ) )", "obj1": 0.5641509433962264, "obj2": 0.36537470227433566}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( BR * MDR ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( DS - ( MUR / DS ) ) - Max( ( Max( DS,MUM ) + MUM ),DS ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20255554799069417}, {"determining": "Min( ( MRS * ACS ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,Max( ( RCSe + RCSe ),( RMSe + RMSe ) ) ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( ( ARS + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR * MLU ) ,( Max( CS,( MLU + ( ( RCSe + RCSe ) * MUC ) ) ) - ( RCSe / DS ) ) )", "obj1": 0.7037735849056603, "obj2": 0.22383761753576406}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ( FirstVNF_RAM_Server / MDR ) * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RCSe * DS ) )", "obj1": 0.7415094339622641, "obj2": 0.19409993171014037}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * MRS ) - ( FirstVNF_CPU_Server * ( ( ( Const - Min( FirstVNF_Mem ,MRS ) ) + DDR ) - CRS ) ) ) ) )", "choosing": "( ( RCSe - ( RCSe + DS ) ) - ( ( MUR + ( DS - CS ) ) + Max( RCSe,RMSe ) ) )", "obj1": 0.9943396226415094, "obj2": 0.00295947506384185}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( DDR / RRS ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( MLU ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( Max( MRS,FirstVNF_RAM ),FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( ( RCSe + MUR ) / RMSe ) )", "obj1": 0.1018867924528302, "obj2": 0.7850494753700145}, {"determining": "Max( ( MRS + ARS ),( ( FirstVNF_RAM_Server - ( ( AMS + PN ) - ACS ) ) + ( PN / BR ) ) )", "choosing": "( Max( MUR,( MUM / MUR ) ) - ( Max( ( MUM - ( MUM / RCSe ) ),Min( ( ( Max( DS,( RCSe * DS ) ) / MUM ) * MUM ) ,DS ) ) - CS ) )", "obj1": 0.2830188679245283, "obj2": 0.6204153993503438}, {"determining": "( ( Max( Min( FirstVNF_Mem ,CRS ),RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU / MUC ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "Min( ( MDR + Const ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( ( MUM * CS ) ,( ( ( RRSe + RCSe ) / RMSe ) * DS ) )", "obj1": 0.9584905660377359, "obj2": 0.03738441612515657}, {"determining": "( Min( Min( ( CRS * Const ) ,PN ) ,ACS ) / ( ARS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR * MLU ) ,( Max( CS,( MLU + ( ( RCSe + RCSe ) * Min( ( ( RCSe * CS ) - ( MUC * MUC ) ) ,MUC ) ) ) ) - ( RCSe / DS ) ) )", "obj1": 0.7037735849056603, "obj2": 0.22383761753576406}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RCSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( MUM / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( RRSe - ( RMSe - DS ) ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( BR - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + Min( Const ,ACS ) ) )", "choosing": "( ( ( RRSe * MUM ) + Max( MUR,DS ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( Max( FirstVNF_RAM_Server,Const ) / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( ( ( ( RCSe * Max( RRSe,CS ) ) * MLU ) - ( MUC * CS ) ) * MLU ) / RCSe ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( MLU,RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( ( ACS + FirstVNF_CPU_Server ) * ( ( AMS / MRS ) / Const ) ) )", "choosing": "Max( ( ( Min( RCSe ,RMSe ) * CS ) / MLU ),RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( MUM / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( Max( RCSe,MUR ) / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,PN ) - ( ( ARS * FirstVNF_Mem ) * ARS ) ) * ( PN / AMS ) )", "choosing": "( ( MUR + MUM ) / Max( MUM,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( CS * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + MUR ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Max( ACS,Const ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Const ,ACS ) - ( MDR + AMS ) ) ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( RMSe - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ACS ) - ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( CS,RCSe ) ,( MUR + RRSe ) ) / Min( DS ,( ( MLU + MUC ) * ( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( ( ( FirstVNF_CPU_Server - ( AMS - CRS ) ) - FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( ( RMSe - ( ( MUC + RCSe ) / MLU ) ) ,( ( ( RCSe / ( Min( MUC ,CS ) * RCSe ) ) / DS ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) * ( DDR - Const ) )", "choosing": "( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) ) ) ) * ( Min( RCSe ,MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( ( FirstVNF_Mem_Server - DDR ) + ( MRS - ( PN / MDR ) ) ) )", "choosing": "( ( DS + Max( ( RMSe * MUM ),RMSe ) ) / Min( DS ,RCSe ) )", "obj1": 0.08113207547169811, "obj2": 0.7985216270344495}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) * ( FirstVNF_RAM_Server - Const ) )", "choosing": "( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) * ( Min( RCSe ,MUM ) / DS ) )", "obj1": 0.2339622641509434, "obj2": 0.6260378907360031}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( Const * AMS ) )", "choosing": "( ( RCSe - ( RCSe + DS ) ) - ( DS + CS ) )", "obj1": 0.15849056603773584, "obj2": 0.6729766648284605}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) ),Const ) / ( Min( BR ,ARS ) - CRS ) )", "choosing": "( ( Min( RRSe ,( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) ) ) / CS ) - ( RCSe * CS ) )", "obj1": 0.4867924528301887, "obj2": 0.38770006949552455}, {"determining": "( Max( ( ( ( CRS / FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + ( Min( ACS ,RRS ) + Min( MRS ,FirstVNF_Mem ) ) ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( RRSe * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.6245283018867924, "obj2": 0.24928445047710357}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - ( ( ( ( FirstVNF_CPU_Server - ( AMS - CRS ) ) + ( BR / CRS ) ) / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) / Const ) )", "choosing": "( ( ( ( ( MUC + RCSe ) / MLU ) + ( ( CS * MUM ) * RCSe ) ) / CS ) / Min( DS ,CS ) )", "obj1": 0.15471698113207547, "obj2": 0.7180982421874653}, {"determining": "( ( ( FirstVNF_RAM_Server * DDR ) * DDR ) * ( FirstVNF_RAM_Server - Const ) )", "choosing": "( ( Min( RCSe ,MUM ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) * ( Min( RCSe ,MUM ) / DS ) )", "obj1": 0.2792452830188679, "obj2": 0.6111158599634369}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + ( FirstVNF_CPU * MRS ) ),( FirstVNF_CPU * MRS ) ) * DDR ) ,FirstVNF_RAM_Server ),FirstVNF_RAM )", "choosing": "( ( MUC / ( ( DS / RCSe ) * ( ( MUC / ( ( DS / RCSe ) * ( DS - Max( DS,CS ) ) ) ) * ( DS - RRSe ) ) ) ) * ( DS - RRSe ) )", "obj1": 0.46226415094339623, "obj2": 0.41403725452832124}, {"determining": "( ( PN / FirstVNF_RAM ) / ( Min( ( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) ) ,Const ) / MDR ) )", "choosing": "( ( ( Min( MLU ,DS ) / ( MUR * MUM ) ) / Max( ( RRSe - Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) ) ),( RMSe - RCSe ) ) ) + ( ( ( CS * MUM ) / ( MUM / MLU ) ) * Min( ( MUM * RCSe ) ,Min( DS ,DS ) ) ) )", "obj1": 0.8264150943396227, "obj2": 0.12158468449713367}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( ( AMS / Const ) - ( ( FirstVNF_Mem_Server - DDR ) + ( MRS - ( PN / MDR ) ) ) ) ) )", "choosing": "( ( RCSe - ( RCSe + RMSe ) ) - ( DS + CS ) )", "obj1": 0.28679245283018867, "obj2": 0.5736455908711642}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) - ( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) / ( ( ( MDR + RRS ) + ( BR / CRS ) ) / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) ) ) / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( RCSe * ( ( ( Min( RCSe ,CS ) - MUM ) + ( ( CS * MUM ) * RCSe ) ) / CS ) ) )", "obj1": 0.5641509433962264, "obj2": 0.31144245974614965}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ARS + FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + CRS ) )", "choosing": "( Min( Min( MUM ,DS ) ,( DS / DS ) ) + ( MUC * MLU ) )", "obj1": 0.5566037735849056, "obj2": 0.3700139094395054}, {"determining": "( ( Max( DDR,PN ) - ( ( ARS * FirstVNF_Mem ) * ARS ) ) * ( PN / AMS ) )", "choosing": "( ( MUR + MUM ) / Max( MUM,RMSe ) )", "obj1": 0.8886792452830189, "obj2": 0.10590487875990617}, {"determining": "Max( ( ( FirstVNF_RAM_Server - Const ) + Const ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * CRS ) )", "choosing": "( ( DS / RCSe ) * ( RCSe / RRSe ) )", "obj1": 0.12452830188679245, "obj2": 0.7449485852201427}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),FirstVNF_CPU_Server )", "choosing": "( ( DS / RCSe ) * ( ( ( ( MUC * Min( MLU ,DS ) ) + ( ( CS * MUM ) * RCSe ) ) / CS ) / Min( DS ,CS ) ) )", "obj1": 0.539622641509434, "obj2": 0.37612401106544985}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( MDR * RRS ) * Const ) ) / ( ( FirstVNF_RAM + MDR ) + ( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( RRSe + DS ) + MLU ) * ( ( MUM + ( DS / MUR ) ) / DS ) ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + RMSe ) )", "obj1": 0.3132075471698113, "obj2": 0.5486255031618723}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( Min( BR ,ARS ) - CRS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.4339622641509434, "obj2": 0.43848864966301687}, {"determining": "( ( Max( Min( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) ,CRS ),RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU / MUC ),( ( MUM + DS ) / ( CS * DS ) ) )", "obj1": 0.1018867924528302, "obj2": 0.7549024738709871}, {"determining": "( ARS + Min( FirstVNF_Mem_Server ,( ARS + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( DS / DS ) ) ) ,Min( Min( RRSe ,CS ) ,Max( CS,RCSe ) ) )", "obj1": 0.36981132075471695, "obj2": 0.501810259305747}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ACS * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.9641509433962264, "obj2": 0.007673370602156716}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) ) )", "choosing": "( Max( DS,CS ) * ( DS - Max( DS,CS ) ) )", "obj1": 0.4188679245283019, "obj2": 0.4426042346634184}, {"determining": "( ( Max( CRS,( Max( AMS,FirstVNF_Mem_Server ) + ACS ) ) + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server )", "choosing": "( ( Max( ( Max( RCSe,Min( RCSe ,CS ) ) - CS ),( MUM / CS ) ) / Max( CS,MUR ) ) * Min( DS ,MUC ) )", "obj1": 0.6490566037735849, "obj2": 0.24332224145197345}, {"determining": "Max( ( BR - FirstVNF_RAM ),Min( FirstVNF_CPU ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - Max( CS,CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5215103657693918}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * ( Min( Const ,ACS ) - ( MDR + AMS ) ) ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( Max( DS,CS ) * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.40943396226415096, "obj2": 0.47396505092898106}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - ( ( ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) + RRS ) + ( BR / CRS ) ) / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) / Const ) )", "choosing": "( ( ( ( MUC * Min( MLU ,DS ) ) + ( DS - Max( DS,CS ) ) ) / CS ) / Min( DS ,CS ) )", "obj1": 0.769811320754717, "obj2": 0.15261191668485233}, {"determining": "( Min( ( PN / BR ) ,Max( BR,FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU + ( ARS / ARS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( ( Min( RMSe ,RCSe ) + MUR ) + ( RMSe + CS ) ) )", "obj1": 0.3320754716981132, "obj2": 0.5448502478061031}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( Const ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),( ( ( CS * MUM ) / ( MUM / MLU ) ) * Min( ( MUM * RCSe ) ,Min( DS ,DS ) ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.1679830977078597}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS * MUM ) / ( Min( DS ,MLU ) + Max( ( CS / ( MUC + MUM ) ),MUM ) ) ) * ( MUM * ( MUR + MUC ) ) )", "obj1": 0.6754716981132075, "obj2": 0.24158706428190097}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) )", "choosing": "Max( ( RRSe + DS ),( MUR / MUC ) )", "obj1": 0.8226415094339623, "obj2": 0.14646452600911303}, {"determining": "( ( Max( Min( FirstVNF_Mem ,CRS ),RRS ) / Min( MDR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) / Const ) ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Min( RCSe ,DS ) - MUM ) + ( ( CS * MUM ) * RCSe ) ) / CS ) / MUC ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.9264150943396227, "obj2": 0.059247177374835695}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( Max( Min( FirstVNF_Mem ,CRS ),RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU / MUC ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( MDR * ( PN / Min( ( FirstVNF_CPU_Server - AMS ) ,FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( Min( ( MUC - Min( RMSe ,RCSe ) ) ,( Max( DS,Max( ( MLU / Min( RMSe ,MUR ) ),RRSe ) ) * RRSe ) ) + ( RMSe + CS ) ) )", "obj1": 0.9207547169811321, "obj2": 0.07844543006302523}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) * Const )", "choosing": "( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) * ( Min( RCSe ,DS ) / DS ) )", "obj1": 0.38301886792452833, "obj2": 0.4842121556127987}, {"determining": "Min( Min( Const ,MDR ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( ( ( RRSe + MUC ) / RMSe ) * DS ) )", "obj1": 0.9584905660377359, "obj2": 0.03738441612515657}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,ACS ) ) )", "choosing": "( ( ( Min( CS ,MLU ) + ( RMSe + CS ) ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.39811320754716983, "obj2": 0.47508190824594304}, {"determining": "Max( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) ) ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) )", "choosing": "( ( DS / RCSe ) * DS )", "obj1": 0.6867924528301886, "obj2": 0.23274617774308287}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( Min( ACS ,RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( Max( Min( Min( ( CS - MUM ) ,( RRSe - RMSe ) ) ,Max( Min( CS ,MUM ),( RMSe / RRSe ) ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7547169811320755, "obj2": 0.1864569419347773}, {"determining": "( ( ACS - Min( ( ( ( ( ACS - Min( DDR ,MRS ) ) - FirstVNF_RAM_Server ) + MRS ) + FirstVNF_Mem_Server ) ,DDR ) ) - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MUR / ( Min( ( MUR * RRSe ) ,( DS + Min( CS ,( ( CS / MLU ) * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.9358490566037736, "obj2": 0.05227030699323318}, {"determining": "Min( Min( Const ,MDR ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( ( ( RRSe + MUC ) / RMSe ) * Min( RMSe ,MUM ) ) )", "obj1": 0.9113207547169812, "obj2": 0.08286514329552443}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( ( Min( Const ,PN ) / ( FirstVNF_RAM_Server - MDR ) ) * MRS ) ) * DDR ) )", "choosing": "( Max( RRSe,Max( RCSe,CS ) ) * ( DS - Max( DS,CS ) ) )", "obj1": 0.37169811320754714, "obj2": 0.48870365929234916}, {"determining": "( ( MDR + RRS ) + ( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem - ( AMS / RRS ) ) * AMS ) ) / CRS ) )", "choosing": "Max( ( Min( MUR ,( ( MUC * Min( MLU ,DS ) ) - Min( MUM ,RMSe ) ) ) / MUC ),( RMSe + RMSe ) )", "obj1": 0.9433962264150944, "obj2": 0.043010227843834715}, {"determining": "Min( Min( Const ,MDR ) ,( Min( DDR ,( ( ARS + DDR ) - CRS ) ) - FirstVNF_RAM ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( ( ( Max( Max( MLU,RMSe ),RRSe ) + MUC ) / RMSe ) * ( MUC + MUM ) ) )", "obj1": 0.9037735849056604, "obj2": 0.09301779758134739}, {"determining": "( ( ARS + ( FirstVNF_CPU - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / ( ARS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR * MLU ) ,( Max( CS,( MLU + ( ( ( ( RCSe + RCSe ) * MUC ) + RCSe ) * MUC ) ) ) - ( RCSe / DS ) ) )", "obj1": 0.7113207547169811, "obj2": 0.2101972386736259}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) ),RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.8962264150943396, "obj2": 0.09758127386774952}, {"determining": "Max( ( BR - FirstVNF_RAM ),Min( FirstVNF_CPU ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - Max( CS,CS ) )", "obj1": 0.33773584905660375, "obj2": 0.5215103657693918}, {"determining": "Min( Max( FirstVNF_RAM_Server,ARS ) ,( FirstVNF_RAM + AMS ) )", "choosing": "( ( DS * MUM ) / Max( MLU,RMSe ) )", "obj1": 0.6924528301886792, "obj2": 0.22428310996385992}, {"determining": "( ( MDR * BR ) * Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,MRS ) )", "choosing": "Min( ( MUC + Max( DS,( DS * DS ) ) ) ,( MLU * DS ) )", "obj1": 0.7358490566037735, "obj2": 0.1961023935984493}, {"determining": "Min( ( MDR + ( Const * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM - Min( MRS ,PN ) ) )", "choosing": "Min( RRSe ,( MUC + MUM ) )", "obj1": 0.7245283018867924, "obj2": 0.2046815866790659}, {"determining": "Max( FirstVNF_RAM_Server,( Max( ( FirstVNF_CPU + FirstVNF_RAM ),( FirstVNF_CPU * MRS ) ) * DDR ) )", "choosing": "( ( DS / RCSe ) * ( DS - ( DS - RRSe ) ) )", "obj1": 0.7094339622641509, "obj2": 0.21766137263558985}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ( MRS * MRS ) ) )", "choosing": "( Min( DS ,MLU ) + Min( ( CS / RCSe ) ,( Min( RMSe ,( CS / MUM ) ) - MLU ) ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "Min( Min( Min( Const ,MDR ) ,MDR ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( ( ( RRSe + ( ( RRSe + MUC ) / RMSe ) ) / RMSe ) * DS ) )", "obj1": 0.9528301886792453, "obj2": 0.038188962940595726}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( BR * MDR ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( DS - ( MUR / DS ) ) - Max( ( Max( DS,MUM ) + MUM ),DS ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20255554799069417}, {"determining": "( ( ( FirstVNF_RAM_Server - Const ) * DDR ) * ( FirstVNF_RAM_Server - Const ) )", "choosing": "( ( Min( RCSe ,MUM ) / DS ) * ( Min( RCSe ,MUM ) / DS ) )", "obj1": 0.0830188679245283, "obj2": 0.7925786249357526}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),ACS ) + FirstVNF_CPU_Server )", "choosing": "Min( ( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) ,Min( Min( RRSe ,CS ) ,( RCSe - ( RCSe + DS ) ) ) )", "obj1": 0.09433962264150944, "obj2": 0.7917250532096534}, {"determining": "( ( ARS + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) / ( ARS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR * MLU ) ,( Max( CS,( MLU + ( ( RCSe + RCSe ) * MUC ) ) ) - ( RCSe / DS ) ) )", "obj1": 0.7037735849056603, "obj2": 0.22383761753576406}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ( FirstVNF_RAM_Server / MDR ) * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( RCSe * DS ) )", "obj1": 0.7415094339622641, "obj2": 0.19409993171014037}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( Const * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * MRS ) - ( FirstVNF_CPU_Server * ( ( ( Const - Min( FirstVNF_Mem ,MRS ) ) + DDR ) - CRS ) ) ) ) )", "choosing": "( ( RCSe - ( RCSe + DS ) ) - ( ( MUR + ( DS - CS ) ) + Max( RCSe,RMSe ) ) )", "obj1": 0.9943396226415094, "obj2": 0.00295947506384185}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( DDR / RRS ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( MLU ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "( ( Max( Min( FirstVNF_Mem ,CRS ),RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MLU / MUC ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.09811320754716982, "obj2": 0.7884393812776898}, {"determining": "Min( ( MDR + Const ) ,( Min( DDR ,ACS ) - FirstVNF_RAM ) )", "choosing": "Min( ( MUM * CS ) ,( ( ( RRSe + RCSe ) / RMSe ) * DS ) )", "obj1": 0.9584905660377359, "obj2": 0.03738441612515657}, {"determining": "( Min( Min( ( CRS * Const ) ,PN ) ,ACS ) / ( ARS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR * MLU ) ,( Max( CS,( MLU + ( ( RCSe + RCSe ) * Min( ( ( RCSe * CS ) - ( MUC * MUC ) ) ,MUC ) ) ) ) - ( RCSe / DS ) ) )", "obj1": 0.7037735849056603, "obj2": 0.22383761753576406}, {"determining": "( ( ( BR - FirstVNF_CPU ) / ( ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) + ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ) ) ) + ( ( CRS / PN ) * ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RCSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( MUM / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( RRSe - ( RMSe - DS ) ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( BR - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + Min( Const ,ACS ) ) )", "choosing": "( ( ( RRSe * MUM ) + Max( MUR,DS ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( Max( FirstVNF_RAM_Server,Const ) / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( ( ( ( ( RCSe * Max( RRSe,CS ) ) * MLU ) - ( MUC * CS ) ) * MLU ) / RCSe ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUM + ( MUR * RRSe ) ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR - Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( MLU,RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( ( ACS + FirstVNF_CPU_Server ) * ( ( AMS / MRS ) / Const ) ) )", "choosing": "Max( ( ( Min( RCSe ,RMSe ) * CS ) / MLU ),RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( MUM / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * ( ( ARS + DDR ) - CRS ) ) )", "choosing": "Max( ( Max( RCSe,MUR ) / MLU ),Max( Max( MLU,RMSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,PN ) - ( ( ARS * FirstVNF_Mem ) * ARS ) ) * ( PN / AMS ) )", "choosing": "( ( MUR + MUM ) / Max( MUM,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( CS * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + MUR ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Max( ACS,Const ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Const ,ACS ) - ( MDR + AMS ) ) ,ARS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RRSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( RMSe - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,FirstVNF_CPU ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ACS ) - ( CRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( CS,RCSe ) ,( MUR + RRSe ) ) / Min( DS ,( ( MLU + MUC ) * ( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( ( BR + FirstVNF_Mem_Server ) ,DDR ) ) - ( Max( ( DDR / Min( Min( Min( FirstVNF_Mem_Server ,PN ) ,ACS ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( ( RCSe + RCSe ) * ( MLU * RMSe ) ),RMSe ),( MUR / ( Min( ( MUR * RRSe ) ,( DS + Min( CS ,( RRSe * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( ( BR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MUR / ( Min( ( ( RCSe + RCSe ) * ( MLU * RMSe ) ) ,( DS + Min( CS ,( RRSe * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( ( ( ( ( ACS - Min( DDR ,MRS ) ) - FirstVNF_RAM_Server ) + MRS ) + FirstVNF_Mem_Server ) ,DDR ) ) - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MUR / ( Min( ( MUR * RRSe ) ,( DS + Min( CS ,( ( CS / MLU ) * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) ) - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MUR / ( Min( ( MUR * RRSe ) ,( MLU + Min( CS ,( ( CS / MLU ) * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( ( ( ( ( ACS - Min( DDR ,MRS ) ) - FirstVNF_RAM_Server ) + Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) + FirstVNF_Mem_Server ) ,DDR ) ) - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MUR / ( Min( ( MUR * RRSe ) ,( ( CS / MLU ) + Min( CS ,( ( CS / MLU ) * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( ( ( Max( ( BR - MDR ),FirstVNF_Mem_Server ) + MRS ) + FirstVNF_Mem_Server ) ,DDR ) ) - ( Max( ( DDR / Min( ( BR - PN ) ,Max( ( BR - MDR ),FirstVNF_Mem_Server ) ) ),Min( FirstVNF_RAM_Server ,ARS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( Min( CS ,( ( CS / MLU ) * ( RCSe * RMSe ) ) ) / ( Min( ( MUR * RRSe ) ,( DS + Min( CS ,( ( CS / MLU ) * ( RCSe * RMSe ) ) ) ) ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}]}