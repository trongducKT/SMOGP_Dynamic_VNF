{"1": [{"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( PN ,CRS ) )", "choosing": "Min( ( MUC * DS ) ,Min( CS ,RCSe ) )", "obj1": 0.4744525547445255, "obj2": 0.5681775851826553}, {"determining": "Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5859189475324698}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) * Min( Const ,DDR ) )", "choosing": "( ( RRSe - RMSe ) * ( RCSe + RCSe ) )", "obj1": 0.4635036496350365, "obj2": 0.6025521161635914}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + DS ) / ( MUC / RMSe ) )", "obj1": 0.5273722627737226, "obj2": 0.5781635763184386}, {"determining": "Max( ( FirstVNF_Mem_Server * BR ),( FirstVNF_Mem / CRS ) )", "choosing": "( ( DS / MUC ) + Min( RCSe ,MLU ) )", "obj1": 0.46897810218978103, "obj2": 0.5748084173497933}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Min( ( MUM * MUR ) ,Min( RRSe ,MUM ) )", "obj1": 0.4835766423357664, "obj2": 0.6304370048279858}, {"determining": "Min( ( MDR * PN ) ,( ( Const * ( Max( ( ( FirstVNF_RAM_Server * DDR ) - FirstVNF_CPU ),ARS ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * Min( Max( ( CS * MUC ),CS ) ,RMSe ) ) / ( ( CS / Max( CS,MLU ) ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.599407763071184}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( AMS * Min( ( FirstVNF_RAM + PN ) ,CRS ) ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( CS ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.5967153284671532, "obj2": 0.4383877298597608}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) / ( AMS * CRS ) )", "choosing": "( ( MUC + MLU ) - ( DS - CS ) )", "obj1": 0.5, "obj2": 0.5508353907807519}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.4762773722627737, "obj2": 0.5905651822537274}, {"determining": "Max( ( Const - ( AMS * ACS ) ),( MRS + FirstVNF_RAM ) )", "choosing": "Min( Max( RRSe,( MLU / CS ) ) ,( RRSe * DS ) )", "obj1": 0.4854014598540146, "obj2": 0.5825704490144445}, {"determining": "( ( ( ARS - MDR ) * ARS ) / Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( Max( Max( DS,RCSe ),( MUC / ( MUC / MUR ) ) ) * ( RRSe - RRSe ) )", "obj1": 0.5072992700729927, "obj2": 0.4782970593397669}, {"determining": "( Max( PN,FirstVNF_Mem ) / ( ACS + RRS ) )", "choosing": "( ( RRSe * MUR ) * Max( MUR,MLU ) )", "obj1": 0.49635036496350365, "obj2": 0.5938834461464498}, {"determining": "( ( Const - FirstVNF_Mem ) * ( BR * RRS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 0.45985401459854014, "obj2": 0.602526054691183}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( RMSe + MUR ),( MUC - MUC ) )", "obj1": 0.5346715328467153, "obj2": 0.5240192231721538}, {"determining": "Min( ( ACS + ACS ) ,( RRS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + MUC ) ,Max( RRSe,CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6357407286285022}, {"determining": "( ( CRS * FirstVNF_RAM ) * ( FirstVNF_RAM + MRS ) )", "choosing": "( ( MUR * RCSe ) + ( CS * MUM ) )", "obj1": 0.4762773722627737, "obj2": 0.6451719243215784}, {"determining": "Max( Max( Const,FirstVNF_RAM_Server ),( DDR * FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,MLU ) + Min( CS ,MUR ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RCSe ) / ( RRSe + MUM ) )", "obj1": 0.48722627737226276, "obj2": 0.5374375373266713}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( CS - MUR ) + ( MUC + DS ) )", "obj1": 0.5821167883211679, "obj2": 0.4498533338750947}, {"determining": "( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.4040167562959897}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / CRS ) * Min( Const ,ARS ) )", "choosing": "( Max( MLU,RRSe ) * ( RMSe - MLU ) )", "obj1": 0.572992700729927, "obj2": 0.48071914777402136}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( MUM / MUM ) * ( MLU / MLU ) )", "obj1": 0.48905109489051096, "obj2": 0.5827929686074297}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,MDR ) )", "choosing": "Max( ( DS / RCSe ),( DS * MUC ) )", "obj1": 0.4762773722627737, "obj2": 0.5921633253899529}, {"determining": "( ( BR / FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Max( MUM,MUC ) / ( RRSe * RRSe ) )", "obj1": 0.48905109489051096, "obj2": 0.6050510913391296}, {"determining": "Max( ( MRS / FirstVNF_CPU ),( ACS / RRS ) )", "choosing": "( ( MUM - MUC ) - Max( RCSe,CS ) )", "obj1": 0.4908759124087591, "obj2": 0.6307025891639237}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) / Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( CS * RCSe ) / ( CS - RMSe ) )", "obj1": 0.45255474452554745, "obj2": 0.6585971321722125}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MUC ) / ( MUC / MUC ) )", "obj1": 0.49452554744525545, "obj2": 0.5713481138008365}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( CRS - AMS ) )", "choosing": "( ( CS - RMSe ) + ( DS + RMSe ) )", "obj1": 0.46897810218978103, "obj2": 0.6445151803369309}, {"determining": "Max( ( Const + Const ),Max( MRS,PN ) )", "choosing": "( Max( RMSe,DS ) * ( MUR / CS ) )", "obj1": 0.46715328467153283, "obj2": 0.6025794053296908}, {"determining": "Max( Min( RRS ,ARS ),Min( MDR ,CRS ) )", "choosing": "( ( RMSe / MUM ) * ( MUC - CS ) )", "obj1": 0.5054744525547445, "obj2": 0.46795882204171046}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) + ( MRS * FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,RMSe ),( RRSe / DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - ARS ) ,( FirstVNF_Mem - DDR ) ) + Max( Min( CRS ,MRS ),Max( ARS,ACS ) ) )", "choosing": "Max( ( MUR / ( MUC * MUM ) ),( DS - DS ) )", "obj1": 0.4927007299270073, "obj2": 0.588380428641732}, {"determining": "( ( AMS / Min( Max( CRS,ACS ) ,Max( AMS,Min( Const ,FirstVNF_RAM ) ) ) ) / Max( MRS,AMS ) )", "choosing": "Min( ( RCSe + Max( CS,( MLU - ( RCSe * RRSe ) ) ) ) ,Max( RRSe,( MUC - MUM ) ) )", "obj1": 0.458029197080292, "obj2": 0.6509307651983809}, {"determining": "Max( ( AMS + CRS ),( Const - FirstVNF_RAM ) )", "choosing": "( ( ( MUC / DS ) - MUM ) / ( RMSe + RCSe ) )", "obj1": 0.5018248175182481, "obj2": 0.49055883077180523}, {"determining": "( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) + ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * CRS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / RCSe ) + MLU ) / DS ) * ( MUR - CS ) )", "obj1": 0.5802919708029197, "obj2": 0.4583142965532725}, {"determining": "Min( ( ACS + FirstVNF_CPU_Server ) ,( Min( ACS ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( ( MLU * CS ),Max( CS,RMSe ) ) + ( ( RRSe - ( Max( MUR,MUR ) + MUM ) ) - MUM ) )", "obj1": 0.45985401459854014, "obj2": 0.602526054691183}, {"determining": "Max( Max( FirstVNF_CPU_Server,CRS ),( RRS * AMS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS / CS ) ) - Max( ( DS / RMSe ),Max( MUC,MUM ) ) )", "obj1": 0.48722627737226276, "obj2": 0.584190449010802}, {"determining": "( ( ACS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / Max( ( MLU + MLU ),( MUR + DS ) ) )", "obj1": 0.4835766423357664, "obj2": 0.535665391653717}, {"determining": "( Min( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU * MDR ) / Max( Max( BR,ACS ),FirstVNF_RAM ) ) * Const ) ) ,( FirstVNF_Mem_Server + CRS ) ) - ( ( CRS * AMS ) / ( DDR - Const ) ) )", "choosing": "( ( MUR + MUR ) / Min( Min( ( RMSe - Min( Max( ( ( DS / MUM ) * Min( DS ,MUC ) ),( CS - RMSe ) ) ,MLU ) ) ,MUC ) ,( RRSe * DS ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5803567260559427}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ARS ) / ( ( ( ARS * DDR ) / FirstVNF_RAM_Server ) - DDR ) ) ,( FirstVNF_Mem * ( ( ( ( BR + ACS ) - PN ) - Min( ( DDR - ( MRS - Const ) ) ,( AMS + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( DS,MUR ) * MLU ) - ( MUC / RRSe ) ) + ( ( ( ( MUC / MUM ) / RRSe ) + Max( MUM,Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( RMSe * MUM ) * CS ) ) ) ) ) * ( ( ( Max( RRSe,DS ) - RRSe ) - ( ( ( ( RMSe - MUC ) - ( MUC - MUM ) ) - MUC ) + ( RCSe + Min( Min( CS ,MUR ) ,CS ) ) ) ) + RMSe ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "( Min( ( MRS + CRS ) ,( AMS * BR ) ) / Max( Max( ACS,AMS ),Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( Min( Max( MLU,MLU ) ,MUR ) * Min( RCSe ,RCSe ) )", "obj1": 0.48905109489051096, "obj2": 0.5770500723659727}, {"determining": "( ( ( AMS * PN ) + ( FirstVNF_RAM_Server * PN ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - ( MLU - MUM ) ),MUR ) / ( Max( RMSe,MUR ) - Max( MUM,MLU ) ) )", "obj1": 0.5091240875912408, "obj2": 0.45963416357760417}, {"determining": "Max( ( MRS * Const ),( AMS - AMS ) )", "choosing": "Max( ( Min( RCSe ,( ( ( Min( RCSe ,RCSe ) + ( Max( RCSe,MLU ) * Min( RMSe ,RCSe ) ) ) * MUM ) * MLU ) ) / ( RCSe * RRSe ) ),( ( RCSe * CS ) * ( DS + MUC ) ) )", "obj1": 0.4744525547445255, "obj2": 0.5727396153226162}, {"determining": "( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MLU - MUM ) + DS ),( MLU * MUM ) )", "obj1": 0.5967153284671532, "obj2": 0.43692825451842027}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,ACS ) * ( AMS + DDR ) ) / ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU / ACS ) - ( RRS + MRS ) ) ) + ( ( FirstVNF_CPU_Server - Const ) * BR ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( RRSe ,DS ) + DS ) / ( RRSe - Min( DS ,CS ) ) )", "obj1": 0.49452554744525545, "obj2": 0.6021218458249272}, {"determining": "( ( PN + MRS ) + ( MRS / MDR ) )", "choosing": "Max( ( Min( MLU ,MLU ) * ( MUR * RMSe ) ),( ( RCSe + MUC ) - ( DS + RRSe ) ) )", "obj1": 0.47992700729927007, "obj2": 0.5609869322356354}, {"determining": "( ( Max( FirstVNF_Mem_Server,MDR ) + FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( MUM + Min( RRSe ,Max( RMSe,MUR ) ) ) ) + ( ( MUR - RRSe ) + Min( MUC ,RRSe ) ) )", "obj1": 0.4762773722627737, "obj2": 0.5905651822537274}, {"determining": "Max( Max( ( MDR + FirstVNF_CPU ),Min( FirstVNF_RAM ,AMS ) ),Max( ( FirstVNF_RAM_Server * AMS ),( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( Max( MLU,MUM ) - ( MUR / MUM ) ),Min( ( MUR + MLU ) ,Max( RCSe,MUC ) ) )", "obj1": 0.5054744525547445, "obj2": 0.5183454691684206}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( ( FirstVNF_Mem + PN ) * ( FirstVNF_CPU - ARS ) ) )", "choosing": "( ( DS / RCSe ) + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS / PN ),Min( FirstVNF_RAM ,( FirstVNF_CPU * ARS ) ) )", "choosing": "( ( MUC - ( RCSe - MLU ) ) + ( MUC * Max( MUC,MLU ) ) )", "obj1": 0.48175182481751827, "obj2": 0.5428848919534505}, {"determining": "( Max( Min( MDR ,CRS ),Min( CRS ,RRS ) ) / ( ( ACS + PN ) * Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( Min( ( RRSe - RCSe ) ,( RMSe + RMSe ) ) / Max( Max( MUC,RRSe ),( MUM * RCSe ) ) )", "obj1": 0.4927007299270073, "obj2": 0.5386277523614905}, {"determining": "( ( FirstVNF_CPU - DDR ) - Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,Max( FirstVNF_CPU,RRS ) ) )", "choosing": "( ( MUC / ( RRSe * RMSe ) ) * Max( Max( MLU,MUC ),MLU ) )", "obj1": 0.5237226277372263, "obj2": 0.54177762050198}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - ( BR - FirstVNF_RAM_Server ) ) + Min( ( Const + PN ) ,( DDR - FirstVNF_CPU ) ) )", "choosing": "( Max( ( DS / RCSe ),( RMSe / MUC ) ) + Max( ( MUC * CS ),( DS * MUM ) ) )", "obj1": 0.4981751824817518, "obj2": 0.5906040651528389}, {"determining": "Max( ( ( BR * FirstVNF_RAM ) + ( BR + PN ) ),Min( Min( MDR ,RRS ) ,( Const - MDR ) ) )", "choosing": "( ( Max( RMSe,RRSe ) + ( RCSe / RRSe ) ) - ( ( MUC / RRSe ) / ( RCSe * MUM ) ) )", "obj1": 0.4781021897810219, "obj2": 0.5788636345455808}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( FirstVNF_RAM - Const ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Max( ( MUR + MUM ),MUR ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4744525547445255, "obj2": 0.5420681518736457}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_RAM_Server * Const ) - CRS ),RRS ) )", "choosing": "( ( MUC / ( RRSe * Max( ( CS / ( Min( RMSe ,Min( MLU ,MLU ) ) * ( ( CS / RMSe ) + DS ) ) ),CS ) ) ) * ( ( MUC + MLU ) / ( RRSe + MUC ) ) )", "obj1": 0.708029197080292, "obj2": 0.3044799304508335}, {"determining": "Max( Min( Max( CRS,FirstVNF_RAM ) ,( ACS - PN ) ),( ( FirstVNF_RAM_Server / MRS ) * ( BR + FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe * MUR ) - ( MUC / CS ) ) / ( ( MLU + CS ) / Min( MUR ,MUC ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "( Max( MRS,ARS ) + ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "( Min( ( MLU * CS ) ,( DS * MUR ) ) * ( ( RMSe / RMSe ) + Max( MUR,MUM ) ) )", "obj1": 0.4744525547445255, "obj2": 0.6424069619532103}, {"determining": "( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) + ( Max( MRS,FirstVNF_RAM ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS + MLU ),( CS + MUR ) ) / ( ( DS - RCSe ) * ( CS + RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.6574436740498834}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( Min( MUC ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 0.48722627737226276, "obj2": 0.5782662796063703}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( DDR ,ACS ) ,( ( PN - ( FirstVNF_CPU_Server / Min( FirstVNF_CPU_Server ,Max( Max( MRS,FirstVNF_Mem ),PN ) ) ) ) * DDR ) ) + Min( Const ,ARS ) )", "choosing": "Min( ( CS + Max( CS,RRSe ) ) ,( Min( RCSe ,RRSe ) * CS ) )", "obj1": 0.46897810218978103, "obj2": 0.5689630262095188}, {"determining": "( Max( Min( ACS ,( FirstVNF_CPU_Server + Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,Const ) ) ) ),ACS ) * ( DDR + FirstVNF_RAM ) )", "choosing": "Max( ( MLU / ( ( RCSe + MUM ) / Min( RMSe ,( ( RRSe + Min( ( MUM - MUC ) ,MLU ) ) * MUC ) ) ) ),( MLU + DS ) )", "obj1": 0.4744525547445255, "obj2": 0.5474037405609437}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) * ( AMS + FirstVNF_Mem ) ) / Max( Max( MDR,RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( MLU ,Max( MUR,MUR ) ) ,( MUC + Min( Max( MUM,RRSe ) ,Max( DS,( RMSe - ( ( RMSe * CS ) * Min( RRSe ,RRSe ) ) ) ) ) ) )", "obj1": 0.5127737226277372, "obj2": 0.4679381650171856}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ARS ,Const ) - Min( DDR ,MRS ) ) + ( Max( Const,ARS ) + ( DDR - FirstVNF_CPU_Server ) ) ),Max( Max( ( Const + Const ),( Const / AMS ) ),( Min( PN ,FirstVNF_RAM ) / Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe * Max( RRSe,MUC ) ) / Min( DS ,( Max( RCSe,MUR ) - CS ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( RRS - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) )", "choosing": "( ( MLU * RMSe ) - Max( MUR,RMSe ) )", "obj1": 0.9379562043795621, "obj2": 0.07736342110382566}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,AMS ) / FirstVNF_CPU_Server ) + ( BR - Const ) )", "choosing": "Max( Max( MUC,Max( Min( RRSe ,CS ),( ( RMSe - RMSe ) + ( MUC - ( ( DS / MLU ) / Min( RMSe ,MUC ) ) ) ) ) ),Min( MUC ,MUM ) )", "obj1": 0.5036496350364964, "obj2": 0.5657846495873077}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + Min( MUC ,MUR ) ) * Max( MUR,( RCSe + MUC ) ) ) / Min( MUR ,( DS + RCSe ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "( ( ( ( PN / FirstVNF_RAM ) * ( ARS / MDR ) ) - ( Min( BR ,FirstVNF_Mem ) * ( ACS - AMS ) ) ) / ( Max( Max( FirstVNF_RAM,MDR ),Max( ARS,FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM_Server - BR ),Min( MDR ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( DS * DS ) * ( MUM + RRSe ) ),( Min( RRSe ,MUC ) - ( RMSe + MLU ) ) ) - Max( ( ( RRSe / RRSe ) - ( RMSe + RMSe ) ),( Max( RMSe,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.6400759812899895}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN / FirstVNF_RAM_Server ),Max( BR,FirstVNF_RAM ) )", "choosing": "( ( MUM + DS ) + ( Max( MUC,MUR ) / MLU ) )", "obj1": 0.4744525547445255, "obj2": 0.571582432960159}, {"determining": "Min( ( Min( ( RRS * PN ) ,Max( MRS,DDR ) ) * ( ( AMS - MDR ) + Max( CRS,Const ) ) ) ,Min( ( ( FirstVNF_CPU_Server - DDR ) / ( AMS / FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_CPU ) + Max( FirstVNF_CPU_Server,Const ) ) ) )", "choosing": "( Max( ( Max( RCSe,MUR ) - Min( RRSe ,CS ) ),Max( Max( DS,RMSe ),( CS * MUC ) ) ) - ( ( ( DS + MUM ) - ( MLU - MUC ) ) - ( ( MLU / MUC ) + Min( DS ,CS ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.602526054691183}, {"determining": "( ( Const * Const ) / ( AMS - FirstVNF_RAM ) )", "choosing": "Max( Max( ( ( RCSe * MUM ) + Min( CS ,RMSe ) ),( Min( DS ,MUM ) * Max( RMSe,DS ) ) ),Max( Min( Max( MUC,MUM ) ,( MLU * RRSe ) ),( ( CS * MUM ) + ( CS * MLU ) ) ) )", "obj1": 0.5, "obj2": 0.5022912809308907}, {"determining": "Max( ( Max( Max( FirstVNF_RAM,FirstVNF_RAM ),( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ),( ( ( MDR + FirstVNF_RAM ) * Max( MRS,DDR ) ) / Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,( CS - RMSe ) ) - Max( MLU,( Min( CS ,MUR ) + Min( RRSe ,RRSe ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.5584351965796809}, {"determining": "( Max( Max( ( FirstVNF_Mem - Const ),Max( Const,FirstVNF_RAM ) ),( Min( DDR ,FirstVNF_RAM_Server ) + Min( BR ,Const ) ) ) * ( Max( Max( FirstVNF_CPU_Server,MDR ),( FirstVNF_Mem_Server / AMS ) ) / ( Max( MDR,FirstVNF_CPU ) * ( FirstVNF_RAM * AMS ) ) ) )", "choosing": "( ( Max( ( MLU * MUM ),Max( MUR,RRSe ) ) + ( ( DS - RMSe ) / ( CS + MLU ) ) ) / Min( Min( ( MUR * MUM ) ,( DS + MLU ) ) ,Max( Min( CS ,MUC ),( MUR - RMSe ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "Max( ( Min( MDR ,( ( FirstVNF_RAM * ( AMS * MRS ) ) / RRS ) ) + Min( FirstVNF_Mem ,ACS ) ),Max( ( PN * MDR ),DDR ) )", "choosing": "Max( Max( Min( ( ( MUM / MUM ) * MUM ) ,Min( RCSe ,MUC ) ),Min( ( MUM * RCSe ) ,( CS * MLU ) ) ),Min( ( ( CS + RMSe ) + ( MUR / RCSe ) ) ,( ( RMSe + MUC ) / ( DS + MUC ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.5671847539180895}, {"determining": "Min( ( Max( Max( FirstVNF_CPU_Server,AMS ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( ( AMS * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( MDR ,AMS ) ) ) ,Max( ( ( ARS - ARS ) * ( FirstVNF_CPU + ACS ) ),( Min( FirstVNF_CPU_Server ,ARS ) + Max( FirstVNF_CPU_Server,PN ) ) ) )", "choosing": "( ( MUR - ( ( RCSe / RRSe ) - DS ) ) - Max( ( Max( MUR,MUR ) + DS ),( ( Min( MUM ,MUR ) + MUC ) - RCSe ) ) )", "obj1": 0.49452554744525545, "obj2": 0.5114704390509823}, {"determining": "( ( Min( ( CRS + ACS ) ,Max( BR,Const ) ) + ( ( MDR / FirstVNF_Mem ) * ( FirstVNF_Mem * MDR ) ) ) - Max( Min( ( AMS + RRS ) ,( FirstVNF_RAM_Server / PN ) ),( ( RRS * FirstVNF_RAM_Server ) / Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUR / ( CS * RCSe ) ),( Min( RRSe ,RCSe ) * ( RRSe * MUM ) ) )", "obj1": 0.5693430656934306, "obj2": 0.4917720751989834}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( ( Const / FirstVNF_RAM_Server ),Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( Max( Min( Min( CS ,DS ) ,( DS / RRSe ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5618718928850887}, {"determining": "( ( ( ( FirstVNF_Mem / Const ) / ( CRS * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) * Max( ( ( BR * FirstVNF_RAM ) * ( ACS + FirstVNF_Mem ) ),Min( Min( ARS ,MRS ) ,( MRS + ARS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) * ( DS - MLU ) ) * MUM ) - ( Max( MLU,MLU ) / DS ) )", "obj1": 0.48722627737226276, "obj2": 0.5945289628671977}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS - AMS ) * AMS ) ) * ( BR / MDR ) )", "choosing": "Max( Min( ( ( RRSe + RMSe ) + Min( MLU ,DS ) ) ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ),Min( ( Min( MUR ,RMSe ) - Min( RRSe ,MLU ) ) ,( ( RCSe * MLU ) / ( MUR + MUR ) ) ) )", "obj1": 0.4908759124087591, "obj2": 0.537388144812924}, {"determining": "( Min( FirstVNF_RAM ,ARS ) / ( PN - ( MDR / BR ) ) )", "choosing": "( ( RCSe * RRSe ) * ( ( Max( Max( RRSe,MUM ),CS ) / RCSe ) / MUM ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,RRSe ) / ( MUC + DS ) ) + ( ( CS + MUC ) + ( RCSe * MUC ) ) ) - ( ( ( MUR - RRSe ) + ( MUC * CS ) ) * Max( ( MUR * RRSe ),( CS - MLU ) ) ) )", "obj1": 0.5875912408759124, "obj2": 0.44112305270284574}, {"determining": "( ( ( ( AMS + PN ) / Min( CRS ,MDR ) ) - ( ( MDR + BR ) - ( ARS - BR ) ) ) - ( Max( Max( BR,CRS ),( ARS - FirstVNF_CPU ) ) / Max( ( RRS + FirstVNF_Mem_Server ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "Min( ( ( DS - RMSe ) / MUR ) ,( ( MLU - ( MLU / RMSe ) ) * Max( DS,( MLU + RCSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.6475863573177392}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( CRS ,FirstVNF_CPU ),Max( DDR,( ( Min( FirstVNF_CPU ,CRS ) - RRS ) - RRS ) ) )", "choosing": "( Min( Min( ( MUR / RMSe ) ,( DS / CS ) ) ,( MUR / DS ) ) - ( Max( ( DS + MUR ),Max( CS,DS ) ) / ( Max( Min( ( Min( DS ,RMSe ) * Min( RRSe ,( RRSe - RMSe ) ) ) ,MUR ),( MUM * Max( RRSe,MLU ) ) ) + Max( MUM,MUM ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.5472423122291492}, {"determining": "Max( Min( ( MRS / Const ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,Max( MDR,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + PN ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( RCSe - Min( ( ( MUR / MUR ) - ( RMSe - MUC ) ) ,( Min( Max( RCSe,RRSe ) ,MUC ) / ( ( RCSe - RCSe ) / RMSe ) ) ) ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + ( RRSe + MUR ) ) ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.6049222529159591}, {"determining": "( ( ( RRS * ( Max( MDR,ACS ) * RRS ) ) / DDR ) - ( ( ( CRS - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( ( CS / Min( ( ( CS - Min( RMSe ,( ( RRSe - MUC ) + Max( RRSe,CS ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( ( Max( MDR,Const ) * ( FirstVNF_RAM_Server - BR ) ),( ( ACS / BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( Min( DDR ,Const ) / Min( CRS ,Const ) ) - ( ( AMS + MRS ) + ( ACS - ARS ) ) ) )", "choosing": "Min( Min( ( Min( MUR ,RMSe ) - Min( DS ,RRSe ) ) ,( ( MUC - MUC ) / ( CS - DS ) ) ) ,( Max( ( MLU - MUR ),( MUM - CS ) ) * ( ( MLU + RRSe ) * Max( MUR,RCSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.5545146513379642}], "2": [{"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - MUM ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6387088429668196}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( RRS - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) )", "choosing": "( ( MLU * RMSe ) - Max( MUR,RMSe ) )", "obj1": 0.9379562043795621, "obj2": 0.07736342110382564}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.635036496350365, "obj2": 0.35588103830155193}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MUR ) / Min( ( RRSe * DS ) ,RMSe ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( ( Min( FirstVNF_Mem_Server ,PN ) - ( BR - FirstVNF_RAM_Server ) ) + Min( ( Const + PN ) ,( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( CS * Max( Max( MLU,MUC ),MLU ) )", "obj1": 0.7828467153284672, "obj2": 0.23030592740449213}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS / DDR ) - Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC * Max( RRSe,MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.9452554744525548, "obj2": 0.03524556954759357}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5519306995665105}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) + ( RCSe / RRSe ) ) - ( ( MUC / RRSe ) / ( RCSe * MUM ) ) )", "obj1": 0.7627737226277372, "obj2": 0.2519657136348997}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( CS - MUR ) + ( MUC + DS ) )", "obj1": 0.5802919708029197, "obj2": 0.4524417364989777}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( ( AMS * FirstVNF_Mem_Server ) - ACS ) )", "choosing": "( ( MUM / MUM ) * DS )", "obj1": 0.7864963503649635, "obj2": 0.16028377796946558}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( MUC + MLU ) / ( RRSe * MUC ) ) )", "obj1": 0.708029197080292, "obj2": 0.3044799304508335}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_RAM_Server * Const ) - CRS ),RRS ) )", "choosing": "( ( MUC / ( RRSe * Max( ( CS / ( Min( RMSe ,Min( MLU ,MLU ) ) * ( ( CS / RMSe ) + DS ) ) ),CS ) ) ) * ( ( MUC + MLU ) / ( RRSe + MUC ) ) )", "obj1": 0.708029197080292, "obj2": 0.3044799304508335}, {"determining": "( MDR + ( MRS * FirstVNF_RAM ) )", "choosing": "Max( Min( ( RMSe / MUM ) ,RMSe ),( RRSe / DS ) )", "obj1": 0.4854014598540146, "obj2": 0.4886215380340615}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ACS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MUC ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.7937956204379562, "obj2": 0.1526445694971716}, {"determining": "( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) + ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * CRS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / RCSe ) + MLU ) / DS ) * ( MUR - CS ) )", "obj1": 0.7591240875912408, "obj2": 0.29932416889933977}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( MUM,MLU ) ,RCSe ),Max( Min( ( Max( RMSe,CS ) / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.46897810218978103, "obj2": 0.523241983042486}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( ACS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_Mem_Server + CRS ) ,( FirstVNF_CPU - AMS ) ) / AMS ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / ( ( MUR + MUR ) / Min( ( RRSe * DS ) ,RMSe ) ) )", "obj1": 0.7390510948905109, "obj2": 0.30383207534238044}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( AMS * Min( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,ARS ) / ( MDR * FirstVNF_CPU_Server ) ) ) ,CRS ) ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( ( MLU - RRSe ) ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.6040145985401459, "obj2": 0.4291443912613505}, {"determining": "( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.4040167562959897}, {"determining": "( ( Max( ( Const + Const ),( Const / AMS ) ) / Max( Max( MDR,RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + ( AMS - ARS ) ) + Min( Max( FirstVNF_CPU,BR ) ,( BR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( MLU ,Max( MUR,MUR ) ) ,( ( MUC * RCSe ) / Min( DS ,( Max( RCSe,MUR ) - CS ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.47430769310762383}, {"determining": "( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.4040167562959897}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( Const - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) )", "choosing": "( ( ( RRSe * Max( RRSe,MUC ) ) * RMSe ) - Max( MUR,RMSe ) )", "obj1": 0.5875912408759124, "obj2": 0.43448811911165297}, {"determining": "Max( ( Const - ( AMS * ACS ) ),( MRS + FirstVNF_RAM ) )", "choosing": "Min( Max( RRSe,( MLU / CS ) ) ,( RRSe * DS ) )", "obj1": 0.45985401459854014, "obj2": 0.5514765079658819}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ARS ) / ( ( ( ARS * DDR ) / FirstVNF_RAM_Server ) - DDR ) ) ,( FirstVNF_Mem * ( ( ( ( BR + ACS ) - PN ) - Min( ( DDR - ( MRS - Const ) ) ,( AMS + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( DS,MUR ) * MLU ) - ( MUC / RRSe ) ) + ( ( ( ( MUC / MUM ) / RRSe ) + Max( MUM,Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( RMSe * MUM ) * CS ) ) ) ) ) * ( ( ( Max( RRSe,DS ) - RRSe ) - ( ( ( ( RMSe - MUC ) - ( MUC - MUM ) ) - MUC ) + ( RCSe + Min( Min( CS ,MUR ) ,CS ) ) ) ) + RMSe ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "( ( CRS / DDR ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Min( MUC ,RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( CS - MUR ) + ( MUC + DS ) )", "obj1": 0.5821167883211679, "obj2": 0.4498533338750947}, {"determining": "Min( ( ACS + ACS ) ,( RRS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + MUC ) ,Max( RRSe,CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6357407286285022}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( ( FirstVNF_Mem + PN ) * ( FirstVNF_CPU - ARS ) ) )", "choosing": "( ( DS / RCSe ) + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) + ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * CRS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / RCSe ) + MLU ) / DS ) * ( MUR - CS ) )", "obj1": 0.7591240875912408, "obj2": 0.29932416889933977}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( RRSe + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) + ( MRS * FirstVNF_RAM ) )", "choosing": "Max( Min( DS ,RMSe ),( RRSe / DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Max( ( Const - ( AMS * ( AMS / Const ) ) ),Max( MRS,FirstVNF_RAM ) )", "choosing": "Min( Max( ( RMSe * MUM ),RRSe ) ,( RRSe * DS ) )", "obj1": 0.45985401459854014, "obj2": 0.5514765079658819}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) * Min( Const ,ARS ) )", "choosing": "( RMSe * ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / CRS ) * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ACS ) ) - Min( BR ,MDR ) )", "choosing": "Max( ( DS / RCSe ),( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * ( MRS - ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( ( MUR / ( MUC * MUM ) ),( DS - DS ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( RRS * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( Max( ( ( RCSe * RRSe ) / ( RCSe + RCSe ) ),( Min( RCSe ,CS ) * ( DS / RRSe ) ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( ( RRSe - DS ) + DS ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_RAM_Server,MRS ) / Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( MLU / ( MLU - ( ( DS + RCSe ) - ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * FirstVNF_RAM ) + ( BR + PN ) ) * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( RMSe + MLU ) / ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS * CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * Max( ( Max( RRSe,DS ) + Min( CS ,MUC ) ),Max( ( DS * MLU ),( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( Min( MUC ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Min( ( MLU - RMSe ) ,( Min( RCSe ,RRSe ) * DS ) ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( RRS - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( ( MLU * RMSe ) - Max( MUR,RMSe ) ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / Min( CS ,( DS + RCSe ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( Max( BR,FirstVNF_RAM ) * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( MUM + DS ) + ( Max( MUC,MUR ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,Const ) - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,MUC ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Min( CS ,DS ) ,( DS / RRSe ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + ( Max( ARS,MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( BR * FirstVNF_RAM ) * ( ACS + FirstVNF_Mem ) ),Min( Min( ARS ,MRS ) ,( MRS + ARS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) * ( DS - MLU ) ) * MUM ) - ( Max( Max( Max( CS,MUC ),Min( DS ,RRSe ) ),MLU ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ARS ) / ( PN - ( MDR / BR ) ) )", "choosing": "( ( RCSe * RRSe ) * ( ( Max( Max( RRSe,MUM ),CS ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS - AMS ) * AMS ) ) * ( BR / MDR ) )", "choosing": "Max( Min( ( ( RRSe + RMSe ) + Min( MLU ,DS ) ) ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ),Min( ( Min( MUR ,RMSe ) - Min( RRSe ,MLU ) ) ,( ( RCSe * MLU ) / ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ARS ) / ( PN - ( MDR / BR ) ) )", "choosing": "( ( RCSe * RRSe ) * ( ( Max( Max( RRSe,MUM ),CS ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS - AMS ) * AMS ) ) * ( BR / MDR ) )", "choosing": "Max( Min( ( ( RRSe + RMSe ) + Min( MLU ,DS ) ) ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ),Min( ( Min( MUR ,RMSe ) - Min( RRSe ,MLU ) ) ,( ( RCSe * MLU ) / ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ARS ) / ( PN - ( MDR / BR ) ) )", "choosing": "( ( RCSe * RRSe ) * ( ( Max( Max( RRSe,MUM ),CS ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS - AMS ) * AMS ) ) * ( BR / MDR ) )", "choosing": "Max( Min( ( ( RRSe + RMSe ) + Min( MLU ,DS ) ) ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ),Min( ( Min( MUR ,RMSe ) - Min( RRSe ,MLU ) ) ,( ( RCSe * MLU ) / ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ARS ) / ( PN - ( MDR / BR ) ) )", "choosing": "( ( RCSe * RRSe ) * ( ( Max( Max( RRSe,MUM ),CS ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS - AMS ) * AMS ) ) * ( BR / MDR ) )", "choosing": "Max( Min( ( ( RRSe + RMSe ) + Min( MLU ,DS ) ) ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ),Min( ( Min( MUR ,RMSe ) - Min( RRSe ,MLU ) ) ,( ( RCSe * MLU ) / ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS - AMS ) * AMS ) ) * ( BR / MDR ) )", "choosing": "Max( Min( ( ( RRSe + RMSe ) + Min( MLU ,DS ) ) ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ),Min( ( Min( MUR ,RMSe ) - Min( RRSe ,MLU ) ) ,( ( RCSe * MLU ) / ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ARS ) / ( PN - ( MDR / BR ) ) )", "choosing": "( ( RCSe * RRSe ) * ( ( Max( Max( RRSe,MUM ),CS ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - MUM ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6387088429668196}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + DDR ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( RCSe - MUC ) * ( MLU - MUC ) )", "obj1": 0.8722627737226277, "obj2": 0.11356447207863404}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Max( Max( CRS,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( BR / MRS ) + Min( ARS ,Min( Min( RRS ,Min( ( RRS * FirstVNF_RAM ) ,( PN - DDR ) ) ) ,( ( DDR + FirstVNF_CPU_Server ) + Min( Max( ARS,MRS ) ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC + ( RMSe - MUC ) ) ,( DS - RCSe ) )", "obj1": 0.6332116788321168, "obj2": 0.354138025024926}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( ( Min( FirstVNF_Mem_Server ,PN ) - ( BR - FirstVNF_RAM_Server ) ) + Min( ( Const + PN ) ,( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( CS * Max( Max( MLU,MUC ),MLU ) )", "obj1": 0.7828467153284672, "obj2": 0.23030592740449213}, {"determining": "Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5519306995665105}, {"determining": "( ( CRS / DDR ) - Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC * Max( RRSe,MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.9452554744525548, "obj2": 0.03524556954759357}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) + ( RCSe / RRSe ) ) - ( ( MUC / RRSe ) / ( RCSe * MUM ) ) )", "obj1": 0.7627737226277372, "obj2": 0.2519657136348997}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( ( AMS * FirstVNF_Mem_Server ) - ACS ) )", "choosing": "( ( MUM / MUM ) * DS )", "obj1": 0.7864963503649635, "obj2": 0.16028377796946558}, {"determining": "( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) + ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * CRS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / RCSe ) + MLU ) / DS ) * ( MUR - CS ) )", "obj1": 0.7518248175182481, "obj2": 0.2993705519183467}, {"determining": "( ( MDR - AMS ) + ( ( PN / ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) * MUC ) ,( MLU / ( MUM - MUR ) ) )", "obj1": 0.5492700729927007, "obj2": 0.44668632241354284}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( Const - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) )", "choosing": "( ( ( RRSe * Max( RRSe,MUC ) ) * RMSe ) - Max( MUR,RMSe ) )", "obj1": 0.5875912408759124, "obj2": 0.43448811911165297}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( ( ACS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MUC ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.7937956204379562, "obj2": 0.1526445694971716}, {"determining": "( Max( Min( MDR ,CRS ),Min( CRS ,RRS ) ) / ( AMS * ACS ) )", "choosing": "( Min( ( RRSe - RCSe ) ,( MLU / CS ) ) / Max( Max( MUC,RRSe ),( MUM * RCSe ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5205661427839946}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MUR ) / Min( ( RRSe * DS ) ,RMSe ) )", "obj1": 0.8284671532846716, "obj2": 0.1282346288112181}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / Max( RCSe,( MUR + DS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.44771285954599177}, {"determining": "( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) + ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * CRS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / RCSe ) + MLU ) / DS ) * ( MUR - CS ) )", "obj1": 0.7591240875912408, "obj2": 0.29932416889933977}, {"determining": "Max( ( FirstVNF_Mem + Const ),( FirstVNF_RAM_Server - AMS ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( RCSe + RCSe ) ),( ( RCSe * CS ) * ( DS + MUC ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47155788145961464}, {"determining": "( Min( AMS ,Max( Const,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( Max( MUM,MLU ) - Min( MLU ,RCSe ) )", "obj1": 0.6222627737226277, "obj2": 0.38674458215001484}, {"determining": "( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) * Min( Const ,ARS ) )", "choosing": "( Max( MLU,CS ) * ( RMSe - MLU ) )", "obj1": 0.45255474452554745, "obj2": 0.5454198487238936}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ARS ) / ( ( ( ARS * DDR ) / FirstVNF_RAM_Server ) - DDR ) ) ,( FirstVNF_Mem * ( ( ( ( BR + ACS ) - PN ) - Min( ( DDR - ( MRS - Const ) ) ,( AMS + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( DS,MUR ) * MLU ) - ( MUC / RRSe ) ) + ( ( ( ( MUC / MUM ) / RRSe ) + Max( MUM,Max( RRSe,Min( Max( RRSe,RCSe ) ,( ( RMSe * MUM ) * CS ) ) ) ) ) * ( ( ( Max( RRSe,DS ) - RRSe ) - ( ( ( ( RMSe - MUC ) - ( MUC - MUM ) ) - MUC ) + ( RCSe + Min( Min( CS ,MUR ) ,CS ) ) ) ) + RMSe ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( Max( Min( Min( CS ,DS ) ,( DS / RRSe ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.6277372262773723, "obj2": 0.3673547959812406}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,Max( RRS,( MRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( RRSe - MUR ) ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.8248175182481752, "obj2": 0.12906848108498878}, {"determining": "Min( ( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,Min( MLU ,RCSe ) ) )", "obj1": 0.614963503649635, "obj2": 0.3927054575867403}, {"determining": "( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.4040167562959897}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( AMS * Min( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,ARS ) / ( MDR * FirstVNF_CPU_Server ) ) ) ,CRS ) ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( ( MLU - RRSe ) ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.6040145985401459, "obj2": 0.4291443912613505}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( DDR + Const ) )", "choosing": "( Min( RMSe ,( MUM - MUM ) ) - ( ( MUM - MLU ) * ( RMSe + MUM ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.4040167562959897}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC * DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.36209816535671335}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( AMS * Min( Min( ( Const * FirstVNF_CPU_Server ) ,Max( BR,CRS ) ) ,CRS ) ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( ( ( MLU * CS ) / Max( MUC,MLU ) ) ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.6021897810218978, "obj2": 0.4305162715311537}, {"determining": "( ( CRS / DDR ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Min( MUC ,RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) / ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( ( ( ( MUC / RCSe ) + MLU ) / DS ) ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.6040145985401459, "obj2": 0.4291443912613505}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "Min( ( ACS + ACS ) ,( RRS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + MUC ) ,Max( RRSe,CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6357407286285022}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( ( FirstVNF_Mem + PN ) * ( FirstVNF_CPU - ARS ) ) )", "choosing": "( ( DS / RCSe ) + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,ARS ) / ( MDR * FirstVNF_CPU_Server ) ) + DDR ) ,( AMS * Min( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,ARS ) / ( MDR * FirstVNF_CPU_Server ) ) ) ,CRS ) ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( ( MLU - RRSe ) ,( RRSe * MUR ) ) ) ) + DS ),( ( ( RMSe + ( MUR - Min( CS ,( RRSe * MUR ) ) ) ) + DS ) - DS ) )", "obj1": 0.6021897810218978, "obj2": 0.4305162715311537}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( RRSe + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) + ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * CRS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC / RCSe ) + MLU ) / DS ) * ( MUR - CS ) )", "obj1": 0.7591240875912408, "obj2": 0.29932416889933977}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) * Min( Const ,ARS ) )", "choosing": "( RMSe * ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / CRS ) * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ACS ) ) - Min( BR ,MDR ) )", "choosing": "Max( ( DS / RCSe ),( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * ( MRS - ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( ( MUR / ( MUC * MUM ) ),( DS - DS ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( RRS * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( Max( ( ( RCSe * RRSe ) / ( RCSe + RCSe ) ),( Min( RCSe ,CS ) * ( DS / RRSe ) ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( ( RRSe - DS ) + DS ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_RAM_Server,MRS ) / Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( MLU / ( MLU - ( ( DS + RCSe ) - ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * FirstVNF_RAM ) + ( BR + PN ) ) * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( RMSe + MLU ) / ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS * CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * Max( ( Max( RRSe,DS ) + Min( CS ,MUC ) ),Max( ( DS * MLU ),( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( Min( MUC ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Min( ( MLU - RMSe ) ,( Min( RCSe ,RRSe ) * DS ) ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( RRS - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( ( MLU * RMSe ) - Max( MUR,RMSe ) ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / Min( CS ,( DS + RCSe ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( Max( BR,FirstVNF_RAM ) * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( MUM + DS ) + ( Max( MUC,MUR ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,Const ) - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,MUC ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Min( CS ,DS ) ,( DS / RRSe ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + ( Max( ARS,MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( BR * FirstVNF_RAM ) * ( ACS + FirstVNF_Mem ) ),Min( Min( ARS ,MRS ) ,( MRS + ARS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) * ( DS - MLU ) ) * MUM ) - ( Max( Max( Max( CS,MUC ),Min( DS ,RRSe ) ),MLU ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ARS ) / ( PN - ( MDR / BR ) ) )", "choosing": "( ( RCSe * RRSe ) * ( ( Max( Max( RRSe,MUM ),CS ) / RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS - AMS ) * AMS ) ) * ( BR / MDR ) )", "choosing": "Max( Min( ( ( RRSe + RMSe ) + Min( MLU ,DS ) ) ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ),Min( ( Min( MUR ,RMSe ) - Min( RRSe ,MLU ) ) ,( ( RCSe * MLU ) / ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - MUM ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6387088429668196}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( ( Min( FirstVNF_Mem_Server ,PN ) - ( BR - FirstVNF_RAM_Server ) ) + Min( ( Const + PN ) ,( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( CS * Max( Max( MLU,MUC ),MLU ) )", "obj1": 0.7828467153284672, "obj2": 0.23030592740449213}, {"determining": "( Min( ( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) + ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * CRS ) - FirstVNF_RAM_Server ) ) ) ,ARS ) / ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( MUC / RCSe ) + MLU ) / DS ) + ( MUR - Min( CS ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.7518248175182481, "obj2": 0.29918534688908266}, {"determining": "Max( ( Const - ( AMS * ACS ) ),( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) ) )", "choosing": "Min( Max( RRSe,( MLU / CS ) ) ,( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "( ( CRS / DDR ) - Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC * Max( RRSe,MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.9452554744525548, "obj2": 0.03524556954759357}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) + ( RCSe / RRSe ) ) - ( ( MUC / RRSe ) / ( RCSe * MUM ) ) )", "obj1": 0.7627737226277372, "obj2": 0.2519657136348997}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( ( MLU - RRSe ) ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.6423357664233577, "obj2": 0.3499459078417754}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / CRS ) ) ,( MDR / MRS ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),( RMSe / ( Max( ( RMSe + MUR ),( MUC - MUC ) ) / MUC ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5403878470511455}, {"determining": "( Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / Max( RCSe,( MUR + DS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.44771285954599177}, {"determining": "( ( MDR - AMS ) + ( ( PN / ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) * MUC ) ,( MLU / ( MUM - MUR ) ) )", "obj1": 0.5492700729927007, "obj2": 0.44668632241354284}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,RCSe ) )", "obj1": 0.6113138686131386, "obj2": 0.3978061032014688}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Min( ( ACS / ACS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.46897810218978103, "obj2": 0.515525729983894}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( Const - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) )", "choosing": "( ( ( RRSe * Max( RRSe,MUC ) ) * RMSe ) - Max( MUR,RMSe ) )", "obj1": 0.5875912408759124, "obj2": 0.43448811911165297}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Min( AMS ,Max( Const,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( Max( MUM,MLU ) - Min( MLU ,RCSe ) )", "obj1": 0.6222627737226277, "obj2": 0.38674458215001484}, {"determining": "( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( Max( Min( Min( CS ,DS ) ,( DS / RRSe ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.6277372262773723, "obj2": 0.3673547959812406}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( AMS * Min( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,ARS ) / ( MDR * FirstVNF_CPU_Server ) ) ) ,CRS ) ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( ( MLU - RRSe ) ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.6040145985401459, "obj2": 0.4291443912613505}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM_Server + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) ) ) / ARS ) + ( BR / ( ( Min( DDR ,FirstVNF_Mem ) / FirstVNF_Mem ) * CRS ) ) ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,( ( ( ( ( Min( MUR ,RMSe ) * Min( DS ,MUM ) ) + Max( MUM,MUR ) ) * RMSe ) * DS ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( Min( ( MUC * DS ) ,Min( Min( ( MUC + DS ) ,Min( CS ,RCSe ) ) ,RCSe ) ) + CS ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.009744147348697607}, {"determining": "Min( ( MDR + FirstVNF_Mem ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( ( MUC + DS ),MUC ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( ARS - FirstVNF_CPU ) * Max( MDR,( ( CRS * FirstVNF_RAM ) * ( FirstVNF_RAM + MRS ) ) ) )", "choosing": "( ( MLU / MUC ) + Min( ( Max( RCSe,( MUC - MUC ) ) / MUR ) ,MLU ) )", "obj1": 0.5711678832116789, "obj2": 0.4401480087401776}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( MUM,MLU ) ,RCSe ),Max( Min( ( MUR / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.45985401459854014, "obj2": 0.534119692549695}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( ARS - FirstVNF_CPU ) * Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / MUC ) + Min( ( Max( RCSe,RRSe ) / MUR ) ,MLU ) )", "obj1": 0.5693430656934306, "obj2": 0.4424895251790168}, {"determining": "Min( ( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,Min( MLU ,RCSe ) ) )", "obj1": 0.614963503649635, "obj2": 0.3927054575867403}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC * DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6313868613138686, "obj2": 0.36209816535671335}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "Min( DDR ,Max( ( MDR + FirstVNF_Mem ),DDR ) )", "choosing": "Max( ( MUC + ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5036496350364964, "obj2": 0.46358093446067894}, {"determining": "( Max( Min( MDR ,CRS ),Min( CRS ,RRS ) ) / ( AMS * ACS ) )", "choosing": "( Min( ( RRSe - RCSe ) ,( MLU / CS ) ) / Max( Max( MUC,RRSe ),( MUM * RCSe ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5205661427839946}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( AMS * Min( Min( ( Const * FirstVNF_CPU_Server ) ,Max( BR,CRS ) ) ,CRS ) ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( ( ( MLU * CS ) / Max( MUC,MLU ) ) ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.6021897810218978, "obj2": 0.4305162715311537}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / CRS ) ) ,Min( DDR ,Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Max( MLU,MUC ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6368613138686131, "obj2": 0.35275622777010196}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6332116788321168, "obj2": 0.354138025024926}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( Max( ( ( ARS - FirstVNF_Mem ) + MRS ),FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( RMSe + Min( MLU ,( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "Min( ( ACS + ACS ) ,( RRS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + MUC ) ,Max( RRSe,CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6357407286285022}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( Max( FirstVNF_CPU_Server,CRS ) - ( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,BR ) ,Const ) * ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( AMS * Min( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,ARS ) / ( MDR * FirstVNF_CPU_Server ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUC / RCSe ) + MLU ) / DS ) * ( MUR - CS ) )", "obj1": 0.6040145985401459, "obj2": 0.4291443912613505}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( ( FirstVNF_Mem + PN ) * ( FirstVNF_CPU - ARS ) ) )", "choosing": "( ( DS / RCSe ) + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( DDR + Const ) )", "choosing": "( Min( RMSe ,( MUM - MUM ) ) - ( ( MUM - MLU ) * ( RMSe + MUM ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( ARS - FirstVNF_CPU ) * Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "Max( ( RMSe + MUR ),( MUC - MUC ) )", "obj1": 0.5693430656934306, "obj2": 0.4424895251790168}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,ARS ) / ( MDR * FirstVNF_CPU_Server ) ) + DDR ) ,( AMS * Min( ( FirstVNF_RAM + ( Min( FirstVNF_RAM ,ARS ) / ( MDR * FirstVNF_CPU_Server ) ) ) ,CRS ) ) )", "choosing": "Max( ( ( RMSe + ( MUR - Min( ( MLU - RRSe ) ,( RRSe * MUR ) ) ) ) + DS ),( ( ( RMSe + ( MUR - Min( CS ,( RRSe * MUR ) ) ) ) + DS ) - DS ) )", "obj1": 0.6021897810218978, "obj2": 0.4305162715311537}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( RRSe + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( Max( Max( CRS,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( BR / MRS ) + Min( ARS ,Min( Min( RRS ,Min( ( RRS * FirstVNF_RAM ) ,( PN - DDR ) ) ) ,( ( DDR + FirstVNF_CPU_Server ) + Min( Max( ARS,MRS ) ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( MUC + ( RMSe - MUC ) ) ,( DS - RCSe ) )", "obj1": 0.6332116788321168, "obj2": 0.354138025024926}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) * Min( Const ,ARS ) )", "choosing": "( RMSe * ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / CRS ) * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ACS ) ) - Min( BR ,MDR ) )", "choosing": "Max( ( DS / RCSe ),( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * ( MRS - ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( ( MUR / ( MUC * MUM ) ),( DS - DS ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( RRS * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( Max( ( ( RCSe * RRSe ) / ( RCSe + RCSe ) ),( Min( RCSe ,CS ) * ( DS / RRSe ) ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( ( RRSe - DS ) + DS ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_RAM_Server,MRS ) / Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( MLU / ( MLU - ( ( DS + RCSe ) - ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * FirstVNF_RAM ) + ( BR + PN ) ) * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( RMSe + MLU ) / ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS * CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * Max( ( Max( RRSe,DS ) + Min( CS ,MUC ) ),Max( ( DS * MLU ),( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( Min( MUC ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Min( ( MLU - RMSe ) ,( Min( RCSe ,RRSe ) * DS ) ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( RRS - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( ( MLU * RMSe ) - Max( MUR,RMSe ) ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / Min( CS ,( DS + RCSe ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - MUM ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6387088429668196}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "( Max( Max( CRS,FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + DS ) ,( RCSe - CS ) )", "obj1": 0.7791970802919708, "obj2": 0.19284952047364107}, {"determining": "( Min( ( Min( Max( DDR,FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server * MRS ) ) + ( Min( ACS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * CRS ) - FirstVNF_RAM_Server ) ) ) ,ARS ) / ( MDR * FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( MUC / RCSe ) + MLU ) / DS ) + ( MUR - Min( CS ,( RRSe * MUR ) ) ) ) + DS ),( RMSe - DS ) )", "obj1": 0.7518248175182481, "obj2": 0.29918534688908266}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "Max( ( Const - ( AMS * ACS ) ),( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) ) )", "choosing": "Min( Max( RRSe,( MLU / CS ) ) ,( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5780482735259568}, {"determining": "( ( CRS / DDR ) - Min( ( Min( Min( MDR ,DDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC * Max( RRSe,MUR ) ) * Min( MUC ,RRSe ) )", "obj1": 0.9452554744525548, "obj2": 0.03524556954759357}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - ARS ) ,CRS ) ) )", "choosing": "( ( ( MUR / CS ) + Max( RCSe,MLU ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.7645985401459854, "obj2": 0.24683224624039024}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) + ( RCSe / RRSe ) ) - ( ( MUC / RRSe ) / ( RCSe * MUM ) ) )", "obj1": 0.7627737226277372, "obj2": 0.2519657136348997}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / CRS ) ) ,( MDR / MRS ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),( RMSe / ( Max( ( RMSe + MUR ),( MUC - MUC ) ) / MUC ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5403878470511455}, {"determining": "( ( MDR - AMS ) + ( ( PN / ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) * MUC ) ,( MLU / ( MUM - MUR ) ) )", "obj1": 0.5492700729927007, "obj2": 0.44668632241354284}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / ARS ) ) ,Max( ( ACS + AMS ),DDR ) )", "choosing": "Max( ( RMSe / ( DS / MLU ) ),Max( ( RMSe + CS ),DS ) )", "obj1": 0.5766423357664233, "obj2": 0.4188408368366022}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Min( ( ACS / ACS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.46897810218978103, "obj2": 0.515525729983894}, {"determining": "Min( ( FirstVNF_RAM / PN ) ,Min( Max( ( Max( MRS,MDR ) * ARS ),AMS ) ,Min( Max( MRS,FirstVNF_Mem ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM ),FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( Min( RCSe ,( ( ( ( MUR * RRSe ) * Max( RMSe,MUC ) ) - RMSe ) * ( MLU * RCSe ) ) ) - ( MUR * ( MUR / MUM ) ) ) / RMSe ),( DS + DS ) )", "obj1": 0.5766423357664233, "obj2": 0.4188408368366022}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / Max( RCSe,( MUR + DS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.44771285954599177}, {"determining": "( ( ARS - FirstVNF_CPU ) * Max( MDR,( ( CRS * FirstVNF_RAM ) * ( FirstVNF_RAM + MRS ) ) ) )", "choosing": "( ( MLU / MUC ) + Min( ( Max( RCSe,( MUC - MUC ) ) / MUR ) ,MLU ) )", "obj1": 0.5711678832116789, "obj2": 0.4401480087401776}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_Mem * Const ) * BR ) ) ) * ( DDR + Const ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( ( MDR + FirstVNF_Mem ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( ( MUC + DS ),MUC ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( MUM,MLU ) ,RCSe ),Max( Min( ( MUR / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.45985401459854014, "obj2": 0.534119692549695}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( ARS - FirstVNF_CPU ) * Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / MUC ) + Min( ( Max( RCSe,RRSe ) / MUR ) ,MLU ) )", "obj1": 0.5693430656934306, "obj2": 0.4424895251790168}, {"determining": "( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM_Server + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) ) ) / ARS ) + ( BR / ( ( Min( DDR ,FirstVNF_Mem ) / FirstVNF_Mem ) * CRS ) ) ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,( ( ( ( ( Min( MUR ,RMSe ) * Min( DS ,MUM ) ) + Max( MUM,MUR ) ) * RMSe ) * DS ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( Min( ( MUC * DS ) ,Min( Min( ( MUC + DS ) ,Min( CS ,RCSe ) ) ,RCSe ) ) + CS ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.009744147348697607}, {"determining": "( ( Max( FirstVNF_RAM,BR ) * ( MDR + AMS ) ) / ( BR + MDR ) )", "choosing": "( Max( DS,( ( MUR * Max( RMSe,( RCSe / CS ) ) ) + Min( ( DS * RMSe ) ,MLU ) ) ) * ( RRSe * RRSe ) )", "obj1": 0.5237226277372263, "obj2": 0.45088611236461223}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "Min( DDR ,Max( ( MDR + FirstVNF_Mem ),DDR ) )", "choosing": "Max( ( MUC + ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5036496350364964, "obj2": 0.46358093446067894}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( Max( Min( MDR ,CRS ),Min( CRS ,RRS ) ) / ( AMS * ACS ) )", "choosing": "( Min( ( RRSe - RCSe ) ,( MLU / CS ) ) / Max( Max( MUC,RRSe ),( MUM * RCSe ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5205661427839946}, {"determining": "Max( Min( ( Min( DDR ,ACS ) / Min( ARS ,FirstVNF_Mem ) ) ,( Max( MRS,AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( RMSe + RCSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( Min( MRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * PN ) ) / Min( ACS ,ARS ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / ( MUR / CS ) ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "Min( ( ACS + ACS ) ,( RRS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + MUC ) ,Max( RRSe,CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6357407286285022}, {"determining": "( Max( ( ( ARS - FirstVNF_Mem ) + MRS ),FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( RMSe + Min( MLU ,( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( ( FirstVNF_Mem + PN ) * ( FirstVNF_CPU - ARS ) ) )", "choosing": "( ( DS / RCSe ) + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( ( Max( FirstVNF_RAM,BR ) * ( MDR + AMS ) ) / ( BR + MDR ) )", "choosing": "( Max( DS,( ( MUR * Max( RMSe,( RCSe / CS ) ) ) + Min( ( DS * RMSe ) ,MLU ) ) ) * ( RRSe * RRSe ) )", "obj1": 0.5237226277372263, "obj2": 0.45088611236461223}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / CRS ) ) ,Min( DDR ,Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Max( MLU,MUC ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( ARS - FirstVNF_CPU ) * Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "Max( ( RMSe + MUR ),( MUC - MUC ) )", "obj1": 0.5693430656934306, "obj2": 0.4424895251790168}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( RRSe + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) * Min( Const ,ARS ) )", "choosing": "( RMSe * ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / CRS ) * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ACS ) ) - Min( BR ,MDR ) )", "choosing": "Max( ( DS / RCSe ),( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * ( MRS - ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( ( MUR / ( MUC * MUM ) ),( DS - DS ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( RRS * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( Max( ( ( RCSe * RRSe ) / ( RCSe + RCSe ) ),( Min( RCSe ,CS ) * ( DS / RRSe ) ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( ( RRSe - DS ) + DS ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_RAM_Server,MRS ) / Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( MLU / ( MLU - ( ( DS + RCSe ) - ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * FirstVNF_RAM ) + ( BR + PN ) ) * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( RMSe + MLU ) / ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS * CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * Max( ( Max( RRSe,DS ) + Min( CS ,MUC ) ),Max( ( DS * MLU ),( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( Min( MUC ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Min( ( MLU - RMSe ) ,( Min( RCSe ,RRSe ) * DS ) ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( RRS * ACS ) ) ,( ( ARS + ARS ) * ( RRS - FirstVNF_Mem ) ) ) / ( Max( ( MDR * MDR ),( FirstVNF_CPU_Server + MDR ) ) / ( ( Const - FirstVNF_RAM ) + ( CRS + MRS ) ) ) ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( ( MLU * RMSe ) - Max( MUR,RMSe ) ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / Min( CS ,( DS + RCSe ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( MRS ,ACS ) ,FirstVNF_CPU_Server ) - ( AMS * Min( MRS ,Min( Const ,( CRS / BR ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( MUR - ( MLU / Min( Min( ( ( RRSe - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) ) ) ,Max( ( ( ( Min( Max( RRSe,Min( DS ,MLU ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - MUM ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6387088429668196}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "Min( ( ( ARS - FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( ( Max( DS,( MLU + RCSe ) ) / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5857664233576643, "obj2": 0.40794318692604803}, {"determining": "( ( MDR - Min( ( PN + BR ) ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC / ( MLU * RCSe ) ) ,Min( CS ,RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.6025325750553576}, {"determining": "( ( MDR - AMS ) + ( ( PN / ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) * MUC ) ,( MLU / ( MUM - MUR ) ) )", "obj1": 0.5492700729927007, "obj2": 0.44668632241354284}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / RRS ) ) - Min( FirstVNF_Mem_Server ,( Min( RRS ,( FirstVNF_Mem_Server / RRS ) ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Min( ( MUM / Max( RCSe,MLU ) ) ,( RMSe * ( MUM / Max( RCSe,MLU ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4296852787257825}, {"determining": "( Min( MRS ,ACS ) * Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( ( RCSe + ( RRSe - MUC ) ),MLU ) ,RCSe ),Max( Min( ( Max( RMSe,CS ) / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5761985139275322}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Min( ( ACS / ACS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.46897810218978103, "obj2": 0.515525729983894}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / CRS ) ) ,( MDR / MRS ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),( RMSe / ( Max( ( RMSe + MUR ),( MUC - MUC ) ) / MUC ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5403878470511455}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / Max( RCSe,( MUR + DS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.44771285954599177}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( MUM,MLU ) ,RCSe ),Max( Min( ( MUR / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.45985401459854014, "obj2": 0.534119692549695}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / ARS ) ) ,Max( ( ACS + AMS ),DDR ) )", "choosing": "Max( ( RMSe / ( DS / MLU ) ),Max( ( RMSe + CS ),DS ) )", "obj1": 0.5766423357664233, "obj2": 0.4188408368366022}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( ( Max( FirstVNF_RAM,BR ) * ( MDR + AMS ) ) / ( BR + MDR ) )", "choosing": "( Max( DS,( ( MUR * Max( RMSe,( RCSe / CS ) ) ) + Min( ( DS * RMSe ) ,MLU ) ) ) * ( RRSe * RRSe ) )", "obj1": 0.5237226277372263, "obj2": 0.45088611236461223}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_Mem * Const ) * BR ) ) ) * ( DDR + Const ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "Min( ( MDR + FirstVNF_Mem ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( ( MUC + DS ),MUC ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / FirstVNF_RAM ) ) ,Max( Min( ( ( ( FirstVNF_CPU_Server - DDR ) - RRS ) + BR ) ,( FirstVNF_RAM_Server / Max( AMS,Const ) ) ),BR ) )", "choosing": "Max( ( RMSe / ( DS / MLU ) ),Max( ( RMSe + CS ),DS ) )", "obj1": 0.5766423357664233, "obj2": 0.4188408368366022}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4801254546118537}, {"determining": "Min( DDR ,Max( ( MDR + FirstVNF_Mem ),DDR ) )", "choosing": "Max( ( MUC + ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5036496350364964, "obj2": 0.46358093446067894}, {"determining": "( Max( Min( MDR ,CRS ),Min( CRS ,RRS ) ) / ( AMS * ACS ) )", "choosing": "( Min( ( RRSe - RCSe ) ,( MLU / CS ) ) / Max( Max( MUC,RRSe ),( MUM * RCSe ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5205661427839946}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Max( Min( ( MRS / Const ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,Max( MDR,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + PN ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( RCSe - Min( ( ( MUR / MUR ) - ( RMSe - MUC ) ) ,( Min( Max( RCSe,RRSe ) ,MUC ) / ( ( RCSe - RCSe ) / RMSe ) ) ) ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + ( RRSe + MUR ) ) ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( Min( MRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * PN ) ) / Min( ACS ,ARS ) )", "choosing": "( ( DS / ( ( ( RMSe + MUR ) + CS ) * ( CS + MUR ) ) ) * ( RRSe + RRSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "Min( ( ACS + ACS ) ,( RRS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe + MUC ) ,Max( RRSe,CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6357407286285022}, {"determining": "( Min( MRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * PN ) ) / Min( ACS ,ARS ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / ( MUR / CS ) ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( ( FirstVNF_Mem + PN ) * ( FirstVNF_CPU - ARS ) ) )", "choosing": "( ( DS / RCSe ) + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( ( Max( FirstVNF_RAM,BR ) * ( MDR + AMS ) ) / ( BR + MDR ) )", "choosing": "( Max( DS,( ( MUR * Max( RMSe,( RCSe / CS ) ) ) + Min( ( DS * RMSe ) ,MLU ) ) ) * ( RRSe * RRSe ) )", "obj1": 0.5237226277372263, "obj2": 0.45088611236461223}, {"determining": "Max( Min( ( Min( DDR ,ACS ) / Min( ARS ,FirstVNF_Mem ) ) ,( Max( MRS,AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( RMSe + RCSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( RCSe - ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) / ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( RRSe + ( ( MUM - MLU ) * ( RCSe / MLU ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6331365717046505}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( ( RCSe - MLU ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) * Min( Const ,ARS ) )", "choosing": "( RMSe * ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / CRS ) * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ACS ) ) - Min( BR ,MDR ) )", "choosing": "Max( ( DS / RCSe ),( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * ( MRS - ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( ( MUR / ( MUC * MUM ) ),( DS - DS ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( RRS * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( Max( ( ( RCSe * RRSe ) / ( RCSe + RCSe ) ),( Min( RCSe ,CS ) * ( DS / RRSe ) ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( ( RRSe - DS ) + DS ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_RAM_Server,MRS ) / Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( MLU / ( MLU - ( ( DS + RCSe ) - ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * FirstVNF_RAM ) + ( BR + PN ) ) * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( RMSe + MLU ) / ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS * CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * Max( ( Max( RRSe,DS ) + Min( CS ,MUC ) ),Max( ( DS * MLU ),( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - AMS ),FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( Min( MUC ,Max( RMSe,RRSe ) ) - Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / Max( Max( FirstVNF_RAM_Server,ACS ),Min( PN ,RRS ) ) ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - Min( ( MLU - RMSe ) ,( Min( RCSe ,RRSe ) * DS ) ) ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( ( ACS / ACS ) / DDR ) - ( ( ( CRS - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( ( CS / Min( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 0.7244525547445255, "obj2": 0.2968641076905461}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "Min( ( ( ARS - FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( ( Max( DS,( MLU + RCSe ) ) / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5857664233576643, "obj2": 0.40794318692604803}, {"determining": "( ( MDR - Min( ( PN + BR ) ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC / ( MLU * RCSe ) ) ,Min( CS ,RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.6025325750553576}, {"determining": "( ( MDR - AMS ) + ( ( PN / ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) * MUC ) ,( MLU / ( MUM - MUR ) ) )", "obj1": 0.5492700729927007, "obj2": 0.44668632241354284}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / RRS ) ) - Min( FirstVNF_Mem_Server ,( Min( RRS ,( FirstVNF_Mem_Server / RRS ) ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Min( ( MUM / Max( RCSe,MLU ) ) ,( RMSe * ( MUM / Max( RCSe,MLU ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4296852787257825}, {"determining": "( Min( MRS ,ACS ) * Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( ( RCSe + ( RRSe - MUC ) ),MLU ) ,RCSe ),Max( Min( ( Max( RMSe,CS ) / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5761985139275322}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Min( ( ACS / ACS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + ( RRSe + ( MUC * Max( RRSe,MUR ) ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.46897810218978103, "obj2": 0.515525729983894}, {"determining": "( Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / Max( RCSe,( MUR + DS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.44771285954599177}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( Min( ( MUC + ( RMSe + ( RRSe - RRSe ) ) ) ,Min( CS ,RCSe ) ),MLU ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.34984766522613875}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_Mem * Const ) * BR ) ) ) * ( DDR + Const ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( Min( ( Min( ARS ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / ( RMSe / ( DS / MUC ) ) ) ),Max( DS,DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5403878470511455}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( MUM,MLU ) ,RCSe ),Max( Min( ( MUR / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.45985401459854014, "obj2": 0.534119692549695}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( FirstVNF_CPU / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / ARS ) ) ,Max( ( ACS + AMS ),DDR ) )", "choosing": "Max( ( RMSe / ( DS / MLU ) ),Max( ( RMSe + CS ),DS ) )", "obj1": 0.5766423357664233, "obj2": 0.4188408368366022}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / ARS ) ) ,Max( ( ACS + AMS ),DDR ) )", "choosing": "Max( ( RMSe / ( Max( ( RMSe / ( ( Min( CS ,RMSe ) - ( RMSe + MLU ) ) / DS ) ),Max( DS,MUR ) ) / MUC ) ),Max( DS,DS ) )", "obj1": 0.5766423357664233, "obj2": 0.4188408368366022}, {"determining": "Min( DDR ,Max( ( MDR + FirstVNF_Mem ),DDR ) )", "choosing": "Max( ( MUC + ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5036496350364964, "obj2": 0.46358093446067894}, {"determining": "( Max( Min( MDR ,CRS ),Min( CRS ,RRS ) ) / ( AMS * ACS ) )", "choosing": "( Min( ( RRSe - RCSe ) ,( MLU / CS ) ) / Max( Max( MUC,RRSe ),( MUM * RCSe ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5205661427839946}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "Max( Min( ( MRS / Const ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,Max( MDR,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + PN ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( Min( ( FirstVNF_Mem * Const ) ,CRS ) ,Max( ( FirstVNF_Mem * Const ),FirstVNF_Mem ) )", "choosing": "Max( MLU,( ( Max( MUC,RRSe ) / Min( ( Min( Min( MUC ,( RRSe * MLU ) ) ,MUR ) * ( RCSe + MUC ) ) ,MUM ) ) - ( RRSe + ( Min( Min( MUC ,( RRSe * MLU ) ) ,MUR ) * ( RCSe + MUC ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4801254546118537}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / CRS ) ) ,( MDR / MRS ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),( RMSe / ( Max( ( RMSe + MUR ),( MUC - MUC ) ) / MUC ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5403878470511455}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) )", "choosing": "Max( MLU,Max( DS,DS ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( MUC ,Min( CS ,RCSe ) )", "obj1": 0.6806569343065694, "obj2": 0.3052722748627968}, {"determining": "( Min( MRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * PN ) ) / Min( ACS ,ARS ) )", "choosing": "( ( DS / ( ( ( RMSe + MUR ) + CS ) * ( CS + MUR ) ) ) * ( RRSe + RRSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "( ( FirstVNF_Mem_Server / ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / RCSe )", "obj1": 0.48722627737226276, "obj2": 0.48053711586947023}, {"determining": "Max( Min( ( MRS / Const ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,Max( MDR,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + PN ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( RCSe - Min( ( ( MUR / MUR ) - ( RMSe - MUC ) ) ,( Min( Max( RCSe,RRSe ) ,MUC ) / ( ( RCSe - RCSe ) / RMSe ) ) ) ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + ( RRSe + MUR ) ) ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( MDR + FirstVNF_Mem ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( ( MUC + DS ),MUC ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( RCSe - ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( MRS + FirstVNF_CPU ) + ( PN / ( FirstVNF_Mem_Server - ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR / ( ( CS * RCSe ) / CS ) ) / ( Max( ( MLU + DS ),( Max( MUM,Max( ( ( CS - MUC ) - RCSe ),RCSe ) ) + ( MUM + MLU ) ) ) / ( ( ( RRSe / MUC ) + ( MLU + ( DS + ( MLU * ( DS - MUC ) ) ) ) ) * RCSe ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + CS ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4908759124087591, "obj2": 0.4801254546118537}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) * Min( Const ,ARS ) )", "choosing": "( RMSe * ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / CRS ) * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ACS ) ) - Min( BR ,MDR ) )", "choosing": "Max( ( DS / RCSe ),( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * ( MRS - ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( ( MUR / ( MUC * MUM ) ),( DS - DS ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( RRS * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( Max( ( ( RCSe * RRSe ) / ( RCSe + RCSe ) ),( Min( RCSe ,CS ) * ( DS / RRSe ) ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( ( RRSe - DS ) + DS ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_RAM_Server,MRS ) / Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( MLU / ( MLU - ( ( DS + RCSe ) - ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * FirstVNF_RAM ) + ( BR + PN ) ) * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / ( RRSe * MUC ) ) * ( ( RMSe + MLU ) / ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( RCSe + ( MUC * ( DS + Max( DS,( RRSe * DS ) ) ) ) ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.7208029197080292, "obj2": 0.289234513330171}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "Min( ( ( ARS - FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( ( Max( DS,( MLU + RCSe ) ) / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5857664233576643, "obj2": 0.40794318692604803}, {"determining": "( ( MDR - Min( ( PN + BR ) ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC / ( MLU * RCSe ) ) ,Min( CS ,RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.6025325750553576}, {"determining": "( ( MDR - AMS ) + ( ( PN / ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) * MUC ) ,( MLU / ( MUM - MUR ) ) )", "obj1": 0.5492700729927007, "obj2": 0.44668632241354284}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / RRS ) ) - Min( FirstVNF_Mem_Server ,( Min( RRS ,( FirstVNF_Mem_Server / RRS ) ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Min( ( MUM / Max( RCSe,MLU ) ) ,( RMSe * ( MUM / Max( RCSe,MLU ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4296852787257825}, {"determining": "( Min( MRS ,ACS ) * Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( ( RCSe + ( RRSe - MUC ) ),MLU ) ,RCSe ),Max( Min( ( Max( RMSe,CS ) / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5761985139275322}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server )", "choosing": "Min( Min( ( RCSe * ( ( RCSe / CS ) * ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( ( RRSe * MUC ),Min( MUR ,RRSe ) ) ) ) ) ) ,MLU ) ,Min( CS ,RCSe ) )", "obj1": 0.7135036496350365, "obj2": 0.29640839818042103}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( ( CRS * AMS ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( ( MUC + MLU ) / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / Max( RCSe,( MUR + DS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.44771285954599177}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( Min( ( MUC + ( RMSe + ( RRSe - RRSe ) ) ) ,Min( CS ,RCSe ) ),MLU ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.34984766522613875}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( MUM,MLU ) ,RCSe ),Max( Min( ( MUR / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.45985401459854014, "obj2": 0.534119692549695}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / ARS ) ) ,Max( ( ACS + AMS ),DDR ) )", "choosing": "Max( ( RMSe / ( DS / MLU ) ),Max( ( RMSe + CS ),DS ) )", "obj1": 0.5766423357664233, "obj2": 0.4188408368366022}, {"determining": "( Max( Min( MDR ,CRS ),Min( CRS ,RRS ) ) / ( AMS * ACS ) )", "choosing": "( Min( ( RRSe - RCSe ) ,( MLU / CS ) ) / Max( Max( MUC,RRSe ),( MUM * RCSe ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5205661427839946}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_Mem * Const ) * BR ) ) ) * ( DDR + Const ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "Min( ( MDR / ( FirstVNF_Mem / CRS ) ) ,Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM,PN ) ) )", "choosing": "Max( ( RMSe / ( DS / MLU ) ),Max( ( RMSe + CS ),DS ) )", "obj1": 0.5766423357664233, "obj2": 0.4188408368366022}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( Const * ( ( ( MDR * PN ) + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( MUR - CS ),Min( ( CS - RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4785267729335051}, {"determining": "Min( DDR ,Max( ( MDR + FirstVNF_Mem ),DDR ) )", "choosing": "Max( ( MUC + ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5036496350364964, "obj2": 0.46358093446067894}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( ( MDR * PN ) ,( ( Const * ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45551586265239263}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + ( RCSe + RCSe ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "( ( CRS * AMS ) + ( ARS / ( BR / Min( ( FirstVNF_CPU_Server - Max( CRS,FirstVNF_CPU_Server ) ) ,CRS ) ) ) )", "choosing": "( ( MUC + ( Max( RCSe,( MUC + Max( ( MLU + ( RCSe / MUM ) ),RMSe ) ) ) + Max( RCSe,( MUC + ( ( CS - ( MUC / DS ) ) + Min( MLU ,RMSe ) ) ) ) ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.49635036496350365, "obj2": 0.4693381694498552}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( MUC ,Min( CS ,RCSe ) )", "obj1": 0.6806569343065694, "obj2": 0.3052722748627968}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,DDR ) + MRS ) ) + MRS ) ,CRS ) ) )", "choosing": "( Max( MLU,Max( DS,DS ) ) / Max( MLU,Max( DS,DS ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "Min( Min( ( FirstVNF_Mem * Const ) ,CRS ) ,Max( ( FirstVNF_Mem * Const ),FirstVNF_Mem ) )", "choosing": "Max( MLU,( ( Max( MUC,RRSe ) / Min( ( Min( Min( MUC ,( RRSe * MLU ) ) ,MUR ) * ( RCSe + MUC ) ) ,MUM ) ) - ( RRSe + ( Min( Min( MUC ,( RRSe * MLU ) ) ,MUR ) * ( RCSe + MUC ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Max( Min( ( MRS / Const ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,Max( MDR,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + PN ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) )", "choosing": "Max( MLU,Max( DS,DS ) )", "obj1": 0.4981751824817518, "obj2": 0.46701732756396197}, {"determining": "( ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( RCSe - ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( FirstVNF_CPU / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) * Min( Const ,ARS ) )", "choosing": "( RMSe * ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / CRS ) * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ACS ) ) - Min( BR ,MDR ) )", "choosing": "Max( ( DS / RCSe ),( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * ( MRS - ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( ( MUR / ( MUC * MUM ) ),( DS - DS ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( RRS * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( Max( ( ( RCSe * RRSe ) / ( RCSe + RCSe ) ),( Min( RCSe ,CS ) * ( DS / RRSe ) ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( MUM - MLU ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( ( ( RRSe - DS ) + DS ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * ( AMS + BR ) ) / ( Max( FirstVNF_RAM_Server,MRS ) / Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( ( RRSe - DS ) + DS ) / ( MLU / ( MLU - ( ( DS + RCSe ) - ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( RCSe + ( MUC * ( DS + Max( DS,( RRSe * DS ) ) ) ) ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.7208029197080292, "obj2": 0.289234513330171}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( BR * ( FirstVNF_RAM / MDR ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - RRSe ) ) )", "obj1": 0.8978102189781022, "obj2": 0.08441546817788041}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / RRS ) ) - Min( FirstVNF_Mem_Server ,( Min( RRS ,( FirstVNF_Mem_Server / RRS ) ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Min( ( MUM / Max( RCSe,MLU ) ) ,( RMSe * ( MUM / Max( RCSe,MLU ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4296852787257825}, {"determining": "( ( MDR - Min( ( PN + BR ) ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC / ( MLU * RCSe ) ) ,Min( CS ,RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.6025325750553576}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( MDR - AMS ) + ( ( PN / ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) * MUC ) ,( MLU / ( MUM - MUR ) ) )", "obj1": 0.5492700729927007, "obj2": 0.44668632241354284}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "( Min( MRS ,ACS ) * Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( ( RCSe + ( RRSe - MUC ) ),MLU ) ,RCSe ),Max( Min( ( Max( RMSe,CS ) / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5761985139275322}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server )", "choosing": "Min( Min( ( RCSe * ( ( RCSe / CS ) * ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( ( RRSe * MUC ),Min( MUR ,RRSe ) ) ) ) ) ) ,MLU ) ,Min( CS ,RCSe ) )", "obj1": 0.7135036496350365, "obj2": 0.29640839818042103}, {"determining": "Min( DDR ,( MDR + FirstVNF_Mem ) )", "choosing": "Max( MLU,( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.572992700729927, "obj2": 0.4102078657697786}, {"determining": "( Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) ) / ( ACS / AMS ) )", "choosing": "( ( ( DS + MUC ) / ( DS * CS ) ) / Max( RCSe,( MUR + DS ) ) )", "obj1": 0.5255474452554745, "obj2": 0.44771285954599177}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( Min( ( MUC + ( RMSe + ( RRSe - RRSe ) ) ) ,Min( CS ,RCSe ) ),MLU ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.34984766522613875}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Min( DDR ,( ( AMS * ( DDR * PN ) ) * Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.4781021897810219, "obj2": 0.500613822348931}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( ( ( ARS - FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( ( Max( DS,( MLU + RCSe ) ) / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5857664233576643, "obj2": 0.40794318692604803}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( MUM,MLU ) ,RCSe ),Max( Min( ( MUR / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.45985401459854014, "obj2": 0.534119692549695}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + MLU ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( ( CRS * AMS ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( ( MUC + MLU ) / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( Const * ( ( ( MDR * PN ) + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( MUR - CS ),Min( ( CS - RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4785267729335051}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.40167614923347195}, {"determining": "Min( ( MDR * PN ) ,( ( Const * ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( MLU - CS ),Min( ( CS * RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.40167614923347195}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "Min( ( MDR * PN ) ,( ( Const * ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_Mem * Const ) * BR ) ) ) * ( DDR + Const ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( Const * ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45551586265239263}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( ( ( FirstVNF_Mem_Server / ( MDR + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( MUC + ( RCSe + RCSe ) ) + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4981751824817518, "obj2": 0.46545652576402796}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( MUC ,Min( CS ,RCSe ) )", "obj1": 0.6806569343065694, "obj2": 0.3052722748627968}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "( FirstVNF_CPU_Server - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( RRSe * DS ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.49635036496350365, "obj2": 0.46752476082880934}, {"determining": "( ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( RCSe - ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) * Min( Const ,ARS ) )", "choosing": "( RMSe * ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / CRS ) * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ACS ) ) - Min( BR ,MDR ) )", "choosing": "Max( ( DS / RCSe ),( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * ( MRS - ARS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( ( MUR / ( MUC * MUM ) ),( DS - DS ) ) ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - FirstVNF_CPU_Server ) - Const ) ,( FirstVNF_Mem * Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MUC ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( RRS * Const ) ) * ( ( RRS - ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + RCSe ) - ( CS / RCSe ) ) - ( Max( ( ( RCSe * RRSe ) / ( RCSe + RCSe ) ),( Min( RCSe ,CS ) * ( DS / RRSe ) ) ) * ( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( BR * ( FirstVNF_RAM / MDR ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - RRSe ) ) )", "obj1": 0.8978102189781022, "obj2": 0.08441546817788041}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( DDR ,( MDR + FirstVNF_Mem ) )", "choosing": "Max( MLU,( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.572992700729927, "obj2": 0.4102078657697786}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( MDR - Min( ( PN + BR ) ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC / ( MLU * RCSe ) ) ,Min( CS ,RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.6025325750553576}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "( Min( MRS ,ACS ) * Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( ( RCSe + ( RRSe - MUC ) ),MLU ) ,RCSe ),Max( Min( ( Max( RMSe,CS ) / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5761985139275322}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server )", "choosing": "Min( Min( ( RCSe * ( ( RCSe / CS ) * ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( ( RRSe * MUC ),Min( MUR ,RRSe ) ) ) ) ) ) ,MLU ) ,Min( CS ,RCSe ) )", "obj1": 0.7135036496350365, "obj2": 0.29640839818042103}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + ( MDR + FirstVNF_Mem ) ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / RCSe )", "obj1": 0.5237226277372263, "obj2": 0.44433076933906573}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( Min( ( MUC + ( RMSe + ( RRSe - RRSe ) ) ) ,Min( CS ,RCSe ) ),MLU ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.34984766522613875}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( Max( FirstVNF_CPU_Server,CRS ) - ( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,BR ) ,Const ) * ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( AMS - Max( ( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) - FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( Min( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ,Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.5967153284671532, "obj2": 0.3981773922005729}, {"determining": "Min( ( ( ARS - FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( ( Max( DS,( MLU + RCSe ) ) / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5857664233576643, "obj2": 0.40794318692604803}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( Min( FirstVNF_Mem ,ACS ) * Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( MUM,MLU ) ,RCSe ),Max( Min( ( MUR / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.45985401459854014, "obj2": 0.534119692549695}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( FirstVNF_CPU / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + MLU ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( Const * ( ( ( MDR * PN ) + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( MUR - CS ),Min( ( CS - RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4785267729335051}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "Min( ( MDR * PN ) ,( ( Const * ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_Mem * Const ) * BR ) ) ) * ( DDR + Const ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( ( MDR / FirstVNF_RAM ) ,Max( ( ACS + AMS ),DDR ) )", "choosing": "Max( ( RMSe / ( DS / ( RMSe / ( ( Min( CS ,RMSe ) - ( RMSe + MLU ) ) / DS ) ) ) ),Max( ( RMSe + CS ),DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45551586265239263}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( MLU - CS ),Min( ( CS * RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.40167614923347195}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( ( ( FirstVNF_Mem_Server / ( MDR + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( MUC + ( RCSe + RCSe ) ) + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4981751824817518, "obj2": 0.46545652576402796}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( ( CRS * AMS ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( ( MUC + MLU ) / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( MUC ,Min( CS ,RCSe ) )", "obj1": 0.6806569343065694, "obj2": 0.3052722748627968}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.40167614923347195}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "( FirstVNF_CPU_Server - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( RRSe * DS ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.49635036496350365, "obj2": 0.46752476082880934}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + MLU ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( RCSe - ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) ) ) * Min( Const ,ARS ) )", "choosing": "( RMSe * ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( BR * ( FirstVNF_RAM / MDR ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - RRSe ) ) )", "obj1": 0.8978102189781022, "obj2": 0.08441546817788041}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "Min( DDR ,( MDR + FirstVNF_Mem ) )", "choosing": "Max( MLU,( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.572992700729927, "obj2": 0.4102078657697786}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RMSe )", "obj1": 0.4306569343065693, "obj2": 0.5863550842530867}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,CRS ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( Min( MRS ,AMS ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( Max( ( DS * RCSe ),( Min( MUM ,RRSe ) + RMSe ) ) + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server )", "choosing": "Min( Min( ( RCSe * ( ( RCSe / CS ) * ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( ( RRSe * MUC ),Min( MUR ,RRSe ) ) ) ) ) ) ,MLU ) ,Min( CS ,RCSe ) )", "obj1": 0.7135036496350365, "obj2": 0.29640839818042103}, {"determining": "Min( ( FirstVNF_Mem / ( FirstVNF_CPU + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,MUC ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + ( MDR + FirstVNF_Mem ) ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / RCSe )", "obj1": 0.5237226277372263, "obj2": 0.44433076933906573}, {"determining": "( Min( MRS ,ACS ) * Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( ( RCSe + ( RRSe - MUC ) ),MLU ) ,RCSe ),Max( Min( ( Max( RMSe,CS ) / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5761985139275322}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( Min( ( MUC + ( RMSe + ( RRSe - RRSe ) ) ) ,Min( CS ,RCSe ) ),MLU ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.34984766522613875}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( Max( FirstVNF_CPU_Server,CRS ) - ( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,BR ) ,Const ) * ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( AMS - Max( ( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) - FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( Min( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ,Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.5967153284671532, "obj2": 0.3981773922005729}, {"determining": "Min( ( ( ARS - FirstVNF_CPU ) / ( FirstVNF_Mem / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( ( Max( DS,( MLU + RCSe ) ) / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.5857664233576643, "obj2": 0.40794318692604803}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( MUC + ( RCSe + RCSe ) ) ) ) / MUC )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_Mem * Const ) * BR ) ) ) * ( DDR + Const ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45551586265239263}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.40167614923347195}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( ( CRS * AMS ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( ( MUC + MLU ) / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( MUC ,Min( CS ,RCSe ) )", "obj1": 0.6806569343065694, "obj2": 0.3052722748627968}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( ( MLU - CS ),Min( ( CS * RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 0.5912408759124088, "obj2": 0.40167614923347195}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / MUC )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( FirstVNF_CPU / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + MLU ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( RCSe - ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( ( CRS / CRS ) * Min( Const ,ARS ) ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( Max( MLU,RRSe ) * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "Min( ( MDR * PN ) ,Min( ( ACS - ARS ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC + ( MLU - MUR ) ) ,( Min( ( DS + MUR ) ,MUC ) * Min( Min( MLU ,RCSe ) ,MLU ) ) )", "obj1": 0.7226277372262774, "obj2": 0.28666526152705224}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( BR * ( FirstVNF_RAM / MDR ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - RRSe ) ) )", "obj1": 0.8978102189781022, "obj2": 0.08441546817788041}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RMSe )", "obj1": 0.4306569343065693, "obj2": 0.5863550842530867}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "Min( ( MUC + ( RMSe + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe ) ) ) ) ,MUM )", "obj1": 0.5638686131386861, "obj2": 0.42183159626390393}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server )", "choosing": "Min( Min( ( RCSe * ( ( RCSe / CS ) * ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( ( RRSe * MUC ),Min( MUR ,RRSe ) ) ) ) ) ) ,MLU ) ,Min( CS ,RCSe ) )", "obj1": 0.7135036496350365, "obj2": 0.29640839818042103}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( MRS ,ACS ) * Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( ( RCSe + ( RRSe - MUC ) ),MLU ) ,RCSe ),Max( Min( ( Max( RMSe,CS ) / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5761985139275322}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + DS ) / ( MUC + ( ( MUR / CS ) + Max( Min( ( MUC + ( RMSe + ( RRSe - RRSe ) ) ) ,Min( CS ,RCSe ) ),MLU ) ) ) )", "obj1": 0.6405109489051095, "obj2": 0.34984766522613875}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Const )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6295485165592895}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( AMS - Max( ( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) - FirstVNF_CPU ),CRS ) ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ,Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) / Min( CS ,( RCSe * ( MUM * MUM ) ) ) )", "obj1": 0.5711678832116789, "obj2": 0.41231837254950765}, {"determining": "Min( DDR ,( MDR + FirstVNF_Mem ) )", "choosing": "Max( MLU,( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.572992700729927, "obj2": 0.4102078657697786}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( FirstVNF_CPU / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + MLU ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,CRS ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( Min( MRS ,AMS ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( Max( ( DS * RCSe ),( Min( MUM ,RRSe ) + RMSe ) ) + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( BR / ( ( FirstVNF_Mem * Const ) * BR ) ) ) * ( DDR + Const ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( MUC + ( RCSe + RCSe ) ) ) ) / MUC )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( FirstVNF_Mem / ( FirstVNF_CPU + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,MUC ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45551586265239263}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * DDR ) / ( ( Const * FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) + RCSe ) / ( RMSe - RRSe ) )", "obj1": 0.48175182481751827, "obj2": 0.49029284304719406}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( MUC ,Min( CS ,RCSe ) )", "obj1": 0.6806569343065694, "obj2": 0.3052722748627968}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / MUC )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( RCSe - ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.9945255474452555, "obj2": 0.003596955745024363}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Const )", "choosing": "( Max( MLU,MUC ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "Min( ( MDR * PN ) ,Min( ( ACS - ARS ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC + ( MLU - MUR ) ) ,( Min( ( DS + MUR ) ,MUC ) * Min( Min( MLU ,RCSe ) ,MLU ) ) )", "obj1": 0.7226277372262774, "obj2": 0.28666526152705224}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( BR * ( FirstVNF_RAM / MDR ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - RRSe ) ) )", "obj1": 0.8978102189781022, "obj2": 0.08441546817788041}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RMSe )", "obj1": 0.4306569343065693, "obj2": 0.5863550842530867}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server )", "choosing": "Min( Min( ( RCSe * ( ( RCSe / CS ) * ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( ( RRSe * MUC ),Min( MUR ,RRSe ) ) ) ) ) ) ,MLU ) ,Min( CS ,RCSe ) )", "obj1": 0.7135036496350365, "obj2": 0.29640839818042103}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( Min( MRS ,ACS ) * Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( MUM + Max( Min( Max( ( RCSe + ( RRSe - MUC ) ),MLU ) ,RCSe ),Max( Min( ( Max( RMSe,CS ) / MUC ) ,MLU ),MLU ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5761985139275322}, {"determining": "( Min( MDR ,PN ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server - ( ( MDR - FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe + RCSe ) + Max( RCSe,MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.5602189781021898, "obj2": 0.4229593540434536}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "( ( AMS / MDR ) - ( CRS + CRS ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Min( MDR ,FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + MLU ) - ( MUR / ( RCSe - RRSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "Min( ( MUC + ( RMSe + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe ) ) ) ) ,MUM )", "obj1": 0.5638686131386861, "obj2": 0.42183159626390393}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Const )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6295485165592895}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( ( FirstVNF_Mem_Server / ( AMS / MDR ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5164233576642335, "obj2": 0.4449091695977359}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45551586265239263}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( MUC ,Min( CS ,RCSe ) )", "obj1": 0.6806569343065694, "obj2": 0.3052722748627968}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( MUC + ( RCSe + RCSe ) ) ) ) / MUC )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Max( FirstVNF_CPU,Max( Min( DDR ,RRS ),( FirstVNF_RAM + ( FirstVNF_CPU_Server + ARS ) ) ) ) ,( MRS / ( MDR / ACS ) ) ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( ( MUC / Min( RCSe ,RRSe ) ),MUC ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9945255474452555, "obj2": 0.0034753798470878398}, {"determining": "Min( ( FirstVNF_Mem / ( FirstVNF_CPU + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,MUC ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / MUC )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Min( ( MRS * DDR ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( RRSe,( MUR * Max( RMSe,( CS + MUR ) ) ) ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9927007299270073, "obj2": 0.004593314496804946}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( FirstVNF_CPU / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + MLU ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( ( MDR - ( FirstVNF_RAM - CRS ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Min( ( MUC + ( ( MLU / ( MUM - MUR ) ) + Min( MLU ,RMSe ) ) ) ,Min( CS ,( Min( RRSe ,MUC ) * ( Max( CS,RRSe ) / ( ( ( RMSe / MUC ) + ( RMSe / ( CS / RMSe ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.016387867869973045}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,Max( CRS,MDR ) )", "choosing": "( Max( MLU,MUC ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "Min( ( MDR * PN ) ,Min( ( ACS - ARS ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC + ( MLU - MUR ) ) ,( Min( ( DS + MUR ) ,MUC ) * Min( Min( MLU ,RCSe ) ,MLU ) ) )", "obj1": 0.7226277372262774, "obj2": 0.28666526152705224}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( BR * ( FirstVNF_RAM / MDR ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - RRSe ) ) )", "obj1": 0.8978102189781022, "obj2": 0.08441546817788041}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RMSe )", "obj1": 0.4306569343065693, "obj2": 0.5863550842530867}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( Min( CS ,RCSe ) + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.9124087591240876, "obj2": 0.0843780974366566}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server )", "choosing": "Min( Min( ( RCSe * ( ( RCSe / CS ) * ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( ( RRSe * MUC ),Min( MUR ,RRSe ) ) ) ) ) ) ,MLU ) ,Min( CS ,RCSe ) )", "obj1": 0.7135036496350365, "obj2": 0.29640839818042103}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( MDR ,PN ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server - ( ( MDR - FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe + RCSe ) + Max( RCSe,MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.5602189781021898, "obj2": 0.4229593540434536}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( Min( MDR ,PN ) - Min( FirstVNF_Mem_Server ,( ( DDR / ( FirstVNF_RAM + ( ( ACS * ACS ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM_Server * MRS ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,( Min( MLU ,( ( RMSe / MUM ) * MLU ) ) * RMSe ) )", "obj1": 0.9872262773722628, "obj2": 0.01170054249004959}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "Min( ( MUC + ( RMSe + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe ) ) ) ) ,MUM )", "obj1": 0.5638686131386861, "obj2": 0.42183159626390393}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Const )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6295485165592895}, {"determining": "( ( ( FirstVNF_Mem_Server / ( AMS / MDR ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5164233576642335, "obj2": 0.4449091695977359}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( ( AMS / MDR ) - ( CRS + CRS ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4756789921711371}, {"determining": "Min( ( FirstVNF_Mem / ( FirstVNF_CPU + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,MUC ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "( ( CRS * AMS ) + ( RRS / Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) / ( MDR + DDR ) ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( ( MUR / CS ) + Max( RCSe,( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ) ) ) ) / ( MUC + Max( ( MUR / CS ),Max( RCSe,( MUC + ( RMSe + ( MUR + ( MUR + DS ) ) ) ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45551586265239263}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( MUC ,Min( CS ,RCSe ) )", "obj1": 0.6806569343065694, "obj2": 0.3052722748627968}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( MRS + Min( Min( Max( ( FirstVNF_CPU - FirstVNF_RAM ),Const ) ,FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server * MDR ) * Min( ( FirstVNF_Mem + ( FirstVNF_CPU - Const ) ) ,( PN / Const ) ) ) ) ) + Max( Max( CRS,( ( ACS - ACS ) * ( CRS + ( AMS - ( Max( ACS,MDR ) + BR ) ) ) ) ),DDR ) )", "choosing": "( Max( Max( ( MUR - ( ( RMSe - RRSe ) - ( Max( Max( RRSe,CS ),( DS / MUC ) ) + MLU ) ) ),( ( Max( RRSe,CS ) * ( ( MUC - MUR ) / ( ( MUM - RMSe ) + MUC ) ) ) + RRSe ) ),( DS / ( MUM + Max( CS,( ( MLU + ( RMSe * RCSe ) ) / ( ( DS + MUM ) / RRSe ) ) ) ) ) ) / ( ( RMSe / ( ( MUR * MLU ) * CS ) ) - ( ( ( RCSe * ( MUR * Max( RMSe,RRSe ) ) ) * MLU ) - Max( ( MUC + RRSe ),( MLU + Max( RMSe,RMSe ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Max( FirstVNF_CPU,Max( Min( DDR ,RRS ),( FirstVNF_RAM + ( FirstVNF_CPU_Server + ARS ) ) ) ) ,( MRS / ( MDR / ACS ) ) ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( ( MUC / Min( RCSe ,RRSe ) ),MUC ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9945255474452555, "obj2": 0.0034753798470878398}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / MUC )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Min( ( MRS * DDR ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( RRSe,( MUR * Max( RMSe,( CS + MUR ) ) ) ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9927007299270073, "obj2": 0.004593314496804946}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( MUC + ( RCSe + RCSe ) ) ) ) / MUC )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Max( Min( FirstVNF_RAM ,MDR ),( Max( ( ( ACS * ( FirstVNF_RAM_Server * Const ) ) - FirstVNF_Mem_Server ),FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( Max( RRSe,MUM ) + Min( CS ,MUC ) ),( MUM + ( Min( Min( RCSe ,( DS + Min( ( RMSe + MUC ) ,RMSe ) ) ) ,( ( DS - ( MUM - RMSe ) ) / MUR ) ) - MUC ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6258869790776281}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( MLU,( DS / ( ( MUR / CS ) + ( ( Min( DS ,MUR ) - ( MUC * Max( ( MUC * MUM ),MLU ) ) ) - MUR ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6251692327252826}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - DDR ) ,Max( CRS,MDR ) ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "Min( ( MDR * PN ) ,Min( ( ACS - ARS ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC + ( MLU - MUR ) ) ,( Min( ( DS + MUR ) ,MUC ) * Min( Min( MLU ,RCSe ) ,MLU ) ) )", "obj1": 0.7226277372262774, "obj2": 0.28666526152705224}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Max( ARS,BR ) ,CRS ) ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / ( ( MUR * RCSe ) + RMSe ) ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / ( ( RMSe + MUC ) * MLU ) ) ) ) ) ) )", "obj1": 0.7116788321167883, "obj2": 0.294761099922035}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / Min( ( MUC + ( RCSe + Min( MUM ,RMSe ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) ) )", "obj1": 0.666058394160584, "obj2": 0.3175350419905063}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( Min( MDR ,PN ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server - ( ( MDR - FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe + RCSe ) + Max( RCSe,MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.5602189781021898, "obj2": 0.4229593540434536}, {"determining": "( Min( MDR ,PN ) - Min( FirstVNF_Mem_Server ,( ( DDR / ( FirstVNF_RAM + ( ( ACS * ACS ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM_Server * MRS ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,( Min( MLU ,( ( RMSe / MUM ) * MLU ) ) * RMSe ) )", "obj1": 0.9872262773722628, "obj2": 0.01170054249004959}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "Min( ( MUC + ( RMSe + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe ) ) ) ) ,MUM )", "obj1": 0.5638686131386861, "obj2": 0.42183159626390393}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) ) ) ) ,Min( CS ,RCSe ) )", "obj1": 0.677007299270073, "obj2": 0.3097755940510087}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Const )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6295485165592895}, {"determining": "( ( ( FirstVNF_Mem_Server / ( AMS / MDR ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5164233576642335, "obj2": 0.4449091695977359}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4756789921711371}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( MUC ,Min( CS ,RCSe ) )", "obj1": 0.6806569343065694, "obj2": 0.3052722748627968}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( Max( ( FirstVNF_CPU * BR ),FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( Min( RMSe ,MUR ) ,RCSe ) )", "obj1": 0.6788321167883211, "obj2": 0.30642682000035204}, {"determining": "Min( ( FirstVNF_Mem / ( FirstVNF_CPU + Min( CRS ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,MUC ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.7171532846715328, "obj2": 0.2889659397011744}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( RCSe + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Max( FirstVNF_CPU,Max( Min( DDR ,RRS ),( FirstVNF_RAM + ( FirstVNF_CPU_Server + ARS ) ) ) ) ,( MRS / ( MDR / ACS ) ) ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( ( MUC / Min( RCSe ,RRSe ) ),MUC ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9945255474452555, "obj2": 0.0034753798470878398}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Min( ( MRS * DDR ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( RRSe,( MUR * Max( RMSe,( CS + MUR ) ) ) ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9927007299270073, "obj2": 0.004593314496804946}, {"determining": "( ( MRS + Min( Min( Max( ( FirstVNF_CPU - FirstVNF_RAM ),Const ) ,FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server * MDR ) * Min( ( FirstVNF_Mem + ( FirstVNF_CPU - Const ) ) ,( PN / Const ) ) ) ) ) + Max( Max( CRS,( ( ACS - ACS ) * ( CRS + ( AMS - ( Max( ACS,MDR ) + BR ) ) ) ) ),DDR ) )", "choosing": "( Max( Max( ( MUR - ( ( RMSe - RRSe ) - ( Max( Max( RRSe,CS ),( DS / MUC ) ) + MLU ) ) ),( ( Max( RRSe,CS ) * ( ( MUC - MUR ) / ( ( MUM - RMSe ) + MUC ) ) ) + RRSe ) ),( DS / ( MUM + Max( CS,( ( MLU + ( RMSe * RCSe ) ) / ( ( DS + MUM ) / RRSe ) ) ) ) ) ) / ( ( RMSe / ( ( MUR * MLU ) * CS ) ) - ( ( ( RCSe * ( MUR * Max( RMSe,RRSe ) ) ) * MLU ) - Max( ( MUC + RRSe ),( MLU + Max( RMSe,RMSe ) ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( CS * MLU ) ,RRSe ) + ( ( MUR * MLU ) * ( RCSe - MUM ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - DDR ) ,( Min( AMS ,ACS ) - ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MLU,MUC ) / RCSe )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.7135036496350365, "obj2": 0.27378204564308956}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( CRS / ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) - ( RRS * MDR ) )", "choosing": "( ( MLU - MUC ) * Max( CS,( RCSe - MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6262171215468418}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( CRS * AMS ) + ( Max( ( FirstVNF_RAM_Server + BR ),Min( BR ,( MDR + Min( BR ,( ACS + Min( ARS ,ARS ) ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / CS ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( Min( MDR ,PN ) - Min( FirstVNF_Mem_Server ,( ( DDR / ( FirstVNF_RAM + ( ( ACS * ACS ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM_Server * MRS ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,( Min( MLU ,( ( RMSe / MUM ) * MLU ) ) * RMSe ) )", "obj1": 0.9872262773722628, "obj2": 0.01170054249004959}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "Min( ( MUC + ( RMSe + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe ) ) ) ) ,MUM )", "obj1": 0.5638686131386861, "obj2": 0.42183159626390393}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( ( FirstVNF_Mem_Server / ( AMS / MDR ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5164233576642335, "obj2": 0.4449091695977359}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + Min( MUM ,RMSe ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( ( Min( BR ,FirstVNF_CPU ) + CRS ) - ( ( Min( FirstVNF_RAM_Server ,Const ) / AMS ) + ACS ) )", "choosing": "Min( ( MUC - MUM ) ,( MUC / MUR ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Max( ARS,BR ) ,CRS ) ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / ( ( MUR * RCSe ) + RMSe ) ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4756789921711371}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( Max( RRSe,CS ) ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6295485165592895}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Const )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6295485165592895}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( ( FirstVNF_Mem_Server + ( ( Max( FirstVNF_Mem_Server,DDR ) + FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_Mem + MDR ) ) - Min( MDR ,( FirstVNF_CPU + DDR ) ) ) + ( FirstVNF_Mem + RRS ) )", "choosing": "( ( RRSe + ( MUC + ( RCSe + ( ( RMSe / ( ( MUM / MUC ) / MUR ) ) / MUR ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Max( FirstVNF_CPU,Max( Min( DDR ,RRS ),( FirstVNF_RAM + ( FirstVNF_CPU_Server + ARS ) ) ) ) ,( MRS / ( MDR / ACS ) ) ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( ( MUC / Min( RCSe ,RRSe ) ),MUC ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9945255474452555, "obj2": 0.0034753798470878398}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Min( ( MRS * DDR ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( RRSe,( MUR * Max( RMSe,( CS + MUR ) ) ) ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9927007299270073, "obj2": 0.004593314496804946}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( RCSe + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( Min( MUR ,DS ) * Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( MRS + DDR ) )", "choosing": "Max( ( ( CS * MUM ) + MUR ),( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.7135036496350365, "obj2": 0.27378204564308956}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Max( ARS,BR ) ,CRS ) ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / ( ( MUR * RCSe ) + RMSe ) ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "Min( ( MUC + ( RMSe + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe ) ) ) ) ,MUM )", "obj1": 0.5638686131386861, "obj2": 0.42183159626390393}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( CRS * AMS ) + ( Max( ( FirstVNF_RAM_Server + BR ),Min( BR ,( MDR + Min( BR ,( ACS + Min( ARS ,ARS ) ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / CS ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,( MLU * CS ) )", "obj1": 0.6824817518248175, "obj2": 0.30090813043043707}, {"determining": "( Min( FirstVNF_RAM_Server ,DDR ) + ( ARS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( MUM,MUR ) + DS ) ,Min( Max( ( ( RMSe / RRSe ) + MLU ),Max( ( MUC - ( ( RMSe - MUC ) / ( CS - CS ) ) ),MUR ) ) ,( RCSe + ( ( MLU - MUR ) - ( RRSe - MUR ) ) ) ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( FirstVNF_Mem_Server - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + ( MUC + DS ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "( ( PN + ACS ) - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( RRSe + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4443078236119077}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + Min( MUM ,RMSe ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4756789921711371}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( MDR + FirstVNF_Mem ) + ( ( MDR + FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + RRS ) ) ) + ( MDR + Min( Min( FirstVNF_CPU_Server ,Max( ACS,FirstVNF_CPU_Server ) ) ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Max( FirstVNF_CPU,Max( Min( DDR ,RRS ),( FirstVNF_RAM + ( FirstVNF_CPU_Server + ARS ) ) ) ) ,( MRS / ( MDR / ACS ) ) ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( ( MUC / Min( RCSe ,RRSe ) ),MUC ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9945255474452555, "obj2": 0.0034753798470878398}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Min( ( MRS * DDR ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( RRSe,( MUR * Max( RMSe,( CS + MUR ) ) ) ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9927007299270073, "obj2": 0.004593314496804946}, {"determining": "( ( ( ( FirstVNF_Mem_Server + ( ( Max( FirstVNF_Mem_Server,DDR ) + FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_Mem + MDR ) ) - Min( MDR ,( FirstVNF_CPU + DDR ) ) ) + ( FirstVNF_Mem + RRS ) )", "choosing": "( ( RRSe + ( MUC + ( RCSe + ( ( RMSe / ( ( MUM / MUC ) / MUR ) ) / MUR ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( FirstVNF_Mem_Server - Max( ACS,( ( ( MDR + ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * Const ) / ( FirstVNF_CPU * ( BR * ( FirstVNF_RAM / MDR ) ) ) ) ) )", "choosing": "Min( ( MUC + ( MUC / DS ) ) ,( ( ( ( ( Min( RRSe ,MUM ) * Min( MUR ,RMSe ) ) + Max( MUM,MUR ) ) * RMSe ) * ( Min( ( ( RCSe * ( CS - CS ) ) * Max( RRSe,MLU ) ) ,( MUM / RRSe ) ) + RCSe ) ) + ( Max( DS,( Min( Min( ( RCSe * DS ) ,( MUM - MUR ) ) ,CS ) + RRSe ) ) - ( RCSe - DS ) ) ) )", "obj1": 0.6843065693430657, "obj2": 0.29947904241421136}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MDR ) - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) - ( ( BR / Const ) + ( MDR + PN ) ) ) + Min( ( ( AMS - BR ) + Min( ACS ,AMS ) ) ,( ( CRS * Const ) - ( ACS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS - RMSe ) - MLU ) + ( MUC * RMSe ) ) ,( ( ( CS - MUR ) / ( CS / MUC ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_RAM_Server ) / ( AMS * Min( MRS ,Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( ( ( DS + DS ) + Min( RRSe ,MUC ) ) - Min( Min( DS ,RRSe ) ,( CS - CS ) ) ) * ( Min( ( RRSe + MUR ) ,Min( DS ,MLU ) ) / ( ( RRSe / CS ) * ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem ) ,( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU + MLU ) * ( CS + CS ) ),( ( MUR - RMSe ) + ( CS - MUM ) ) ) / ( ( ( CS + MLU ) - ( MUC / CS ) ) - Max( Max( CS,MUC ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS * DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( Max( ACS,FirstVNF_Mem ) + ( CRS + ARS ) ) ) + Min( ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_Mem_Server + PN ) ) ,Min( ( RRS - FirstVNF_RAM_Server ) ,Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( RMSe - MUR ),( ( RCSe / Min( RCSe ,DS ) ) - ( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,( CS + ( MUM * CS ) ) )", "obj1": 0.8923357664233577, "obj2": 0.0901756129871893}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( ( CRS * AMS ) + ( Max( ( FirstVNF_RAM_Server + BR ),Min( BR ,( MDR + Min( BR ,( ACS + Min( ARS ,ARS ) ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / CS ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "Min( ( MUC + ( RMSe + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe ) ) ) ) ,MUM )", "obj1": 0.5638686131386861, "obj2": 0.42183159626390393}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Max( ARS,BR ) ,CRS ) ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / ( ( MUR * RCSe ) + RMSe ) ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( PN + ACS ) - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( RRSe + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4443078236119077}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + Min( MUM ,RMSe ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MUR ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + Max( Min( CS ,RMSe ),( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4756789921711371}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( RCSe + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Max( FirstVNF_CPU,Max( Min( DDR ,RRS ),( FirstVNF_RAM + ( FirstVNF_CPU_Server + ARS ) ) ) ) ,( MRS / ( MDR / ACS ) ) ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( ( MUC / Min( RCSe ,RRSe ) ),MUC ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9945255474452555, "obj2": 0.0034753798470878398}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Min( ( MRS * DDR ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( RRSe,( MUR * Max( RMSe,( CS + MUR ) ) ) ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9927007299270073, "obj2": 0.004593314496804946}, {"determining": "( ( MDR + FirstVNF_Mem ) + ( ( MDR + FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + RRS ) ) ) + ( MDR + Min( Min( FirstVNF_CPU_Server ,Max( ACS,FirstVNF_CPU_Server ) ) ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Min( FirstVNF_RAM_Server ,DDR ) + ( ARS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( MUM,MUR ) + DS ) ,Min( Max( ( ( RMSe / RRSe ) + MLU ),Max( ( MUC - ( ( RMSe - MUC ) / ( CS - CS ) ) ),MUR ) ) ,( RCSe + ( ( MLU - MUR ) - ( RRSe - MUR ) ) ) ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( ( ( MDR / BR ) * BR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - BR ) - FirstVNF_Mem_Server ) ) ) * ARS ) - ( Min( ACS ,( PN + FirstVNF_Mem_Server ) ) - RRS ) )", "choosing": "Min( Min( MUC ,Min( MLU ,MUM ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,MUC ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / Max( MUC,CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) + MUC ) + RCSe ) - ( RMSe - MUR ) ) - ( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( ( ( FirstVNF_CPU * ( ( DDR + BR ) * ARS ) ) + PN ) + ( ( ( Max( ( DDR - Max( PN,PN ) ),ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / CRS ) ) )", "choosing": "( Min( ( Min( ( RCSe + MUM ) ,( RMSe - RMSe ) ) + DS ) ,( MUM - ( RMSe + RCSe ) ) ) - ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_CPU,PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM - ( MLU * RRSe ) ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const / FirstVNF_RAM_Server ) ) - Max( ARS,BR ) ) )", "choosing": "( ( ( MUC - MUC ) * MLU ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * Const ) ,( DDR + RRS ) ) / ( ( FirstVNF_Mem_Server / DDR ) / Max( ACS,RRS ) ) ) - ( ( Min( Const ,MDR ) - Max( MDR,PN ) ) + Max( ( FirstVNF_CPU_Server + ACS ),( MDR * MRS ) ) ) )", "choosing": "( ( MUR - MLU ) + ( CS / ( ( RRSe - RCSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Max( ARS,BR ) ,CRS ) ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / ( ( MUR * RCSe ) + RMSe ) ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( CRS * AMS ) + ( Max( ( FirstVNF_RAM_Server + BR ),Min( BR ,( MDR + Min( BR ,( ACS + Min( ARS ,ARS ) ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / CS ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( ( PN + ACS ) - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( RRSe + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4443078236119077}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( RRSe + ( MUC + ( ( ( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) + ( ( MLU * ( RCSe + MUR ) ) / DS ) ) + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + Min( MUM ,RMSe ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4756789921711371}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( ( MDR + FirstVNF_Mem ) + ( ( MDR + FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + RRS ) ) ) + ( MDR + Min( Min( FirstVNF_CPU_Server ,Max( ACS,FirstVNF_CPU_Server ) ) ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Max( FirstVNF_CPU,Max( Min( DDR ,RRS ),( FirstVNF_RAM + ( FirstVNF_CPU_Server + ARS ) ) ) ) ,( MRS / ( MDR / ACS ) ) ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( ( MUC / Min( RCSe ,RRSe ) ),MUC ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9945255474452555, "obj2": 0.0034753798470878398}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Min( ( MRS * DDR ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( RRSe,( MUR * Max( RMSe,( CS + MUR ) ) ) ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9927007299270073, "obj2": 0.004593314496804946}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( RCSe + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( CRS + RRS ) ) / CRS ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( Min( ( RCSe / ( DS - ( ( ( ( MUM / MLU ) / RMSe ) + CS ) + ( MUC / ( CS * Max( MLU,RMSe ) ) ) ) ) ) ,RRSe ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( MDR ,( RRS * MDR ) ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS - ACS ),Max( FirstVNF_CPU,MDR ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU - MUC ) * Min( MUC ,RRSe ) ) + ( MUC * Max( RRSe,MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( PN * Min( MDR ,Min( FirstVNF_CPU_Server ,( ( RRS * CRS ) / PN ) ) ) ) ) - Max( ( DDR / ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ),RRS ) ) - Min( ARS ,( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( RMSe * ( RRSe + ( MUR * CS ) ) ) ,( ( RMSe / Min( ( ( CS * ( MUC * Min( RCSe ,DS ) ) ) + ( DS - Min( CS ,( RMSe - CS ) ) ) ) ,MUC ) ) * ( RCSe * ( ( Min( CS ,( ( MUC / RCSe ) * MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( CS,Min( DS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( MDR,BR ) + AMS ) )", "choosing": "( Max( ( DS - RRSe ),( MUC * ( RMSe * MUR ) ) ) / ( MUC - RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "Min( ( MUC + ( Min( MUM ,RMSe ) + RCSe ) ) ,( ( ( Max( Min( Min( RMSe ,Max( RMSe,RMSe ) ) ,CS ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RRSe * RRSe ) - Min( MUR ,( MUR / MUR ) ) ) ) ) / Min( MUM ,RMSe ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6430931968184072}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * Min( ( AMS / ACS ) ,( AMS / RRS ) ) ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( Max( RCSe,MLU ),( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.948905109489051, "obj2": 0.032807568412635615}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Max( ARS,BR ) ,CRS ) ) )", "choosing": "( ( RRSe + DS ) / ( MUC + ( ( MUR / ( ( MUR * RCSe ) + RMSe ) ) + ( ( CS / ( Min( ( CS / DS ) ,( DS - MUR ) ) / MUR ) ) + RRSe ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( PN + ACS ) - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( RRSe + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4443078236119077}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + Min( MUM ,RMSe ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( RRSe + ( MUC + ( ( ( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) + ( ( MLU * ( RCSe + MUR ) ) / DS ) ) + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Max( Min( ( PN + ( ( BR * AMS ) - Max( DDR,( MRS / FirstVNF_CPU_Server ) ) ) ) ,( ( MRS + AMS ) + ( MDR + CRS ) ) ),Min( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_CPU_Server / BR ) ) ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( Max( MUR,DS ) / ( Min( ( Max( MUM,MUR ) * DS ) ,DS ) / MUC ) ),Max( Min( MUC ,RCSe ),Min( MUC ,MUM ) ) ),( ( ( MLU - MUR ) - Max( MUR,MUR ) ) - Min( Min( MLU ,RCSe ) ,( ( MLU - ( ( CS - RCSe ) - MUR ) ) + ( MUR + Min( Min( Max( RMSe,MUM ) ,MUM ) ,CS ) ) ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.005161204434824937}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4756789921711371}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( RCSe + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Max( FirstVNF_CPU,Max( Min( DDR ,RRS ),( FirstVNF_RAM + ( FirstVNF_CPU_Server + ARS ) ) ) ) ,( MRS / ( MDR / ACS ) ) ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( ( MUC / Min( RCSe ,RRSe ) ),MUC ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9945255474452555, "obj2": 0.0034753798470878398}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( ( ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) + FirstVNF_CPU ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( FirstVNF_Mem + Min( Min( ( MRS * DDR ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + MUR ) ) ) ,Min( ( ( Max( RRSe,( MUR * Max( RMSe,( CS + MUR ) ) ) ) * MUR ) + Max( MUM,MUC ) ) ,MUR ) )", "obj1": 0.9927007299270073, "obj2": 0.004593314496804946}, {"determining": "( ( MDR + FirstVNF_Mem ) + ( ( MDR + FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + RRS ) ) ) + ( MDR + Min( Min( FirstVNF_CPU_Server ,Max( ACS,FirstVNF_CPU_Server ) ) ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "Min( ( MUC + ( Min( MUM ,RMSe ) + RCSe ) ) ,( ( ( Max( Min( Min( RMSe ,Max( RMSe,RMSe ) ) ,CS ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RRSe * RRSe ) - Min( MUR ,( MUR / MUR ) ) ) ) ) / Min( MUM ,RMSe ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6430931968184072}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( FirstVNF_Mem_Server * BR ) - CRS )", "choosing": "Min( ( MUC + ( MUC / MUC ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6131386861313869, "obj2": 0.35106678011130626}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,( RRSe * RRSe ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * Min( ( AMS / ACS ) ,( AMS / RRS ) ) ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( Max( RCSe,MLU ),( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.948905109489051, "obj2": 0.032807568412635615}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + ( DS / DS ) ) ,RMSe ) + RCSe ) ) ,( Min( ( Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RCSe * RRSe ) - Min( ( MUM / MUR ) ,MUR ) ) ) ) ,MLU ) - MUR ) )", "obj1": 0.9908759124087592, "obj2": 0.0033432472672306006}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( PN + ACS ) - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( RRSe + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4443078236119077}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + Min( MUM ,RMSe ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( ( MDR + FirstVNF_Mem ) + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.4756789921711371}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( ( MDR + FirstVNF_Mem ) + ( ( MDR + FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + RRS ) ) ) + ( MDR + Min( Min( FirstVNF_CPU_Server ,Max( ACS,FirstVNF_CPU_Server ) ) ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( RCSe + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / DDR ) - ( ( ( FirstVNF_CPU - ( PN + ( ( FirstVNF_Mem - Min( FirstVNF_RAM_Server ,MRS ) ) - FirstVNF_CPU_Server ) ) ) / CRS ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( Min( CS ,Min( ( ( CS - Min( RMSe ,( RCSe + ( RRSe - MUC ) ) ) ) - MLU ) ,MUM ) ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "Min( ( MUC + ( Min( MUM ,RMSe ) + RCSe ) ) ,( ( ( Max( Min( Min( RMSe ,Max( RMSe,RMSe ) ) ,CS ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RRSe * RRSe ) - Min( MUR ,( MUR / MUR ) ) ) ) ) / Min( MUM ,RMSe ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6430931968184072}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( Const * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( Max( FirstVNF_Mem,( ( MDR / AMS ) / DDR ) ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + RRSe ) / ( ( RCSe / MLU ) - Min( ( ( ( Max( ( DS + RRSe ),( RMSe * DS ) ) / ( CS / Min( RRSe ,DS ) ) ) * RCSe ) - RCSe ) ,( MLU / ( ( RMSe * CS ) - RMSe ) ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4118430696560359}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * Min( ( AMS / ACS ) ,( AMS / RRS ) ) ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( Max( RCSe,MLU ),( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.948905109489051, "obj2": 0.032807568412635615}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,( RRSe * RRSe ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + ( DS / DS ) ) ,RMSe ) + RCSe ) ) ,( Min( ( Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RCSe * RRSe ) - Min( ( MUM / MUR ) ,MUR ) ) ) ) ,MLU ) - MUR ) )", "obj1": 0.9908759124087592, "obj2": 0.0033432472672306006}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( PN + ACS ) - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( RRSe + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4443078236119077}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + Min( MUM ,RMSe ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( RCSe + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( MDR + FirstVNF_Mem ) + ( ( MDR + FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + RRS ) ) ) + ( MDR + Min( Min( FirstVNF_CPU_Server ,Max( ACS,FirstVNF_CPU_Server ) ) ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / ( Min( ( ( ( Const - ARS ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) / CRS ) ) ,Max( FirstVNF_CPU_Server,DDR ) )", "choosing": "Max( Max( CS,DS ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "Min( ( MUC + ( Min( MUM ,RMSe ) + RCSe ) ) ,( ( ( Max( Min( Min( RMSe ,Max( RMSe,RMSe ) ) ,CS ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RRSe * RRSe ) - Min( MUR ,( MUR / MUR ) ) ) ) ) / Min( MUM ,RMSe ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6430931968184072}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) - ( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "Min( RMSe ,( ( ( Max( Min( Min( RMSe ,Max( RMSe,RMSe ) ) ,CS ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RRSe * RRSe ) - Min( MUR ,( MUR / MUR ) ) ) ) ) / MLU ) - MUR ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ( BR - ( ( ( RRS / ACS ) * ( CRS - MDR ) ) / Min( FirstVNF_RAM ,PN ) ) ) - Max( ( ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + Min( ARS ,CRS ) ) * FirstVNF_RAM ),Const ) ) ) - ( ( PN - ( FirstVNF_RAM + ( ( CRS * AMS ) - FirstVNF_Mem_Server ) ) ) + RRS ) )", "choosing": "Min( ( Min( Max( RCSe,Min( Min( ( ( MUR / CS ) - MUC ) ,( ( RMSe + MUM ) / ( RCSe * MUR ) ) ) ,MUR ) ) ,MLU ) / ( MUM * ( Min( DS ,MLU ) * MUR ) ) ) ,Min( Min( MLU ,Min( ( ( MUM - ( ( RMSe + MUM ) - DS ) ) / CS ) ,Min( Max( Max( MUM,MUC ),( MLU * MUM ) ) ,RCSe ) ) ) ,( RCSe + DS ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC + DS ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.3442163218437003}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( MUR + Min( MLU ,( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / ( MUC + ( RCSe + RCSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6405109489051095, "obj2": 0.3469992943547708}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( Const * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( Max( FirstVNF_Mem,( ( MDR / AMS ) / DDR ) ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + RRSe ) / ( ( RCSe / MLU ) - Min( ( ( ( Max( ( DS + RRSe ),( RMSe * DS ) ) / ( CS / Min( RRSe ,DS ) ) ) * RCSe ) - RCSe ) ,( MLU / ( ( RMSe * CS ) - RMSe ) ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4118430696560359}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * Min( ( AMS / ACS ) ,( AMS / RRS ) ) ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( Max( RCSe,MLU ),( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.948905109489051, "obj2": 0.032807568412635615}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + ( DS / DS ) ) ,RMSe ) + RCSe ) ) ,( Min( ( Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RCSe * RRSe ) - Min( ( MUM / MUR ) ,MUR ) ) ) ) ,MLU ) - MUR ) )", "obj1": 0.9908759124087592, "obj2": 0.0033432472672306006}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( PN + ACS ) - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( RRSe + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4443078236119077}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "Min( ( MUC + ( RCSe + Min( MUM ,RMSe ) ) ) ,Min( MUR ,Min( ( ( MUR + ( RMSe / RMSe ) ) + RMSe ) ,MLU ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3287208982452801}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( MDR + FirstVNF_Mem ) + ( ( MDR + FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + RRS ) ) ) + ( MDR + Min( Min( FirstVNF_CPU_Server ,Max( ACS,FirstVNF_CPU_Server ) ) ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( RCSe + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "Min( ( MUC + ( Min( MUM ,RMSe ) + RCSe ) ) ,( ( ( Max( Min( Min( RMSe ,Max( RMSe,RMSe ) ) ,CS ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RRSe * RRSe ) - Min( MUR ,( MUR / MUR ) ) ) ) ) / Min( MUM ,RMSe ) ) - MUR ) )", "obj1": 0.40145985401459855, "obj2": 0.6430931968184072}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( Const * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( Max( FirstVNF_Mem,( ( MDR / AMS ) / DDR ) ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + RRSe ) / ( ( RCSe / MLU ) - Min( ( ( ( Max( ( DS + RRSe ),( RMSe * DS ) ) / ( CS / Min( RRSe ,DS ) ) ) * RCSe ) - RCSe ) ,( MLU / ( ( RMSe * CS ) - RMSe ) ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4118430696560359}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * Min( ( AMS / ACS ) ,( AMS / RRS ) ) ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( Max( RCSe,MLU ),( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.948905109489051, "obj2": 0.032807568412635615}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) - ( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,( ( MDR + ( FirstVNF_RAM_Server + DDR ) ) / ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "Min( RMSe ,( ( ( Max( Min( Min( RMSe ,Max( RMSe,RMSe ) ) ,CS ),( RCSe / ( MUC / MUM ) ) ) * ( MUR / ( ( RRSe * RRSe ) - Min( MUR ,( MUR / MUR ) ) ) ) ) / MLU ) - MUR ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( DDR ,ARS ) - ( ( ( ( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,PN ) - Max( BR,( AMS + Const ) ) ) + FirstVNF_Mem ) + FirstVNF_Mem ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + ( ( Const * AMS ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC * ( MUC / ( CS * MUC ) ) ) / ( ( Min( ( CS * Max( RMSe,RCSe ) ) ,( Min( ( MUM - RMSe ) ,( ( MUM - MLU ) * CS ) ) / ( Min( MLU ,RCSe ) / RMSe ) ) ) + ( ( RCSe / ( RCSe - Max( RCSe,MUM ) ) ) / ( MUR / MUC ) ) ) + ( Min( RMSe ,MLU ) - ( DS / ( MLU + ( RCSe * CS ) ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( PN + ACS ) - ( MDR - Min( ( PN + ACS ) ,MDR ) ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( RRSe + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4443078236119077}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + MDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( ( RCSe + ( RCSe + RCSe ) ) + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5072992700729927, "obj2": 0.4529696207551267}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) / ( ( PN / ARS ) + ( AMS + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC - ( RCSe + ( RMSe / RCSe ) ) ) ) / MUC )", "obj1": 0.5109489051094891, "obj2": 0.44514188435771784}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( ( RCSe + RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( MDR + FirstVNF_Mem ) + ( ( MDR + FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server / ( ( ( MDR + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + RRS ) ) ) + ( MDR + Min( Min( FirstVNF_CPU_Server ,Max( ACS,FirstVNF_CPU_Server ) ) ,RRS ) ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Max( Min( CS ,Max( MUM,MLU ) ),( RCSe / ( MUC / MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.5091240875912408, "obj2": 0.4482558824127253}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( CS + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9525547445255474, "obj2": 0.030542735189082255}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( FirstVNF_CPU + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) + ( MLU - ( ( MUC + ( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) - RRSe ) ) - MUC ) ) ) ,Min( CS ,( RCSe + ( MUM * MUM ) ) ) )", "obj1": 0.9507299270072993, "obj2": 0.03168963376291851}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - FirstVNF_Mem_Server )", "choosing": "Min( Max( DS,MUM ) ,( Min( ( RCSe * ( ( ( RRSe * MUM ) - Min( ( MUM + MUR ) ,RMSe ) ) / Min( ( DS + CS ) ,( MUM * MUR ) ) ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Const * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( Max( FirstVNF_Mem,( ( MDR / AMS ) / DDR ) ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + RRSe ) / ( ( RCSe / MLU ) - Min( ( ( ( Max( ( DS + RRSe ),( RMSe * DS ) ) / ( CS / Min( RRSe ,DS ) ) ) * RCSe ) - RCSe ) ,( MLU / ( ( RMSe * CS ) - RMSe ) ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4118430696560359}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( Min( ( FirstVNF_CPU + PN ) ,MDR ) ,CRS ) ) )", "choosing": "( ( MUC / DS ) / ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / CS ) + Max( RCSe,( MUC + ( ( MUC / RCSe ) / ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502424942923321}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( ( MUC + DS ) / Max( ( CS - ( MUC + RMSe ) ),MUM ) ) ) ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.507521540655893}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( Min( DDR ,ARS ) - ( ( ( ( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,PN ) - Max( BR,( AMS + Const ) ) ) + FirstVNF_Mem ) + FirstVNF_Mem ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) + ( ( Const * AMS ) + Min( RRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC * ( MUC / ( CS * MUC ) ) ) / ( ( Min( ( CS * Max( RMSe,RCSe ) ) ,( Min( ( MUM - RMSe ) ,( ( MUM - MLU ) * CS ) ) / ( Min( MLU ,RCSe ) / RMSe ) ) ) + ( ( RCSe / ( RCSe - Max( RCSe,MUM ) ) ) / ( MUR / MUC ) ) ) + ( Min( RMSe ,MLU ) - ( DS / ( MLU + ( RCSe * CS ) ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - FirstVNF_Mem_Server )", "choosing": "Min( Max( DS,MUM ) ,( Min( ( RCSe * ( ( ( RRSe * MUM ) - Min( ( MUM + MUR ) ,RMSe ) ) / Min( ( DS + CS ) ,( MUM * MUR ) ) ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / ACS ) - ACS ) - Min( Max( ( FirstVNF_RAM + ( ( MDR + ( ARS * ARS ) ) / FirstVNF_Mem_Server ) ),AMS ) ,MRS ) )", "choosing": "Min( Max( MUM,( Min( ( ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) / ( RRSe + RRSe ) ) ,MUR ) / MUC ) ) ,( Min( ( RCSe * ( ( ( RRSe * MUM ) - Min( ( MUM + MUR ) ,RMSe ) ) / Max( ( Min( RCSe ,MLU ) + MUC ),DS ) ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / ACS ) - ACS ) - Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,MRS ) )", "choosing": "( ( MUC + ( Min( ( DS + CS ) ,( MUM * MUR ) ) + ( MUR + ( ( RCSe - RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / ACS ) - ACS ) - Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,MRS ) ) - Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,MRS ) )", "choosing": "Min( Max( MUM,( Min( ( ( MLU - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,MUR ) / MUC ) ) ,( Min( ( RCSe * Min( RCSe ,MLU ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Const * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( Max( FirstVNF_Mem,( ( MDR / AMS ) / DDR ) ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + RRSe ) / ( ( RCSe / MLU ) - Min( ( ( ( Max( ( DS + RRSe ),( RMSe * DS ) ) / ( CS / Min( RRSe ,DS ) ) ) * RCSe ) - RCSe ) ,( MLU / ( ( RMSe * CS ) - RMSe ) ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4118430696560359}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( ( ACS - DDR ) / Const ) + ( CRS * Min( DDR ,CRS ) ) )", "choosing": "( ( ( RMSe / DS ) + RRSe ) / ( DS / MUM ) )", "obj1": 0.9981751824817519, "obj2": 0.001239510547653629}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( ( ( FirstVNF_Mem_Server * ( Max( ACS,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) - MRS ) - Max( ( FirstVNF_RAM_Server * ( ( AMS / MDR ) / DDR ) ),Max( CRS,AMS ) ) ) ,Max( Min( Const ,PN ),ACS ) ) ) )", "choosing": "( ( MUC + DS ) / Max( MUC,( Min( MLU ,MUM ) / ( RMSe / ( RCSe - ( ( RMSe / MUM ) - ( ( RRSe * CS ) - RMSe ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.001239510547653629}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem + CRS ) * Const ) * ( MRS - ( MDR * ACS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RRSe ) / MUC ) - RMSe ),Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ACS ) - FirstVNF_Mem_Server )", "choosing": "Min( Max( DS,MUM ) ,( Min( ( RCSe * ( ( ( RRSe * MUM ) - Min( ( MUM + MUR ) ,RMSe ) ) / Min( ( DS + CS ) ,( MUM * MUR ) ) ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / ACS ) - ACS ) - Min( Max( ( FirstVNF_RAM + ( ( MDR + ( ARS * ARS ) ) / FirstVNF_Mem_Server ) ),AMS ) ,MRS ) )", "choosing": "Min( Max( MUM,( Min( ( ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) / ( RRSe + RRSe ) ) ,MUR ) / MUC ) ) ,( Min( ( RCSe * ( ( ( RRSe * MUM ) - Min( ( MUM + MUR ) ,RMSe ) ) / Max( ( Min( RCSe ,MLU ) + MUC ),DS ) ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "Min( ( FirstVNF_Mem * ( ( BR / FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server / ( ( ( ARS - DDR ) / FirstVNF_RAM_Server ) - DDR ) ) )", "choosing": "( ( ( MUC - RRSe ) / ( RCSe + RCSe ) ) / ( ( Min( ( Max( Min( ( MUM - MLU ) ,RMSe ),MUM ) * MLU ) ,MUR ) / CS ) + ( Min( RRSe ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.34444276852760114}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "Min( DDR ,Max( FirstVNF_CPU_Server,Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),RRS ) ) )", "choosing": "Max( ( Max( DS,DS ) / ( DS / MUC ) ),Max( ( RMSe / ( DS / MUC ) ),DS ) )", "obj1": 0.45072992700729925, "obj2": 0.5383549021650345}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Const * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( Max( FirstVNF_Mem,( ( MDR / AMS ) / DDR ) ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + RRSe ) / ( ( RCSe / MLU ) - Min( ( ( ( Max( ( DS + RRSe ),( RMSe * DS ) ) / ( CS / Min( RRSe ,DS ) ) ) * RCSe ) - RCSe ) ,( MLU / ( ( RMSe * CS ) - RMSe ) ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4118430696560359}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,Min( ( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) / ( FirstVNF_CPU_Server + BR ) ) * ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( RRSe ,MUM ) ,( ( MUC + ( MLU - CS ) ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5277006926884427}, {"determining": "( ( MDR - ( ( Min( Max( ARS,FirstVNF_Mem ) ,CRS ) - FirstVNF_CPU_Server ) / ACS ) ) - Min( FirstVNF_Mem_Server ,ACS ) )", "choosing": "( ( RRSe / ( RCSe + RCSe ) ) / ( RRSe + ( Min( MUM ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5494702436942126}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( ( ACS - DDR ) / Const ) + ( CRS * Min( DDR ,CRS ) ) )", "choosing": "( ( ( RMSe / DS ) + RRSe ) / ( DS / MUM ) )", "obj1": 0.9981751824817519, "obj2": 0.001239510547653629}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( ( ( FirstVNF_Mem_Server * ( Max( ACS,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) - MRS ) - Max( ( FirstVNF_RAM_Server * ( ( AMS / MDR ) / DDR ) ),Max( CRS,AMS ) ) ) ,Max( Min( Const ,PN ),ACS ) ) ) )", "choosing": "( ( MUC + DS ) / Max( MUC,( Min( MLU ,MUM ) / ( RMSe / ( RCSe - ( ( RMSe / MUM ) - ( ( RRSe * CS ) - RMSe ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.001239510547653629}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - ( ( DDR / FirstVNF_RAM_Server ) - BR ) ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,Min( ( MLU + RCSe ) ,MUC ) ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / CS ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM ) ,( ( ( FirstVNF_RAM / RRS ) * ( ( ( CRS - ARS ) / BR ) * FirstVNF_Mem ) ) / PN ) )", "choosing": "Max( Min( MUC ,DS ),Min( ( CS * RRSe ) ,Min( Min( Min( Min( MLU ,RCSe ) ,MLU ) ,RRSe ) ,( ( RMSe * MUM ) / ( Min( MUC ,MLU ) / ( Min( Min( MLU ,RCSe ) ,MLU ) / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "28": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "Min( ( FirstVNF_Mem * ( ( BR / FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server / ( ( ( ARS - DDR ) / FirstVNF_RAM_Server ) - DDR ) ) )", "choosing": "( ( ( MUC - RRSe ) / ( RCSe + RCSe ) ) / ( ( Min( ( Max( Min( ( MUM - MLU ) ,RMSe ),MUM ) * MLU ) ,MUR ) / CS ) + ( Min( RRSe ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.34444276852760114}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( MDR / ( FirstVNF_Mem / ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( Max( MLU,CS ) + DS ) - RMSe ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4227937235766656}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Const * AMS ) + ( ARS / Min( ( FirstVNF_CPU_Server - Max( Max( FirstVNF_Mem,( ( MDR / AMS ) / DDR ) ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MUC + RRSe ) / ( ( RCSe / MLU ) - Min( ( ( ( Max( ( DS + RRSe ),( RMSe * DS ) ) / ( CS / Min( RRSe ,DS ) ) ) * RCSe ) - RCSe ) ,( MLU / ( ( RMSe * CS ) - RMSe ) ) ) ) )", "obj1": 0.5638686131386861, "obj2": 0.4118430696560359}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,( ( ( MUM + MUC ) * MLU ) - Max( ( RMSe / MUR ),CS ) ) ) )", "obj1": 0.5565693430656934, "obj2": 0.4198548700507207}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( RRS + FirstVNF_CPU ) - ( ( AMS - Max( ( ( FirstVNF_CPU + FirstVNF_RAM ) / FirstVNF_RAM ),CRS ) ) - Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MLU + ( ( ( RMSe / MUM ) * MLU ) - Min( RCSe ,( ( CS * DS ) + ( DS * MUC ) ) ) ) ) ,( ( RCSe / ( RMSe + Min( CS ,Max( MUR,RCSe ) ) ) ) / ( MUR / MUC ) ) ) + MUC ) / Min( RCSe ,CS ) )", "obj1": 0.43795620437956206, "obj2": 0.5669359135017408}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( Min( BR ,( ( MDR * RRS ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.5656934306569343, "obj2": 0.4020729642122345}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( ( ACS - DDR ) / Const ) + ( CRS * Min( DDR ,CRS ) ) )", "choosing": "( ( ( RMSe / DS ) + RRSe ) / ( DS / MUM ) )", "obj1": 0.9981751824817519, "obj2": 0.001239510547653629}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( ( ( FirstVNF_Mem_Server * ( Max( ACS,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) - MRS ) - Max( ( FirstVNF_RAM_Server * ( ( AMS / MDR ) / DDR ) ),Max( CRS,AMS ) ) ) ,Max( Min( Const ,PN ),ACS ) ) ) )", "choosing": "( ( MUC + DS ) / Max( MUC,( Min( MLU ,MUM ) / ( RMSe / ( RCSe - ( ( RMSe / MUM ) - ( ( RRSe * CS ) - RMSe ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.001239510547653629}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( FirstVNF_Mem * ( ( BR / FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server / ( ( ( ARS - DDR ) / FirstVNF_RAM_Server ) - DDR ) ) )", "choosing": "( ( ( MUC - RRSe ) / ( RCSe + RCSe ) ) / ( ( Min( ( Max( Min( ( MUM - MLU ) ,RMSe ),MUM ) * MLU ) ,MUR ) / CS ) + ( Min( RRSe ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.34444276852760114}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( RRS + FirstVNF_CPU ) - ( ( AMS - Max( ( ( FirstVNF_CPU + FirstVNF_RAM ) / FirstVNF_RAM ),CRS ) ) - Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MLU + ( ( ( RMSe / MUM ) * MLU ) - Min( RCSe ,( ( CS * DS ) + ( DS * MUC ) ) ) ) ) ,( ( RCSe / ( RMSe + Min( CS ,Max( MUR,RCSe ) ) ) ) / ( MUR / MUC ) ) ) + MUC ) / Min( RCSe ,CS ) )", "obj1": 0.43795620437956206, "obj2": 0.5669359135017408}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( RRS * ACS ) ) - Min( Max( ( ( FirstVNF_CPU / Min( ( ( MRS + ACS ) - ( FirstVNF_RAM_Server / CRS ) ) ,Max( ARS,FirstVNF_RAM ) ) ) + RRS ),Max( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) + PN ) * FirstVNF_RAM ),Const ) ) ,MRS ) )", "choosing": "Min( ( Min( Min( Min( Max( Max( MUM,MUC ),( MLU + ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( MUC - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) ,Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) + PN ) * FirstVNF_RAM ) - ( AMS + ( ( ACS * FirstVNF_Mem ) + CRS ) ) )", "choosing": "Min( ( ( CS + ( ( RMSe + ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) ) - RMSe ) ) + ( MLU / ( ( CS + RCSe ) / ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / AMS ) ,Min( ( FirstVNF_Mem * PN ) ,PN ) ) / ( RRS - ARS ) ) - ( AMS + ( ( ACS * FirstVNF_Mem ) + CRS ) ) )", "choosing": "Min( ( ( CS + ( ( RMSe + MUC ) - RMSe ) ) + ( MLU / ( ( CS + RCSe ) / ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server - PN ) ) - ( ( Min( ARS ,DDR ) / BR ) + ( ( ACS * ( FirstVNF_Mem + AMS ) ) + BR ) ) )", "choosing": "Min( Max( ( MUM - MUM ),( DS / MUC ) ) ,Min( MUR ,( ( MUR - ( RCSe / MLU ) ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "30": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( FirstVNF_Mem * ( ( BR / FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server / ( ( ( ARS - DDR ) / FirstVNF_RAM_Server ) - DDR ) ) )", "choosing": "( ( ( MUC - RRSe ) / ( RCSe + RCSe ) ) / ( ( Min( ( Max( Min( ( MUM - MLU ) ,RMSe ),MUM ) * MLU ) ,MUR ) / CS ) + ( Min( RRSe ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.34444276852760114}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS / AMS ) + ( ARS / Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_CPU_Server - MRS ) ) * BR ) ,CRS ) ) )", "choosing": "( ( ( RCSe / MUC ) / Max( CS,CS ) ) / Max( CS,CS ) )", "obj1": 0.4635036496350365, "obj2": 0.5192273094244905}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5094829882642109}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( RRS + FirstVNF_CPU ) - ( ( AMS - Max( ( ( FirstVNF_CPU + FirstVNF_RAM ) / FirstVNF_RAM ),CRS ) ) - Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MLU + ( ( ( RMSe / MUM ) * MLU ) - Min( RCSe ,( ( CS * DS ) + ( DS * MUC ) ) ) ) ) ,( ( RCSe / ( RMSe + Min( CS ,Max( MUR,RCSe ) ) ) ) / ( MUR / MUC ) ) ) + MUC ) / Min( RCSe ,CS ) )", "obj1": 0.43795620437956206, "obj2": 0.5669359135017408}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + MUM ) / ( MUC / ( RCSe + RCSe ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5102592354964478}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( Max( ARS,BR ) + Max( ARS,BR ) )", "choosing": "( ( CS - ( ( MUR * RCSe ) + RMSe ) ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( BR / Min( Min( DDR ,Min( ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ,CRS ) ) ,CRS ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + DS ) / Max( ( CS - ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) ),MUM ) )", "obj1": 0.46167883211678834, "obj2": 0.5231884102667385}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( RRS * ACS ) ) - Min( Max( ( ( FirstVNF_CPU / Min( ( ( MRS + ACS ) - ( FirstVNF_RAM_Server / CRS ) ) ,Max( ARS,FirstVNF_RAM ) ) ) + RRS ),Max( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) + PN ) * FirstVNF_RAM ),Const ) ) ,MRS ) )", "choosing": "Min( ( Min( Min( Min( Max( Max( MUM,MUC ),( MLU + ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( MUC - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) ,Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) + PN ) * FirstVNF_RAM ) - ( AMS + ( ( ACS * FirstVNF_Mem ) + CRS ) ) )", "choosing": "Min( ( ( CS + ( ( RMSe + ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) ) - RMSe ) ) + ( MLU / ( ( CS + RCSe ) / ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "31": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( Min( FirstVNF_CPU ,Max( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Max( Max( FirstVNF_RAM,MRS ),ARS ) ) ),ARS ) ) / ACS ) + Max( BR,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUC ) / ( Max( MUR,( MUR - DS ) ) * ( RCSe / MUC ) ) )", "obj1": 0.4215328467153285, "obj2": 0.603981379147788}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Max( ( ( ACS + FirstVNF_Mem_Server ) * FirstVNF_Mem ),( MRS - Const ) ) ) + MRS ) - MDR ) - ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( MUC ,( ( Max( MLU,Max( ( MUC - MUM ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.6076642335766423, "obj2": 0.385689412876661}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "Min( ( FirstVNF_Mem * ( ( BR / FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server / ( ( ( ARS - DDR ) / FirstVNF_RAM_Server ) - DDR ) ) )", "choosing": "( ( ( MUC - RRSe ) / ( RCSe + RCSe ) ) / ( ( Min( ( Max( Min( ( MUM - MLU ) ,RMSe ),MUM ) * MLU ) ,MUR ) / CS ) + ( Min( RRSe ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.34444276852760114}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) ,MLU ) - ( DS + CS ) ) )", "obj1": 0.593065693430657, "obj2": 0.38838403147165246}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( Min( AMS ,ACS ) - Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ),Max( ( ( RRS / BR ) * RRS ),DDR ) ) )", "choosing": "( ( Max( ( MUR + DS ),Max( CS,DS ) ) + DS ) - Min( RRSe ,( ( CS * CS ) - MUC ) ) )", "obj1": 0.6040145985401459, "obj2": 0.3872602906708609}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( Max( Max( ( ( FirstVNF_CPU_Server + BR ) * FirstVNF_Mem ),FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( MDR + AMS ) )", "choosing": "Min( ( MUC + DS ) ,( RRSe - ( ( Min( CS ,MLU ) / CS ) / Min( MUC ,MLU ) ) ) )", "obj1": 0.9963503649635036, "obj2": 0.002225809502444829}, {"determining": "( ( RRS + FirstVNF_CPU ) - ( ( AMS - Max( ( ( FirstVNF_CPU + FirstVNF_RAM ) / FirstVNF_RAM ),CRS ) ) - Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MLU + ( ( ( RMSe / MUM ) * MLU ) - Min( RCSe ,( ( CS * DS ) + ( DS * MUC ) ) ) ) ) ,( ( RCSe / ( RMSe + Min( CS ,Max( MUR,RCSe ) ) ) ) / ( MUR / MUC ) ) ) + MUC ) / Min( RCSe ,CS ) )", "obj1": 0.43795620437956206, "obj2": 0.5669359135017408}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,( BR / Max( FirstVNF_RAM,Max( ( ( ( AMS - Const ) * FirstVNF_RAM_Server ) / FirstVNF_Mem ),AMS ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( RMSe * Max( RCSe,Min( ( RRSe * RRSe ) ,DS ) ) ) - RMSe ) ),Max( Max( Min( ( ( MUC / Max( RCSe,MUM ) ) * RCSe ) ,MUR ),Min( Min( ( ( ( MUC * CS ) + RRSe ) * ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( RRS * ACS ) ) - Min( Max( ( ( FirstVNF_CPU / Min( ( ( MRS + ACS ) - ( FirstVNF_RAM_Server / CRS ) ) ,Max( ARS,FirstVNF_RAM ) ) ) + RRS ),Max( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) + PN ) * FirstVNF_RAM ),Const ) ) ,MRS ) )", "choosing": "Min( ( Min( Min( Min( Max( Max( MUM,MUC ),( MLU + ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( MUC - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) ,Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "32": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * Min( ( MUC + ( CS + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.677007299270073, "obj2": 0.29328072326108706}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ( ( Const / FirstVNF_Mem ) * FirstVNF_CPU ) + ( ( ( ( Const / FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) + ( ACS - Min( PN ,( RRS * Max( ( DDR * ACS ),FirstVNF_Mem_Server ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) / ( RCSe - RMSe ) )", "obj1": 0.5492700729927007, "obj2": 0.4222622721918432}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "Min( ( FirstVNF_Mem * ( ( BR / FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server / ( ( ( ARS - DDR ) / FirstVNF_RAM_Server ) - DDR ) ) )", "choosing": "( ( ( MUC - RRSe ) / ( RCSe + RCSe ) ) / ( ( Min( ( Max( Min( ( MUM - MLU ) ,RMSe ),MUM ) * MLU ) ,MUR ) / CS ) + ( Min( RRSe ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.34444276852760114}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( CRS * AMS ) + ( ARS / Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( ( RMSe + Min( MLU ,RMSe ) ) / ( MUC + ( ( MUR / CS ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( RRS + FirstVNF_CPU ) - ( ( AMS - Max( ( ( FirstVNF_CPU + FirstVNF_RAM ) / FirstVNF_RAM ),CRS ) ) - Max( BR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MLU + ( ( ( RMSe / MUM ) * MLU ) - Min( RCSe ,( ( CS * DS ) + ( DS * MUC ) ) ) ) ) ,( ( RCSe / ( RMSe + Min( CS ,Max( MUR,RCSe ) ) ) ) / ( MUR / MUC ) ) ) + MUC ) / Min( RCSe ,CS ) )", "obj1": 0.43795620437956206, "obj2": 0.5669359135017408}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,( BR / Max( FirstVNF_RAM,Max( ( ( ( AMS - Const ) * FirstVNF_RAM_Server ) / FirstVNF_Mem ),AMS ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( RMSe * Max( RCSe,Min( ( RRSe * RRSe ) ,DS ) ) ) - RMSe ) ),Max( Max( Min( ( ( MUC / Max( RCSe,MUM ) ) * RCSe ) ,MUR ),Min( Min( ( ( ( MUC * CS ) + RRSe ) * ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ARS / Min( Min( RRS ,( MDR + ( MDR + FirstVNF_RAM ) ) ) ,CRS ) ) )", "choosing": "( ( ( ( MUR / RRSe ) + DS ) + ( ( MUR / RRSe ) + Max( ( MUC + ( RMSe + Min( MLU ,MLU ) ) ),RCSe ) ) ) / ( ( Max( MUC,MUM ) - ( DS + MUR ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5594834084688503}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( Min( BR ,( ( ( DDR / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / ( ( ( MUC / MLU ) * MLU ) * DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,( RRS * ACS ) ) - Min( Max( ( ( FirstVNF_CPU / Min( ( ( MRS + ACS ) - ( FirstVNF_RAM_Server / CRS ) ) ,Max( ARS,FirstVNF_RAM ) ) ) + RRS ),Max( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) + PN ) * FirstVNF_RAM ),Const ) ) ,MRS ) )", "choosing": "Min( ( Min( Min( Min( Max( Max( MUM,MUC ),( MLU + ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( MUC - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) ,Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Min( Min( Max( ( FirstVNF_CPU - FirstVNF_RAM ),Const ) ,FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server * MDR ) * Min( ( FirstVNF_Mem + ( FirstVNF_CPU - Const ) ) ,( PN / Const ) ) ) ) ) + Max( Max( CRS,( ( ACS - ACS ) * ( CRS + ( AMS - ( Max( ACS,MDR ) + BR ) ) ) ) ),DDR ) )", "choosing": "( Max( Max( ( MUR - ( ( RMSe - RRSe ) - ( Max( Max( RRSe,CS ),( DS / MUC ) ) + MLU ) ) ),( ( Max( RRSe,CS ) * ( ( MUC - MUR ) / ( ( MUM - RMSe ) + MUC ) ) ) + RRSe ) ),( DS / ( MUM + Max( CS,( ( MLU + ( RMSe * RCSe ) ) / ( ( DS + MUM ) / RRSe ) ) ) ) ) ) / ( ( RMSe / ( ( MUR * MLU ) * CS ) ) - ( ( ( RCSe * ( MUR * Max( RMSe,RRSe ) ) ) * MLU ) - Max( ( MUC + RRSe ),( MLU + Max( RMSe,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "33": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Max( ( FirstVNF_Mem * ( ACS + FirstVNF_Mem_Server ) ),( MRS - Const ) ) ) + MRS ) - MDR ) - ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( MUC ,( ( Max( MLU,Max( ( RMSe + MUC ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.6058394160583942, "obj2": 0.36458897190621536}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,MRS ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MLU ,RMSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.5766423357664233, "obj2": 0.3970918209503285}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( Const / FirstVNF_Mem ) * FirstVNF_CPU ) + ( ( ( ( Const / FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) + ( ACS - Min( PN ,( RRS * Max( ( DDR * ACS ),FirstVNF_Mem_Server ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) / ( RCSe - RMSe ) )", "obj1": 0.5492700729927007, "obj2": 0.4222622721918432}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( FirstVNF_Mem * ( ( BR / FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server / ( ( ( ARS - DDR ) / FirstVNF_RAM_Server ) - DDR ) ) )", "choosing": "( ( ( MUC - RRSe ) / ( RCSe + RCSe ) ) / ( ( Min( ( Max( Min( ( MUM - MLU ) ,RMSe ),MUM ) * MLU ) ,MUR ) / CS ) + ( Min( RRSe ,RMSe ) + Max( RCSe,MLU ) ) ) )", "obj1": 0.6131386861313869, "obj2": 0.34444276852760114}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( Min( AMS ,AMS ) + FirstVNF_CPU )", "choosing": "( ( RCSe / MUC ) / ( ( ( MUM / MUR ) / Min( MLU ,CS ) ) / DS ) )", "obj1": 0.44525547445255476, "obj2": 0.5583538524127246}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / ( Min( MRS ,Min( ( ( FirstVNF_CPU_Server - CRS ) / Const ) ,MDR ) ) - ( ( BR - ARS ) / ( DDR + ( ( FirstVNF_CPU * ACS ) * FirstVNF_CPU ) ) ) ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUC ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6094890510948905, "obj2": 0.3471511659925728}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,( BR / Max( FirstVNF_RAM,Max( ( ( ( AMS - Const ) * FirstVNF_RAM_Server ) / FirstVNF_Mem ),AMS ) ) ) ) )", "choosing": "Max( Min( RCSe ,( ( RMSe * Max( RCSe,Min( ( RRSe * RRSe ) ,DS ) ) ) - RMSe ) ),Max( Max( Min( ( ( MUC / Max( RCSe,MUM ) ) * RCSe ) ,MUR ),Min( Min( ( ( ( MUC * CS ) + RRSe ) * ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( ( ( MDR - Min( ( Const - Min( ACS ,PN ) ) ,( ( ACS * FirstVNF_RAM_Server ) / Const ) ) ) - BR ) - FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),Min( ( CS - RCSe ) ,Min( Min( MUM ,RRSe ) ,( ( RMSe * RCSe ) + ( ( Min( ( MLU + RCSe ) ,MUC ) / CS ) / Min( MUC ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "34": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Min( MUR ,( MUC / MLU ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3969263084665177}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( Const / FirstVNF_Mem ) * FirstVNF_CPU ) + ( ( ( ( Const / FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) + ( ACS - Min( PN ,( RRS * Max( ( DDR * ACS ),FirstVNF_Mem_Server ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) / ( RCSe - RMSe ) )", "obj1": 0.5492700729927007, "obj2": 0.4222622721918432}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( ( ( ( ( ( DDR / MDR ) - ( PN / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) - RRS ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR + AMS ) ) + ( DDR - ( ( Max( FirstVNF_CPU,Max( ( FirstVNF_RAM + ( ACS + RRS ) ),Min( DDR ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC * DS ) ,Min( Min( ( MUC + ( RCSe - DS ) ) ,Min( CS ,Min( CS ,( ( ( RCSe / RCSe ) * Max( MUR,MLU ) ) - Min( MUM ,( RMSe * MLU ) ) ) ) ) ) ,RCSe ) )", "obj1": 0.958029197080292, "obj2": 0.029240724356659552}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( Max( MUC,DS ) - CS ),Max( RRSe,( RMSe * RCSe ) ) ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5635376355346918}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( FirstVNF_RAM * Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU + Const ) ) ) - Max( MDR,( ( MDR + ( ( MDR + ( FirstVNF_RAM + DDR ) ) + DDR ) ) / AMS ) ) )", "choosing": "Min( ( ( MUC / MUM ) + ( Min( ( ( MUM / RCSe ) + Min( MLU ,( ( MLU / RRSe ) / MUC ) ) ) ,RMSe ) + RCSe ) ) ,( Max( RCSe,Max( ( MLU / MUC ),MUC ) ) - MUR ) )", "obj1": 0.9635036496350365, "obj2": 0.02697554127598676}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( MUR ,( RMSe * CS ) ) ) ,Max( ( MUR + Min( RCSe ,MLU ) ),( RRSe / ( MUC / Min( RCSe ,( Min( ( MUR - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,Min( Min( ( ( RMSe + MUR ) / ( Min( MLU ,MLU ) * RCSe ) ) ,RRSe ) ,DS ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RMSe + Min( MLU ,RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RRSe + ( MUC * Max( ( ( MLU * ( ( RRSe * MUM ) + ( MUM * CS ) ) ) - Max( Max( MUM,( RMSe / MLU ) ),RMSe ) ),MUR ) ) ) + Max( CS,( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "35": [{"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Min( MUR ,( MUC / MLU ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3969263084665177}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( Const / FirstVNF_Mem ) * FirstVNF_CPU ) + ( ( ( ( Const / FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) + ( ACS - Min( PN ,( RRS * Max( ( DDR * ACS ),FirstVNF_Mem_Server ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) / ( RCSe - RMSe ) )", "obj1": 0.5492700729927007, "obj2": 0.4222622721918432}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + MUM ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( RCSe / MUR ) ) ) ) ,MLU ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( ( AMS / AMS ),CRS ) ) )", "choosing": "( ( MUC + ( Min( ( ( ( MUC / MUR ) * MLU ) * RMSe ) ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}], "36": [{"determining": "Min( Max( MDR,RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + ( DS * ( MUC + ( RRSe + MUM ) ) ) ) ,( ( MUC / MUM ) * ( MUC * RCSe ) ) ) + ( MLU - MUC ) ) / Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + MRS ) ) ) - ( Min( MDR ,( DDR - DDR ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MLU * ( ( RMSe / RRSe ) + MUM ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - Max( Min( DS ,MUC ),CS ) ) * RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.6459854014598541, "obj2": 0.3087603717022752}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Max( Min( FirstVNF_CPU ,MRS ),Max( DDR,FirstVNF_CPU_Server ) ) * Const ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / RCSe )", "obj1": 0.6642335766423357, "obj2": 0.3045286924736062}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Min( MUR ,( MUC / MLU ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3969263084665177}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( Const / FirstVNF_Mem ) * FirstVNF_CPU ) + ( ( ( ( Const / FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) + ( ACS - Min( PN ,( RRS * Max( ( DDR * ACS ),FirstVNF_Mem_Server ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) / ( RCSe - RMSe ) )", "obj1": 0.5492700729927007, "obj2": 0.4222622721918432}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( RMSe + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.37238819760480485}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( MUC * ( RRSe / ( DS * Min( ( Max( MUC,( MUR * MUC ) ) - ( CS + ( CS * MUR ) ) ) ,( RMSe + CS ) ) ) ) ) / ( Min( MUM ,( Min( Min( Min( ( CS * MUC ) ,Max( MUC,CS ) ) ,MUC ) ,Max( RCSe,Max( ( MUM / MUC ),RMSe ) ) ) + RRSe ) ) - ( RCSe / RCSe ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( ( FirstVNF_RAM / PN ) ,Min( FirstVNF_Mem ,Max( ( CRS * ARS ),ARS ) ) )", "choosing": "Max( Min( ( Max( ( RCSe + MUR ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( ( MUC / ( MUM + ( RRSe * RMSe ) ) ) - RCSe ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( FirstVNF_Mem * CRS ) ) ) / ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / MRS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU / Max( CRS,RRS ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) ,Max( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( BR ,ARS ) ),MDR ) )", "choosing": "Max( ( ( MUM - Min( RCSe ,( Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) - RMSe ) ) ) - ( ( MUM * ( ( MUM - Min( MLU ,( RCSe - RCSe ) ) ) / RCSe ) ) / MUR ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}], "37": [{"determining": "( FirstVNF_CPU_Server - ( Max( Max( ACS,Min( FirstVNF_Mem ,ARS ) ),AMS ) / ( Min( ACS ,( ARS * ARS ) ) - Min( Max( ( RRS + Min( ARS ,( MDR - ACS ) ) ),Max( Min( Max( RRS,FirstVNF_CPU ) ,FirstVNF_CPU ),Const ) ) ,MRS ) ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - Max( ( MUR + CS ),RMSe ) ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MDR,RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + ( DS * ( MUC + ( RRSe + MUM ) ) ) ) ,( ( MUC / MUM ) * ( MUC * RCSe ) ) ) + ( MLU - MUC ) ) / Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( AMS - ( ( Min( ( ( Const + Min( DDR ,MDR ) ) + ( ACS * ( DDR + AMS ) ) ) ,( MRS - ARS ) ) - ( Min( DDR ,BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / ( BR + FirstVNF_CPU ) ) ) ) - ( AMS * CRS ) )", "choosing": "Min( Min( Min( MUM ,( Min( MLU ,( Min( CS ,MLU ) / ( Min( DS ,RCSe ) * MLU ) ) ) / DS ) ) ,MUR ) ,( ( RCSe - RMSe ) * RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Min( MUR ,( MUC / MLU ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3969263084665177}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( Const / FirstVNF_Mem ) * FirstVNF_CPU ) + ( ( ( ( Const / FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) + ( ACS - Min( PN ,( RRS * Max( ( DDR * ACS ),FirstVNF_Mem_Server ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) / ( RCSe - RMSe ) )", "obj1": 0.5492700729927007, "obj2": 0.4222622721918432}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( RMSe + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5894160583941606, "obj2": 0.37238819760480485}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Max( ( ( Min( RCSe ,( ( ( ( MUR * RRSe ) * Max( RMSe,MUC ) ) - RMSe ) * MLU ) ) - ( MUR * ( MUR / MUM ) ) ) / RMSe ),( MUM - CS ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Max( ( MUR - MUC ),( Min( ( ( Max( RCSe,( MUC / CS ) ) - Min( Min( DS ,MUC ) ,MLU ) ) / ( RRSe + RRSe ) ) ,Max( RCSe,( Min( RRSe ,MLU ) / ( ( RMSe + MUM ) - ( MUR + MUM ) ) ) ) ) / MUC ) ) ,( Min( Min( Min( Max( Max( MUM,MUC ),( MLU / ( RRSe / MUC ) ) ) ,RCSe ) ,( Max( ( ( MUM / RRSe ) * ( RRSe - MUR ) ),DS ) + MUC ) ) ,MLU ) - ( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RCSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Min( Min( MUC ,Min( MUM ,MLU ) ) ,Max( RMSe,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * BR ) ) * Max( ( Const - FirstVNF_Mem_Server ),FirstVNF_Mem ) ) ) - ( ( FirstVNF_RAM_Server / MDR ) * ( FirstVNF_RAM * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( MUR * Min( MUR ,Max( CS,RRSe ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MLU / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "38": [{"determining": "Min( Max( ( PN - FirstVNF_Mem ),RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( ( RMSe + MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( Max( Max( ACS,Min( FirstVNF_Mem ,ARS ) ),AMS ) / ( Min( ACS ,( ARS * ARS ) ) - Min( Max( ( RRS + Min( ARS ,( MDR - ACS ) ) ),Max( Min( Max( RRS,FirstVNF_CPU ) ,FirstVNF_CPU ),Const ) ) ,MRS ) ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - Max( ( MUR + CS ),RMSe ) ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( ( MDR - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) ) / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7116788321167883, "obj2": 0.24262780345172047}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( ( Const / FirstVNF_Mem ) * FirstVNF_CPU ) + ( ( ( ( Const / FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) + ( ACS - Min( PN ,( RRS * Max( ( DDR * ACS ),FirstVNF_Mem_Server ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) / ( RCSe - RMSe ) )", "obj1": 0.5492700729927007, "obj2": 0.4222622721918432}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( ( AMS - ( ( Min( ( ( Const + Min( DDR ,MDR ) ) + ( ACS * ( DDR + AMS ) ) ) ,( MRS - ARS ) ) - ( Min( DDR ,BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / ( BR + FirstVNF_CPU ) ) ) ) - ( AMS * CRS ) )", "choosing": "Min( Min( Min( MUM ,( Min( MLU ,( Min( CS ,MLU ) / ( Min( DS ,RCSe ) * MLU ) ) ) / DS ) ) ,MUR ) ,( ( RCSe - RMSe ) * RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Min( MUR ,( MUC / MLU ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3969263084665177}, {"determining": "( ( ( Max( Const,ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server - DDR ) ) ) + MRS ) + ( Min( FirstVNF_Mem ,CRS ) + ( Min( BR ,FirstVNF_RAM_Server ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( MUC + RRSe ) * ( Min( MUC ,( MUC * MUR ) ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - ( MUR * ( Min( ( MUC * RMSe ) ,( RMSe + RRSe ) ) / MUR ) ) ) ,( ( Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) * DS ) + MLU ) ) - RMSe ) )", "obj1": 0.5766423357664233, "obj2": 0.3909484935739365}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( Min( PN ,( Const * MRS ) ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUM * ( RCSe * MUC ) ) ,RCSe ) )", "obj1": 0.5894160583941606, "obj2": 0.3623677530431436}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( CS * RCSe ) / Max( ( Min( Min( ( Min( ( DS / MUM ) ,MUR ) + MLU ) ,DS ) ,( Max( RRSe,MUC ) - MUM ) ) - RMSe ),Min( Max( RRSe,MUM ) ,DS ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * MDR ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.382360172326697}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( ARS / Min( DDR ,( ( FirstVNF_CPU_Server * ( BR * Max( Min( FirstVNF_RAM ,RRS ),( ACS * BR ) ) ) ) - ( AMS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( MUM / RMSe ) ,Min( Min( ( DS + ( MUR + ( RMSe - RCSe ) ) ) ,( MUC + ( RMSe / Min( MLU ,RMSe ) ) ) ) ,RCSe ) ) ,Min( MUR ,Min( ( RRSe + ( DS * ( MUR + DS ) ) ) ,MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.4949026331546549}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( ( MRS / ( DDR / AMS ) ) / RRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - FirstVNF_CPU_Server )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( MLU - RCSe ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.9653284671532847, "obj2": 0.019539971289024002}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) ) ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( ( RMSe * CS ) ,MUR ) ) ,( ( MUR + Min( RCSe ,MLU ) ) - ( RRSe / ( MUC / Min( RCSe ,( Min( ( RCSe - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - ( AMS * Max( ( Max( MRS,FirstVNF_RAM ) - FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) ) / ( MUM * MUM ) )", "obj1": 0.5, "obj2": 0.4603543125951681}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Max( MDR,RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + ( DS * ( MUC + ( RRSe + MUM ) ) ) ) ,( ( MUC / MUM ) * ( MUC * RCSe ) ) ) + ( MLU - MUC ) ) / Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "39": [{"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ( Min( DDR ,( Const - ( ( ACS / CRS ) - BR ) ) ) + DDR ) + ( FirstVNF_RAM_Server * ( PN / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS - CS ),RRSe ) / ( Min( Min( ( ( ( CS + MUM ) + RCSe ) * ( ( MUR + RCSe ) * ( DS + ( RCSe - MUR ) ) ) ) ,RCSe ) ,CS ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - FirstVNF_Mem ),RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( ( RMSe + MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( ARS - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7171532846715328, "obj2": 0.23430897112896545}, {"determining": "( ( ( Const / FirstVNF_Mem ) * FirstVNF_CPU ) + ( ( ( ( Const / FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) + ( ACS - Min( PN ,( RRS * Max( ( DDR * ACS ),FirstVNF_Mem_Server ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) / ( RCSe - RMSe ) )", "obj1": 0.5492700729927007, "obj2": 0.4222622721918432}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "( ( AMS - ( ( ( AMS * ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,( ( MUR * RCSe ) + ( MUC * ( ( CS + Max( RRSe,RCSe ) ) + DS ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.39007744781001724}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * MDR ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.382360172326697}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( MDR - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) ) / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7116788321167883, "obj2": 0.24262780345172047}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( Min( PN ,( Const * MRS ) ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUM * ( RCSe * MUC ) ) ,RCSe ) )", "obj1": 0.5894160583941606, "obj2": 0.3623677530431436}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM_Server ) ) ) - ( PN + ( ( FirstVNF_Mem * ( Max( RRS,PN ) - MRS ) ) * Min( FirstVNF_Mem_Server ,( BR / ARS ) ) ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( Min( CS ,RRSe ) / ( Min( ( ( DS * MUR ) / RRSe ) ,CS ) * Min( ( ( DS * MUR ) / RRSe ) ,CS ) ) ) ,RCSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48817210737829425}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( ( MRS / ( DDR / AMS ) ) / RRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - FirstVNF_CPU_Server )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( MLU - RCSe ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.9653284671532847, "obj2": 0.019539971289024002}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( CS * RCSe ) / Max( ( Min( Min( ( Min( ( DS / MUM ) ,MUR ) + MLU ) ,DS ) ,( Max( RRSe,MUC ) - MUM ) ) - RMSe ),Min( Max( RRSe,MUM ) ,DS ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( Max( AMS,Max( ( FirstVNF_RAM * Min( Const ,( FirstVNF_RAM_Server - CRS ) ) ),( ( ARS - FirstVNF_RAM ) * AMS ) ) ) - ( Min( ( CRS / PN ) ,CRS ) - FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( ( CS / ( RCSe + Min( ( MUR - CS ) ,RCSe ) ) ) * MLU ) ) ,( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Max( ARS,( Const * ( ACS * ( CRS + FirstVNF_CPU_Server ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( MDR,MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( RRSe * MLU ) ) ,( RRSe * MLU ) ) ) ,( RMSe + ( Min( MLU ,DS ) * MUC ) ) )", "obj1": 0.5, "obj2": 0.4571972947709037}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( ( RMSe * CS ) ,MUR ) ) ,( ( MUR + Min( RCSe ,MLU ) ) - ( RRSe / ( MUC / Min( RCSe ,( Min( ( RCSe - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( CRS * AMS ) + ( ARS + Min( ( FirstVNF_CPU_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( DS - RRSe ) * Max( DS,MUM ) ) ,( DS * RRSe ) ) / CS ) - CS ) ,DS ) + RMSe ) / ( MLU * DS ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( MUC + RRSe ) * ( Min( MUC ,( MUC * MUR ) ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - ( MUR * ( Min( ( MUC * RMSe ) ,( RMSe + RRSe ) ) / MUR ) ) ) ,( ( Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) * DS ) + MLU ) ) - RMSe ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) ) ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( FirstVNF_CPU_Server - ( Max( Max( ACS,Min( FirstVNF_Mem ,ARS ) ),AMS ) / ( Min( ACS ,( ARS * ARS ) ) - Min( Max( ( RRS + Min( ARS ,( MDR - ACS ) ) ),Max( Min( Max( RRS,FirstVNF_CPU ) ,FirstVNF_CPU ),Const ) ) ,MRS ) ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - Max( ( MUR + CS ),RMSe ) ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MDR,RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + ( DS * ( MUC + ( RRSe + MUM ) ) ) ) ,( ( MUC / MUM ) * ( MUC * RCSe ) ) ) + ( MLU - MUC ) ) / Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "40": [{"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ( Min( DDR ,( Const - ( ( ACS / CRS ) - BR ) ) ) + DDR ) + ( FirstVNF_RAM_Server * ( PN / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS - CS ),RRSe ) / ( Min( Min( ( ( ( CS + MUM ) + RCSe ) * ( ( MUR + RCSe ) * ( DS + ( RCSe - MUR ) ) ) ) ,RCSe ) ,CS ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( ARS - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7171532846715328, "obj2": 0.23430897112896545}, {"determining": "( ( ( Const / FirstVNF_Mem ) * FirstVNF_CPU ) + ( ( ( ( Const / FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) + ( ACS - Min( PN ,( RRS * Max( ( DDR * ACS ),FirstVNF_Mem_Server ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - DS ) / ( RCSe - RMSe ) )", "obj1": 0.5492700729927007, "obj2": 0.4222622721918432}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "( ( AMS - ( ( ( AMS * ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,( ( MUR * RCSe ) + ( MUC * ( ( CS + Max( RRSe,RCSe ) ) + DS ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.39007744781001724}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * MDR ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.382360172326697}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( MDR - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) ) / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7116788321167883, "obj2": 0.24262780345172047}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( Min( PN ,( Const * MRS ) ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUM * ( RCSe * MUC ) ) ,RCSe ) )", "obj1": 0.5894160583941606, "obj2": 0.3623677530431436}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( MRS + Min( ( FirstVNF_CPU_Server / ARS ) ,( ( MDR / FirstVNF_RAM_Server ) / Min( ARS ,( PN / Min( MRS ,( Const - Const ) ) ) ) ) ) ) + Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),DDR ) )", "choosing": "( Max( ( MUM * CS ),( MUR / DS ) ) / ( ( CS / ( ( MUR * MLU ) * CS ) ) - ( ( MUC - Max( MUC,Min( Min( Min( MLU ,RCSe ) ,( RRSe * MUC ) ) ,Max( ( RCSe + RRSe ),( RMSe / DS ) ) ) ) ) / RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842026710138775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM_Server ) ) ) - ( PN + ( ( FirstVNF_Mem * ( Max( RRS,PN ) - MRS ) ) * Min( FirstVNF_Mem_Server ,( BR / ARS ) ) ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( Min( CS ,RRSe ) / ( Min( ( ( DS * MUR ) / RRSe ) ,CS ) * Min( ( ( DS * MUR ) / RRSe ) ,CS ) ) ) ,RCSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48817210737829425}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( ( MRS / ( DDR / AMS ) ) / RRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - FirstVNF_CPU_Server )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( MLU - RCSe ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.9653284671532847, "obj2": 0.019539971289024002}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( CS * RCSe ) / Max( ( Min( Min( ( Min( ( DS / MUM ) ,MUR ) + MLU ) ,DS ) ,( Max( RRSe,MUC ) - MUM ) ) - RMSe ),Min( Max( RRSe,MUM ) ,DS ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) ) ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Max( ARS,( Const * ( ACS * ( CRS + FirstVNF_CPU_Server ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( MDR,MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( RRSe * MLU ) ) ,( RRSe * MLU ) ) ) ,( RMSe + ( Min( MLU ,DS ) * MUC ) ) )", "obj1": 0.5, "obj2": 0.4571972947709037}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( ( RMSe * CS ) ,MUR ) ) ,( ( MUR + Min( RCSe ,MLU ) ) - ( RRSe / ( MUC / Min( RCSe ,( Min( ( RCSe - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( MUC + RRSe ) * ( Min( MUC ,( MUC * MUR ) ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - ( MUR * ( Min( ( MUC * RMSe ) ,( RMSe + RRSe ) ) / MUR ) ) ) ,( ( Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) * DS ) + MLU ) ) - RMSe ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( Max( ( PN - FirstVNF_Mem ),RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( ( RMSe + MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( Max( Max( ACS,Min( FirstVNF_Mem ,ARS ) ),AMS ) / ( Min( ACS ,( ARS * ARS ) ) - Min( Max( ( RRS + Min( ARS ,( MDR - ACS ) ) ),Max( Min( Max( RRS,FirstVNF_CPU ) ,FirstVNF_CPU ),Const ) ) ,MRS ) ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - Max( ( MUR + CS ),RMSe ) ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MDR,RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + ( DS * ( MUC + ( RRSe + MUM ) ) ) ) ,( ( MUC / MUM ) * ( MUC * RCSe ) ) ) + ( MLU - MUC ) ) / Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ) * ( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( DDR - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "( ( ( DS * ( MUC + CS ) ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "41": [{"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( ARS - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7171532846715328, "obj2": 0.23430897112896545}, {"determining": "( ( AMS - ( ( ( AMS * ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,( ( MUR * RCSe ) + ( MUC * ( ( CS + Max( RRSe,RCSe ) ) + DS ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.39007744781001724}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( ( BR / MRS ) - Min( ( Min( FirstVNF_CPU_Server ,BR ) / ( Min( CRS ,AMS ) / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,MLU ) ,( Min( MLU ,MUM ) / ( ( ( ( MLU * ( ( RCSe * MLU ) + ( RMSe / RRSe ) ) ) * ( MUR - ( MUM / ( MLU + RRSe ) ) ) ) - ( CS + Min( DS ,MUC ) ) ) * RCSe ) ) )", "obj1": 0.5492700729927007, "obj2": 0.41925691261892684}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * MDR ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.382360172326697}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( MDR - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) ) / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7116788321167883, "obj2": 0.24262780345172047}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( Min( PN ,( Const * MRS ) ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUM * ( RCSe * MUC ) ) ,RCSe ) )", "obj1": 0.5894160583941606, "obj2": 0.3623677530431436}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( MRS + Min( ( FirstVNF_CPU_Server / ARS ) ,( ( MDR / FirstVNF_RAM_Server ) / Min( ARS ,( PN / Min( MRS ,( Const - Const ) ) ) ) ) ) ) + Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),DDR ) )", "choosing": "( Max( ( MUM * CS ),( MUR / DS ) ) / ( ( CS / ( ( MUR * MLU ) * CS ) ) - ( ( MUC - Max( MUC,Min( Min( Min( MLU ,RCSe ) ,( RRSe * MUC ) ) ,Max( ( RCSe + RRSe ),( RMSe / DS ) ) ) ) ) / RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842026710138775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM_Server ) ) ) - ( PN + ( ( FirstVNF_Mem * ( Max( RRS,PN ) - MRS ) ) * Min( FirstVNF_Mem_Server ,( BR / ARS ) ) ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( Min( CS ,RRSe ) / ( Min( ( ( DS * MUR ) / RRSe ) ,CS ) * Min( ( ( DS * MUR ) / RRSe ) ,CS ) ) ) ,RCSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48817210737829425}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( ( MRS / ( DDR / AMS ) ) / RRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - FirstVNF_CPU_Server )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( MLU - RCSe ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.9653284671532847, "obj2": 0.019539971289024002}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( CS * RCSe ) / Max( ( Min( Min( ( Min( ( DS / MUM ) ,MUR ) + MLU ) ,DS ) ,( Max( RRSe,MUC ) - MUM ) ) - RMSe ),Min( Max( RRSe,MUM ) ,DS ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Max( ARS,( Const * ( ACS * ( CRS + FirstVNF_CPU_Server ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( MDR,MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( RRSe * MLU ) ) ,( RRSe * MLU ) ) ) ,( RMSe + ( Min( MLU ,DS ) * MUC ) ) )", "obj1": 0.5, "obj2": 0.4571972947709037}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "( Min( BR ,MRS ) - Min( ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( MUR * CS ) + ( MLU + MUM ) ) ) ,( Min( MLU ,MUM ) / ( ( ( ( MLU * ( ( RMSe / RRSe ) + ( RCSe * MLU ) ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - ( CS + Min( DS ,MUC ) ) ) * RCSe ) ) )", "obj1": 0.5492700729927007, "obj2": 0.41925691261892684}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( ( RMSe * CS ) ,MUR ) ) ,( ( MUR + Min( RCSe ,MLU ) ) - ( RRSe / ( MUC / Min( RCSe ,( Min( ( RCSe - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( MUC + RRSe ) * ( Min( MUC ,( MUC * MUR ) ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - ( MUR * ( Min( ( MUC * RMSe ) ,( RMSe + RRSe ) ) / MUR ) ) ) ,( ( Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) * DS ) + MLU ) ) - RMSe ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) ) ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ( Min( DDR ,( Const - ( ( ACS / CRS ) - BR ) ) ) + DDR ) + ( FirstVNF_RAM_Server * ( PN / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS - CS ),RRSe ) / ( Min( Min( ( ( ( CS + MUM ) + RCSe ) * ( ( MUR + RCSe ) * ( DS + ( RCSe - MUR ) ) ) ) ,RCSe ) ,CS ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - FirstVNF_Mem ),RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( ( RMSe + MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( Max( Max( ACS,Min( FirstVNF_Mem ,ARS ) ),AMS ) / ( Min( ACS ,( ARS * ARS ) ) - Min( Max( ( RRS + Min( ARS ,( MDR - ACS ) ) ),Max( Min( Max( RRS,FirstVNF_CPU ) ,FirstVNF_CPU ),Const ) ) ,MRS ) ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - Max( ( MUR + CS ),RMSe ) ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MDR,RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + ( DS * ( MUC + ( RRSe + MUM ) ) ) ) ,( ( MUC / MUM ) * ( MUC * RCSe ) ) ) + ( MLU - MUC ) ) / Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM / PN ) * ACS ) ),( ( Const - FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) - ( ( Min( ( ( RRS + MDR ) - FirstVNF_CPU ) ,DDR ) / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * MDR ) ) * FirstVNF_RAM ) ) ) ,FirstVNF_Mem ) ,( Max( MDR,RRS ) - ARS ) )", "choosing": "Max( Min( ( MLU / ( ( RCSe - ( CS * ( RCSe - Min( RRSe ,RRSe ) ) ) ) * Min( MUR ,Max( CS,DS ) ) ) ) ,Min( MUC ,DS ) ),Min( ( MUC * DS ) ,( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "42": [{"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( ( MDR + AMS ),ARS ),ARS ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( ( Max( CS,DS ) - ( ( ( RCSe - RMSe ) + RMSe ) / RCSe ) ) / ( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + Max( MRS,MDR ) ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( ( ( RMSe - ( ( MUR * RRSe ) * Max( RMSe,MUC ) ) ) * ( MLU * RCSe ) ) + DS ) + MUC ) ) )", "obj1": 0.8959854014598541, "obj2": 0.07329979006414065}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( ARS - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7171532846715328, "obj2": 0.23430897112896545}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "( ARS - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS * RCSe ) + Min( ( ( RCSe + ( CS + RCSe ) ) / RMSe ) ,RMSe ) ) ,Min( CS ,( MUM / Min( Max( ( ( RMSe / MUR ) + Min( MUR ,( MUC / RCSe ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.5547445255474452, "obj2": 0.4005312409070446}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "( ( BR / MRS ) - Min( ( Min( FirstVNF_CPU_Server ,BR ) / ( Min( CRS ,AMS ) / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,MLU ) ,( Min( MLU ,MUM ) / ( ( ( ( MLU * ( ( RCSe * MLU ) + ( RMSe / RRSe ) ) ) * ( MUR - ( MUM / ( MLU + RRSe ) ) ) ) - ( CS + Min( DS ,MUC ) ) ) * RCSe ) ) )", "obj1": 0.5492700729927007, "obj2": 0.41925691261892684}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( FirstVNF_Mem_Server ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( RCSe + ( RCSe + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) ) ) / RCSe )", "obj1": 0.5346715328467153, "obj2": 0.42499081631254737}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * MDR ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.382360172326697}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( MDR - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) ) / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7116788321167883, "obj2": 0.24262780345172047}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( Min( PN ,( Const * MRS ) ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUM * ( RCSe * MUC ) ) ,RCSe ) )", "obj1": 0.5894160583941606, "obj2": 0.3623677530431436}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server / Min( BR ,FirstVNF_Mem_Server ) ) ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + CS ) )", "obj1": 0.5638686131386861, "obj2": 0.387967776279393}, {"determining": "( ( MRS + Min( ( FirstVNF_CPU_Server / ARS ) ,( ( MDR / FirstVNF_RAM_Server ) / Min( ARS ,( PN / Min( MRS ,( Const - Const ) ) ) ) ) ) ) + Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),DDR ) )", "choosing": "( Max( ( MUM * CS ),( MUR / DS ) ) / ( ( CS / ( ( MUR * MLU ) * CS ) ) - ( ( MUC - Max( MUC,Min( Min( Min( MLU ,RCSe ) ,( RRSe * MUC ) ) ,Max( ( RCSe + RRSe ),( RMSe / DS ) ) ) ) ) / RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842026710138775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - ( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( ( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) * ( AMS / Max( ( MDR + AMS ),ARS ) ) ) + Max( FirstVNF_RAM,Max( DDR,AMS ) ) ),ARS ) ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( Max( DS,RMSe ) / MUC ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4399079851148542}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( AMS - ( ( ( AMS * ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,( ( MUR * RCSe ) + ( MUC * ( ( CS + Max( RRSe,RCSe ) ) + DS ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.39007744781001724}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM_Server ) ) ) - ( PN + ( ( FirstVNF_Mem * ( Max( RRS,PN ) - MRS ) ) * Min( FirstVNF_Mem_Server ,( BR / ARS ) ) ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( Min( CS ,RRSe ) / ( Min( ( ( DS * MUR ) / RRSe ) ,CS ) * Min( ( ( DS * MUR ) / RRSe ) ,CS ) ) ) ,RCSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48817210737829425}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( ( MRS / ( DDR / AMS ) ) / RRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - FirstVNF_CPU_Server )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( MLU - RCSe ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.9653284671532847, "obj2": 0.019539971289024002}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( CS * RCSe ) / Max( ( Min( Min( ( Min( ( DS / MUM ) ,MUR ) + MLU ) ,DS ) ,( Max( RRSe,MUC ) - MUM ) ) - RMSe ),Min( Max( RRSe,MUM ) ,DS ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "Min( Max( ( ( Min( ( RMSe + ( ( RRSe * DS ) + Min( MUC ,MUR ) ) ) ,MUM ) / RCSe ) * MUR ),RRSe ) ,( Max( MUR,DS ) / RMSe ) )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) ) ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Max( ARS,( Const * ( ACS * ( CRS + FirstVNF_CPU_Server ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( MDR,MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( RRSe * MLU ) ) ,( RRSe * MLU ) ) ) ,( RMSe + ( Min( MLU ,DS ) * MUC ) ) )", "obj1": 0.5, "obj2": 0.4571972947709037}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "( Min( BR ,MRS ) - Min( ( Min( FirstVNF_CPU_Server ,BR ) - ( MRS + FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( MUR * CS ) + ( MLU + MUM ) ) ) ,( Min( MLU ,MUM ) / ( ( ( ( MLU * ( ( RMSe / RRSe ) + ( RCSe * MLU ) ) ) * ( CS * Max( Max( RCSe,DS ),MUR ) ) ) - ( CS + Min( DS ,MUC ) ) ) * RCSe ) ) )", "obj1": 0.5492700729927007, "obj2": 0.41925691261892684}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( Min( AMS ,Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + Min( CS ,( RCSe * ( MUM * MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.531021897810219, "obj2": 0.42869912067245364}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( ( RMSe * CS ) ,MUR ) ) ,( ( MUR + Min( RCSe ,MLU ) ) - ( RRSe / ( MUC / Min( RCSe ,( Min( ( RCSe - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( MLU - CS ) - ( ( RCSe * ( ( RRSe + MUC ) * ( Min( MUC ,( MUC * MUR ) ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - ( MUR * ( Min( ( MUC * RMSe ) ,( RMSe + RRSe ) ) / MUR ) ) ) ,( ( Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) * DS ) + DS ) ) - RMSe ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ( Min( DDR ,( Const - ( ( ACS / CRS ) - BR ) ) ) + DDR ) + ( FirstVNF_RAM_Server * ( PN / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS - CS ),RRSe ) / ( Min( Min( ( ( ( CS + MUM ) + RCSe ) * ( ( MUR + RCSe ) * ( DS + ( RCSe - MUR ) ) ) ) ,RCSe ) ,CS ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - FirstVNF_Mem ),RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( ( RMSe + MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "43": [{"determining": "Min( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( ARS + FirstVNF_Mem_Server ) ) ) ,( Min( AMS ,FirstVNF_RAM_Server ) / DDR ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * ( Min( ( MUR / RMSe ) ,( MUR + RMSe ) ) / MUC ) ) ) ) ) ,Max( Max( ( ( MUC - MUM ) - MUC ),MUM ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( ( MDR + AMS ),ARS ),ARS ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( ( Max( CS,DS ) - ( ( ( RCSe - RMSe ) + RMSe ) / RCSe ) ) / ( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + Max( MRS,MDR ) ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( ( ( RMSe - ( ( MUR * RRSe ) * Max( RMSe,MUC ) ) ) * ( MLU * RCSe ) ) + DS ) + MUC ) ) )", "obj1": 0.8959854014598541, "obj2": 0.07329979006414065}, {"determining": "( Min( ( ( ( ACS / CRS ) - BR ) - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),ARS ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUC ) ,( MUR + RMSe ) ),MUC ) ) ) ) ) ,Max( Max( DS,( ( RMSe / MUM ) / ( RCSe / ( MUR - DS ) ) ) ),MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.41403199244248445}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + ( AMS * FirstVNF_RAM ) ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / RMSe ) * MUR ) - CS ) ) )", "obj1": 0.551094890510949, "obj2": 0.3993352771790833}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( ARS - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7171532846715328, "obj2": 0.23430897112896545}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( MDR - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) ) / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7116788321167883, "obj2": 0.24262780345172047}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( Min( PN ,( Const * MRS ) ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUM * ( RCSe * MUC ) ) ,RCSe ) )", "obj1": 0.5894160583941606, "obj2": 0.3623677530431436}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * MDR ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.382360172326697}, {"determining": "( ( MRS + Min( ( FirstVNF_CPU_Server / ARS ) ,( ( MDR / FirstVNF_RAM_Server ) / Min( ARS ,( PN / Min( MRS ,( Const - Const ) ) ) ) ) ) ) + Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),DDR ) )", "choosing": "( Max( ( MUM * CS ),( MUR / DS ) ) / ( ( CS / ( ( MUR * MLU ) * CS ) ) - ( ( MUC - Max( MUC,Min( Min( Min( MLU ,RCSe ) ,( RRSe * MUC ) ) ,Max( ( RCSe + RRSe ),( RMSe / DS ) ) ) ) ) / RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842026710138775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - ( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( ( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) * ( AMS / Max( ( MDR + AMS ),ARS ) ) ) + Max( FirstVNF_RAM,Max( DDR,AMS ) ) ),ARS ) ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( Max( DS,RMSe ) / MUC ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4399079851148542}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Max( ARS,( Const * ( ACS * ( FirstVNF_RAM + MDR ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( Min( MLU ,RRSe ) * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / MUR ) * MUR ) - CS ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3859991846290075}, {"determining": "( Max( ARS,( ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) * ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( Min( ( DS / MLU ) ,MUR ) * MUR ) - CS ) ) )", "obj1": 0.5602189781021898, "obj2": 0.39500675231147736}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM_Server ) ) ) - ( PN + ( ( FirstVNF_Mem * ( Max( RRS,PN ) - MRS ) ) * Min( FirstVNF_Mem_Server ,( BR / ARS ) ) ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( Min( CS ,RRSe ) / ( Min( ( ( DS * MUR ) / RRSe ) ,CS ) * Min( ( ( DS * MUR ) / RRSe ) ,CS ) ) ) ,RCSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48817210737829425}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( ( MRS / ( DDR / AMS ) ) / RRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - FirstVNF_CPU_Server )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( MLU - RCSe ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.9653284671532847, "obj2": 0.019539971289024002}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( CS * RCSe ) / Max( ( Min( Min( ( Min( ( DS / MUM ) ,MUR ) + MLU ) ,DS ) ,( Max( RRSe,MUC ) - MUM ) ) - RMSe ),Min( Max( RRSe,MUM ) ,DS ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Max( ARS,( Const * ( ACS * ( CRS + FirstVNF_CPU_Server ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( MDR,MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( RRSe * MLU ) ) ,( RRSe * MLU ) ) ) ,( RMSe + ( Min( MLU ,DS ) * MUC ) ) )", "obj1": 0.5, "obj2": 0.4571972947709037}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( AMS - ( ( ( AMS * ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,( ( MUR * RCSe ) + ( MUC * ( ( CS + Max( RRSe,RCSe ) ) + DS ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.39007744781001724}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( ( RMSe * CS ) ,MUR ) ) ,( ( MUR + Min( RCSe ,MLU ) ) - ( RRSe / ( MUC / Min( RCSe ,( Min( ( RCSe - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( MLU - CS ) - ( ( RCSe * ( ( RRSe + MUC ) * ( Min( MUC ,( MUC * MUR ) ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - ( MUR * ( Min( ( MUC * RMSe ) ,( RMSe + RRSe ) ) / MUR ) ) ) ,( ( Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) * DS ) + DS ) ) - RMSe ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) ) ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server / Min( BR ,FirstVNF_Mem_Server ) ) ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + CS ) )", "obj1": 0.5638686131386861, "obj2": 0.387967776279393}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ( Min( DDR ,( Const - ( ( ACS / CRS ) - BR ) ) ) + DDR ) + ( FirstVNF_RAM_Server * ( PN / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS - CS ),RRSe ) / ( Min( Min( ( ( ( CS + MUM ) + RCSe ) * ( ( MUR + RCSe ) * ( DS + ( RCSe - MUR ) ) ) ) ,RCSe ) ,CS ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - FirstVNF_Mem ),RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( ( RMSe + MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( ( ARS * FirstVNF_CPU ) * Max( BR,PN ) ) ) + ( ( ( FirstVNF_CPU - Min( ( ( MRS / RRS ) / CRS ) ,MDR ) ) / ( FirstVNF_CPU_Server + ( FirstVNF_CPU - Min( ( ( MRS / RRS ) / CRS ) ,MDR ) ) ) ) - ARS ) )", "choosing": "( MUC / ( ( RCSe - ( Max( Max( RCSe,RRSe ),Max( RRSe,MUM ) ) + DS ) ) * ( Max( Max( RCSe,RRSe ),Max( RRSe,MUM ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "44": [{"determining": "Min( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( ARS + FirstVNF_Mem_Server ) ) ) ,( Min( AMS ,FirstVNF_RAM_Server ) / DDR ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * ( Min( ( MUR / RMSe ) ,( MUR + RMSe ) ) / MUC ) ) ) ) ) ,Max( Max( ( ( MUC - MUM ) - MUC ),MUM ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( ARS + FirstVNF_Mem_Server ) ) ) ,( Min( AMS ,FirstVNF_RAM_Server ) / DDR ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * ( Min( ( MUR / RMSe ) ,( MUR + RMSe ) ) / MUC ) ) ) ) ) ,Max( Max( ( ( MUC - MUM ) - MUC ),MUM ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + Max( MRS,MDR ) ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( ( ( RMSe - ( ( MUR * RRSe ) * Max( RMSe,MUC ) ) ) * ( MLU * RCSe ) ) + DS ) + MUC ) ) )", "obj1": 0.8959854014598541, "obj2": 0.07329979006414065}, {"determining": "( Min( ( ( ( ACS / CRS ) - BR ) - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),ARS ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUC ) ,( MUR + RMSe ) ),MUC ) ) ) ) ) ,Max( Max( DS,( ( RMSe / MUM ) / ( RCSe / ( MUR - DS ) ) ) ),MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.41403199244248445}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + ( AMS * FirstVNF_RAM ) ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / RMSe ) * MUR ) - CS ) ) )", "obj1": 0.551094890510949, "obj2": 0.3993352771790833}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( ARS - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7171532846715328, "obj2": 0.23430897112896545}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ACS * FirstVNF_CPU_Server ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( ( DS * RRSe ) * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.6003649635036497, "obj2": 0.36008546849587825}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( MDR - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) ) / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7116788321167883, "obj2": 0.24262780345172047}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( Min( PN ,( Const * MRS ) ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUM * ( RCSe * MUC ) ) ,RCSe ) )", "obj1": 0.5894160583941606, "obj2": 0.3623677530431436}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * MDR ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.382360172326697}, {"determining": "( ( MRS + Min( ( FirstVNF_CPU_Server / ARS ) ,( ( MDR / FirstVNF_RAM_Server ) / Min( ARS ,( PN / Min( MRS ,( Const - Const ) ) ) ) ) ) ) + Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),DDR ) )", "choosing": "( Max( ( MUM * CS ),( MUR / DS ) ) / ( ( CS / ( ( MUR * MLU ) * CS ) ) - ( ( MUC - Max( MUC,Min( Min( Min( MLU ,RCSe ) ,( RRSe * MUC ) ) ,Max( ( RCSe + RRSe ),( RMSe / DS ) ) ) ) ) / RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842026710138775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - ( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( ( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) * ( AMS / Max( ( MDR + AMS ),ARS ) ) ) + Max( FirstVNF_RAM,Max( DDR,AMS ) ) ),ARS ) ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( Max( DS,RMSe ) / MUC ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4399079851148542}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( Max( ARS,( Const * ( ACS * ( FirstVNF_RAM + MDR ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( Min( MLU ,RRSe ) * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / MUR ) * MUR ) - CS ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3859991846290075}, {"determining": "( Max( ARS,( ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) * ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( Min( ( DS / MLU ) ,MUR ) * MUR ) - CS ) ) )", "obj1": 0.5602189781021898, "obj2": 0.39500675231147736}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM_Server ) ) ) - ( PN + ( ( FirstVNF_Mem * ( Max( RRS,PN ) - MRS ) ) * Min( FirstVNF_Mem_Server ,( BR / ARS ) ) ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( Min( CS ,RRSe ) / ( Min( ( ( DS * MUR ) / RRSe ) ,CS ) * Min( ( ( DS * MUR ) / RRSe ) ,CS ) ) ) ,RCSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48817210737829425}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( ( MRS / ( DDR / AMS ) ) / RRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - FirstVNF_CPU_Server )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( MLU - RCSe ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.9653284671532847, "obj2": 0.019539971289024002}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( CS * RCSe ) / Max( ( Min( Min( ( Min( ( DS / MUM ) ,MUR ) + MLU ) ,DS ) ,( Max( RRSe,MUC ) - MUM ) ) - RMSe ),Min( Max( RRSe,MUM ) ,DS ) ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) ) ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Max( ARS,( Const * ( ACS * ( CRS + FirstVNF_CPU_Server ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( MDR,MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( RRSe * MLU ) ) ,( RRSe * MLU ) ) ) ,( RMSe + ( Min( MLU ,DS ) * MUC ) ) )", "obj1": 0.5, "obj2": 0.4571972947709037}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( AMS - ( ( ( AMS * ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,( ( MUR * RCSe ) + ( MUC * ( ( CS + Max( RRSe,RCSe ) ) + DS ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.39007744781001724}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( ( RMSe * CS ) ,MUR ) ) ,( ( MUR + Min( RCSe ,MLU ) ) - ( RRSe / ( MUC / Min( RCSe ,( Min( ( RCSe - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( MLU - CS ) - ( ( RCSe * ( ( RRSe + MUC ) * ( Min( MUC ,( MUC * MUR ) ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - ( MUR * ( Min( ( MUC * RMSe ) ,( RMSe + RRSe ) ) / MUR ) ) ) ,( ( Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) * DS ) + DS ) ) - RMSe ) )", "obj1": 0.5875912408759124, "obj2": 0.3734573789845407}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server / Min( BR ,FirstVNF_Mem_Server ) ) ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + CS ) )", "obj1": 0.5638686131386861, "obj2": 0.387967776279393}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MUC / MLU ) ) ),( Min( CS ,( RCSe / RMSe ) ) / ( MUC * MLU ) ) ) ,MUM ) ) ) )", "obj1": 0.583941605839416, "obj2": 0.3807134409695132}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( ( MDR + AMS ),ARS ),ARS ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( ( Max( CS,DS ) - ( ( ( RCSe - RMSe ) + RMSe ) / RCSe ) ) / ( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ( Min( DDR ,( Const - ( ( ACS / CRS ) - BR ) ) ) + DDR ) + ( FirstVNF_RAM_Server * ( PN / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS - CS ),RRSe ) / ( Min( Min( ( ( ( CS + MUM ) + RCSe ) * ( ( MUR + RCSe ) * ( DS + ( RCSe - MUR ) ) ) ) ,RCSe ) ,CS ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - FirstVNF_Mem ),RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( ( RMSe + MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "45": [{"determining": "( Min( ( ( ( ACS / CRS ) - BR ) - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( ( Max( ( ( Min( FirstVNF_RAM ,Const ) / ACS ) / Max( MRS,( RRS * FirstVNF_RAM_Server ) ) ),AMS ) * ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_Mem ) ),ARS ) / AMS ) ) + Max( FirstVNF_RAM,Max( DDR,AMS ) ) ),ARS ) )", "choosing": "( ( Max( RCSe,MUM ) * ( ( Max( Min( ( ( CS * CS ) / RRSe ) ,( Max( CS,MUC ) + RCSe ) ),( CS - MLU ) ) + ( Min( CS ,( RRSe * ( DS * MUC ) ) ) * MUC ) ) + MUC ) ) / ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( ARS + FirstVNF_Mem_Server ) ) ) ,( Min( AMS ,FirstVNF_RAM_Server ) / DDR ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * ( Min( ( MUR / RMSe ) ,( MUR + RMSe ) ) / MUC ) ) ) ) ) ,Max( Max( ( ( MUC - MUM ) - MUC ),MUM ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( MUC ,( ( Max( ( ( RRSe * MUC ) + Max( ( MUM - ( RCSe / DS ) ),CS ) ),Max( ( RMSe - ( ( DS - CS ) + ( RMSe / MUR ) ) ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.35171851176885005}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + Max( MRS,MDR ) ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( ( ( RMSe - ( ( MUR * RRSe ) * Max( RMSe,MUC ) ) ) * ( MLU * RCSe ) ) + DS ) + MUC ) ) )", "obj1": 0.8959854014598541, "obj2": 0.07329979006414065}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * MDR ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.382360172326697}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( ARS - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7171532846715328, "obj2": 0.23430897112896545}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + ( AMS * FirstVNF_RAM ) ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / RMSe ) * MUR ) - CS ) ) )", "obj1": 0.551094890510949, "obj2": 0.3993352771790833}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( Min( ( ( ( ACS / CRS ) - BR ) - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),ARS ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUC ) ,( MUR + RMSe ) ),MUC ) ) ) ) ) ,Max( Max( DS,( ( RMSe / MUM ) / ( RCSe / ( MUR - DS ) ) ) ),MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.41403199244248445}, {"determining": "( ( RRS / Min( Max( ARS,( MDR * BR ) ) ,( BR / ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM_Server ) ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( Max( PN,( ( FirstVNF_CPU_Server - Const ) * Max( FirstVNF_Mem_Server,RRS ) ) ),MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( ( Min( ( MUC + MUR ) ,( MUR - MUR ) ) + ( ( MUM * MUC ) + Max( MUR,DS ) ) ) * MLU ) ) ,( ( RRSe + RRSe ) / ( MLU + ( Min( ( MUC + MUR ) ,( MUR - MUR ) ) + ( ( MUM * MUC ) + Max( MUR,DS ) ) ) ) ) ) ) ,( MUM * CS ) )", "obj1": 0.5383211678832117, "obj2": 0.4139552247407332}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( MDR - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) ) / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7116788321167883, "obj2": 0.24262780345172047}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( MRS + Min( ( FirstVNF_CPU_Server / ARS ) ,( ( MDR / FirstVNF_RAM_Server ) / Min( ARS ,( PN / Min( MRS ,( Const - Const ) ) ) ) ) ) ) + Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),DDR ) )", "choosing": "( Max( ( MUM * CS ),( MUR / DS ) ) / ( ( CS / ( ( MUR * MLU ) * CS ) ) - ( ( MUC - Max( MUC,Min( Min( Min( MLU ,RCSe ) ,( RRSe * MUC ) ) ,Max( ( RCSe + RRSe ),( RMSe / DS ) ) ) ) ) / RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842026710138775}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - ( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( ( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) * ( AMS / Max( ( MDR + AMS ),ARS ) ) ) + Max( FirstVNF_RAM,Max( DDR,AMS ) ) ),ARS ) ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( Max( DS,RMSe ) / MUC ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4399079851148542}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM_Server ) ) ) - ( PN + ( ( FirstVNF_Mem * ( Max( RRS,PN ) - MRS ) ) * Min( FirstVNF_Mem_Server ,( BR / ARS ) ) ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( Min( CS ,RRSe ) / ( Min( ( ( DS * MUR ) / RRSe ) ,CS ) * Min( ( ( DS * MUR ) / RRSe ) ,CS ) ) ) ,RCSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48817210737829425}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( ( MRS / ( DDR / AMS ) ) / RRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - FirstVNF_CPU_Server )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( MLU - RCSe ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.9653284671532847, "obj2": 0.019539971289024002}, {"determining": "( Max( ARS,( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / MUR ) * MUR ) + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / MUR ) * MUR ) - CS ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3859991846290075}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( Max( ARS,( ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) * ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( Min( ( DS / MLU ) ,MUR ) * MUR ) - CS ) ) )", "obj1": 0.5602189781021898, "obj2": 0.39500675231147736}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Max( ARS,( Const * ( ACS * ( CRS + FirstVNF_CPU_Server ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( MDR,MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( RRSe * MLU ) ) ,( RRSe * MLU ) ) ) ,( RMSe + ( Min( MLU ,DS ) * MUC ) ) )", "obj1": 0.5, "obj2": 0.4571972947709037}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( AMS - ( ( ( AMS * ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,( ( MUR * RCSe ) + ( MUC * ( ( CS + Max( RRSe,RCSe ) ) + DS ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.39007744781001724}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( ( RMSe * CS ) ,MUR ) ) ,( ( MUR + Min( RCSe ,MLU ) ) - ( RRSe / ( MUC / Min( RCSe ,( Min( ( RCSe - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) ) ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server / Min( BR ,FirstVNF_Mem_Server ) ) ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + CS ) )", "obj1": 0.5638686131386861, "obj2": 0.387967776279393}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + MUR ) ) / MUR ) * MUR ) - CS ) ) )", "obj1": 0.5602189781021898, "obj2": 0.39500675231147736}, {"determining": "( Max( ARS,( Const * ( ACS * ( FirstVNF_RAM + MDR ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( Min( MLU ,RRSe ) * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / MUR ) * MUR ) - CS ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3859991846290075}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( ARS + FirstVNF_Mem_Server ) ) ) ,( Min( AMS ,FirstVNF_RAM_Server ) / DDR ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * ( Min( ( MUR / RMSe ) ,( MUR + RMSe ) ) / MUC ) ) ) ) ) ,Max( Max( ( ( MUC - MUM ) - MUC ),MUM ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( ( MDR + AMS ),ARS ),ARS ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( ( Max( CS,DS ) - ( ( ( RCSe - RMSe ) + RMSe ) / RCSe ) ) / ( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ( Min( DDR ,( Const - ( ( ACS / CRS ) - BR ) ) ) + DDR ) + ( FirstVNF_RAM_Server * ( PN / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS - CS ),RRSe ) / ( Min( Min( ( ( ( CS + MUM ) + RCSe ) * ( ( MUR + RCSe ) * ( DS + ( RCSe - MUR ) ) ) ) ,RCSe ) ,CS ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - FirstVNF_Mem ),RRS ) ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + ACS ) ),Max( Const,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Min( ( RRS - PN ) ,Max( PN,CRS ) ) ) ) ) )", "choosing": "Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( ( RMSe + MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Const - Const ) ) + ( ( ( FirstVNF_CPU - Min( ( ( MRS / RRS ) / CRS ) ,MDR ) ) / ( FirstVNF_CPU_Server + Min( MRS ,( Const - Const ) ) ) ) - ARS ) )", "choosing": "( MUC / ( MUC / ( ( RCSe - ( Max( Max( RCSe,RRSe ),Max( RRSe,MUM ) ) + DS ) ) * ( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "46": [{"determining": "( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ACS ) ) - Max( MDR,( DDR + MDR ) ) ) - Max( ( ( Max( ( ( ( FirstVNF_RAM * Const ) / ACS ) / Max( MRS,( RRS * FirstVNF_RAM_Server ) ) ),AMS ) * ( Max( ( ( MRS * FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_Mem ) ),ARS ) / AMS ) ) + Max( FirstVNF_RAM,Max( DDR,Min( FirstVNF_Mem_Server ,ACS ) ) ) ),ARS ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,Min( MLU ,( MUM * ( Min( ( MUR / RMSe ) ,( MUR + RMSe ) ) / ( ( MUM + RMSe ) + Min( DS ,MUC ) ) ) ) ) ) ) ,Max( Max( ( ( MUC - MUM ) - MUC ),MUR ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ACS / CRS ) - BR ) - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( ( Max( ( ( Min( FirstVNF_RAM ,Const ) / ACS ) / Max( MRS,( RRS * FirstVNF_RAM_Server ) ) ),AMS ) * ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_Mem ) ),ARS ) / AMS ) ) + Max( FirstVNF_RAM,Max( DDR,AMS ) ) ),ARS ) )", "choosing": "( ( Max( RCSe,MUM ) * ( ( Max( Min( ( ( CS * CS ) / RRSe ) ,( Max( CS,MUC ) + RCSe ) ),( CS - MLU ) ) + ( Min( CS ,( RRSe * ( DS * MUC ) ) ) * MUC ) ) + MUC ) ) / ( MLU / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( DDR - Max( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + Min( FirstVNF_CPU ,( FirstVNF_CPU / ACS ) ) ) ) ),( BR * ( AMS - ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( RRSe / ( MLU + Max( MUR,( CS + ( Min( MUC ,MUM ) + MUM ) ) ) ) ) ,Min( Max( RRSe,Min( ( Max( RRSe,( MLU * ( MUR / MUR ) ) ) / MUC ) ,( Min( MUC ,MUM ) + MUM ) ) ) ,( RRSe * MUC ) ) )", "obj1": 0.39416058394160586, "obj2": 0.6754938772165322}, {"determining": "( Min( RRS ,PN ) - Min( FirstVNF_Mem_Server ,( ( MDR - Min( ( PN + BR ) ,MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "Min( ( MUM / ( MLU / ( MUM - MUR ) ) ) ,( RMSe * RCSe ) )", "obj1": 0.7518248175182481, "obj2": 0.14929499298329849}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - DDR ) ,MDR ) + ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUC + ( RMSe + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.718978102189781, "obj2": 0.20227709703983474}, {"determining": "( Min( PN ,Const ) + ( ( ( ( AMS - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( RCSe ,Min( RMSe ,RMSe ) )", "obj1": 0.843065693430657, "obj2": 0.0787789268180307}, {"determining": "( Min( PN ,Const ) + ( ( ( ( ( ( AMS / RRS ) + Min( ( MRS * DDR ) ,FirstVNF_RAM ) ) - RRS ) * FirstVNF_CPU_Server ) * AMS ) - ( MDR + AMS ) ) )", "choosing": "Min( ( MUR * Max( RMSe,( ( Max( RCSe,MLU ) + Min( MUC ,RCSe ) ) + DS ) ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.8102189781021898, "obj2": 0.09384809194523651}, {"determining": "( Min( MDR ,PN ) - MDR )", "choosing": "Min( ( RCSe / MUR ) ,( Min( ( MUC + ( ( RCSe / CS ) + Max( ( RCSe + RCSe ),MLU ) ) ) ,MUM ) * RMSe ) )", "obj1": 0.7846715328467153, "obj2": 0.10678264888905288}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( AMS - ( ( CRS - FirstVNF_Mem ) + ( ARS * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * Max( ( RMSe * CS ),Min( RRSe ,RMSe ) ) ) ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.6186131386861314, "obj2": 0.3166040755010503}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( MUC ,( ( Max( ( ( RRSe * MUC ) + Max( ( MUM - ( RCSe / DS ) ),CS ) ),Max( ( RMSe - ( ( DS - CS ) + ( RMSe / MUR ) ) ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.583941605839416, "obj2": 0.35171851176885005}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + Max( MRS,MDR ) ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( ( ( RMSe - ( ( MUR * RRSe ) * Max( RMSe,MUC ) ) ) * ( MLU * RCSe ) ) + DS ) + MUC ) ) )", "obj1": 0.8959854014598541, "obj2": 0.07329979006414065}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,( ( MLU - MUC ) * ( MUC * MUR ) ) ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - MUR ) - DS ) + RRSe ),DS ) )", "obj1": 0.6076642335766423, "obj2": 0.3384483287421581}, {"determining": "( Min( Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ,FirstVNF_CPU_Server ) - Max( AMS,Max( FirstVNF_CPU,Max( FirstVNF_Mem_Server,Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( MDR - ACS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Max( Min( RMSe ,MUC ),( ( MLU / Min( Min( ( ( MLU - MUC ) * ( MUC * MUR ) ) ,MUM ) ,( CS + RRSe ) ) ) - MUR ) ) ,Max( ( ( ( Min( Max( RRSe,( MLU - DS ) ) ,MUC ) - Min( Max( RRSe,( MLU - DS ) ) ,MUC ) ) - DS ) + RRSe ),DS ) )", "obj1": 0.6642335766423357, "obj2": 0.2903760252145748}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * MDR ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.5784671532846716, "obj2": 0.382360172326697}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.596600755261888}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,Min( ( ( ( MDR - Min( Max( ACS,MRS ) ,( FirstVNF_Mem / Const ) ) ) * RRS ) / ( ( ( ACS - ARS ) / BR ) * FirstVNF_Mem ) ) ,PN ) )", "choosing": "Max( Max( MUC,CS ),Min( ( MUC * RRSe ) ,Min( Min( MUR ,MUM ) ,( ( Min( MUC ,MLU ) / ( Min( RMSe ,MLU ) / CS ) ) / ( RMSe * MUM ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6244379798377326}, {"determining": "( Min( ( BR / MDR ) ,ACS ) - ( FirstVNF_RAM / AMS ) )", "choosing": "( ( RCSe + DS ) - Min( MLU ,Min( ( RMSe / RRSe ) ,Max( ( MUR - Min( ( Max( RRSe,MUR ) + DS ) ,( MUC / Max( MUR,RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.916058394160584, "obj2": 0.047885118531055385}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( ARS - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7171532846715328, "obj2": 0.23430897112896545}, {"determining": "Min( ( AMS / AMS ) ,Min( ( BR - ( Min( ( Min( Min( DDR ,MDR ) ,( ACS / ACS ) ) - ( ( FirstVNF_CPU - MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) ) ,Max( Max( ( MRS * ACS ),( BR * MRS ) ),( Min( DDR ,FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( RMSe - DS ) ,( ( RRSe * MUM ) + ( MUM * CS ) ) ) + Max( ( RRSe * RMSe ),( Min( RRSe ,( DS * ( RRSe / MUC ) ) ) / MUR ) ) ),Min( ( CS - RCSe ) ,Min( Min( MUM ,MUM ) ,( ( RMSe * RCSe ) + ( Min( CS ,RMSe ) / ( ( ( MUC / MUR ) * MLU ) * RMSe ) ) ) ) ) )", "obj1": 0.8978102189781022, "obj2": 0.06438571101148387}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + ( AMS * FirstVNF_RAM ) ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / RMSe ) * MUR ) - CS ) ) )", "obj1": 0.551094890510949, "obj2": 0.3993352771790833}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( ( AMS - ACS ) * ( FirstVNF_CPU + ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( Min( DS ,MUM ) - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5234797438240965}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "Min( ( MDR * ( Max( RRS,Min( DDR ,BR ) ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( ( ( MUM + DS ) / Min( DS ,MUM ) ) * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5067063562932712}, {"determining": "( Min( ( ( ( ACS / CRS ) - BR ) - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),ARS ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUC ) ,( MUR + RMSe ) ),MUC ) ) ) ) ) ,Max( Max( DS,( ( RMSe / MUM ) / ( RCSe / ( MUR - DS ) ) ) ),MUC ) )", "obj1": 0.5291970802919708, "obj2": 0.41403199244248445}, {"determining": "( ( RRS / Min( Max( ARS,( MDR * BR ) ) ,( BR / ( FirstVNF_RAM * Max( CRS,FirstVNF_RAM_Server ) ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( Max( PN,( ( FirstVNF_CPU_Server - Const ) * Max( FirstVNF_Mem_Server,RRS ) ) ),MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( ( Min( ( MUC + MUR ) ,( MUR - MUR ) ) + ( ( MUM * MUC ) + Max( MUR,DS ) ) ) * MLU ) ) ,( ( RRSe + RRSe ) / ( MLU + ( Min( ( MUC + MUR ) ,( MUR - MUR ) ) + ( ( MUM * MUC ) + Max( MUR,DS ) ) ) ) ) ) ) ,( MUM * CS ) )", "obj1": 0.5383211678832117, "obj2": 0.4139552247407332}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( Min( ( CS * ( MUR / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ,MLU ) - Min( ( CS + ( DS * ( RRSe * ( MUR + MLU ) ) ) ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( ( ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Min( ( ( MLU + ( RCSe * MUM ) ) * ( DS * RRSe ) ) ,RMSe ) ,( ( CS + Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.677007299270073, "obj2": 0.2817030963914912}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.6423357664233577, "obj2": 0.30003981444445355}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( AMS + FirstVNF_Mem ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RMSe / CS ) ) ) ) / RCSe )", "obj1": 0.5218978102189781, "obj2": 0.43529950603519646}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - Max( Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ),Max( AMS,( FirstVNF_Mem_Server - MDR ) ) ) ) + ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ) ) ) - ( MDR * Const ) )", "choosing": "Min( ( MUC + Min( DS ,( RMSe * CS ) ) ) ,Max( ( MUR + CS ),( ( MUC / MUM ) * ( MUC * RCSe ) ) ) )", "obj1": 0.708029197080292, "obj2": 0.2523560807520571}, {"determining": "Min( ( FirstVNF_RAM_Server + ACS ) ,( Max( ARS,FirstVNF_RAM ) - ( ACS * AMS ) ) )", "choosing": "Max( ( ( DS / Min( Min( MUM ,MLU ) ,MUC ) ) / RMSe ),( MUM - Max( MLU,( Min( MUC ,MLU ) / ( CS * MUC ) ) ) ) )", "obj1": 0.5072992700729927, "obj2": 0.44225744163260194}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( Const / MRS ) ) - ( Min( MDR ,( DDR - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( FirstVNF_CPU_Server / ( RRS - ARS ) ) ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( MUM * ( MLU * MUM ) ) ) ) ,Min( RCSe ,( RCSe * CS ) ) )", "obj1": 0.9397810218978102, "obj2": 0.030028813727154338}, {"determining": "( Min( ( ( ( Const - ( RRS - FirstVNF_CPU_Server ) ) / Const ) / ( FirstVNF_Mem_Server + AMS ) ) ,FirstVNF_RAM_Server ) * Max( CRS,MDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),RRSe )", "obj1": 0.4051094890510949, "obj2": 0.630977817745778}, {"determining": "( ( MDR - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * FirstVNF_CPU_Server ) ) ,Max( MRS,ARS ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( Min( Min( MUR ,( MUC / MLU ) ) ,Min( CS ,RCSe ) ) / MLU ) ) ,Min( CS ,RCSe ) )", "obj1": 0.7116788321167883, "obj2": 0.24262780345172047}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( Min( ( DDR - Min( Min( RRS ,MDR ) ,MRS ) ) ,MDR ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( ( RRSe - MUC ) + ( MUM * CS ) ) ) ,Min( RCSe ,CS ) )", "obj1": 0.698905109489051, "obj2": 0.2634686596626734}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * DDR ) )", "choosing": "Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "( ( RRS + ( ( ARS * FirstVNF_CPU ) * Max( BR,PN ) ) ) + ( ( ( FirstVNF_CPU - Min( ( ( MRS / RRS ) / CRS ) ,MDR ) ) / ( FirstVNF_CPU_Server + Min( MRS ,( ( MRS / RRS ) - Const ) ) ) ) - ARS ) )", "choosing": "( MUC / ( ( RCSe - ( Max( Max( RCSe,Max( Max( RCSe,RRSe ),Max( RRSe,MUM ) ) ),Max( RRSe,MUM ) ) + DS ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.9543795620437956, "obj2": 0.02933218856554777}, {"determining": "Min( Max( ( Min( FirstVNF_CPU_Server ,DDR ) / FirstVNF_Mem ),MDR ) ,( ( Max( CRS,Max( ( ( AMS + AMS ) + ARS ),( ARS * CRS ) ) ) / ( Min( Max( PN,ARS ) ,Max( ARS,FirstVNF_RAM ) ) - ( FirstVNF_CPU + Min( ( MDR / ARS ) ,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU_Server,DDR ) ) )", "choosing": "Max( ( RCSe - ( MUM - Max( Max( DS,( MUC / CS ) ),( RMSe / ( ( RMSe * ( MUC * DS ) ) / RRSe ) ) ) ) ),RMSe )", "obj1": 0.6861313868613139, "obj2": 0.27705136479237363}, {"determining": "( ( MRS + Min( ( FirstVNF_CPU_Server / ARS ) ,( ( MDR / FirstVNF_RAM_Server ) / Min( ARS ,( PN / Min( MRS ,( Const - Const ) ) ) ) ) ) ) + Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),DDR ) )", "choosing": "( Max( ( MUM * CS ),( MUR / DS ) ) / ( ( CS / ( ( MUR * MLU ) * CS ) ) - ( ( MUC - Max( MUC,Min( Min( Min( MLU ,RCSe ) ,( RRSe * MUC ) ) ,Max( ( RCSe + RRSe ),( RMSe / DS ) ) ) ) ) / RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842026710138775}, {"determining": "( ( DDR / FirstVNF_Mem ) + ( Const * Min( ( FirstVNF_RAM * Max( Min( ( MDR * MRS ) ,BR ),CRS ) ) ,CRS ) ) )", "choosing": "( ( MLU + CS ) / ( MUM * ( MUM * ( Min( RCSe ,MLU ) * ( MUR / RMSe ) ) ) ) )", "obj1": 0.45072992700729925, "obj2": 0.5361426545630305}, {"determining": "( ( ( ( MDR + ( ( BR / MRS ) + PN ) ) - ACS ) * BR ) - ( FirstVNF_CPU_Server - RRS ) )", "choosing": "Min( Min( RMSe ,MUR ) ,Min( ( MUC + ( MLU - CS ) ) ,( MUR - CS ) ) )", "obj1": 0.9306569343065694, "obj2": 0.03469847991323014}, {"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - ( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( ( ( ( MRS * ( RRS * FirstVNF_Mem_Server ) ) * ( AMS / Max( ( MDR + AMS ),ARS ) ) ) + Max( FirstVNF_RAM,Max( DDR,AMS ) ) ),ARS ) ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( Max( DS,RMSe ) / MUC ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 0.5200729927007299, "obj2": 0.4399079851148542}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) + Const ) * Min( AMS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_RAM ),( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( RMSe - MUC ),MUR ) / ( ( MLU - MUM ) + DS ) )", "obj1": 0.5054744525547445, "obj2": 0.45698066426401396}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / ( Const - RRS ) ) - ( ( MDR / ( FirstVNF_RAM_Server / ( ARS - Max( ARS,CRS ) ) ) ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC + ( CS + ( Max( MUR,( DS - ( RRSe - ( DS / MUC ) ) ) ) * CS ) ) ) ,MUC )", "obj1": 0.6916058394160584, "obj2": 0.2719089658431095}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( DS / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4470802919708029, "obj2": 0.5398217646876619}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( MDR * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) ,RMSe ) + RCSe ) ) )", "obj1": 0.9251824817518248, "obj2": 0.044746907533653985}, {"determining": "( Min( BR ,( ( MDR * RRS ) - FirstVNF_Mem_Server ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( MUR * RCSe ) + RMSe ) ),( ( MUC + ( RCSe + RCSe ) ) / ( MUC / ( RCSe + RCSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5676977247573435}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + Min( DDR ,( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + ( RCSe + RCSe ) ) / ( ( MUC + RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.48722627737226276, "obj2": 0.4757087303421771}, {"determining": "Min( ( Min( ( Max( Const,AMS ) / ( FirstVNF_Mem_Server - BR ) ) ,( ( FirstVNF_CPU_Server * PN ) + BR ) ) * FirstVNF_RAM_Server ) ,( MDR / ( ( PN + FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * CS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.43795620437956206, "obj2": 0.5656709011813464}, {"determining": "( FirstVNF_CPU_Server - ( Max( ( FirstVNF_RAM_Server - ( Max( Const,RRS ) - Const ) ),AMS ) / ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe - Max( MLU,MLU ) ) ,( ( MLU + ( CS * ( ( RRSe - CS ) / ( ( RRSe * RRSe ) - ( MUM / MUR ) ) ) ) ) - Min( Min( MUM ,MUM ) ,MUR ) ) )", "obj1": 0.40145985401459855, "obj2": 0.640914946411787}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( MDR + ( FirstVNF_CPU_Server - Max( MDR,( FirstVNF_CPU_Server - Min( ( CRS / FirstVNF_Mem ) ,AMS ) ) ) ) ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,( ( MUM - ( ( ( RRSe * MUM ) - Min( ( MUM / MUR ) ,RMSe ) ) / MUR ) ) + CS ) )", "obj1": 0.9762773722627737, "obj2": 0.012545240952134523}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM_Server ) ) ) - ( PN + ( ( FirstVNF_Mem * ( Max( RRS,PN ) - MRS ) ) * Min( FirstVNF_Mem_Server ,( BR / ARS ) ) ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( Min( CS ,RRSe ) / ( Min( ( ( DS * MUR ) / RRSe ) ,CS ) * Min( ( ( DS * MUR ) / RRSe ) ,CS ) ) ) ,RCSe ) ) )", "obj1": 0.4781021897810219, "obj2": 0.48817210737829425}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( FirstVNF_CPU / CRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( RMSe - MUM ),( ( CS + MLU ) / RCSe ) ) ) / RMSe ) + MUC ) )", "obj1": 0.6970802919708029, "obj2": 0.2679551985242326}, {"determining": "( Min( BR ,( ( MDR * ( MRS + FirstVNF_CPU_Server ) ) - Const ) ) + Max( ARS,BR ) )", "choosing": "( ( MUC + MUC ) / Max( ( CS - ( ( Max( Min( Max( RRSe,MUC ) ,RRSe ),RMSe ) * RCSe ) + RMSe ) ),MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5744980054660686}, {"determining": "( ( ( ( ( ( PN / DDR ) + ( ( MRS / ( DDR / AMS ) ) / RRS ) ) - Min( FirstVNF_RAM ,BR ) ) + MRS ) - FirstVNF_RAM ) - FirstVNF_CPU_Server )", "choosing": "Min( MUC ,( ( Max( ( MUC / RRSe ),Max( ( MLU - RCSe ),MLU ) ) / RMSe ) + MUC ) )", "obj1": 0.9653284671532847, "obj2": 0.019539971289024002}, {"determining": "( Max( ARS,( Const * ( ACS * ( FirstVNF_RAM + MDR ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( Min( MLU ,RRSe ) * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / MUR ) * MUR ) - CS ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3859991846290075}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + MUM ) )", "obj1": 0.9288321167883211, "obj2": 0.04188413937794775}, {"determining": "( ( CRS * AMS ) + ( ACS / Min( ( FirstVNF_CPU_Server - Max( ( ( Const - BR ) + ( ( MDR / AMS ) / DDR ) ),( CRS * AMS ) ) ) ,CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUC / DS ) / ( MUR - RCSe ) ) + MUC ) )", "obj1": 0.9708029197080292, "obj2": 0.016902632313957885}, {"determining": "( Max( ARS,( ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) * ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( Min( ( DS / MLU ) ,MUR ) * MUR ) - CS ) ) )", "obj1": 0.5602189781021898, "obj2": 0.39500675231147736}, {"determining": "Min( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server + Const ) + FirstVNF_CPU ) ) ,( ( Min( BR ,Min( RRS ,Max( Max( ACS,CRS ),Max( ( FirstVNF_RAM * FirstVNF_CPU ),MRS ) ) ) ) - MRS ) / ( ( Max( ACS,MRS ) + ( ( Max( FirstVNF_Mem_Server,DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "Max( Min( ( Max( ( RMSe + MUC ),( ( RRSe - ( MLU - MUR ) ) + MLU ) ) * RRSe ) ,RMSe ),( MUR - ( CS / ( Max( DS,MUC ) + ( RRSe * RMSe ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "Max( Min( Min( ( AMS / ACS ) ,( FirstVNF_Mem_Server + MRS ) ) ,( ( FirstVNF_RAM + ACS ) * Min( MRS ,MRS ) ) ),( Max( AMS,Min( MRS ,MRS ) ) * ( ( Const + AMS ) / ( AMS / ACS ) ) ) )", "choosing": "( DS + ( ( ( MUM / MUC ) - ( DS * RMSe ) ) + ( Min( MUM ,RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.48215891473897454}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + ( RCSe + ( RCSe + RCSe ) ) ) ) ) / RCSe )", "obj1": 0.49635036496350365, "obj2": 0.46043523026492866}, {"determining": "( Max( ARS,( FirstVNF_RAM + RRS ) ) - Min( Max( BR,Max( FirstVNF_Mem,Max( MDR,CRS ) ) ) ,MRS ) )", "choosing": "Min( ( Min( MUM ,RMSe ) + ( ( ( ( Min( ( MLU / MLU ) ,MUR ) + ( Min( MLU ,RRSe ) + ( DS - RCSe ) ) ) / MUR ) * MUR ) - CS ) ) ,Min( ( ( ( ( DS / RMSe ) + MLU ) - MUM ) + MUC ) ,Min( MUR ,( ( CS / ( ( CS + MLU ) * RMSe ) ) + RRSe ) ) ) )", "obj1": 0.4762773722627737, "obj2": 0.4979165924017995}, {"determining": "( ( ( FirstVNF_RAM_Server + RRS ) + ( FirstVNF_Mem + MRS ) ) + ( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( CS + CS ) ) ) + ( MUC + ( Max( Min( MUR ,MUC ),Max( MUR,( DS - RRSe ) ) ) * MLU ) ) ) + ( ( Min( MLU ,( ( Max( DS,RRSe ) + RCSe ) + MUR ) ) + Max( Min( CS ,Max( MUM,MLU ) ),( Max( MUC,( MLU - CS ) ) / ( MLU / MUC ) ) ) ) / MUC ) ) / RCSe )", "obj1": 0.4908759124087591, "obj2": 0.46961726816089033}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( MRS,ARS ) ) - ( ( ( FirstVNF_CPU_Server / ( RRS + ARS ) ) - BR ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( ( ( CS + ( ( DS + MUM ) - Min( ( ( ( MUR * DS ) + ( MUR / MUR ) ) - MLU ) ,( MLU / ( ( CS / DS ) * ( MLU - RRSe ) ) ) ) ) ) + ( MLU / Max( ( RRSe + Min( RMSe ,Max( RRSe,MUR ) ) ),( CS + ( MUR / RCSe ) ) ) ) ) ,( MUC * Min( MUR ,MUC ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( RMSe / Min( DS ,MUC ) ),( Max( MLU,MLU ) - Min( ( Max( ( RMSe / ( DS / MUC ) ),Max( DS,DS ) ) * ( ( ( Min( RMSe ,DS ) - ( CS / RMSe ) ) * MLU ) - MUC ) ) ,MUC ) ) )", "obj1": 0.7864963503649635, "obj2": 0.10554313834139925}, {"determining": "Min( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) ) ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Max( ARS,( Const * ( ACS * ( CRS + FirstVNF_CPU_Server ) ) ) ) - ( CRS - Min( FirstVNF_CPU ,( Max( MDR,MRS ) - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( ( CS * ( RRSe * MLU ) ) ,( RRSe * MLU ) ) ) ,( RMSe + ( Min( MLU ,DS ) * MUC ) ) )", "obj1": 0.5, "obj2": 0.4571972947709037}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( ( ( DDR / BR ) * FirstVNF_CPU ) * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( ( ( ( MUM - CS ) + RRSe ) - RRSe ) - RMSe ) )", "obj1": 0.9890510948905109, "obj2": 0.002211895672750104}, {"determining": "Min( ( AMS + FirstVNF_Mem_Server ) ,( ( ( Const * BR ) - FirstVNF_CPU ) / DDR ) )", "choosing": "( ( ( DS * RMSe ) + RRSe ) / Max( MLU,RRSe ) )", "obj1": 0.9963503649635036, "obj2": 0.0011961131924059431}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe ) + ( MUC + ( RCSe + ( RCSe + RCSe ) ) ) ) / RCSe )", "obj1": 0.49452554744525545, "obj2": 0.4653490181378548}, {"determining": "( ( AMS - ( ( ( AMS * ( Min( RRS ,( ACS / ARS ) ) * Min( ( FirstVNF_Mem + MRS ) ,Const ) ) ) - ( ( ARS - BR ) / ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - ( ( MDR + FirstVNF_Mem ) + ( MDR - ( DDR - DDR ) ) ) )", "choosing": "Min( Min( MUR ,( MUC / MLU ) ) ,( ( MUR * RCSe ) + ( MUC * ( ( CS + Max( RRSe,RCSe ) ) + DS ) ) ) )", "obj1": 0.5620437956204379, "obj2": 0.39007744781001724}, {"determining": "Min( ( RRS / ( ( ( ACS - MRS ) + ( ( ( FirstVNF_Mem_Server / DDR ) - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / CRS ) ) ,Max( FirstVNF_CPU_Server,( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - DS ) + Min( ( RMSe * CS ) ,MUR ) ) ,( ( MUR + Min( RCSe ,MLU ) ) - ( RRSe / ( MUC / Min( RCSe ,( Min( ( RCSe - DS ) ,MLU ) / RRSe ) ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5507399137292703}, {"determining": "( ( ( DDR / BR ) * FirstVNF_CPU ) + ( ( ( ACS - ( ( RRS * Max( ACS,PN ) ) / PN ) ) + ( ( Const * FirstVNF_Mem ) / Min( FirstVNF_Mem ,DDR ) ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - ( ( RCSe * ( ( DS + CS ) * ( ( ( MUM - CS ) + RRSe ) - RRSe ) ) ) / RMSe ) ) / ( Min( ( RCSe - RMSe ) ,( ( DS * Min( Max( Max( MUC,RRSe ),MUR ) ,MLU ) ) + MLU ) ) - RMSe ) )", "obj1": 0.4416058394160584, "obj2": 0.559325701775406}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "( ( CRS * ACS ) - ( Min( ( PN + ACS ) ,MDR ) - ( ( PN + FirstVNF_RAM ) - ARS ) ) )", "choosing": "Min( Min( ( ( MUM / MUC ) * ( ( ( MLU / Max( MUC,MUR ) ) * ( Min( RRSe ,( MUC * MUM ) ) + Max( ( RMSe / RMSe ),( MUM + DS ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.9817518248175182, "obj2": 0.012395105476536286}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) + ( MDR + FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC + ( MUC + ( RCSe + RCSe ) ) ) / RCSe )", "obj1": 0.4744525547445255, "obj2": 0.4983063085342554}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem - ACS ) + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - Min( ( DS - Min( MUM ,RRSe ) ) ,CS ) ) / ( ( MUR * MUM ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.4865164821148491}, {"determining": "Min( ( MDR * ( Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) / CRS ) ) ,( Max( FirstVNF_Mem,Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_Mem ) ) ) - Min( AMS ,( Min( ( MRS / FirstVNF_CPU_Server ) ,( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) ) / Const ) ) ) )", "choosing": "Max( ( DS - MUR ),Max( ( RCSe - MLU ),Min( ( ( CS - RRSe ) / ( ( MUR * CS ) * MUR ) ) ,RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.4991578605592719}, {"determining": "( Min( FirstVNF_Mem_Server ,BR ) - ( ( MDR / BR ) * BR ) )", "choosing": "Min( ( MUC + ( DS / MUC ) ) ,Max( ( ( Max( MUM,RMSe ) - MUC ) - ( RCSe - ( Max( DS,CS ) + RRSe ) ) ),( RCSe * ( ( ( Max( MLU,CS ) / ( MUC + CS ) ) / DS ) + MLU ) ) ) )", "obj1": 0.9671532846715328, "obj2": 0.01752600475888308}, {"determining": "( ( AMS - ( ( Min( ( ( Const + FirstVNF_RAM ) + ( ACS * ( ACS * FirstVNF_CPU_Server ) ) ) ,Max( ARS,MRS ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + ARS ) ) - ( DDR * ( ARS / CRS ) ) ) / ( DDR + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_Mem / AMS ) ) ) - Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "Min( Max( MUR,MUR ) ,Min( Min( MUR ,RMSe ) ,( MUM / Min( Max( Max( ( RMSe / MUR ),Min( MUR ,( MLU / MUC ) ) ),( MUR * ( MLU + ( MUC + RCSe ) ) ) ) ,MUM ) ) ) )", "obj1": 0.958029197080292, "obj2": 0.023714413164034664}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server / Min( BR ,FirstVNF_Mem_Server ) ) ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + CS ) )", "obj1": 0.5638686131386861, "obj2": 0.387967776279393}, {"determining": "Min( ( ARS + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Max( MLU,DS ),( ( Min( RRSe ,Min( ( DS - MLU ) ,MLU ) ) + RRSe ) / ( MLU * RRSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN / ARS ) + ( Max( MDR,( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_CPU_Server ,CRS ) ) * Const ) ) - ( ( ( Const - ARS ) / ( CRS - MRS ) ) + FirstVNF_Mem ) ) ) ) + ( MDR + FirstVNF_Mem ) )", "choosing": "( ( MUC + ( MUM / Min( Max( Min( MUR ,MUR ),MUR ) ,Max( Max( RRSe,MUR ),RRSe ) ) ) ) / MUC )", "obj1": 0.48175182481751827, "obj2": 0.48733408829618946}, {"determining": "( Max( ARS,( Const * ( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( RMSe + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + MUR ) ) / MUR ) * MUR ) - CS ) ) )", "obj1": 0.5602189781021898, "obj2": 0.39500675231147736}, {"determining": "( Max( ARS,( ACS * Min( ( FirstVNF_CPU + RRS ) ,MRS ) ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( RRSe * MLU ) ,( ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / MUR ) * MUR ) + MUM ) + ( ( ( Max( Min( ( DS / MLU ) ,MUR ),( Min( MLU ,RRSe ) + Max( CS,RMSe ) ) ) / MUR ) * MUR ) - CS ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3859991846290075}, {"determining": "Min( ( ( FirstVNF_Mem_Server - BR ) + Max( RRS,FirstVNF_Mem ) ) ,Max( DDR,Min( BR ,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RMSe ) ),Max( Max( Min( ( RCSe * DS ) ,MUR ),Min( Min( ( RRSe / ( ( MUM - RCSe ) / MUM ) ) ,MUC ) ,RMSe ) ),MLU ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( ( PN + Const ) - FirstVNF_RAM_Server ) - ( AMS * Max( Min( Max( MRS,FirstVNF_RAM ) ,FirstVNF_CPU ),CRS ) ) )", "choosing": "( ( MUC + ( Min( RCSe ,Min( CS ,MUR ) ) + ( MLU - RMSe ) ) ) / ( ( ( RMSe + MUC ) * MLU ) * MUC ) )", "obj1": 0.9835766423357665, "obj2": 0.010996208346037761}, {"determining": "( ( ARS / RRS ) - ( ( ( FirstVNF_RAM_Server + MRS ) / ( PN / FirstVNF_Mem ) ) + MDR ) )", "choosing": "Min( MUC ,( MUR / Min( ( CS * ( RRSe * MLU ) ) ,( ( RRSe + RRSe ) / Min( MLU ,( MUM + ( ( MUM * MUC ) + Max( MLU,DS ) ) ) ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR + ( ( ARS - FirstVNF_RAM ) * AMS ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( CS ,MUM ) + ( Min( MUM ,RMSe ) + RCSe ) ) )", "obj1": 0.9872262773722628, "obj2": 0.002895553990319387}, {"determining": "Min( Max( ARS,( MRS * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( Min( ( ( MUC + MUM ) * ( ( MUR * ( ( ( RRSe - DS ) * RRSe ) + Max( ( RRSe / RMSe ),( MUM + MLU ) ) ) ) * MUM ) ) ,RCSe ) ,Min( CS ,RCSe ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) + ( ( ( Max( ACS,ACS ) * ( FirstVNF_RAM_Server + Min( ARS ,MRS ) ) ) * BR ) / BR ) ) )", "choosing": "( Min( ( ( Min( ( ( MUR - Max( MUR,MUR ) ) - ( CS - ( DS / MUM ) ) ) ,Max( ( ( MUC - MLU ) / ( DS - MUM ) ),MUC ) ) * MUR ) + DS ) ,( MUM - ( RCSe + RMSe ) ) ) - ( DS / DS ) )", "obj1": 0.4927007299270073, "obj2": 0.4679742546796864}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( ARS + FirstVNF_Mem_Server ) ) ) ,( Min( AMS ,FirstVNF_RAM_Server ) / DDR ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * ( Min( ( MUR / RMSe ) ,( MUR + RMSe ) ) / MUC ) ) ) ) ) ,Max( Max( ( ( MUC - MUM ) - MUC ),MUM ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( FirstVNF_RAM_Server,( ARS + FirstVNF_Mem_Server ) ) ) ,( Min( AMS ,FirstVNF_RAM_Server ) / DDR ) )", "choosing": "Min( Min( Min( MUM ,( DS / MLU ) ) ,Min( CS ,( MLU * ( MUM * ( Min( ( MUR / RMSe ) ,( MUR + RMSe ) ) / MUC ) ) ) ) ) ,Max( Max( ( ( MUC - MUM ) - MUC ),MUM ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ( ACS / CRS ) - BR ),FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( ( MDR + AMS ),ARS ),ARS ) )", "choosing": "Min( Max( Max( DS,( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ),CS ) ,Min( ( ( ( Max( CS,DS ) - ( ( ( RCSe - RMSe ) + RMSe ) / RCSe ) ) / ( ( RMSe * RRSe ) / ( RCSe - ( MUR + DS ) ) ) ) * ( RCSe - ( MUR - Min( ( Max( DS,RMSe ) - CS ) ,( Max( CS,RMSe ) + MUM ) ) ) ) ) ,Min( CS ,( MLU * ( MUM * Max( Min( ( RMSe / MUR ) ,RRSe ),MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) - ( ( FirstVNF_CPU - ( ARS - FirstVNF_Mem ) ) + ARS ) )", "choosing": "Min( ( ( DS - RMSe ) + Min( ( RMSe * CS ) ,MUR ) ) ,Min( ( MUM / RCSe ) ,( ( MUR + DS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,( ( Min( DDR ,( Const - ( ( ACS / CRS ) - BR ) ) ) + DDR ) + ( FirstVNF_RAM_Server * ( PN / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS - CS ),RRSe ) / ( Min( Min( ( ( ( CS + MUM ) + RCSe ) * ( ( MUR + RCSe ) * ( DS + ( RCSe - MUR ) ) ) ) ,RCSe ) ,CS ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}]}