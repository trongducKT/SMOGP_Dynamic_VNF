{"1": [{"determining": "( ( DDR + DDR ) - ( FirstVNF_RAM - MRS ) )", "choosing": "( ( CS + MLU ) - ( MUR + CS ) )", "obj1": 0.7489539748953975, "obj2": 0.2833365572320112}, {"determining": "Min( Max( ( Max( FirstVNF_Mem,DDR ) / ( BR - FirstVNF_RAM ) ),( Max( ARS,FirstVNF_CPU ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) ,Max( ( ( FirstVNF_CPU - FirstVNF_CPU ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ),( ( MDR - Const ) / ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( ( RRSe * ( RRSe + RCSe ) ) / MUM ) * ( ( ( MUR * RCSe ) + RMSe ) - Min( MUM ,( MUR / RCSe ) ) ) )", "obj1": 0.6861924686192469, "obj2": 0.28227231538662606}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) / ( Const + ARS ) )", "choosing": "( ( MUC * RCSe ) - Max( DS,MLU ) )", "obj1": 0.7092050209205021, "obj2": 0.2725526082887516}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU ) * ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + RRSe ) ,Max( DS,RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.2679852649203505}, {"determining": "Min( Min( ARS ,DDR ) ,( BR * PN ) )", "choosing": "( ( MUC + MLU ) + ( MLU - MUC ) )", "obj1": 0.7364016736401674, "obj2": 0.25768882737754023}, {"determining": "Min( ( Const * MDR ) ,( ACS + Const ) )", "choosing": "Min( ( RCSe + RRSe ) ,Max( MUR,DS ) )", "obj1": 0.7050209205020921, "obj2": 0.2659337407888656}, {"determining": "( Max( MRS,CRS ) - ( RRS * DDR ) )", "choosing": "Max( Max( MUR,MLU ),( MUC * CS ) )", "obj1": 0.5983263598326359, "obj2": 0.28483337112547774}, {"determining": "( ( MRS - FirstVNF_Mem ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( DS - CS ) )", "obj1": 0.6757322175732218, "obj2": 0.27609791613144846}, {"determining": "( ( FirstVNF_RAM + ( BR / ARS ) ) / ( ACS / DDR ) )", "choosing": "( ( RCSe + RRSe ) + ( Min( MUM ,RCSe ) - MUC ) )", "obj1": 0.7343096234309623, "obj2": 0.2724080929210335}, {"determining": "Max( ( DDR + FirstVNF_RAM ),( RRS * AMS ) )", "choosing": "( Min( MUC ,RMSe ) - ( MUC * DS ) )", "obj1": 0.6924686192468619, "obj2": 0.28429590047097647}, {"determining": "( ( PN * ( DDR * FirstVNF_RAM ) ) + ( ACS * DDR ) )", "choosing": "( ( ( MUM + MUR ) * MUM ) * Max( CS,CS ) )", "obj1": 0.7175732217573222, "obj2": 0.2644882194391889}, {"determining": "( ( RRS / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) )", "choosing": "Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) )", "obj1": 0.7112970711297071, "obj2": 0.25886721993346773}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( PN + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / Min( DS ,CS ) )", "obj1": 0.7928870292887029, "obj2": 0.17751784832506762}, {"determining": "( Min( FirstVNF_RAM_Server ,AMS ) + ( DDR * CRS ) )", "choosing": "( ( MLU * RCSe ) * ( MLU + RMSe ) )", "obj1": 0.7384937238493724, "obj2": 0.2787178566400772}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,DS ) / ( MLU + MUC ) )", "obj1": 0.8284518828451883, "obj2": 0.12833015925013772}, {"determining": "Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( CRS + CRS ) )", "choosing": "( Min( RCSe ,CS ) - ( CS - MUR ) )", "obj1": 0.7154811715481172, "obj2": 0.26237338488705625}, {"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "Max( Max( RRSe,DS ),Max( CS,MLU ) )", "obj1": 0.7552301255230126, "obj2": 0.2674960417738424}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( Max( CS,MLU ) * ( RCSe - MUM ) )", "obj1": 0.7510460251046025, "obj2": 0.2698915408965095}, {"determining": "( ( Const * DDR ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MLU ) * ( CS * RRSe ) )", "obj1": 0.6841004184100419, "obj2": 0.27004986295886}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - ( DDR - MDR ) )", "choosing": "Max( ( RCSe + RMSe ),( MUR * MUR ) )", "obj1": 0.7071129707112971, "obj2": 0.27447965445087724}, {"determining": "Max( ( FirstVNF_RAM_Server + MDR ),( FirstVNF_RAM / PN ) )", "choosing": "( ( RMSe / MUR ) + Min( RCSe ,CS ) )", "obj1": 0.7071129707112971, "obj2": 0.26890958367830936}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( MUM * DS ) / Min( MUM ,RMSe ) )", "obj1": 0.7573221757322176, "obj2": 0.2107583346504994}, {"determining": "Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) )", "choosing": "( ( MUR + MUC ) / ( RRSe * MUC ) )", "obj1": 0.6757322175732218, "obj2": 0.2808491893500115}, {"determining": "Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ),( FirstVNF_Mem * MDR ) )", "choosing": "( ( MUC + DS ) + ( CS - MUC ) )", "obj1": 0.7280334728033473, "obj2": 0.26702255231653493}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( DS - CS ) )", "obj1": 0.897489539748954, "obj2": 0.09925302851049352}, {"determining": "Max( ( DDR + ( BR - Max( ACS,MDR ) ) ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) )", "choosing": "( Min( MUM ,( Max( ( ( RMSe - Min( MUC ,( RRSe + RCSe ) ) ) * ( CS * RCSe ) ),Max( MUR,RRSe ) ) * DS ) ) * ( RMSe / MLU ) )", "obj1": 0.694560669456067, "obj2": 0.2740808887691363}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) + Max( RRS,MRS ) )", "choosing": "( ( RCSe * MUM ) * ( MLU / RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.26392384367923827}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 0.7447698744769874, "obj2": 0.2649309983726443}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,DS ) ,( MLU * RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.21908776109971975}, {"determining": "Min( Min( Const ,Const ) ,Max( Const,PN ) )", "choosing": "Max( ( MUC + MLU ),Max( RRSe,MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.29340541077589927}, {"determining": "( ( CRS + DDR ) / Max( FirstVNF_RAM,ACS ) )", "choosing": "( ( MUM / RCSe ) + Min( CS ,MUR ) )", "obj1": 0.7280334728033473, "obj2": 0.2912654567068716}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe - RMSe ) - ( RCSe * MUC ) )", "obj1": 0.6443514644351465, "obj2": 0.2834815894049904}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,Max( ACS,MDR ) )", "choosing": "( ( MLU + RCSe ) - ( CS - MUC ) )", "obj1": 0.6757322175732218, "obj2": 0.27982596083116446}, {"determining": "Min( ( PN + ARS ) ,( FirstVNF_Mem_Server - PN ) )", "choosing": "( Min( RCSe ,MLU ) / ( RMSe * MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.28871448018252543}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( CS / CS ) + Max( ( DS + DS ),RMSe ) )", "obj1": 0.6757322175732218, "obj2": 0.252744780250064}, {"determining": "Min( ( BR + ( FirstVNF_Mem_Server / MDR ) ) ,Min( RRS ,( AMS * ACS ) ) )", "choosing": "( ( Min( RRSe ,DS ) - Max( CS,RCSe ) ) + ( ( CS + CS ) - ( MLU - MUR ) ) )", "obj1": 0.694560669456067, "obj2": 0.2566126631286205}, {"determining": "Min( Min( AMS ,Max( ACS,PN ) ) ,Min( CRS ,MDR ) )", "choosing": "( Max( RRSe,( DS / MUC ) ) + ( MUM + MUC ) )", "obj1": 0.6631799163179917, "obj2": 0.26424126523724223}, {"determining": "Max( Max( Min( MDR ,DDR ),Min( RRS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / AMS ) / ( RRS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR + MLU ) / ( RRSe * MLU ) ) + ( ( MUR - MLU ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7050209205020921, "obj2": 0.2659397147063984}, {"determining": "Max( ( RRS + ( FirstVNF_CPU_Server / AMS ) ),Max( DDR,CRS ) )", "choosing": "( ( ( DS / MUC ) + ( DS * MUC ) ) * ( ( RCSe * RRSe ) - ( MUM - RMSe ) ) )", "obj1": 0.7531380753138075, "obj2": 0.23333065899569835}, {"determining": "( Max( Min( FirstVNF_RAM ,ARS ),( Const + DDR ) ) * Max( AMS,DDR ) )", "choosing": "Min( ( DS / ( MLU - MUR ) ) ,( RCSe * DS ) )", "obj1": 0.6317991631799164, "obj2": 0.2698182979069747}, {"determining": "( ( Max( CRS,PN ) - ( Const * MDR ) ) + ( ( FirstVNF_Mem_Server / BR ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) )", "choosing": "( ( MUR - MUR ) - ( MUC + MLU ) )", "obj1": 0.7133891213389121, "obj2": 0.269867407246044}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 0.7343096234309623, "obj2": 0.2510631720262889}, {"determining": "Max( Min( FirstVNF_CPU ,( FirstVNF_RAM / CRS ) ),( FirstVNF_CPU - Max( DDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,RRSe ) - ( MUR - ( CS + MUC ) ) ) + Max( Min( RMSe ,MUC ),( CS + DS ) ) )", "obj1": 0.7196652719665272, "obj2": 0.2691691509186493}, {"determining": "Min( ( Min( RRS ,FirstVNF_RAM ) + Max( AMS,ARS ) ) ,( Max( RRS,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) )", "choosing": "( ( Max( RMSe,MUC ) * DS ) + Min( RRSe ,CS ) )", "obj1": 0.7196652719665272, "obj2": 0.25107871766776374}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) + ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS - AMS ) ) )", "choosing": "Max( ( Min( MUR ,MLU ) * ( DS / RMSe ) ),( Min( Max( RCSe,RRSe ) ,RMSe ) * Max( RCSe,RCSe ) ) )", "obj1": 0.6443514644351465, "obj2": 0.2898353399259459}, {"determining": "( ( ( AMS / MRS ) / ( FirstVNF_RAM - PN ) ) * Max( Min( AMS ,BR ),( FirstVNF_RAM + ACS ) ) )", "choosing": "Min( ( CS / RMSe ) ,( Max( MUR,CS ) / RCSe ) )", "obj1": 0.7322175732217573, "obj2": 0.2707098255604349}, {"determining": "Max( ( BR + PN ),( ( RRS / FirstVNF_RAM ) - BR ) )", "choosing": "Max( Max( CS,( DS / MLU ) ),( MUM * DS ) )", "obj1": 0.7405857740585774, "obj2": 0.28392141672086835}, {"determining": "( Min( ( RRS / MRS ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( ( CS - Min( MLU ,( ( RMSe / MUR ) - MUC ) ) ) ,DS ) ) * Min( Max( MUM,MUC ) ,Min( DS ,MUM ) ) )", "obj1": 0.6715481171548117, "obj2": 0.2830548511384849}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) + Min( AMS ,AMS ) )", "choosing": "Max( ( ( DS - MLU ) - ( RMSe - RRSe ) ),( Min( MUC ,RMSe ) - Min( MUM ,DS ) ) )", "obj1": 0.7405857740585774, "obj2": 0.2782440459057505}, {"determining": "( ( FirstVNF_Mem * Const ) - Min( Const ,( PN / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MLU ,DS ) ,Max( RMSe,RCSe ) ) * Min( ( MUR - DS ) ,Max( MUR,DS ) ) )", "obj1": 0.7238493723849372, "obj2": 0.24626658233571092}, {"determining": "( Max( DDR,Max( ( ( FirstVNF_CPU + Min( Const ,BR ) ) * FirstVNF_CPU ),( MRS + CRS ) ) ) + ( FirstVNF_Mem_Server - BR ) )", "choosing": "( Min( ( CS + CS ) ,( ( ( ( CS / ( Max( RMSe,RMSe ) * Min( MLU ,MLU ) ) ) + ( DS - DS ) ) + MUM ) * RCSe ) ) / Max( Min( CS ,MLU ),( MLU / RCSe ) ) )", "obj1": 0.6569037656903766, "obj2": 0.2660641457281467}, {"determining": "Min( Min( ( ACS * BR ) ,( CRS / BR ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 0.7489539748953975, "obj2": 0.26013860185042875}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + AMS ) * Max( FirstVNF_CPU,( BR * BR ) ) )", "choosing": "( ( Max( Min( MUM ,CS ),( ( Max( RMSe,MUC ) * ( RMSe - MUM ) ) / MLU ) ) * RCSe ) - Min( ( MUM + RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 0.7175732217573222, "obj2": 0.27428626966202946}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( FirstVNF_RAM_Server + PN ),FirstVNF_RAM ),Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUM - MUC ) ,Min( MUR ,MLU ) ) ,( ( MUC + RMSe ) / Min( RCSe ,MUR ) ) )", "obj1": 0.7112970711297071, "obj2": 0.2542938343337202}, {"determining": "( ( BR / Const ) - Max( RRS,( RRS * MRS ) ) )", "choosing": "( Max( ( MUM / RMSe ),( RMSe - DS ) ) / Max( ( MUC + RRSe ),( DS + RMSe ) ) )", "obj1": 0.7489539748953975, "obj2": 0.274183406465253}, {"determining": "Min( ( ( MDR - FirstVNF_Mem ) + ( FirstVNF_CPU * CRS ) ) ,( ( FirstVNF_Mem_Server / MDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC / DS ) * Min( RMSe ,MUC ) ),( ( MUC / DS ) + Min( RMSe ,CS ) ) )", "obj1": 0.7928870292887029, "obj2": 0.22393754566050925}, {"determining": "Max( ( FirstVNF_Mem * ( PN / FirstVNF_RAM_Server ) ),( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( MUM / MUR ),( CS * CS ) ) / ( ( MUC - CS ) + ( MUR + MUR ) ) )", "obj1": 0.7050209205020921, "obj2": 0.26774121574913073}, {"determining": "( ( ( Const / ARS ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) - ( Min( Const ,RRS ) / ( FirstVNF_CPU * ACS ) ) )", "choosing": "( ( ( MUR / RRSe ) * ( MUM + CS ) ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 0.696652719665272, "obj2": 0.27211626644175674}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) / ( Const * FirstVNF_RAM_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) - ( Const * Const ) ) )", "choosing": "( ( Max( MLU,RCSe ) * ( MUM + CS ) ) * Min( Min( CS ,MUC ) ,( MUR - MUC ) ) )", "obj1": 0.7447698744769874, "obj2": 0.22604830360174688}, {"determining": "Min( ( DDR - MRS ) ,Min( DDR ,( MDR - MDR ) ) )", "choosing": "( Max( Max( RCSe,MUR ),( DS + MLU ) ) + Min( ( RRSe + MLU ) ,( MUC * MUR ) ) )", "obj1": 0.7112970711297071, "obj2": 0.24528501192023588}, {"determining": "( ( ( BR + FirstVNF_Mem ) - BR ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / RCSe ) ,( RMSe / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8556485355648535, "obj2": 0.12592665992985308}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ARS ) )", "choosing": "( Max( ( RMSe * RRSe ),RCSe ) * ( Min( MUM ,DS ) + Min( MUC ,MUR ) ) )", "obj1": 0.7364016736401674, "obj2": 0.2526021608207498}, {"determining": "Max( Max( ( FirstVNF_RAM - ARS ),Max( FirstVNF_RAM,BR ) ),( ( FirstVNF_Mem / CRS ) / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "Min( Min( ( MUC + RCSe ) ,( MLU + MLU ) ) ,Max( Min( CS ,MUR ),( RCSe * DS ) ) )", "obj1": 0.7071129707112971, "obj2": 0.2806440964348279}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_Mem + PN ) - ( MRS * FirstVNF_Mem ) ) ,( ( Const / PN ) * Max( FirstVNF_CPU_Server,DDR ) ) ) ,( ( ( MDR - BR ) * ( FirstVNF_RAM + ARS ) ) / ( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "( ( RCSe / DS ) + Max( Min( MLU ,MUR ),RRSe ) )", "obj1": 0.7217573221757322, "obj2": 0.3089159076074632}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - RRS ),( Const - Const ) ) + ( ( MDR * PN ) + Min( FirstVNF_RAM ,MDR ) ) ) / ( Min( ( MDR / ARS ) ,Min( DDR ,BR ) ) - ( ( CRS / FirstVNF_RAM ) * ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Min( MUM ,MUR ),( MLU - MUC ) ) + Max( ( MUR - DS ),Max( RRSe,MUC ) ) ) + ( ( ( MUC + CS ) - ( DS - RMSe ) ) * Max( Min( RMSe ,MUM ),( MUM + RCSe ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.24188758981089573}, {"determining": "Min( ( ( ( BR * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) + FirstVNF_RAM ) ,( DDR / FirstVNF_Mem ) )", "choosing": "( Min( Max( DS,MLU ) ,( CS / RRSe ) ) * ( MUR - ( MUM - MLU ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2708199811180141}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( MRS * CRS ) ) + ( Min( CRS ,FirstVNF_Mem_Server ) + Min( CRS ,FirstVNF_CPU ) ) ),Max( ( ( FirstVNF_CPU_Server - CRS ) - Max( Const,FirstVNF_Mem ) ),( ( FirstVNF_CPU_Server / MRS ) * ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MUR / DS ) ,( DS / MUR ) ) - Max( ( RMSe * CS ),( RRSe / RRSe ) ) ) - ( ( ( MUM - MUR ) * Max( MLU,RMSe ) ) * Min( ( DS * MUM ) ,( CS + MUR ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.2370138793964792}, {"determining": "Max( Max( ( ( MDR / FirstVNF_CPU ) * Max( FirstVNF_RAM,ACS ) ),Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( MRS / Const ) ) ),( Min( ( BR * RRS ) ,( FirstVNF_CPU * PN ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( DDR - CRS ) ) ) )", "choosing": "( ( DS - MUR ) - Min( MUC ,( Min( RCSe ,CS ) - ( RRSe + MLU ) ) ) )", "obj1": 0.7196652719665272, "obj2": 0.25736715983781955}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "Max( ( Min( Max( AMS,AMS ) ,Max( ACS,FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,MRS ) - ( FirstVNF_Mem_Server - ARS ) ) ),Max( Min( ( Const - BR ) ,( FirstVNF_RAM_Server / MDR ) ),( ( CRS / BR ) - ( Const * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( DS + RCSe ) + ( MUC * MUR ) ) / ( ( RMSe / MUC ) * Min( MLU ,MUR ) ) ) * ( ( Max( DS,RCSe ) + ( MUC + DS ) ) - ( ( MUC / RCSe ) * Max( RMSe,MLU ) ) ) )", "obj1": 0.7384937238493724, "obj2": 0.2676711505605875}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_CPU ) )", "choosing": "Min( Max( ( Max( MUC,MUM ) * ( RMSe / DS ) ),( Max( RRSe,MLU ) / Min( MUR ,MUR ) ) ) ,( ( Min( RCSe ,RCSe ) / Min( RCSe ,MUR ) ) * Max( ( RRSe / MUM ),( RRSe + MUC ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.2682127294813911}, {"determining": "( ( FirstVNF_CPU_Server - AMS ) / Min( ( ( CRS / RRS ) * ( RRS * MDR ) ) ,( RRS + Const ) ) )", "choosing": "( Max( MUC,DS ) / Max( Max( Max( MLU,DS ),RCSe ),( ( RMSe - DS ) / MLU ) ) )", "obj1": 0.700836820083682, "obj2": 0.26951608431492186}, {"determining": "( ( BR + Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * Max( Max( Const,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( Max( Max( ( MUR - RCSe ),MUM ),RCSe ),( ( MUM / RCSe ) / ( RRSe / ( CS / MUR ) ) ) )", "obj1": 0.7322175732217573, "obj2": 0.27235320286698156}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7364016736401674, "obj2": 0.16109188751865958}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR / FirstVNF_CPU ) ,( PN / Const ) ) * Min( Min( ACS ,CRS ) ,( Const + ARS ) ) ) * Max( ( ( ARS / BR ) - Max( BR,DDR ) ),( ( CRS / MDR ) / Min( AMS ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( Min( MUR ,MUM ) ,( DS * RRSe ) ) - ( ( MUR + MUM ) * Max( MUC,MUC ) ) ) ,( Max( ( MUM * DS ),( MLU - DS ) ) * ( Max( RCSe,RMSe ) - ( RRSe - MUC ) ) ) )", "obj1": 0.7175732217573222, "obj2": 0.2683674564625124}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) * ( BR * MRS ) )", "choosing": "( Min( Min( Min( RRSe ,MUC ) ,( MUC - RCSe ) ) ,( Max( MUC,MUC ) / Min( RRSe ,MUC ) ) ) / ( ( ( MUM + RMSe ) + Min( CS ,MLU ) ) / ( ( MUM / MLU ) * ( RMSe - MUM ) ) ) )", "obj1": 0.7489539748953975, "obj2": 0.21633293636611842}, {"determining": "( ( ( ( ARS + RRS ) * ( CRS * CRS ) ) + ( ( RRS + ARS ) + Min( CRS ,DDR ) ) ) / ( ( ( DDR / FirstVNF_RAM ) / ( ACS + ARS ) ) + ( ( CRS / PN ) / ( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( RMSe ,MUM ) - ( MUR * MLU ) ) ,( ( RCSe * CS ) * ( MUM / MUR ) ) ) / ( Min( ( RCSe - RCSe ) ,Max( MUM,RMSe ) ) / ( ( RCSe / RMSe ) + Min( MUR ,RCSe ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.07325179114997701}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,ARS ) ) )", "choosing": "( ( DS - RCSe ) - ( DS - MUR ) )", "obj1": 0.7112970711297071, "obj2": 0.2535941658791899}, {"determining": "Max( ( MRS + FirstVNF_Mem_Server ),( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) / ( RMSe - RRSe ) ) * ( ( RCSe * MLU ) / ( DS + RMSe ) ) ) * ( ( Min( CS ,RRSe ) * ( RRSe + CS ) ) - ( Max( MUC,MUR ) - ( MLU - RMSe ) ) ) )", "obj1": 0.7133891213389121, "obj2": 0.2739943286405852}, {"determining": "( Min( FirstVNF_RAM_Server ,RRS ) / Max( MRS,DDR ) )", "choosing": "Max( ( MUR - ( MUR + CS ) ),( DS * MUR ) )", "obj1": 0.7238493723849372, "obj2": 0.23479272868668133}, {"determining": "Max( Max( ( ( MRS - CRS ) * ( FirstVNF_Mem_Server / ARS ) ),( ( FirstVNF_RAM * ACS ) + Min( FirstVNF_Mem ,BR ) ) ),( ( ARS / ARS ) * DDR ) )", "choosing": "( Max( ( ( MLU + MUM ) / ( CS / CS ) ),( ( DS * MUM ) * ( MUR + MUR ) ) ) + Min( Min( ( CS + MUC ) ,Max( CS,RCSe ) ) ,( ( MUC * RCSe ) * Max( MLU,DS ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.26651631249310737}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,Max( Min( AMS ,MRS ),FirstVNF_CPU_Server ) ) * Max( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,Const ),( FirstVNF_Mem / ARS ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 0.6715481171548117, "obj2": 0.27159622625113133}, {"determining": "Max( ( BR / ( ( DDR / FirstVNF_Mem_Server ) + RRS ) ),( RRS - MRS ) )", "choosing": "Max( ( Min( ( DS + MLU ) ,( MUR / CS ) ) + ( ( MLU * MUM ) * ( RMSe + MLU ) ) ),Min( ( Max( MUR,MLU ) - ( MLU - DS ) ) ,Max( Max( MUC,MUC ),Max( RCSe,DS ) ) ) )", "obj1": 0.7112970711297071, "obj2": 0.25993416170298617}, {"determining": "( Max( Min( PN ,MDR ),MRS ) * Max( Min( ( ( ( ( Max( Const,FirstVNF_RAM ) + ARS ) + CRS ) - AMS ) / Const ) ,RRS ),( ( DDR / FirstVNF_Mem_Server ) / ( Max( ARS,Max( ARS,( FirstVNF_CPU_Server * DDR ) ) ) / CRS ) ) ) )", "choosing": "Min( ( MUC / Min( MUM ,MUC ) ) ,Min( ( ( RMSe / CS ) / RRSe ) ,Min( ( ( ( ( ( CS / CS ) * MLU ) + ( CS * MUC ) ) * ( Max( MUR,( RRSe * MLU ) ) + ( Min( DS ,RCSe ) * MUM ) ) ) * MUR ) ,Max( DS,MUC ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.26703170591496916}, {"determining": "( Max( ( Min( ARS ,RRS ) / Min( FirstVNF_RAM_Server ,Min( PN ,( Max( Min( PN ,ARS ),( CRS + FirstVNF_RAM_Server ) ) * Max( RRS,Const ) ) ) ) ),Max( FirstVNF_RAM,Min( FirstVNF_Mem ,MRS ) ) ) + ( CRS / BR ) )", "choosing": "Min( ( Max( ( Max( RCSe,( DS + CS ) ) + Min( RRSe ,CS ) ),Max( CS,Min( RCSe ,RCSe ) ) ) / Max( RCSe,Max( ( RRSe / MUM ),MUM ) ) ) ,Max( RRSe,MUR ) )", "obj1": 0.6317991631799164, "obj2": 0.2744829039071023}, {"determining": "Min( ( Const / ( DDR - RRS ) ) ,Max( Min( ( AMS * Const ) ,( DDR / ( Const + Const ) ) ),FirstVNF_Mem ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU - MLU ) ,Min( Min( MUM ,RMSe ) ,RRSe ) ) ),( RCSe + RCSe ) ) ,Max( ( DS + MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) * ( Min( RMSe ,( ( ( RRSe * MUC ) / MUC ) + ( MUM * ( DS * RMSe ) ) ) ) + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28614917399150097}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ARS ,AMS ) + Max( ACS,FirstVNF_RAM_Server ) ) / ( ( DDR * AMS ) + ( MDR - FirstVNF_RAM_Server ) ) ) / ( Min( Min( DDR ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server * PN ) ) / ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( Min( CS ,DS ) - ( MUC + MUM ) ) * Max( Max( RRSe,RRSe ),( MUC / CS ) ) ) + Min( Max( ( MUR - RMSe ),( MUR / MUR ) ) ,( Max( RCSe,MUM ) - ( CS - RMSe ) ) ) )", "obj1": 0.7698744769874477, "obj2": 0.2507363902296892}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / FirstVNF_CPU_Server ) ) ) - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.2525460281400707}, {"determining": "( Min( Const ,( BR + ( CRS * FirstVNF_CPU ) ) ) * Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Min( ( CS * CS ) ,( MUR + DS ) ),( Max( MUC,RCSe ) / ( MUM / MUM ) ) ) ,( ( ( DS / MUC ) / ( RRSe * DS ) ) + ( ( RCSe / DS ) - ( CS / RRSe ) ) ) )", "obj1": 0.7154811715481172, "obj2": 0.26237114140301077}], "2": [{"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( DDR - RRS ) ) ,Max( Min( ( AMS * Const ) ,( DDR / ( Const + Const ) ) ),FirstVNF_Mem ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU - MLU ) ,Min( Min( MUM ,RMSe ) ,RRSe ) ) ),( RCSe + RCSe ) ) ,Max( ( DS + MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) * ( Min( RMSe ,( ( ( RRSe * MUC ) / MUC ) + ( MUM * ( DS * RMSe ) ) ) ) + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28614917399150097}, {"determining": "( ( PN * ( ( RRS + MRS ) + ( Min( ARS ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,MRS ) ) ) ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( RCSe + RCSe ) / Max( ( MUM / Max( ( DS * ( MLU + RRSe ) ),CS ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.05916866220109674}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( MUR + MUC ) / ( RRSe * MUC ) )", "obj1": 0.891213389121339, "obj2": 0.09158084432995564}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - ( PN + FirstVNF_Mem ) ) * ( FirstVNF_RAM / DDR ) )", "choosing": "Max( Min( RCSe ,RCSe ),( RCSe / ( RCSe + RCSe ) ) )", "obj1": 0.8263598326359832, "obj2": 0.15121223831934452}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 0.7552301255230126, "obj2": 0.15474728284566758}, {"determining": "( ( ( ( ARS + RRS ) * ( CRS * CRS ) ) + ( ( RRS + ARS ) + Min( CRS ,DDR ) ) ) / ( ( ( DDR / FirstVNF_RAM ) / ( ACS + ARS ) ) + ( ( CRS / PN ) / ( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( RMSe ,MUM ) - ( MUR * MLU ) ) ,( ( RCSe * CS ) * ( MUM / MUR ) ) ) / ( Min( ( RCSe - RCSe ) ,Max( MUM,RMSe ) ) / ( ( RCSe / RMSe ) + Min( MUR ,RCSe ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.07325179114997701}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( CRS + CRS ) ) )", "choosing": "( ( Min( RCSe ,CS ) - ( CS - MUR ) ) / ( MLU + MUC ) )", "obj1": 0.8577405857740585, "obj2": 0.1129944665006377}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 0.7259414225941423, "obj2": 0.1985663321850669}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7364016736401674, "obj2": 0.16109188751865958}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,DS ) / ( MLU + MUC ) )", "obj1": 0.8284518828451883, "obj2": 0.12833015925013772}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,DS ) ,( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) * RRSe ) )", "obj1": 0.7133891213389121, "obj2": 0.20020156902279074}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / FirstVNF_RAM_Server ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( Max( Min( FirstVNF_RAM ,ARS ),( Const + DDR ) ) * ( ( MDR / ARS ) / ( PN / FirstVNF_RAM ) ) )", "choosing": "( ( ( DS / MUC ) + ( DS * MUC ) ) * ( ( RCSe * RRSe ) - ( MUM - RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.22765550346299457}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * Min( Max( FirstVNF_CPU,DDR ) ,Max( ACS,MDR ) ) )", "choosing": "( ( CS / CS ) + Max( ( ( ( MLU + RCSe ) - ( CS - MUC ) ) + DS ),RMSe ) )", "obj1": 0.6799163179916318, "obj2": 0.2431361524378098}, {"determining": "( ( ( BR + FirstVNF_Mem ) - BR ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / RCSe ) ,( RMSe / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8556485355648535, "obj2": 0.12592665992985308}, {"determining": "( ( ( ( ARS + RRS ) * ( CRS * CRS ) ) + ( ( RRS + ARS ) + Min( CRS ,DDR ) ) ) / ( MRS + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( RMSe ,MUM ) - MLU ) ,( ( RCSe * CS ) * ( MUM / MUR ) ) ) / ( Min( ( RCSe - RCSe ) ,Max( MUM,RMSe ) ) / ( ( RCSe / RMSe ) + Min( MUR ,RCSe ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.273901733590103}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( Max( Min( FirstVNF_RAM ,ARS ),( ( RRS + ( FirstVNF_CPU_Server / AMS ) ) + DDR ) ) * ( ( MDR / ARS ) / ( PN / FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( MLU,MUR ) / DS ) ,( RCSe * RRSe ) )", "obj1": 0.6192468619246861, "obj2": 0.2701082440932677}, {"determining": "( Max( Const,ARS ) / ( ( ( PN / MDR ) + ( Min( PN ,Max( ( MDR / ( ARS + MRS ) ),( ( MDR * FirstVNF_CPU ) - MRS ) ) ) / RRS ) ) - PN ) )", "choosing": "( Min( Min( MUC ,MUR ) ,( MUC + ( ( ( Max( Max( RMSe,MUR ),MUM ) + Min( RMSe ,( CS - RCSe ) ) ) - MUR ) - MLU ) ) ) / ( ( ( CS + CS ) * Min( ( RCSe * ( ( Max( RCSe,MUM ) * MUC ) - CS ) ) ,Min( MLU ,( ( ( MUR - MUC ) * Max( MLU,RMSe ) ) / MUM ) ) ) ) + DS ) )", "obj1": 0.6380753138075314, "obj2": 0.2564147543551402}, {"determining": "( ( ( BR + MDR ) - BR ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( Max( Max( RCSe,MUR ),( DS + MLU ) ) + Min( ( RRSe + MLU ) ,( MUC * MUR ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9937238493723849, "obj2": 0.00398940031003426}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,DS ) ,( MLU * RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.21908776109971975}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,DS ) ,( MLU * RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.21908776109971975}, {"determining": "Max( ( ( Min( RRS ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM_Server,MRS ) - ( FirstVNF_Mem_Server - ARS ) ) ),Max( Min( ( Const - BR ) ,( FirstVNF_RAM_Server / MDR ) ),( ( CRS / BR ) - ( Const * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( DS + RCSe ) + ( MUC * MUR ) ) / ( ( RMSe / MUC ) * Min( MLU ,MUR ) ) ) * ( ( Max( DS,RCSe ) + ( MUC + DS ) ) - ( Max( ( Max( MUC,MUM ) * ( RMSe / DS ) ),( Max( RRSe,MLU ) / Min( MUR ,MUR ) ) ) * Max( RMSe,MLU ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.2452174677343827}, {"determining": "( ( ( ( PN / MRS ) * AMS ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( ( ( DS - RCSe ) - ( MLU - CS ) ),MUC ) ) )", "obj1": 0.7384937238493724, "obj2": 0.15954196698822223}, {"determining": "Min( ( ( DDR / FirstVNF_Mem ) + FirstVNF_RAM ) ,( DDR / FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUR / DS ) ,( DS / MUR ) ) - Max( ( RMSe * CS ),( RRSe / RRSe ) ) ) - ( ( ( MUM - MUR ) * Max( MLU,RMSe ) ) * Min( ( DS * MUM ) ,( CS + MUR ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.2549963094689875}, {"determining": "Max( Max( ( ( MRS - CRS ) * ( FirstVNF_Mem_Server / FirstVNF_CPU ) ),( ( FirstVNF_RAM * ACS ) + Min( FirstVNF_Mem ,BR ) ) ),( Max( Min( BR ,ARS ),( MDR * MRS ) ) - ( ( CRS / AMS ) / ( BR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.26175502859525934}, {"determining": "( Max( MRS,CRS ) - ( RRS * DDR ) )", "choosing": "Max( Max( MUR,MLU ),( MUC * CS ) )", "obj1": 0.5983263598326359, "obj2": 0.28483337112547774}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / FirstVNF_CPU_Server ) ) ) - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.2525460281400707}, {"determining": "Min( Max( ( ( RRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * Min( ARS ,FirstVNF_CPU_Server ) ),DDR ) ,Max( ACS,MDR ) )", "choosing": "( ( ( CS / CS ) + Max( ( DS + DS ),RMSe ) ) - ( CS - MUC ) )", "obj1": 0.6610878661087866, "obj2": 0.254572073836363}, {"determining": "Max( Max( ( ( MRS - CRS ) * ( FirstVNF_Mem_Server / FirstVNF_CPU ) ),( ( FirstVNF_RAM * ACS ) + Min( FirstVNF_Mem ,BR ) ) ),( Max( Min( BR ,ARS ),( MDR * MRS ) ) - ( ( CRS / AMS ) / ( BR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.26175502859525934}, {"determining": "( ( MRS - FirstVNF_Mem ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "Max( Max( MUR,MLU ),( MUC * CS ) )", "obj1": 0.5983263598326359, "obj2": 0.28483337112547774}, {"determining": "( ( ( BR + FirstVNF_Mem ) - BR ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / RCSe ) ,( RMSe / MUC ) ) / Min( Max( MUM,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.8556485355648535, "obj2": 0.12592665992985308}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Const ) - ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( Min( MLU ,( RMSe - RRSe ) ) ,Max( RMSe,RCSe ) ) * Min( ( MUR - DS ) ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( MDR + Const ) )", "choosing": "( ( CS - CS ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( Min( Min( ( ACS * BR ) ,( CRS / BR ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / ARS ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( ( MUR / RRSe ) * CS ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUC + RCSe ) ,( MLU + MLU ) ) ,Max( Min( CS ,MUR ),( RCSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - FirstVNF_RAM_Server )", "choosing": "Min( Max( ( Max( MUC,MUM ) * ( RMSe / DS ) ),( Max( RRSe,MLU ) / Min( MUR ,MUR ) ) ) ,( ( Min( RCSe ,RCSe ) / Min( RCSe ,MUR ) ) * ( ( ( ( DS + RCSe ) + ( MUC * MUR ) ) / ( ( RMSe / MUC ) * Min( MLU ,MUR ) ) ) * ( ( Max( DS,RCSe ) + ( MUC + DS ) ) - ( ( MUC / RCSe ) * Max( RMSe,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( ( ( DS - RCSe ) - ( MLU - CS ) ) ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - ARS )", "choosing": "( ( DS - RCSe ) - Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( MUM - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( FirstVNF_CPU_Server ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * Max( ( ( MRS - CRS ) * ( FirstVNF_Mem_Server / FirstVNF_CPU ) ),( ( FirstVNF_RAM * ACS ) + Min( FirstVNF_Mem ,BR ) ) ) ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( CS ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "( Max( ( ( MLU + MUM ) / ( CS / CS ) ),( ( DS * MUM ) * ( MUR + MUR ) ) ) + Min( Min( ( CS + MUC ) ,( CS / RCSe ) ) ,( Max( RMSe,RRSe ) * Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( ( FirstVNF_RAM * ACS ) + Min( FirstVNF_Mem ,BR ) ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( Min( Min( ( CS + MUC ) ,( CS / RCSe ) ) ,( Max( RMSe,RRSe ) * Max( MLU,DS ) ) ) * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "( Max( ( ( MLU + MUM ) / ( CS / CS ) ),( ( DS * MUM ) * ( MUR + MUR ) ) ) + Min( Min( ( CS + MUC ) ,( CS / RCSe ) ) ,( Max( RMSe,RRSe ) * Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU_Server - CRS ),MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( CS - RMSe ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "( Min( RCSe ,Max( CS,( MLU + RRSe ) ) ) / ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( Const - AMS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / ( MUC + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ARS ) / ( ( ( PN / MDR ) + ( Min( PN ,Max( ( MDR / ( ARS + MRS ) ),( ( MDR * FirstVNF_CPU ) - MRS ) ) ) / RRS ) ) - PN ) )", "choosing": "( Min( Min( MUC ,MUR ) ,( MUC + ( ( ( Max( Max( RMSe,MUR ),MUM ) + Min( RMSe ,( CS - RCSe ) ) ) - MUR ) - MLU ) ) ) / ( ( ( CS + CS ) * Min( ( RCSe * ( ( Max( RCSe,MUM ) * MUC ) - CS ) ) ,Min( MLU ,( ( ( MUR - MUC ) * Max( MLU,RMSe ) ) / MUM ) ) ) ) + DS ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( ( ARS / AMS ) * MRS ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) / Min( FirstVNF_Mem ,RRS ) )", "choosing": "( Max( MUR,( ( CS + RRSe ) * MLU ) ) / Min( DS ,( Min( ( MLU + MLU ) ,( ( ( Max( MUC,RRSe ) + RMSe ) - DS ) + Min( ( DS - MUM ) ,( Min( CS ,DS ) - RMSe ) ) ) ) * Max( Min( MUR ,MUM ),MUM ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) - Max( FirstVNF_CPU_Server,( MDR / AMS ) ) )", "choosing": "( Min( RMSe ,DS ) / ( MLU + ( MUR + MUC ) ) )", "obj1": 0.7845188284518828, "obj2": 0.13181880678584287}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) - Max( FirstVNF_CPU_Server,( MDR / AMS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( DS ,DS ) ) * Min( Max( MUM,MUC ) ,Min( DS ,MUM ) ) )", "obj1": 0.8200836820083682, "obj2": 0.10855597511008407}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 0.7552301255230126, "obj2": 0.15474728284566758}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( MUR + MUC ) / ( RRSe * MUC ) )", "obj1": 0.891213389121339, "obj2": 0.09158084432995564}, {"determining": "( ( ACS * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUM + MUR ) * MUM ) * Max( CS,CS ) ) * ( MUC * MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17787765702089764}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MRS + DDR ) ) ) ,ARS ) - Max( FirstVNF_CPU_Server,( MDR / AMS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) / Min( ( CS - Min( MLU ,( ( RMSe / MUR ) - MUC ) ) ) ,DS ) ) * Min( Max( MUM,MUC ) ,Min( DS ,MUM ) ) )", "obj1": 0.8598326359832636, "obj2": 0.10247518852181647}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( ( Min( RCSe ,CS ) - ( CS - MUR ) ) / ( MLU + MUC ) )", "obj1": 0.9121338912133892, "obj2": 0.07440094878870993}, {"determining": "Min( ( ( ( BR * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) + FirstVNF_RAM ) ,( DDR / FirstVNF_Mem ) )", "choosing": "( Min( Max( DS,MLU ) ,( CS / RRSe ) ) * ( MUR - ( MUM - MLU ) ) )", "obj1": 0.6652719665271967, "obj2": 0.23153838972939514}, {"determining": "( Max( MRS,CRS ) - ( RRS * ( ( MRS - FirstVNF_Mem ) / Min( RRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * DS ) / Min( MUM ,RMSe ) )", "obj1": 0.7092050209205021, "obj2": 0.2030589061266}, {"determining": "( ( ( PN * ( DDR * FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( Max( CS,CS ) ,DS ) ,( MLU * RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.031089074161755197}, {"determining": "( Max( Min( FirstVNF_RAM ,ARS ),( Const + DDR ) ) * ( ( MDR / ARS ) / ( PN / FirstVNF_RAM ) ) )", "choosing": "( ( ( DS / MUC ) + ( DS * MUC ) ) * ( ( RCSe * RRSe ) - ( MUM - RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.22765550346299457}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( CRS + CRS ) ) )", "choosing": "( ( Min( RCSe ,CS ) - ( CS - MUR ) ) / ( MLU + MUC ) )", "obj1": 0.8723849372384938, "obj2": 0.101871919433675}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 0.7133891213389121, "obj2": 0.19685051685262356}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7364016736401674, "obj2": 0.16109188751865958}, {"determining": "( ( MRS - Max( BR,( Min( Max( ( ARS + FirstVNF_Mem_Server ),ARS ) ,FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( RRS + FirstVNF_CPU ) )", "choosing": "( ( ( DS * MLU ) / ( Max( MUR,( MUM + ( MUR / DS ) ) ) - CS ) ) / ( ( RMSe + MLU ) - CS ) )", "obj1": 0.606694560669456, "obj2": 0.2685751357667753}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MRS + DDR ) ) ) ,ARS ) - Max( FirstVNF_CPU_Server,( MDR / Max( ( FirstVNF_CPU + ARS ),FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RMSe ,DS ),( MLU + ( MUR + MUC ) ) )", "obj1": 0.9288702928870293, "obj2": 0.06077165409789579}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( DDR - CRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( ( RCSe / RMSe ) / RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.048112018572454056}, {"determining": "( ( ( ( ARS + RRS ) * ( CRS * CRS ) ) + ( ( RRS + ARS ) + Min( CRS ,DDR ) ) ) / ( ( ( DDR / FirstVNF_RAM ) / ( ACS + ARS ) ) + ( ( CRS / PN ) / ( ARS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( RMSe ,MUM ) - ( MUR * MLU ) ) ,( ( RCSe * CS ) * ( MUM / MUR ) ) ) / ( Min( ( RCSe - RCSe ) ,Max( MUM,RMSe ) ) / ( ( RCSe / RMSe ) + Min( MUR ,RCSe ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.07325179114997701}, {"determining": "( ( PN * ( DDR * FirstVNF_RAM ) ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,( ( MUM + MUR ) * MUM ) ) ,( MLU * RRSe ) )", "obj1": 0.9581589958158996, "obj2": 0.04171288045126874}, {"determining": "( ( ( BR + MDR ) - BR ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( Max( Max( RCSe,MUR ),( DS + MLU ) ) + Min( ( RRSe + MLU ) ,( MUC * MUR ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9937238493723849, "obj2": 0.00398940031003426}, {"determining": "( Max( MRS,CRS ) - ( RRS * DDR ) )", "choosing": "Max( Max( MUR,MLU ),( MUC * CS ) )", "obj1": 0.5983263598326359, "obj2": 0.28483337112547774}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / FirstVNF_CPU_Server ) ) ) - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.2525460281400707}, {"determining": "( ( ( Min( AMS ,FirstVNF_Mem ) * ( ARS / RRS ) ) + Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) ) - ( BR * ( CRS * CRS ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( ( MUM / ( DS + Min( MUR ,RMSe ) ) ) * ( RMSe / MLU ) ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS * RRSe ),( MUC * MUC ) ) * ( Min( MUR ,DS ) / ( RMSe * MUM ) ) ) )", "obj1": 0.6464435146443515, "obj2": 0.25490987483969746}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) )", "obj1": 0.6297071129707112, "obj2": 0.2550744804527359}, {"determining": "( ( PN * ( ( RRS + MRS ) + ( Min( ARS ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,MRS ) ) ) ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( RCSe + RCSe ) / Max( ( MUM / Max( ( DS * ( MLU + RRSe ) ),CS ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.05916866220109674}, {"determining": "( ( ( ( PN / MRS ) * AMS ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( ( ( DS - RCSe ) - ( MLU - CS ) ),MUC ) ) )", "obj1": 0.7384937238493724, "obj2": 0.15954196698822223}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,DS ) ,( MLU * RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.21908776109971975}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / FirstVNF_RAM_Server ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,DS ) ,( MLU * RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.21908776109971975}, {"determining": "Min( Max( ( ( RRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * Min( ARS ,FirstVNF_CPU_Server ) ),DDR ) ,Max( ACS,MDR ) )", "choosing": "( ( ( CS / CS ) + Max( ( DS + DS ),RMSe ) ) - ( CS - MUC ) )", "obj1": 0.6610878661087866, "obj2": 0.254572073836363}, {"determining": "( ( MRS - ( Max( ( MRS - ( Max( MRS,CRS ) - ( RRS * DDR ) ) ),CRS ) - ( RRS * DDR ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MLU ) - CS ) / ( Max( MUR,MLU ) - CS ) )", "obj1": 0.6150627615062761, "obj2": 0.2654747841188827}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "Max( Max( ( ( MRS - CRS ) * ( FirstVNF_Mem_Server / FirstVNF_CPU ) ),( ( FirstVNF_RAM * ACS ) + Min( FirstVNF_Mem ,BR ) ) ),( Max( Min( BR ,ARS ),( MDR * MRS ) ) - ( ( CRS / AMS ) / ( BR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.26175502859525934}, {"determining": "( ( ( ARS * Min( RRS ,( CRS + ( ( RRS * ACS ) * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( ( Max( RMSe,MUR ) - ( Max( ( RRSe * Max( MUC,MUC ) ),RRSe ) / Max( DS,( ( ( MUC - ( MUM - MLU ) ) + RCSe ) * ( MUM + MUM ) ) ) ) ) / ( DS * ( CS * RRSe ) ) )", "obj1": 0.6192468619246861, "obj2": 0.2648454295288596}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.05916866220109674}, {"determining": "( ( MRS - FirstVNF_Mem ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "Max( Max( MUR,MLU ),( MUC * CS ) )", "obj1": 0.5983263598326359, "obj2": 0.28483337112547774}, {"determining": "Max( Max( ( ( MRS - CRS ) * ( FirstVNF_Mem_Server / FirstVNF_CPU ) ),( ( FirstVNF_RAM * ACS ) + Min( FirstVNF_Mem ,BR ) ) ),( Max( Min( BR ,ARS ),( MDR * MRS ) ) - ( ( CRS / AMS ) / ( BR + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.26175502859525934}, {"determining": "Min( ( ( ( BR * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) + FirstVNF_RAM ) ,( DDR / FirstVNF_Mem ) )", "choosing": "( Min( Max( DS,MLU ) ,( CS / RRSe ) ) * ( MUR - ( MUM - MLU ) ) )", "obj1": 0.6652719665271967, "obj2": 0.23153838972939514}, {"determining": "Max( ( ( BR * ( CRS * CRS ) ) + FirstVNF_CPU ),Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( CS + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS * RRSe ),( MUC * MUC ) ) * ( Min( MUR ,DS ) / ( RMSe * MUM ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.2525460281400707}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Const ) - ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( Min( MLU ,( RMSe - RRSe ) ) ,Max( RMSe,RCSe ) ) * Min( ( MUR - DS ) ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( MDR + Const ) )", "choosing": "( ( CS - CS ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( Min( Min( ( ACS * BR ) ,( CRS / BR ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / ARS ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( ( MUR / RRSe ) * CS ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUC + RCSe ) ,( MLU + MLU ) ) ,Max( Min( CS ,MUR ),( RCSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - FirstVNF_RAM_Server )", "choosing": "Min( Max( ( Max( MUC,MUM ) * ( RMSe / DS ) ),( Max( RRSe,MLU ) / Min( MUR ,MUR ) ) ) ,( ( Min( RCSe ,RCSe ) / Min( RCSe ,MUR ) ) * ( ( ( ( DS + RCSe ) + ( MUC * MUR ) ) / ( ( RMSe / MUC ) * Min( MLU ,MUR ) ) ) * ( ( Max( DS,RCSe ) + ( MUC + DS ) ) - ( ( MUC / RCSe ) * Max( RMSe,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( ( ( DS - RCSe ) - ( MLU - CS ) ) ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - ARS )", "choosing": "( ( DS - RCSe ) - Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( MUM - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - Min( RRS ,FirstVNF_CPU ) ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,MUM ) )", "obj1": 0.5732217573221757, "obj2": 0.30883313895501197}, {"determining": "( Min( ARS ,( ( MRS * CRS ) - DDR ) ) - ( FirstVNF_Mem_Server + CRS ) )", "choosing": "( ( ( Max( MLU,( ( ( ( CS / RCSe ) - MUC ) * RMSe ) / MUR ) ) * DS ) + RCSe ) / Min( ( DS + MLU ) ,DS ) )", "obj1": 0.8075313807531381, "obj2": 0.09477194631280593}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( MUR + MUC ) / ( RRSe * MUC ) )", "obj1": 0.891213389121339, "obj2": 0.09158084432995564}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) - Max( FirstVNF_CPU_Server,( MDR / AMS ) ) )", "choosing": "( Min( RMSe ,DS ) / ( MLU + ( MUR + MUC ) ) )", "obj1": 0.7845188284518828, "obj2": 0.13181880678584287}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 0.7552301255230126, "obj2": 0.15474728284566758}, {"determining": "Min( Min( ARS ,DDR ) ,( ( FirstVNF_RAM - ARS ) * PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,( DS - CS ) )", "obj1": 0.9079497907949791, "obj2": 0.0646628000261804}, {"determining": "( ( ACS * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUM + MUR ) * MUM ) * Max( CS,CS ) ) * ( MUC * MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17787765702089764}, {"determining": "( Max( MRS,CRS ) - ( RRS * ( ( MRS - FirstVNF_Mem ) / Min( RRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * DS ) / Min( MUM ,RMSe ) )", "obj1": 0.7092050209205021, "obj2": 0.2030589061266}, {"determining": "( ( ( PN * ( DDR * FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( Max( CS,CS ) ,DS ) ,( MLU * RRSe ) )", "obj1": 0.9665271966527197, "obj2": 0.031089074161755197}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( Max( Min( FirstVNF_RAM ,ARS ),( Const + DDR ) ) * ( ( MDR / ARS ) / ( PN / FirstVNF_RAM ) ) )", "choosing": "( ( ( DS / MUC ) + ( DS * MUC ) ) * ( ( RCSe * RRSe ) - ( MUM - RMSe ) ) )", "obj1": 0.6903765690376569, "obj2": 0.22765550346299457}, {"determining": "Min( Max( ( ( RRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * Min( ARS ,FirstVNF_CPU_Server ) ),DDR ) ,Max( ACS,MDR ) )", "choosing": "( ( ( CS / CS ) + Max( ( DS + DS ),RMSe ) ) - ( CS - MUC ) )", "obj1": 0.6610878661087866, "obj2": 0.254572073836363}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7364016736401674, "obj2": 0.16109188751865958}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MRS + DDR ) ) ) ,ARS ) - Max( FirstVNF_CPU_Server,( MDR / Max( ( FirstVNF_CPU + ARS ),FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RMSe ,DS ),( MLU + ( MUR + MUC ) ) )", "obj1": 0.9288702928870293, "obj2": 0.06077165409789579}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( DDR - CRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( ( RCSe / RMSe ) / RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.048112018572454056}, {"determining": "( ( PN * ( ( RRS + MRS ) + ( Min( ARS ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,MRS ) ) ) ) - ( DDR + DDR ) )", "choosing": "( ( RCSe + RCSe ) / Max( ( MUR + CS ),Min( RCSe ,RCSe ) ) )", "obj1": 0.6631799163179917, "obj2": 0.2335589477523086}, {"determining": "( ( PN * ( DDR * FirstVNF_RAM ) ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,( ( MUM + MUR ) * MUM ) ) ,( MLU * RRSe ) )", "obj1": 0.9581589958158996, "obj2": 0.04171288045126874}, {"determining": "( ( ( BR + MDR ) - BR ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( Max( Max( RCSe,MUR ),( DS + MLU ) ) + Min( ( RRSe + MLU ) ,( MUC * MUR ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9937238493723849, "obj2": 0.00398940031003426}, {"determining": "( ( ( Min( AMS ,FirstVNF_Mem ) * ( ARS / RRS ) ) + Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) ) - ( BR * ( CRS * CRS ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( ( MUM / ( DS + Min( MUR ,RMSe ) ) ) * ( RMSe / MLU ) ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS * RRSe ),( MUC * MUC ) ) * ( Min( MUR ,DS ) / ( RMSe * MUM ) ) ) )", "obj1": 0.6464435146443515, "obj2": 0.25490987483969746}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 0.7133891213389121, "obj2": 0.19685051685262356}, {"determining": "( ( PN * ( ( RRS + MRS ) + ( Min( ARS ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,MRS ) ) ) ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( RCSe + RCSe ) / Max( ( MUM / Max( ( DS * ( MLU + RRSe ) ),CS ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.05916866220109674}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) )", "obj1": 0.6297071129707112, "obj2": 0.2550744804527359}, {"determining": "Min( ( ( ( BR * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) + FirstVNF_RAM ) ,( DDR / FirstVNF_Mem ) )", "choosing": "( Min( Max( DS,MLU ) ,( CS / RRSe ) ) * ( MUR - ( MUM - MLU ) ) )", "obj1": 0.6652719665271967, "obj2": 0.23153838972939514}, {"determining": "( ( ( ( PN / MRS ) * AMS ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( ( ( DS - RCSe ) - ( MLU - CS ) ),MUC ) ) )", "obj1": 0.7384937238493724, "obj2": 0.15954196698822223}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,DS ) ,( MLU * RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.21908776109971975}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / FirstVNF_RAM_Server ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) )", "choosing": "Min( Min( RCSe ,DS ) ,( MLU * RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.21908776109971975}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,Min( ( CRS * FirstVNF_CPU_Server ) ,ARS ) ) / RRS ) ) ) / ( ( DDR + PN ) * MRS ) )", "choosing": "( Max( MUR,( MUC - ( ( ( ( MUC * RCSe ) - RCSe ) / DS ) + RCSe ) ) ) / ( DS * ( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( Min( MUM ,MLU ) * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,Max( MUR,MLU ) ) - CS ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.25961554702494943}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( ( MLU * MUR ) ,( MUM * MLU ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2756432168109304}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,Min( MDR ,( ( DDR - PN ) * MRS ) ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( RMSe * CS ) * ( RMSe * CS ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.274159116388695}, {"determining": "( ( ( Max( MRS,CRS ) - ( RRS * DDR ) ) - ( Max( ( MRS - ( Max( MRS,CRS ) - ( RRS * DDR ) ) ),CRS ) - ( RRS * DDR ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) / ( Max( MUR,MLU ) - CS ) ) ) - CS ) / ( Max( MUR,MLU ) - CS ) )", "obj1": 0.6150627615062761, "obj2": 0.2648490623210351}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( ( MRS - ( ( MRS - ( Max( MRS,CRS ) - ( RRS * DDR ) ) ) - ( RRS * DDR ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) / ( Max( MUR,MLU ) - CS ) )", "obj1": 0.606694560669456, "obj2": 0.2685751357667753}, {"determining": "( Max( MRS,CRS ) - ( RRS * ( ( MRS - FirstVNF_Mem ) / Min( RRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( DS - CS ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 0.7133891213389121, "obj2": 0.19685051685262356}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) ) )", "obj1": 0.9435146443514645, "obj2": 0.05916866220109674}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( RRS * ( ( MRS - FirstVNF_Mem ) / Min( RRS ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Max( Const,ARS ) / ( ( ( PN / MDR ) + ( Min( PN ,Max( ( MDR / ( ARS + MRS ) ),( ( MDR * FirstVNF_CPU ) - MRS ) ) ) / RRS ) ) - PN ) )", "choosing": "( Min( Min( MUC ,MUR ) ,( MUC + ( ( ( Max( Max( RMSe,MUR ),MUM ) + Min( RMSe ,( CS - RCSe ) ) ) - MUR ) - MLU ) ) ) / ( ( ( CS + CS ) * Min( ( RCSe * ( ( Max( RCSe,MUM ) * MUC ) - CS ) ) ,Min( MLU ,( ( ( MUR - MUC ) * Max( MLU,RMSe ) ) / MUM ) ) ) ) + DS ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - Max( BR,( Min( Max( ( ARS + FirstVNF_Mem_Server ),ARS ) ,FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( RRS + FirstVNF_CPU ) )", "choosing": "( ( ( DS * MLU ) / ( Max( MUR,( MUM + ( MUR / DS ) ) ) - CS ) ) / ( ( RMSe + MLU ) - CS ) )", "obj1": 0.606694560669456, "obj2": 0.2685751357667753}, {"determining": "( ( ( ARS * Min( RRS ,( CRS + ( ( RRS * ACS ) * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( ( Max( RMSe,MUR ) - ( Max( ( RRSe * Max( MUC,MUC ) ),RRSe ) / Max( DS,( ( ( MUC - ( MUM - MLU ) ) + RCSe ) * ( MUM + MUM ) ) ) ) ) / ( DS * ( CS * RRSe ) ) )", "obj1": 0.6192468619246861, "obj2": 0.2648454295288596}, {"determining": "Min( ( ( ( BR * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) + FirstVNF_RAM ) ,( DDR / FirstVNF_Mem ) )", "choosing": "( Min( Max( DS,MLU ) ,( CS / RRSe ) ) * ( MUR - ( MUM - MLU ) ) )", "obj1": 0.6652719665271967, "obj2": 0.23153838972939514}, {"determining": "( ( MRS - CRS ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6192468619246861, "obj2": 0.2648454295288596}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Const ) - ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( Min( MLU ,( RMSe - RRSe ) ) ,Max( RMSe,RCSe ) ) * Min( ( MUR - DS ) ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( MDR + Const ) )", "choosing": "( ( CS - CS ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( Min( Min( ( ACS * BR ) ,( CRS / BR ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / ARS ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( ( MUR / RRSe ) * CS ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUC + RCSe ) ,( MLU + MLU ) ) ,Max( Min( CS ,MUR ),( RCSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - FirstVNF_RAM_Server )", "choosing": "Min( Max( ( Max( MUC,MUM ) * ( RMSe / DS ) ),( Max( RRSe,MLU ) / Min( MUR ,MUR ) ) ) ,( ( Min( RCSe ,RCSe ) / Min( RCSe ,MUR ) ) * ( ( ( ( DS + RCSe ) + ( MUC * MUR ) ) / ( ( RMSe / MUC ) * Min( MLU ,MUR ) ) ) * ( ( Max( DS,RCSe ) + ( MUC + DS ) ) - ( ( MUC / RCSe ) * Max( RMSe,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( ( ( DS - RCSe ) - ( MLU - CS ) ) ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - ARS )", "choosing": "( ( DS - RCSe ) - Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( MUM - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8744769874476988, "obj2": 0.05557695204012524}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) - Max( FirstVNF_CPU_Server,( MDR / AMS ) ) )", "choosing": "( Min( RMSe ,DS ) / ( MLU + ( MUR + MUC ) ) )", "obj1": 0.7845188284518828, "obj2": 0.13181880678584287}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - RRS ) / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21937491507174053}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 0.7552301255230126, "obj2": 0.15474728284566758}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21937491507174053}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7364016736401674, "obj2": 0.16109188751865958}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / FirstVNF_RAM_Server ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( ( ( RRS * ( Min( FirstVNF_Mem ,( MDR / FirstVNF_CPU ) ) + CRS ) ) / Min( ( FirstVNF_CPU * MDR ) ,Const ) ) + ( CRS / FirstVNF_CPU ) )", "choosing": "Min( ( DS - MUM ) ,( RRSe / MUR ) )", "obj1": 0.6359832635983264, "obj2": 0.24792901596123387}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( PN / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( MLU * MUM ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( ( ( PN / MRS ) * AMS ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( ( ( DS - RCSe ) - ( MLU - CS ) ),MUC ) ) )", "obj1": 0.7384937238493724, "obj2": 0.15954196698822223}, {"determining": "( ( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) ) / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( MLU * MUM ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.24900642662919364}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( ( ( BR + MDR ) - BR ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS / RCSe ) ,( RMSe / MUC ) ) / Min( Max( ( Max( Max( RCSe,MUR ),( DS + MLU ) ) + Min( ( RRSe + MLU ) ,( MUC * MUR ) ) ),MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.9937238493723849, "obj2": 0.00398940031003426}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,Min( ( CRS * FirstVNF_CPU_Server ) ,ARS ) ) / RRS ) ) ) / ( ( DDR + PN ) * MRS ) )", "choosing": "( Max( MUR,( MUC - ( ( ( ( MUC * RCSe ) - RCSe ) / DS ) + RCSe ) ) ) / ( DS * ( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( Min( MUM ,MLU ) * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( ( ( ARS * Min( RRS ,( CRS + ( ( RRS * ACS ) * FirstVNF_RAM_Server ) ) ) ) - FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( ( Max( RMSe,MUR ) - ( Max( ( RRSe * Max( MUC,MUC ) ),RRSe ) / Max( DS,( ( ( MUC - ( MUM - MLU ) ) + RCSe ) * ( MUM + MUM ) ) ) ) ) / ( DS * ( CS * RRSe ) ) )", "obj1": 0.6192468619246861, "obj2": 0.2648454295288596}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( ( Max( MRS,CRS ) - ( RRS * DDR ) ) - ( Max( ( MRS - ( Max( MRS,CRS ) - ( RRS * DDR ) ) ),CRS ) - ( RRS * DDR ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) / ( Max( MUR,MLU ) - CS ) ) ) - CS ) / ( Max( MUR,MLU ) - CS ) )", "obj1": 0.6150627615062761, "obj2": 0.2648490623210351}, {"determining": "( ( MRS - CRS ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6338912133891214, "obj2": 0.24796735725119784}, {"determining": "( ( CRS + ARS ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( Max( MUC,MUC ) / ( ( RMSe - MLU ) + CS ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / MUC ) * ( MUC - ( RRSe - CS ) ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0010952376967521967}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( MRS - ( Max( MRS,CRS ) - ( RRS * DDR ) ) ) - ( RRS * DDR ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) / ( Max( MUR,MLU ) - CS ) )", "obj1": 0.606694560669456, "obj2": 0.2685751357667753}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( Min( RRS ,DDR ) - ( Min( MDR ,( ARS / FirstVNF_CPU_Server ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( ( MLU + MLU ) ,( ( ( Max( RRSe,RRSe ) + RMSe ) - MUC ) + Min( ( DS - MUM ) ,( Min( CS ,MLU ) - RMSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.2669109638245683}, {"determining": "( ( MRS - Max( BR,( Min( Max( ( ARS + FirstVNF_Mem_Server ),ARS ) ,FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( RRS + FirstVNF_CPU ) )", "choosing": "( ( ( DS * MLU ) / ( Max( MUR,( MUM + ( MUR / DS ) ) ) - CS ) ) / ( ( RMSe + MLU ) - CS ) )", "obj1": 0.606694560669456, "obj2": 0.2685751357667753}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( RRS * ( ( MRS - FirstVNF_Mem ) / Min( RRS ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( ( MRS - ( ( ( ARS / AMS ) * MRS ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) / Min( FirstVNF_Mem ,RRS ) )", "choosing": "( Max( MUR,( ( CS + RRSe ) * MLU ) ) / Min( DS ,( Min( ( MLU + MLU ) ,( ( ( Max( MUC,RRSe ) + RMSe ) - DS ) + Min( ( DS - MUM ) ,( Min( CS ,DS ) - RMSe ) ) ) ) * Max( Min( MUR ,MUM ),MUM ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.2669109638245683}, {"determining": "( ( MRS - CRS ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6192468619246861, "obj2": 0.2648454295288596}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Const ) - ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( Min( MLU ,( RMSe - RRSe ) ) ,Max( RMSe,RCSe ) ) * Min( ( MUR - DS ) ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( MDR + Const ) )", "choosing": "( ( CS - CS ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( Min( Min( ( ACS * BR ) ,( CRS / BR ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / ARS ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( ( MUR / RRSe ) * CS ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUC + RCSe ) ,( MLU + MLU ) ) ,Max( Min( CS ,MUR ),( RCSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - FirstVNF_RAM_Server )", "choosing": "Min( Max( ( Max( MUC,MUM ) * ( RMSe / DS ) ),( Max( RRSe,MLU ) / Min( MUR ,MUR ) ) ) ,( ( Min( RCSe ,RCSe ) / Min( RCSe ,MUR ) ) * ( ( ( ( DS + RCSe ) + ( MUC * MUR ) ) / ( ( RMSe / MUC ) * Min( MLU ,MUR ) ) ) * ( ( Max( DS,RCSe ) + ( MUC + DS ) ) - ( ( MUC / RCSe ) * Max( RMSe,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( ( ( DS - RCSe ) - ( MLU - CS ) ) ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - ARS )", "choosing": "( ( DS - RCSe ) - Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( MUM - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - MRS ) - ( FirstVNF_CPU - MRS ) ) - ( FirstVNF_CPU - MRS ) )", "choosing": "( MUR - ( MUR - ( ( MUR - ( MUR + CS ) ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ACS ) - ( ( ( FirstVNF_CPU / Const ) * ACS ) - MRS ) ) - ( FirstVNF_CPU - MRS ) )", "choosing": "( MUR - ( RRSe * ( Max( Min( MUC ,Max( ( RMSe + MUC ),Min( MLU ,( MUC - DS ) ) ) ),RRSe ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) - Max( FirstVNF_CPU_Server,( MDR / AMS ) ) )", "choosing": "( Min( RMSe ,DS ) / ( MLU + ( MUR + MUC ) ) )", "obj1": 0.7845188284518828, "obj2": 0.13181880678584287}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) * MUM ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.21344019218968374}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8744769874476988, "obj2": 0.05557695204012524}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - Min( DS ,CS ) ) ) / Min( DS ,CS ) )", "obj1": 0.9016736401673641, "obj2": 0.03932194092360399}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 0.7552301255230126, "obj2": 0.15474728284566758}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( FirstVNF_Mem + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUM )", "obj1": 0.8493723849372385, "obj2": 0.07490219243796227}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 0.7364016736401674, "obj2": 0.16109188751865958}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / FirstVNF_RAM_Server ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( ( FirstVNF_Mem_Server - Const ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( Min( ( CS + CS ) ,Max( MUC,RRSe ) ) + RCSe ) / Min( DS ,( MUR + CS ) ) )", "obj1": 0.9539748953974896, "obj2": 0.02151478110185974}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( PN ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / CS )", "obj1": 0.608786610878661, "obj2": 0.2627420240243873}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( PN / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( MLU * MUM ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( ( ( PN / MRS ) * AMS ) / ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( RRSe ,MUM ),( RRSe + Max( ( ( DS - RCSe ) - ( MLU - CS ) ),MUC ) ) )", "obj1": 0.7384937238493724, "obj2": 0.15954196698822223}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002314868354162243}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( MRS - ( ( MRS - ( Max( MRS,CRS ) - ( RRS * DDR ) ) ) - ( RRS * DDR ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) / ( Max( MUR,MLU ) - CS ) )", "obj1": 0.606694560669456, "obj2": 0.2685751357667753}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( CRS + CRS ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - Max( BR,( Min( Max( ( ARS + FirstVNF_Mem_Server ),ARS ) ,FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( RRS + FirstVNF_CPU ) )", "choosing": "( ( ( DS * MLU ) / ( Max( MUR,( MUM + ( MUR / DS ) ) ) - CS ) ) / ( ( RMSe + MLU ) - CS ) )", "obj1": 0.606694560669456, "obj2": 0.2685751357667753}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,Min( ( CRS * FirstVNF_CPU_Server ) ,ARS ) ) / RRS ) ) ) / ( ( DDR + PN ) * MRS ) )", "choosing": "( Max( MUR,( MUC - ( ( ( ( MUC * RCSe ) - RCSe ) / DS ) + RCSe ) ) ) / ( DS * ( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( Min( MUM ,MLU ) * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + ( MUC / MUM ) ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) - MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( ( BR + MRS ) / ( MDR - AMS ) ) ,Min( ( RRS / PN ) ,( CRS / FirstVNF_CPU ) ) ) * ( Max( ( MRS * FirstVNF_RAM ),Max( MRS,FirstVNF_RAM_Server ) ) / Min( ( DDR + BR ) ,( FirstVNF_RAM_Server - MRS ) ) ) )", "choosing": "( ( MLU - MLU ) * ( ( MUR + MUR ) - ( ( DS - MLU ) * Max( MLU,CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.02065810044258343}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Const ) - ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( Min( MLU ,( RMSe - RRSe ) ) ,Max( RMSe,RCSe ) ) * Min( ( MUR - DS ) ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( MDR + Const ) )", "choosing": "( ( CS - CS ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( Min( Min( ( ACS * BR ) ,( CRS / BR ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / ARS ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( ( MUR / RRSe ) * CS ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUC + RCSe ) ,( MLU + MLU ) ) ,Max( Min( CS ,MUR ),( RCSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - FirstVNF_RAM_Server )", "choosing": "Min( Max( ( Max( MUC,MUM ) * ( RMSe / DS ) ),( Max( RRSe,MLU ) / Min( MUR ,MUR ) ) ) ,( ( Min( RCSe ,RCSe ) / Min( RCSe ,MUR ) ) * ( ( ( ( DS + RCSe ) + ( MUC * MUR ) ) / ( ( RMSe / MUC ) * Min( MLU ,MUR ) ) ) * ( ( Max( DS,RCSe ) + ( MUC + DS ) ) - ( ( MUC / RCSe ) * Max( RMSe,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( ( ( DS - RCSe ) - ( MLU - CS ) ) ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - ( ( ARS + MRS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( Max( Min( RRSe ,MUM ),( RRSe + Max( RMSe,MUC ) ) ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8744769874476988, "obj2": 0.05557695204012524}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) * MUM ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.21344019218968374}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16320693906970352}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - Min( DS ,CS ) ) ) / Min( DS ,CS ) )", "obj1": 0.9016736401673641, "obj2": 0.03932194092360399}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( RMSe + MUC ) - ( ( CS + Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) ) - ( ( ( Max( RCSe,MLU ) / RMSe ) / DS ) * CS ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( ( MRS - Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.19097762467009047}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Max( DDR,MDR ) + PN ) ) ) - Max( Min( BR ,ACS ),RRS ) )", "choosing": "( ( MUR + ( Max( MUC,MUC ) * ( ( MLU - MLU ) + CS ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.016975717670187462}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( ( FirstVNF_Mem_Server - Const ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( Min( ( CS + CS ) ,Max( MUC,RRSe ) ) + RCSe ) / Min( DS ,( MUR + CS ) ) )", "obj1": 0.9539748953974896, "obj2": 0.02151478110185974}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( PN / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( MLU * MUM ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002314868354162243}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( CRS + CRS ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / MRS ) ) / ( ( ( ARS / ( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + PN ) ) * FirstVNF_RAM ) / Const ) ) + FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) )", "choosing": "( ( ( DS / ( RCSe + MLU ) ) - ( DS * MUM ) ) / ( Max( RMSe,MUR ) + RRSe ) )", "obj1": 0.99581589958159, "obj2": 0.001927271456554637}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + ( MUC / MUM ) ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) - MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + ( ( ( FirstVNF_CPU_Server / RRS ) - PN ) / PN ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),( DDR / CRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( RCSe + ( MUR - CS ) ) * ( ( Min( CS ,Max( RRSe,MUC ) ) + CS ) * CS ) ) ) / Min( DS ,( Min( ( ( MUR - DS ) * MLU ) ,Max( MLU,MLU ) ) * ( CS - ( Min( RMSe ,CS ) / ( ( RRSe + ( MUR - MUR ) ) / Min( Max( MUC,RRSe ) ,CS ) ) ) ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.001927271456554637}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Const ) - ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( Min( MLU ,( RMSe - RRSe ) ) ,Max( RMSe,RCSe ) ) * Min( ( MUR - DS ) ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( MDR + Const ) )", "choosing": "( ( CS - CS ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( Min( Min( ( ACS * BR ) ,( CRS / BR ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / ARS ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( ( MUR / RRSe ) * CS ) / Min( ( RCSe * MUM ) ,( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUC + RCSe ) ,( MLU + MLU ) ) ,Max( Min( CS ,MUR ),( RCSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) - FirstVNF_RAM_Server )", "choosing": "Min( Max( ( Max( MUC,MUM ) * ( RMSe / DS ) ),( Max( RRSe,MLU ) / Min( MUR ,MUR ) ) ) ,( ( Min( RCSe ,RCSe ) / Min( RCSe ,MUR ) ) * ( ( ( ( DS + RCSe ) + ( MUC * MUR ) ) / ( ( RMSe / MUC ) * Min( MLU ,MUR ) ) ) * ( ( Max( DS,RCSe ) + ( MUC + DS ) ) - ( ( MUC / RCSe ) * Max( RMSe,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / MRS ) * Max( ARS,FirstVNF_RAM ) ) / ( ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( ( AMS - DDR ) * ( FirstVNF_CPU_Server + Const ) ) / ( ( Const / FirstVNF_RAM ) + ( CRS + CRS ) ) ) )", "choosing": "Max( Min( ( ( DS - RCSe ) - ( MLU - CS ) ) ,MUM ),( RRSe + Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( ARS - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ) - DDR )", "choosing": "( DS - Min( ( RCSe - ( RCSe * MUM ) ) ,( ( ( CS * ( RRSe / Max( ( MUC * MLU ),( MUM + RRSe ) ) ) ) * MLU ) + Max( Max( ( Max( DS,Min( MLU ,RMSe ) ) / RCSe ),Min( ( DS - RMSe ) ,Max( MUM,( RRSe - RMSe ) ) ) ),Min( MUR ,DS ) ) ) ) )", "obj1": 0.7887029288702929, "obj2": 0.12544152755071103}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) * MUM ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.21344019218968374}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - Min( DS ,CS ) ) ) / Min( DS ,CS ) )", "obj1": 0.9016736401673641, "obj2": 0.03932194092360399}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( ( MRS - Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.19097762467009047}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16320693906970352}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( RRSe * DS ) + RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.9748953974895398, "obj2": 0.011075301920557551}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_Mem_Server - Const ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( Min( ( CS + CS ) ,Max( MUC,RRSe ) ) + RCSe ) / Min( DS ,( MUR + CS ) ) )", "obj1": 0.9539748953974896, "obj2": 0.02151478110185974}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002314868354162243}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( PN / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( MLU * MUM ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( RMSe + MUC ) - ( ( CS + Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) ) - ( ( ( Max( RCSe,MLU ) / RMSe ) / DS ) * CS ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( CRS + CRS ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + ( ( ( FirstVNF_CPU_Server / RRS ) - PN ) / PN ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),( DDR / CRS ) ) ,FirstVNF_CPU ) )", "choosing": "Max( Max( DS,( ( RCSe + ( MUR + MUM ) ) * MLU ) ),Max( CS,MLU ) )", "obj1": 0.99581589958159, "obj2": 0.0016745267118215223}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + ( MUC / MUM ) ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) - MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Const ) - ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( Min( MLU ,( RMSe - RRSe ) ) ,Max( RMSe,RCSe ) ) * Min( ( MUR - DS ) ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( MDR + Const ) )", "choosing": "( ( CS - CS ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( Min( Min( ( ACS * BR ) ,( CRS / BR ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RCSe ) - Min( ( MUM / RRSe ) ,Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - DDR )", "choosing": "( DS - Min( MUM ,( ( ( CS * ( CS / Max( ( MUC * MLU ),( MUM + RRSe ) ) ) ) * MLU ) + Max( Max( ( Max( DS,Min( MLU ,RMSe ) ) / RCSe ),Min( ( DS - RMSe ) ,Max( MUM,( RRSe - RMSe ) ) ) ),Min( MUR ,DS ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.20593419301251137}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( ( MRS - Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.19097762467009047}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16320693906970352}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,ARS ) - ARS )", "choosing": "( ( ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.803347280334728, "obj2": 0.08849484134593977}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( RRSe * DS ) + RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.9748953974895398, "obj2": 0.011075301920557551}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.25966979750974883}, {"determining": "( ( FirstVNF_Mem_Server - Const ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( Min( ( CS + CS ) ,Max( MUC,RRSe ) ) + RCSe ) / Min( DS ,( MUR + CS ) ) )", "obj1": 0.9539748953974896, "obj2": 0.02151478110185974}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002314868354162243}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * ( ( DDR - PN ) * MRS ) ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( Max( MUR,( ( CS + MUR ) * MLU ) ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( CRS + CRS ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + ( ( ( FirstVNF_CPU_Server / RRS ) - PN ) / PN ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),( DDR / CRS ) ) ,FirstVNF_CPU ) )", "choosing": "Max( Max( DS,( ( RCSe + ( MUR + MUM ) ) * MLU ) ),Max( CS,MLU ) )", "obj1": 0.99581589958159, "obj2": 0.0016745267118215223}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + ( MUC / MUM ) ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) - MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( ( Const / Const ) * Min( FirstVNF_Mem ,PN ) ) )", "choosing": "( ( RRSe + RCSe ) * Max( Max( RCSe,RCSe ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Const ) - ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( Min( MLU ,( RMSe - RRSe ) ) ,Max( RMSe,RCSe ) ) * Min( ( MUR - DS ) ,Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) ) ,Max( ( FirstVNF_RAM_Server * CRS ),( MDR + Const ) ) )", "choosing": "( ( ( MUR - RCSe ) * ( CS - CS ) ) - ( ( RCSe * RCSe ) - ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( MDR + Const ) )", "choosing": "( ( CS - CS ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( ( MRS - Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.19097762467009047}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - DDR )", "choosing": "( DS - Min( MUM ,( ( ( CS * ( CS / Max( ( MUC * MLU ),( MUM + RRSe ) ) ) ) * MLU ) + Max( Max( ( Max( DS,Min( MLU ,RMSe ) ) / RCSe ),Min( ( DS - RMSe ) ,Max( MUM,( RRSe - RMSe ) ) ) ),Min( MUR ,DS ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.20593419301251137}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_CPU_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.805439330543933, "obj2": 0.08503104961886077}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,ARS ) - ARS )", "choosing": "( ( ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.803347280334728, "obj2": 0.08849484134593977}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( RRSe * DS ) + RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.9748953974895398, "obj2": 0.011075301920557551}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002314868354162243}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * ( ( DDR - PN ) * MRS ) ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( Max( MUR,( ( CS + MUR ) * MLU ) ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Const ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),Max( DDR,CRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUM + MLU ) - ( ( MLU + RCSe ) * CS ) )", "obj1": 0.99581589958159, "obj2": 0.0014800610316646871}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( CRS + CRS ) )", "choosing": "( ( DS * RRSe ) / ( Max( MUR,MLU ) - ( ( DS * RRSe ) / ( Max( MUR,MLU ) - CS ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2563168304422543}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + ( MUC / MUM ) ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) - MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( ( MRS - Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.19097762467009047}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - DDR )", "choosing": "( DS - Min( MUM ,( ( ( CS * ( CS / Max( ( MUC * MLU ),( MUM + RRSe ) ) ) ) * MLU ) + Max( Max( ( Max( DS,Min( MLU ,RMSe ) ) / RCSe ),Min( ( DS - RMSe ) ,Max( MUM,( RRSe - RMSe ) ) ) ),Min( MUR ,DS ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.20593419301251137}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( RRSe * DS ) + RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.9748953974895398, "obj2": 0.011075301920557551}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002314868354162243}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Const ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),Max( DDR,CRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUM + MLU ) - ( ( MLU + RCSe ) * CS ) )", "obj1": 0.99581589958159, "obj2": 0.0014800610316646871}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + ( MUC / MUM ) ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) - MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) / ( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / ( ( RRSe - MLU ) * ( MUC * MLU ) ) ) + Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * CRS ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( RCSe * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( MRS - Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.19097762467009047}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - DDR )", "choosing": "( DS - Min( MUM ,( ( ( CS * ( CS / Max( ( MUC * MLU ),( MUM + RRSe ) ) ) ) * MLU ) + Max( Max( ( Max( DS,Min( MLU ,RMSe ) ) / RCSe ),Min( ( DS - RMSe ) ,Max( MUM,( RRSe - RMSe ) ) ) ),Min( MUR ,DS ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.20593419301251137}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( RRSe * DS ) + RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.9748953974895398, "obj2": 0.011075301920557551}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( RCSe + RCSe ) / Max( Min( RCSe ,RCSe ),( RCSe / RMSe ) ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002314868354162243}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Const ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),Max( DDR,CRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUM + MLU ) - ( ( MLU + RCSe ) * CS ) )", "obj1": 0.99581589958159, "obj2": 0.0014800610316646871}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + ( MUC / MUM ) ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( ( RCSe / ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) ) - MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( PN * FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,PN ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( ( PN * AMS ) - ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( ( RRSe - MLU ) * ( MUC * MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( MRS - Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.19097762467009047}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - DDR )", "choosing": "( DS - Min( MUM ,( ( ( CS * ( CS / Max( ( MUC * MLU ),( MUM + RRSe ) ) ) ) * MLU ) + Max( Max( ( Max( DS,Min( MLU ,RMSe ) ) / RCSe ),Min( ( DS - RMSe ) ,Max( MUM,( RRSe - RMSe ) ) ) ),Min( MUR ,DS ) ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.20593419301251137}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( RRSe * DS ) + RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.9748953974895398, "obj2": 0.011075301920557551}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( RRS - ( CRS + ARS ) ) - ( Const - FirstVNF_RAM ) )", "choosing": "( ( Max( Max( Max( MUR,MUR ),( MUM * Max( RRSe,Min( ( RMSe / DS ) ,RCSe ) ) ) ),MUM ) * MUC ) - ( MUR + CS ) )", "obj1": 0.9937238493723849, "obj2": 0.0022418690512063847}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,FirstVNF_CPU ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( MUC / Min( ( CS - MUM ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS / ( MUM + MUC ) ) + CS ) ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022418690512063847}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Const ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),Max( DDR,CRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUM + MLU ) - ( ( MLU + RCSe ) * CS ) )", "obj1": 0.99581589958159, "obj2": 0.0014800610316646871}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_CPU + PN ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RMSe + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( MRS - Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.19097762467009047}, {"determining": "( Min( Max( ARS,BR ) ,( DDR + AMS ) ) - Min( DDR ,( ( BR + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / MDR ) ) ) - MRS ) ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( RRSe * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6799163179916318, "obj2": 0.2039133796822228}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( RRSe * DS ) + RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.9748953974895398, "obj2": 0.011075301920557551}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Const - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Max( RRSe,MUM ) * MLU ) )", "obj1": 0.9790794979079498, "obj2": 0.00913763092645085}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Const ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),Max( DDR,CRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUM + MLU ) - ( ( MLU + RCSe ) * CS ) )", "obj1": 0.99581589958159, "obj2": 0.0014800610316646871}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_CPU + PN ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RMSe + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( PN / Max( Min( ( MRS * Min( ( CRS * ACS ) ,PN ) ) ,( Min( MDR ,ACS ) - ( PN - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RCSe / RRSe ) / Min( CS ,CS ) ) - MUC ),RCSe ) / ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_RAM + Const ),Max( AMS,ARS ) ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + ( ( MUC / RMSe ) / MLU ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Min( Max( ARS,BR ) ,( DDR + AMS ) ) - Min( DDR ,( ( BR + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / MDR ) ) ) - MRS ) ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( RRSe * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6799163179916318, "obj2": 0.2039133796822228}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( ( MRS - Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6882845188284519, "obj2": 0.19097762467009047}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ( FirstVNF_CPU / PN ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00959266194267939}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) / RCSe ) - ( MUR + Max( ( ( ( MUR / RMSe ) * MUM ) - RRSe ),( ( MUC / RCSe ) * MUM ) ) ) )", "obj1": 0.6861924686192469, "obj2": 0.19519289372797127}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.6861924686192469, "obj2": 0.19519289372797127}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Const ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),Max( DDR,CRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUM + MLU ) - ( ( MLU + RCSe ) * CS ) )", "obj1": 0.99581589958159, "obj2": 0.0014800610316646871}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_CPU + PN ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RMSe + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ( FirstVNF_CPU / PN ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00959266194267939}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( Max( ( ACS * PN ),PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUC ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Const ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),Max( DDR,CRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUM + MLU ) - ( ( MLU + RCSe ) * CS ) )", "obj1": 0.99581589958159, "obj2": 0.0014800610316646871}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_CPU + PN ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RMSe + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( MDR - MRS ) ) - ( ( ARS * ( ( ACS - ACS ) - MRS ) ) * ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( MUR - ( ( MUR - ( MUM + ( RCSe / MLU ) ) ) + ( MUR - ( ( ( MLU + CS ) - MUR ) + ( DS - ( MLU / RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ( FirstVNF_CPU / PN ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00959266194267939}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / Min( MDR ,( ( DDR - PN ) * MRS ) ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,( ( CS + ( CS - MUR ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2909564176486994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( MUR,( ( CS + MUR ) * MLU ) ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2804205735750737}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * ( CS + MUR ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.2927140137638294}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( Max( ( ACS * PN ),PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUC ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( ( CRS + CRS ) * DDR ) - ( ( RRS + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Const ) ) * RRS ) ) ) / Min( Max( ( MRS * MRS ),Max( DDR,CRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( MUM + MLU ) - ( ( MLU + RCSe ) * CS ) )", "obj1": 0.99581589958159, "obj2": 0.0014800610316646871}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_CPU + PN ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RMSe + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Max( Max( DDR,BR ),( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + CRS ) ) / ( DDR - FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - Max( BR,ACS ) )", "choosing": "( ( Max( Min( Min( Max( CS,CS ) ,( Max( RMSe,( MUM - RCSe ) ) - CS ) ) ,( RMSe - MUM ) ),( MUC * CS ) ) + MUR ) - ( MUC / Min( DS ,Min( Min( CS ,RMSe ) ,RRSe ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) - MLU ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( Min( MUC ,Min( RCSe ,CS ) ) ,( ( RRSe + RRSe ) + MUC ) ) - Min( RMSe ,CS ) ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - ( Min( CRS ,DDR ) - ( FirstVNF_Mem * ( ACS - PN ) ) ) ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( BR / ACS ) ) ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( Min( DS ,( ( MUC / RMSe ) + ( RMSe - MUM ) ) ) - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.10920940562557656}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( AMS ,( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) - PN ) ) / ( DDR * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( ( MUR + MUR ) * ( DS * ( MUM + ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.28788843214545035}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ( FirstVNF_CPU / PN ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00959266194267939}, {"determining": "( ( ARS * ( ARS * MRS ) ) - ( ( FirstVNF_RAM_Server + ( ARS + ( RRS - ( ( FirstVNF_RAM_Server * Const ) / ( RRS + MRS ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,( Min( Max( MUR,( DS / MLU ) ) ,MUR ) / CS ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( ( RCSe * MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2750813780333645}, {"determining": "( ( BR - DDR ) - ( FirstVNF_RAM_Server / ( DDR - ( ( Min( RRS ,RRS ) / ARS ) - ( ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) + ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / DS ) ,RMSe ) - ( ( ( Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) * CS ) / RMSe ) / Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010740111471606585}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ),Min( PN ,PN ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( CS - RRSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( RRSe + MUM ) ) ) / ( MUM - Max( RCSe,( MUC + CS ) ) ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0013552701776916138}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_CPU + PN ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RMSe + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ACS,MRS ),( ACS * ARS ) ) ,( ( ARS / FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( CRS - PN ) / Min( Const ,ACS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) * Min( MUM ,MUC ) ) * ( ( MUC + DS ) * ( MUC + DS ) ) ) ,( ( Min( RMSe ,RRSe ) - ( MUR * MUR ) ) * ( Max( RMSe,MUR ) - ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Const - ( BR + ACS ) ) ) )", "choosing": "( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( RRSe * Min( RRSe ,DS ) ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) - MLU ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( Min( MUC ,Min( RCSe ,CS ) ) ,( ( RRSe + RRSe ) + MUC ) ) - Min( RMSe ,CS ) ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - ( Min( CRS ,DDR ) - ( FirstVNF_Mem * ( ACS - PN ) ) ) ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( BR / ACS ) ) ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( Min( DS ,( ( MUC / RMSe ) + ( RMSe - MUM ) ) ) - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.10920940562557656}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( AMS ,( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) - PN ) ) / ( DDR * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( ( MUR + MUR ) * ( DS * ( MUM + ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.28788843214545035}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ( FirstVNF_CPU / PN ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00959266194267939}, {"determining": "( ( ARS * ( ARS * MRS ) ) - ( ( FirstVNF_RAM_Server + ( ARS + ( RRS - ( ( FirstVNF_RAM_Server * Const ) / ( RRS + MRS ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,( Min( Max( MUR,( DS / MLU ) ) ,MUR ) / CS ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( ( RCSe * MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2750813780333645}, {"determining": "( ( BR - DDR ) - ( FirstVNF_RAM_Server / ( DDR - ( ( Min( RRS ,RRS ) / ARS ) - ( ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) + ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / DS ) ,RMSe ) - ( ( ( Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) * CS ) / RMSe ) / Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010740111471606585}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ),Min( PN ,PN ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( CS - RRSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( RRSe + MUM ) ) ) / ( MUM - Max( RCSe,( MUC + CS ) ) ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0013552701776916138}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU * PN ),( FirstVNF_RAM * RRS ) ) ) / ( ( ( RRS - FirstVNF_CPU ) - ( AMS * FirstVNF_RAM ) ) * Max( Min( CRS ,CRS ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RMSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) + ( BR / CRS ) ) - Min( ( Const + FirstVNF_RAM_Server ) ,( MRS / PN ) ) ) ,Min( ( Min( FirstVNF_Mem ,MRS ) / ( AMS + MDR ) ) ,( ( BR / DDR ) - ( ARS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe / CS ),( ( MUM + MUM ) / MUR ) ) / ( ( RRSe * DS ) + ( CS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( FirstVNF_RAM - MRS ) - ACS )", "choosing": "( ( CS + Min( ( RMSe / ( RCSe * RMSe ) ) ,( MUC / ( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) - RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Const - ( BR + ACS ) ) ) )", "choosing": "( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( RRSe * Min( RRSe ,DS ) ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / DDR ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( Max( CS,( RRSe - MUC ) ) / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.10812373468118577}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( AMS ,( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) - PN ) ) / ( DDR * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( ( MUR + MUR ) * ( DS * ( MUM + ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.28788843214545035}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ( FirstVNF_CPU / PN ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00959266194267939}, {"determining": "( ( ARS * ( ARS * MRS ) ) - ( ( FirstVNF_RAM_Server + ( ARS + ( RRS - ( ( FirstVNF_RAM_Server * Const ) / ( RRS + MRS ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,( Min( Max( MUR,( DS / MLU ) ) ,MUR ) / CS ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( ( RCSe * MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2750813780333645}, {"determining": "( ( BR - DDR ) - ( FirstVNF_RAM_Server / ( DDR - ( ( Min( RRS ,RRS ) / ARS ) - ( ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) + ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / DS ) ,RMSe ) - ( ( ( Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) * CS ) / RMSe ) / Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010740111471606585}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ),Min( PN ,PN ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( CS - RRSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( RRSe + MUM ) ) ) / ( MUM - Max( RCSe,( MUC + CS ) ) ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0013552701776916138}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) - MLU ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( Min( MUC ,Min( RCSe ,CS ) ) ,( ( RRSe + RRSe ) + MUC ) ) - Min( RMSe ,CS ) ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( MRS ,RRS ) ) - ( Max( ACS,PN ) * ( FirstVNF_RAM / PN ) ) ) + Min( ( ( MDR + FirstVNF_Mem_Server ) / ( RRS * AMS ) ) ,( ( ACS * ACS ) / Min( PN ,MRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) * Min( MUM ,MUM ) ) + ( ( RCSe * RCSe ) - ( DS * RCSe ) ) ) * ( ( ( RCSe / RMSe ) / ( MUR + MUM ) ) / Min( ( MLU + RMSe ) ,( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - Max( RRS,FirstVNF_RAM ) ) * ( ( BR / FirstVNF_CPU ) - Max( DDR,FirstVNF_Mem ) ) ) - Max( Min( ( ARS - AMS ) ,( FirstVNF_Mem_Server + RRS ) ),( ( MDR * ACS ) / Max( FirstVNF_Mem_Server,PN ) ) ) )", "choosing": "( ( DS - RCSe ) - ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) - FirstVNF_Mem_Server ) / RRS ) - Max( ( ( FirstVNF_CPU_Server / Const ) / MDR ),AMS ) )", "choosing": "( ( DS + Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) - Min( ( DS / Max( MLU,MLU ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_RAM - MRS ) - ACS )", "choosing": "( ( CS + Min( ( RMSe / ( RCSe * RMSe ) ) ,( MUC / ( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) - RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / DDR ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( Max( CS,( RRSe - MUC ) ) / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.10812373468118577}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( MUR - MLU ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7719665271966527, "obj2": 0.10608655528098698}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( AMS ,( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) - PN ) ) / ( DDR * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( ( MUR + MUR ) * ( DS * ( MUM + ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.28788843214545035}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( PN - ( DDR - Const ) ) - ( ARS * ( ARS * MRS ) ) )", "choosing": "( Max( MUC,( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( Max( RCSe,MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03593652108247972}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ( FirstVNF_CPU / PN ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00959266194267939}, {"determining": "( ( ARS * ( ARS * MRS ) ) - ( ( FirstVNF_RAM_Server + ( ARS + ( RRS - ( ( FirstVNF_RAM_Server * Const ) / ( RRS + MRS ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,( Min( Max( MUR,( DS / MLU ) ) ,MUR ) / CS ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( ( RCSe * MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2750813780333645}, {"determining": "( ( BR - DDR ) - ( FirstVNF_RAM_Server / ( DDR - ( ( Min( RRS ,RRS ) / ARS ) - ( ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) + ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / DS ) ,RMSe ) - ( ( ( Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) * CS ) / RMSe ) / Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010740111471606585}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ),Min( PN ,PN ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( CS - RRSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( RRSe + MUM ) ) ) / ( MUM - Max( RCSe,( MUC + CS ) ) ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0013552701776916138}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Const - ( BR + ACS ) ) ) )", "choosing": "( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( RRSe * Min( RRSe ,DS ) ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) - MLU ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( Min( MUC ,Min( RCSe ,CS ) ) ,( ( RRSe + RRSe ) + MUC ) ) - Min( RMSe ,CS ) ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + Min( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) ,BR ) )", "choosing": "Max( ( RMSe / ( MUM - Max( DS,Min( MUM ,MLU ) ) ) ),( Max( RMSe,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) - ( MDR / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server - ARS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUR ) + CS ) / ( RCSe - ( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( Max( MRS,RRS ) - ( ( CRS + ACS ) - RRS ) )", "choosing": "( ( DS * DS ) - ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) - FirstVNF_Mem_Server ) / RRS ) - Max( ( ( FirstVNF_CPU_Server / Const ) / MDR ),AMS ) )", "choosing": "( ( DS + Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) - Min( ( DS / Max( MLU,MLU ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( ( CRS - ( ( PN / FirstVNF_CPU ) / ( FirstVNF_RAM - ( FirstVNF_RAM_Server + AMS ) ) ) ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( ( RMSe - Max( ( ( ( RMSe / DS ) - ( CS + MUC ) ) / Max( ( MUR * CS ),( MUM - CS ) ) ),MUC ) ) * CS ) ) )", "obj1": 0.7531380753138075, "obj2": 0.102438814447725}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( AMS ,( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) - PN ) ) / ( DDR * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( ( MUR + MUR ) * ( DS * ( MUM + ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.28788843214545035}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( PN - ( DDR - Const ) ) - ( ARS * ( ARS * MRS ) ) )", "choosing": "( Max( MUC,( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( Max( RCSe,MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03593652108247972}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( ( ARS * ( ARS * MRS ) ) - ( ( FirstVNF_RAM_Server + ( ARS + ( RRS - ( ( FirstVNF_RAM_Server * Const ) / ( RRS + MRS ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,( Min( Max( MUR,( DS / MLU ) ) ,MUR ) / CS ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( ( RCSe * MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2750813780333645}, {"determining": "Max( ( Min( ARS ,Const ) - ( MDR + RRS ) ),( Min( ( ( BR - ACS ) * FirstVNF_Mem_Server ) ,( FirstVNF_Mem / ( ( FirstVNF_Mem + FirstVNF_CPU ) - MRS ) ) ) * ARS ) )", "choosing": "( ( MUM + RCSe ) - Max( Max( Max( MLU,MUR ),Min( ( ( ( DS - Max( RMSe,MUM ) ) + MUC ) * MUC ) ,( Min( DS ,DS ) * MUR ) ) ),( ( ( ( RMSe * Min( RRSe ,Min( CS ,DS ) ) ) / DS ) + ( RCSe * MUM ) ) * ( ( Max( CS,Max( MUC,RRSe ) ) * CS ) / MUC ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.03152737408396333}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( BR - DDR ) - ( FirstVNF_RAM_Server / ( DDR - ( ( Min( RRS ,RRS ) / ARS ) - ( ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) + ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / DS ) ,RMSe ) - ( ( ( Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) * CS ) / RMSe ) / Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010740111471606585}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - RRS ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( ( RRSe - CS ) + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( RMSe * CS ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008462886915982817}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ARS * ( ARS * MRS ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( Min( MLU ,Min( MUR ,DS ) ) * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.01006516309601843}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ),Min( PN ,PN ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( CS - RRSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( RRSe + MUM ) ) ) / ( MUM - Max( RCSe,( MUC + CS ) ) ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0013552701776916138}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( FirstVNF_RAM - MRS ) - ACS )", "choosing": "( ( CS + Min( ( RMSe / ( RCSe * RMSe ) ) ,( MUC / ( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) - RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Const - ( BR + ACS ) ) ) )", "choosing": "( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( RRSe * Min( RRSe ,DS ) ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) - MLU ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( Min( MUC ,Min( RCSe ,CS ) ) ,( ( RRSe + RRSe ) + MUC ) ) - Min( RMSe ,CS ) ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) / ( DDR + ACS ) )", "choosing": "( ( Max( DS,MUR ) - ( CS / DS ) ) + Min( Max( MLU,RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MRS ) * ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RMSe ) + MUC ) ,( Min( RRSe ,MUC ) * DS ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( FirstVNF_RAM - MRS ) - ( Max( ( ( ( ( ( RRS / CRS ) + FirstVNF_CPU ) * Max( ( ARS + BR ),AMS ) ) * Min( PN ,( Min( FirstVNF_RAM ,AMS ) / Min( MDR ,MRS ) ) ) ) + RRS ),FirstVNF_CPU_Server ) - ( RRS - ( CRS + ARS ) ) ) )", "choosing": "( ( ( DS * ( MUM + MUC ) ) + Min( ( ( ( DS + ( CS / CS ) ) * DS ) / ( RCSe * RMSe ) ) ,( ( Min( MUR ,RRSe ) - ( RRSe + ( ( MLU - MUR ) * MUR ) ) ) / Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( Max( MRS,RRS ) - ( ( CRS + ACS ) - RRS ) )", "choosing": "( ( DS * DS ) - ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( ( CRS - ( ( PN / FirstVNF_CPU ) / ( FirstVNF_RAM - ( FirstVNF_RAM_Server + AMS ) ) ) ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( ( RMSe - Max( ( ( ( RMSe / DS ) - ( CS + MUC ) ) / Max( ( MUR * CS ),( MUM - CS ) ) ),MUC ) ) * CS ) ) )", "obj1": 0.7531380753138075, "obj2": 0.102438814447725}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( AMS ,( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) - PN ) ) / ( DDR * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( ( MUR + MUR ) * ( DS * ( MUM + ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.28788843214545035}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( PN - ( DDR - Const ) ) - ( ARS * ( ARS * MRS ) ) )", "choosing": "( Max( MUC,( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( Max( RCSe,MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03593652108247972}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( ( ARS * ( ARS * MRS ) ) - ( ( FirstVNF_RAM_Server + ( ARS + ( RRS - ( ( FirstVNF_RAM_Server * Const ) / ( RRS + MRS ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,( Min( Max( MUR,( DS / MLU ) ) ,MUR ) / CS ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( ( RCSe * MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2750813780333645}, {"determining": "Max( ( Min( ARS ,Const ) - ( MDR + RRS ) ),( Min( ( ( BR - ACS ) * FirstVNF_Mem_Server ) ,( FirstVNF_Mem / ( ( FirstVNF_Mem + FirstVNF_CPU ) - MRS ) ) ) * ARS ) )", "choosing": "( ( MUM + RCSe ) - Max( Max( Max( MLU,MUR ),Min( ( ( ( DS - Max( RMSe,MUM ) ) + MUC ) * MUC ) ,( Min( DS ,DS ) * MUR ) ) ),( ( ( ( RMSe * Min( RRSe ,Min( CS ,DS ) ) ) / DS ) + ( RCSe * MUM ) ) * ( ( Max( CS,Max( MUC,RRSe ) ) * CS ) / MUC ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.03152737408396333}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( BR - DDR ) - ( FirstVNF_RAM_Server / ( DDR - ( ( Min( RRS ,RRS ) / ARS ) - ( ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) + ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / DS ) ,RMSe ) - ( ( ( Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) * CS ) / RMSe ) / Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010740111471606585}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - RRS ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( ( RRSe - CS ) + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( RMSe * CS ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008462886915982817}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ARS * ( ARS * MRS ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( Min( MLU ,Min( MUR ,DS ) ) * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.01006516309601843}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( ( PN - ( DDR - Const ) ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( Min( RMSe ,RRSe ) / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( RMSe * CS ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0037416858102767396}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ),Min( PN ,PN ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( CS - RRSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( RRSe + MUM ) ) ) / ( MUM - Max( RCSe,( MUC + CS ) ) ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0013552701776916138}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) - FirstVNF_Mem_Server ) / RRS ) - Max( ( ( FirstVNF_CPU_Server / Const ) / MDR ),AMS ) )", "choosing": "( ( DS + Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) - Min( ( DS / Max( MLU,MLU ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - ACS )", "choosing": "( ( CS + Min( ( RMSe / ( RCSe * RMSe ) ) ,( MUC / ( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) - RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Const - ( BR + ACS ) ) ) )", "choosing": "( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( RRSe * Min( RRSe ,DS ) ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) - MLU ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( Min( MUC ,Min( RCSe ,CS ) ) ,( ( RRSe + RRSe ) + MUC ) ) - Min( RMSe ,CS ) ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server - ACS ) + Const ) )", "choosing": "( Min( Min( Min( RRSe ,DS ) ,Max( DS,MLU ) ) ,( ( MUM * DS ) / ( MLU - RRSe ) ) ) - Max( ( ( RCSe / DS ) + Min( MUR ,RRSe ) ),( ( DS / RMSe ) - ( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * MDR ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MLU ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( ( ( DDR + MRS ) - ( FirstVNF_RAM_Server + ACS ) ) - ( AMS + ( ( FirstVNF_CPU + FirstVNF_CPU ) + Min( ACS ,( Min( MRS ,FirstVNF_CPU ) / AMS ) ) ) ) )", "choosing": "( ( ( ( ( ( ( Min( MLU ,CS ) / MUM ) * Max( ( DS * RMSe ),DS ) ) - RMSe ) / MUR ) - MUR ) - ( ( MUM - MUM ) - Min( ( RRSe * MUR ) ,( MLU - RMSe ) ) ) ) - ( ( Min( ( RMSe * MUM ) ,MUC ) / ( ( RCSe * CS ) - MLU ) ) + ( Max( CS,Min( Max( ( RMSe * MLU ),Min( ( MUM + RRSe ) ,RRSe ) ) ,RMSe ) ) + ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( FirstVNF_RAM - MRS ) - ( Max( ( ( ( ( ( RRS / CRS ) + FirstVNF_CPU ) * Max( ( ARS + BR ),AMS ) ) * Min( PN ,( Min( FirstVNF_RAM ,AMS ) / Min( MDR ,MRS ) ) ) ) + RRS ),FirstVNF_CPU_Server ) - ( RRS - ( CRS + ARS ) ) ) )", "choosing": "( ( ( DS * ( MUM + MUC ) ) + Min( ( ( ( DS + ( CS / CS ) ) * DS ) / ( RCSe * RMSe ) ) ,( ( Min( MUR ,RRSe ) - ( RRSe + ( ( MLU - MUR ) * MUR ) ) ) / Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( ( CRS - ( ( PN / FirstVNF_CPU ) / ( FirstVNF_RAM - ( FirstVNF_RAM_Server + AMS ) ) ) ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( ( RMSe - Max( ( ( ( RMSe / DS ) - ( CS + MUC ) ) / Max( ( MUR * CS ),( MUM - CS ) ) ),MUC ) ) * CS ) ) )", "obj1": 0.7531380753138075, "obj2": 0.102438814447725}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( AMS ,( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) - PN ) ) / ( DDR * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( ( MUR + MUR ) * ( DS * ( MUM + ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.28788843214545035}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( PN - ( DDR - Const ) ) - ( ARS * ( ARS * MRS ) ) )", "choosing": "( Max( MUC,( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( Max( RCSe,MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03593652108247972}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( ( ARS * ( ARS * MRS ) ) - ( ( FirstVNF_RAM_Server + ( ARS + ( RRS - ( ( FirstVNF_RAM_Server * Const ) / ( RRS + MRS ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,( Min( Max( MUR,( DS / MLU ) ) ,MUR ) / CS ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( ( RCSe * MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2750813780333645}, {"determining": "Max( ( Min( ARS ,Const ) - ( MDR + RRS ) ),( Min( ( ( BR - ACS ) * FirstVNF_Mem_Server ) ,( FirstVNF_Mem / ( ( FirstVNF_Mem + FirstVNF_CPU ) - MRS ) ) ) * ARS ) )", "choosing": "( ( MUM + RCSe ) - Max( Max( Max( MLU,MUR ),Min( ( ( ( DS - Max( RMSe,MUM ) ) + MUC ) * MUC ) ,( Min( DS ,DS ) * MUR ) ) ),( ( ( ( RMSe * Min( RRSe ,Min( CS ,DS ) ) ) / DS ) + ( RCSe * MUM ) ) * ( ( Max( CS,Max( MUC,RRSe ) ) * CS ) / MUC ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.03152737408396333}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( BR - DDR ) - ( FirstVNF_RAM_Server / ( DDR - ( ( Min( RRS ,RRS ) / ARS ) - ( ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) + ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / DS ) ,RMSe ) - ( ( ( Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) * CS ) / RMSe ) / Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010740111471606585}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - RRS ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( ( RRSe - CS ) + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( RMSe * CS ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008462886915982817}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ARS * ( ARS * MRS ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( Min( MLU ,Min( MUR ,DS ) ) * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.01006516309601843}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( ( PN - ( DDR - Const ) ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( Min( RMSe ,RRSe ) / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( RMSe * CS ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0037416858102767396}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ),Min( PN ,PN ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( CS - RRSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( RRSe + MUM ) ) ) / ( MUM - Max( RCSe,( MUC + CS ) ) ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0013552701776916138}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( Max( MRS,RRS ) - ( ( CRS + ACS ) - RRS ) )", "choosing": "( ( DS * DS ) - ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) - FirstVNF_Mem_Server ) / RRS ) - Max( ( ( FirstVNF_CPU_Server / Const ) / MDR ),AMS ) )", "choosing": "( ( DS + Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) - Min( ( DS / Max( MLU,MLU ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - ACS )", "choosing": "( ( CS + Min( ( RMSe / ( RCSe * RMSe ) ) ,( MUC / ( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) - RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Const - ( BR + ACS ) ) ) )", "choosing": "( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( RRSe * Min( RRSe ,DS ) ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) - MLU ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( Min( MUC ,Min( RCSe ,CS ) ) ,( ( RRSe + RRSe ) + MUC ) ) - Min( RMSe ,CS ) ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( AMS * MDR ) )", "choosing": "Max( Max( MUC,( DS * RRSe ) ),MUR )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "( ( RRS - ( CRS + ARS ) ) - ( Const - FirstVNF_RAM ) )", "choosing": "( ( Max( Max( Max( MUR,MUR ),( MUM * Max( RRSe,Min( ( RMSe / DS ) ,RCSe ) ) ) ),MUM ) * MUC ) - ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( ( DDR + MRS ) - ( FirstVNF_RAM_Server + ACS ) ) - ( AMS + ( ( FirstVNF_CPU + FirstVNF_CPU ) + Min( ACS ,( Min( MRS ,FirstVNF_CPU ) / AMS ) ) ) ) )", "choosing": "( ( ( ( ( ( ( Min( MLU ,CS ) / MUM ) * Max( ( DS * RMSe ),DS ) ) - RMSe ) / MUR ) - MUR ) - ( ( MUM - MUM ) - Min( ( RRSe * MUR ) ,( MLU - RMSe ) ) ) ) - ( ( Min( ( RMSe * MUM ) ,MUC ) / ( ( RCSe * CS ) - MLU ) ) + ( Max( CS,Min( Max( ( RMSe * MLU ),Min( ( MUM + RRSe ) ,RRSe ) ) ,RMSe ) ) + ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( ( CRS - ( ( PN / FirstVNF_CPU ) / ( FirstVNF_RAM - ( FirstVNF_RAM_Server + AMS ) ) ) ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( ( RMSe - Max( ( ( ( RMSe / DS ) - ( CS + MUC ) ) / Max( ( MUR * CS ),( MUM - CS ) ) ),MUC ) ) * CS ) ) )", "obj1": 0.7531380753138075, "obj2": 0.102438814447725}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( AMS ,( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) - PN ) ) / ( DDR * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( ( MUR + MUR ) * ( DS * ( MUM + ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.28788843214545035}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( PN - ( DDR - Const ) ) - ( ARS * ( ARS * MRS ) ) )", "choosing": "( Max( MUC,( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( Max( RCSe,MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03593652108247972}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( ( ARS * ( ARS * MRS ) ) - ( ( FirstVNF_RAM_Server + ( ARS + ( RRS - ( ( FirstVNF_RAM_Server * Const ) / ( RRS + MRS ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,( Min( Max( MUR,( DS / MLU ) ) ,MUR ) / CS ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( ( RCSe * MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2750813780333645}, {"determining": "Max( ( Min( ARS ,Const ) - ( MDR + RRS ) ),( Min( ( ( BR - ACS ) * FirstVNF_Mem_Server ) ,( FirstVNF_Mem / ( ( FirstVNF_Mem + FirstVNF_CPU ) - MRS ) ) ) * ARS ) )", "choosing": "( ( MUM + RCSe ) - Max( Max( Max( MLU,MUR ),Min( ( ( ( DS - Max( RMSe,MUM ) ) + MUC ) * MUC ) ,( Min( DS ,DS ) * MUR ) ) ),( ( ( ( RMSe * Min( RRSe ,Min( CS ,DS ) ) ) / DS ) + ( RCSe * MUM ) ) * ( ( Max( CS,Max( MUC,RRSe ) ) * CS ) / MUC ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.03152737408396333}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( BR - DDR ) - ( FirstVNF_RAM_Server / ( DDR - ( ( Min( RRS ,RRS ) / ARS ) - ( ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) + ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / DS ) ,RMSe ) - ( ( ( Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) * CS ) / RMSe ) / Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010740111471606585}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - RRS ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( ( RRSe - CS ) + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( RMSe * CS ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008462886915982817}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ARS * ( ARS * MRS ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( Min( MLU ,Min( MUR ,DS ) ) * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.01006516309601843}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( ( PN - ( DDR - Const ) ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( Min( RMSe ,RRSe ) / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( RMSe * CS ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0037416858102767396}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ),Min( PN ,PN ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( CS - RRSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( RRSe + MUM ) ) ) / ( MUM - Max( RCSe,( MUC + CS ) ) ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0013552701776916138}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( FirstVNF_RAM - MRS ) - ( Max( ( ( ( ( ( RRS / CRS ) + FirstVNF_CPU ) * Max( ( ARS + BR ),AMS ) ) * Min( PN ,( Min( FirstVNF_RAM ,AMS ) / Min( MDR ,MRS ) ) ) ) + RRS ),FirstVNF_CPU_Server ) - ( RRS - ( CRS + ARS ) ) ) )", "choosing": "( ( ( DS * ( MUM + MUC ) ) + Min( ( ( ( DS + ( CS / CS ) ) * DS ) / ( RCSe * RMSe ) ) ,( ( Min( MUR ,RRSe ) - ( RRSe + ( ( MLU - MUR ) * MUR ) ) ) / Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,RRS ) - ( ( CRS + ACS ) - RRS ) )", "choosing": "( ( DS * DS ) - ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) - FirstVNF_Mem_Server ) / RRS ) - Max( ( ( FirstVNF_CPU_Server / Const ) / MDR ),AMS ) )", "choosing": "( ( DS + Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) - Min( ( DS / Max( MLU,MLU ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - ACS )", "choosing": "( ( CS + Min( ( RMSe / ( RCSe * RMSe ) ) ,( MUC / ( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) - RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Const - ( BR + ACS ) ) ) )", "choosing": "( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( RRSe * Min( RRSe ,DS ) ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) - MLU ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( Min( MUC ,Min( RCSe ,CS ) ) ,( ( RRSe + RRSe ) + MUC ) ) - Min( RMSe ,CS ) ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) - Max( PN,Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Const ) ) )", "choosing": "( Min( RCSe ,Max( ( MUR * MLU ),( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) ) ) / ( CS - ( ( MUR / RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( ( RRS - ( CRS + ARS ) ) - ( Const - FirstVNF_RAM ) )", "choosing": "( ( CS + Min( ( ( ( DS + ( CS / CS ) ) * DS ) / ( RCSe * RMSe ) ) ,( ( Min( MUR ,RRSe ) - ( RRSe + ( ( MLU - MUR ) * MUR ) ) ) / Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( RRS - ( CRS + ARS ) ) - ( Const - FirstVNF_RAM ) )", "choosing": "( ( Max( Max( Max( MUR,MUR ),( MUM * Max( RRSe,Min( ( RMSe / DS ) ,RCSe ) ) ) ),MUM ) * MUC ) - ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5648535564853556, "obj2": 0.3044816319964803}, {"determining": "( ( ( CRS - ( ( PN / FirstVNF_CPU ) / ( FirstVNF_RAM - ( FirstVNF_RAM_Server + AMS ) ) ) ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( ( RMSe - Max( ( ( ( RMSe / DS ) - ( CS + MUC ) ) / Max( ( MUR * CS ),( MUM - CS ) ) ),MUC ) ) * CS ) ) )", "obj1": 0.7531380753138075, "obj2": 0.102438814447725}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_RAM * MRS ) / ( Min( ( RRS / ( DDR * MDR ) ) ,FirstVNF_CPU_Server ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR * Min( ( DS - MUR ) ,MUC ) ) ,RMSe ) - Max( MUR,( ( ( MUM - ( ( CS + ( MUM * MUM ) ) - MUR ) ) + DS ) / CS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.1892806866977536}, {"determining": "( Min( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) ,FirstVNF_CPU_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM + MUM ) * ( Min( RCSe ,RCSe ) * MLU ) )", "obj1": 0.7259414225941423, "obj2": 0.13041735169235463}, {"determining": "( ( ( PN + Const ) - PN ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( ( ( MUM * RMSe ) / MLU ),RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.21342456100340879}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.6903765690376569, "obj2": 0.16664620381114173}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Max( MUR,DS ) )", "obj1": 0.6317991631799164, "obj2": 0.21458902675579816}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( ( ( RRSe * Min( ( Min( Max( RMSe,RMSe ) ,MUC ) / MUC ) ,DS ) ) / ( CS - RRSe ) ) - DS ) - MUR )", "obj1": 0.7949790794979079, "obj2": 0.10065538918170835}, {"determining": "( Max( CRS,ARS ) - ( DDR * Max( Max( ( DDR + MDR ),MDR ),MDR ) ) )", "choosing": "( Max( MUC,MUC ) - ( CS + ( ( Max( DS,( MUM / Max( RRSe,MUC ) ) ) - MLU ) - Min( MUR ,( MUC / ( RCSe + ( Min( DS ,DS ) + ( MUC * MUC ) ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.14800906350434337}, {"determining": "( DDR / Min( ( FirstVNF_RAM_Server - DDR ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Max( MLU,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.23321806254397695}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Min( ( BR - Const ) ,( FirstVNF_CPU_Server / ( CRS * Min( BR ,ACS ) ) ) ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.801255230125523, "obj2": 0.08287306749309983}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( MDR / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.7238493723849372, "obj2": 0.14709661979360994}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),( ( FirstVNF_RAM_Server / ACS ) - RRS ) ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( MUC / CS ) ) + MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.038800387443294865}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.06081617100799225}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - FirstVNF_RAM_Server )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07540731399828492}, {"determining": "( Min( AMS ,( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) - PN ) ) / ( DDR * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( ( MUR + MUR ) * ( DS * ( MUM + ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5794979079497908, "obj2": 0.28788843214545035}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( FirstVNF_CPU - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / RCSe ) - CS ) - ( CS + ( CS - ( MUR - RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.09382876804905607}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( Max( BR,ACS ) - ( ( ( ( Min( ( ( FirstVNF_Mem - FirstVNF_CPU ) + ARS ) ,MRS ) - ACS ) * PN ) + ( RRS + ( ( DDR + Max( ( MDR - FirstVNF_CPU_Server ),MRS ) ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( MUR - ( RMSe / ( Max( MUC,Max( ( ( MUR * MLU ) / RMSe ),MUR ) ) * RMSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.25177826284575944}, {"determining": "( ( MRS - ( ( RRS * RRS ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / ( RMSe * CS ) )", "obj1": 0.6129707112970711, "obj2": 0.2566223020539715}, {"determining": "( ( PN - ( DDR - Const ) ) - ( ARS * ( ARS * MRS ) ) )", "choosing": "( Max( MUC,( ( MLU * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( Max( RCSe,MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.9100418410041841, "obj2": 0.03593652108247972}, {"determining": "( ( MRS - RRS ) / DDR )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.604602510460251, "obj2": 0.2620548085841934}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,( Max( MUR,DS ) + ( MLU - MUC ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.027654250316320128}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / ( MUR - MLU ) ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.045454165663142504}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( ( Max( MUR,DS ) + ( MLU - MUC ) ) / Min( DS ,CS ) ) / Min( DS ,CS ) )", "obj1": 0.9267782426778243, "obj2": 0.0312187990119872}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( FirstVNF_RAM_Server / ACS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( ( MUM + MUM ) + MUM ) ) ) )", "obj1": 0.8702928870292888, "obj2": 0.050701357146074426}, {"determining": "( Min( AMS ,FirstVNF_CPU ) / ( FirstVNF_CPU / Max( ( ( ( FirstVNF_RAM - AMS ) / MRS ) / MDR ),MDR ) ) )", "choosing": "( Max( MUR,RCSe ) / ( Min( RMSe ,MUM ) + ( ( ( ( MUM / ( ( MUC - MUC ) / RMSe ) ) + MUR ) * ( DS * ( MUM * ( Min( RCSe ,MUR ) + RCSe ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( FirstVNF_CPU - ( DDR + Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - RCSe ) ) ) - ( MUR + Max( ( RRSe - ( MUM * MUM ) ),( Max( ( RRSe - ( MUM - MUM ) ),( MUM * ( RCSe / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9497907949790795, "obj2": 0.01950381766442245}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUR ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.0636605974392093}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - RRS ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( ( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - MRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04624312825043204}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ARS * PN ),AMS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( RRSe / ( RMSe / DS ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01655038020720194}, {"determining": "( ( Min( MDR ,( ( DDR - PN ) * MRS ) ) - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( CS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9435146443514645, "obj2": 0.025149847847903365}, {"determining": "( ( ARS * ( ARS * MRS ) ) - ( ( FirstVNF_RAM_Server + ( ARS + ( RRS - ( ( FirstVNF_RAM_Server * Const ) / ( RRS + MRS ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( MUC,( Min( Max( MUR,( DS / MLU ) ) ,MUR ) / CS ) ) - Max( ( ( ( DS + MUR ) - RCSe ) * MUR ),( ( ( Max( RRSe,MUM ) + ( ( ( RCSe * MUM ) + MLU ) - RCSe ) ) - MLU ) - ( Max( Min( Min( MLU ,Min( MUR ,DS ) ) ,MUC ),( Max( RMSe,Max( DS,RRSe ) ) - MUR ) ) / MUM ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.2750813780333645}, {"determining": "Max( ( Min( ARS ,Const ) - ( MDR + RRS ) ),( Min( ( ( BR - ACS ) * FirstVNF_Mem_Server ) ,( FirstVNF_Mem / ( ( FirstVNF_Mem + FirstVNF_CPU ) - MRS ) ) ) * ARS ) )", "choosing": "( ( MUM + RCSe ) - Max( Max( Max( MLU,MUR ),Min( ( ( ( DS - Max( RMSe,MUM ) ) + MUC ) * MUC ) ,( Min( DS ,DS ) * MUR ) ) ),( ( ( ( RMSe * Min( RRSe ,Min( CS ,DS ) ) ) / DS ) + ( RCSe * MUM ) ) * ( ( Max( CS,Max( MUC,RRSe ) ) * CS ) / MUC ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.03152737408396333}, {"determining": "( ( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - CRS ) - DDR )", "choosing": "( ( Max( MUR,DS ) + ( ( Max( MUR,DS ) + ( MLU - MUC ) ) - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.9456066945606695, "obj2": 0.023458072857053886}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MUR ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.01477478225282496}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28056911377595056}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + FirstVNF_Mem ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( ( DS * RRSe ) / ( Max( CS,MLU ) - ( Max( DS,RRSe ) / Max( DS,( ( RCSe + ( MUC * ( MUM - MLU ) ) ) * CS ) ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.012394314267377386}, {"determining": "( ( MRS - ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) ) / Max( ( RRS * MRS ),PN ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Max( ( DS * RCSe ),MUC ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5690376569037657, "obj2": 0.3004891255595781}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS - ( Max( MLU,( MLU - ( ( RCSe + MUR ) / ( CS - MUR ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,MLU ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05427295605321563}, {"determining": "( ( ( FirstVNF_Mem_Server - CRS ) - DDR ) - DDR )", "choosing": "( ( Min( DS ,CS ) + ( MLU - MUC ) ) / Min( DS ,CS ) )", "obj1": 0.8661087866108786, "obj2": 0.05399795182243859}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06602823028432664}, {"determining": "( ( BR - DDR ) - ( FirstVNF_RAM_Server / ( DDR - ( ( Min( RRS ,RRS ) / ARS ) - ( ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) + ( Max( PN,FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server * PN ) + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / DS ) ,RMSe ) - ( ( ( Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) * CS ) / RMSe ) / Max( MUC,( ( ( MUM + DS ) / ( RMSe / RCSe ) ) * MUR ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010740111471606585}, {"determining": "( ( MRS - RRS ) / ( ( FirstVNF_RAM_Server - DDR ) * ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,RCSe ) ,( MLU * ( CS + Min( RCSe ,( MUR + MUC ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2452320945191321}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - RRS ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( ( RRSe - CS ) + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( RMSe * CS ) ) )", "obj1": 0.9748953974895398, "obj2": 0.008462886915982817}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( Max( PN,MDR ) / ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( MUR - ( ( ( RCSe + Max( MUR,CS ) ) / ( CS - RRSe ) ) - Max( ( MLU - MUC ),( RMSe / ( ( CS - ( MLU / MUM ) ) - MLU ) ) ) ) )", "obj1": 0.696652719665272, "obj2": 0.1637919230489124}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) - ( ( ( DDR + DDR ) - ( DDR - MRS ) ) + FirstVNF_Mem ) )", "choosing": "( ( RCSe + RCSe ) / MUR )", "obj1": 0.9832635983263598, "obj2": 0.005471295513351783}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - MLU ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07222129807196676}, {"determining": "( ( MRS - RRS ) / ( ( RRS * DDR ) - Min( ( Max( DDR,AMS ) / ( ( DDR - PN ) * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MUR ) ,( MLU * ( CS + Min( MLU ,Max( MUM,MUM ) ) ) ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5669456066945606, "obj2": 0.30439399306725334}, {"determining": "( ( MRS - ( ( RRS * ( ( DDR - PN ) * MRS ) ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( ( CS + MUR ) ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2726252763280728}, {"determining": "( Min( ( PN - ( DDR - Const ) ) ,( ARS * ( ARS * MRS ) ) ) - MRS )", "choosing": "( ( Max( MUC,MUC ) * ( ( ( Min( MLU ,Min( MUR ,DS ) ) * ( ( RCSe + Min( RMSe ,RRSe ) ) + ( Min( MLU ,RRSe ) * MUC ) ) ) - MLU ) + CS ) ) - ( CS + ( CS - ( MUM + MUM ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.01006516309601843}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( CS + ( CS - ( Max( ( DS + Min( MLU ,( MUR - DS ) ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06653946194518069}, {"determining": "( Min( ( ( ( ( FirstVNF_RAM_Server / ACS ) - RRS ) / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUC / CS ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + Max( ( CS + MUR ),MUR ) ) ) * ( MLU / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / MLU ) - ( ( Min( ( MUR * RCSe ) ,( ( RCSe / ( RMSe - ( RCSe + RCSe ) ) ) - CS ) ) + CS ) - ( ( MUR / DS ) * CS ) ) )", "obj1": 0.9874476987447699, "obj2": 0.005449402546722752}, {"determining": "( ( MRS - ( ( PN / MDR ) - ( Min( MDR ,( MRS * ( ( PN + Const ) - PN ) ) ) / FirstVNF_Mem ) ) ) / Min( RRS ,( ( RRS + ARS ) / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( ( MRS - ( ARS * FirstVNF_RAM ) ) / Min( RRS ,FirstVNF_CPU ) ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,DS ) )", "obj1": 0.5732217573221757, "obj2": 0.2989026264057507}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03329795919511396}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( ( MUM / ( RMSe + ( MUC * RMSe ) ) ),Max( MUR,MLU ) ) / ( DS + ( Min( ( ( ( RCSe - MLU ) / ( Max( CS,RCSe ) + MUR ) ) / MLU ) ,( MUM * MLU ) ) * ( CS * MUM ) ) ) )", "obj1": 0.606694560669456, "obj2": 0.2603292664330081}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / ( ( DDR - PN ) * MRS ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( ( MRS - ( ( RRS * DDR ) - ( Min( MDR ,( ( DDR - PN ) * MRS ) ) / RRS ) ) ) / Min( RRS ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,MLU ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5878661087866108, "obj2": 0.28575248997836666}, {"determining": "( ( ( PN - ( DDR - Const ) ) * PN ) - MRS )", "choosing": "( ( ( ( MUR * ( MUC * RMSe ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( Min( RMSe ,RRSe ) / MUM ) ) ) ) + RMSe ) - ( ( ( CS + CS ) + MUR ) + ( RMSe * CS ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0037416858102767396}, {"determining": "( Min( ( ( Const / ( Max( DDR,FirstVNF_CPU ) - ( CRS - FirstVNF_CPU ) ) ) - DDR ) ,MRS ) - ( ( RRS - MRS ) - BR ) )", "choosing": "( DS - ( ( ( RRSe * Min( ( DS + ( RCSe / MLU ) ) ,DS ) ) / ( CS - RRSe ) ) - CS ) )", "obj1": 0.9916317991631799, "obj2": 0.0034507328852594046}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( RRS ,FirstVNF_CPU ) / ( MRS - ( ( RRS * DDR ) / ( Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( Max( Max( DDR,DDR ),PN ) * MRS ) ) / RRS ) ) ) )", "choosing": "( Max( MUR,( ( CS + MUR ) * MLU ) ) / Min( DS ,( Min( Max( MLU,Min( Max( MLU,MLU ) ,( MLU * MUM ) ) ) ,( MLU * MUM ) ) * ( RMSe * CS ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2820975728608446}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ( MDR / FirstVNF_RAM ) ) - RRS ),MRS ) ) ,ARS ) - ARS )", "choosing": "( ( Min( ( ( ( ( MUR / RCSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( MUM + MUM ) ) ) / ( MUM - RRSe ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00675671284040039}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( MDR / PN ) ),Min( PN ,PN ) ) ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( Min( ( ( ( ( CS - RRSe ) * RMSe ) * ( ( RCSe - ( RCSe * MUM ) ) + RCSe ) ) * ( RCSe / MUC ) ) ,( RCSe - ( RRSe + MUM ) ) ) / ( MUM - Max( RCSe,( MUC + CS ) ) ) ) - ( CS - ( Max( MLU,( MLU - ( MLU - ( Min( CS ,MUR ) - CS ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0013552701776916138}, {"determining": "( ( FirstVNF_CPU - ( DDR + ( Min( FirstVNF_Mem_Server ,( Min( ACS ,MRS ) * FirstVNF_CPU_Server ) ) + PN ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( MUR + ( ( MUR + RRSe ) - ( MUC - ( Min( RMSe ,MLU ) + ( MLU - RMSe ) ) ) ) ) - ( MUR + Max( ( RRSe - ( RCSe * MUM ) ),( ( RCSe / MUC ) * MUM ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ( Max( ( ( FirstVNF_RAM_Server / ACS ) - RRS ),Max( MDR,Min( PN ,PN ) ) ) - ( ( ( PN + FirstVNF_RAM ) + ( ( ( MDR - MRS ) * MRS ) + ( RRS * ( DDR + MDR ) ) ) ) + MDR ) ) ,( RRS + FirstVNF_Mem ) ) - MRS )", "choosing": "( ( ( ( MLU - Max( MUR,( Min( Max( RRSe,MUR ) ,DS ) / Min( MUC ,RCSe ) ) ) ) * ( RCSe * ( Max( ( CS + RCSe ),MUC ) / ( MUM / MUM ) ) ) ) + RMSe ) - ( CS + ( Max( MLU,Max( ( RMSe - RMSe ),( RCSe / Max( MUM,( MUC / MUR ) ) ) ) ) - ( Max( ( DS + Min( ( MUR - DS ) ,RMSe ) ),( RCSe + Max( ( CS + MUR ),MUR ) ) ) + MUM ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( BR + AMS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( RMSe / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 0.9937238493723849, "obj2": 0.0018994680527785167}, {"determining": "( ( ACS - ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_CPU ) ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe / ( MLU * Min( RCSe ,( RMSe + MUC ) ) ) ) - ( MUR * Max( ( ( ( ( RRSe / MUR ) / MUR ) * MUM ) - RRSe ),( MUR * Max( ( DS + Max( MUR,DS ) ),Max( ( RRSe + MUC ),Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.03315382488966633}, {"determining": "( ( ( DDR + MRS ) - ( FirstVNF_RAM_Server + ACS ) ) - ( AMS + ( ( FirstVNF_CPU + FirstVNF_CPU ) + Min( ACS ,( Min( MRS ,FirstVNF_CPU ) / AMS ) ) ) ) )", "choosing": "( ( ( ( ( ( ( Min( MLU ,CS ) / MUM ) * Max( ( DS * RMSe ),DS ) ) - RMSe ) / MUR ) - MUR ) - ( ( MUM - MUM ) - Min( ( RRSe * MUR ) ,( MLU - RMSe ) ) ) ) - ( ( Min( ( RMSe * MUM ) ,MUC ) / ( ( RCSe * CS ) - MLU ) ) + ( Max( CS,Min( Max( ( RMSe * MLU ),Min( ( MUM + RRSe ) ,RRSe ) ) ,RMSe ) ) + ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - ( Max( ( ( ( ( ( RRS / CRS ) + FirstVNF_CPU ) * Max( ( ARS + BR ),AMS ) ) * Min( PN ,( Min( FirstVNF_RAM ,AMS ) / Min( MDR ,MRS ) ) ) ) + RRS ),FirstVNF_CPU_Server ) - ( RRS - ( CRS + ARS ) ) ) )", "choosing": "( ( ( DS * ( MUM + MUC ) ) + Min( ( ( ( DS + ( CS / CS ) ) * DS ) / ( RCSe * RMSe ) ) ,( ( Min( MUR ,RRSe ) - ( RRSe + ( ( MLU - MUR ) * MUR ) ) ) / Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,RRS ) - ( ( CRS + ACS ) - RRS ) )", "choosing": "( ( DS * DS ) - ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) - FirstVNF_Mem_Server ) / RRS ) - Max( ( ( FirstVNF_CPU_Server / Const ) / MDR ),AMS ) )", "choosing": "( ( DS + Min( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) ,RMSe ) ) - Min( ( DS / Max( MLU,MLU ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - ACS )", "choosing": "( ( CS + Min( ( RMSe / ( RCSe * RMSe ) ) ,( MUC / ( ( RRSe - Max( Min( RMSe ,MUR ),RRSe ) ) - RMSe ) ) ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Const - ( BR + ACS ) ) ) )", "choosing": "( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( RRSe * Min( RRSe ,DS ) ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( CRS + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) - MLU ) - ( ( ( ( ( MUC + ( Max( MUC,MUC ) - RRSe ) ) + Max( Min( RRSe ,CS ),Min( MLU ,( RRSe / DS ) ) ) ) * MUM ) / ( ( Min( Min( MUC ,Min( RCSe ,CS ) ) ,( ( RRSe + RRSe ) + MUC ) ) - Min( RMSe ,CS ) ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( Min( RCSe ,CS ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) ) - ( Const / FirstVNF_CPU ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),( ( CS - MUR ) / DS ) ) ) * MUM ) / ( ( Min( ( CS + MLU ) ,( MLU - MUM ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) - ( Const / PN ) )", "choosing": "( ( Max( ( DS * RCSe ),RCSe ) / MLU ) - ( ( ( ( ( MUC + MUR ) + Max( Min( RRSe ,MUC ),Min( CS ,DS ) ) ) * MUM ) / ( ( Min( ( MLU - MUM ) ,( CS + MLU ) ) * RRSe ) - Min( RCSe ,MUM ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + CRS ) - DDR ) - Max( ( FirstVNF_CPU * ( AMS + Min( RRS ,( ARS - ACS ) ) ) ),MRS ) )", "choosing": "( ( ( ( DS * RMSe ) * ( MLU + MUC ) ) / CS ) - ( Min( ( MUC * CS ) ,Min( ( MLU / RCSe ) ,( MUR * ( ( CS + ( MUM + MUC ) ) + CS ) ) ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - MRS ) - AMS )", "choosing": "( ( CS + Min( ( RMSe / ( ( RCSe * RMSe ) * RMSe ) ) ,RCSe ) ) - ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,AMS ) * Min( AMS ,MDR ) ) - ( ( Max( ( MDR / ( FirstVNF_CPU_Server * Const ) ),( PN * AMS ) ) + PN ) + DDR ) ) ,( ( Min( FirstVNF_CPU ,( ACS * ( Max( CRS,ACS ) * FirstVNF_Mem_Server ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( MLU * ( RMSe * MUC ) ) ,( MUM - MUR ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,( MLU / Min( MLU ,MUR ) ) ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) - DDR )", "choosing": "( Min( ( MUR * Max( RRSe,RRSe ) ) ,RMSe ) - Max( RCSe,( ( MLU - Max( MLU,Min( Min( ( DS / RMSe ) ,RMSe ) ,RRSe ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,Min( RRS ,Min( AMS ,PN ) ) ) - Const ) - BR ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / MUR ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,Min( ( Max( Max( RMSe,CS ),MUM ) / Max( MUM,Max( ( RRSe / MUM ),RRSe ) ) ) ,Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( PN + MDR ) )", "choosing": "Min( ( ( MLU * DS ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),RMSe ) * ( ( DS / MUR ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - ( Const + CRS ) )", "choosing": "Max( ( ( DS * Min( CS ,MUR ) ) / ( DS - RRSe ) ),( MUC * ( ( MUM * DS ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / FirstVNF_RAM ) ,( ( Min( FirstVNF_CPU ,( ACS * ACS ) ) - Const ) - ARS ) )", "choosing": "Min( Min( Max( Min( MLU ,Min( ( ( RMSe * MUC ) * MLU ) ,( MUC * ( RMSe / ( RRSe + RCSe ) ) ) ) ),( RCSe + RCSe ) ) ,Max( Min( DS ,MUM ),Min( RCSe ,RRSe ) ) ) ,Min( ( ( RCSe * RMSe ) - ( RMSe + DS ) ) ,( ( CS - MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - Max( ( ( BR - ( Const - ( Max( ARS,FirstVNF_RAM ) / CRS ) ) ) + DDR ),Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) ) * ( Min( MUR ,DS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - BR ),( PN + FirstVNF_RAM_Server ) ) + ( Min( AMS ,FirstVNF_Mem ) * ( ARS / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) / CRS ) )", "choosing": "Min( ( Min( Max( RRSe,RMSe ) ,( Min( ( MUM * MUR ) ,MUR ) + RCSe ) ) - Max( ( DS * MLU ),( DS - MUM ) ) ) ,( Max( ( CS + RRSe ),( MUC * MUC ) ) * ( ( DS / MUC ) * Min( MUR ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}