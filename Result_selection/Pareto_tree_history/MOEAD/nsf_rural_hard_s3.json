{"1": [{"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( Const * DDR ) + BR ) )", "choosing": "( ( Min( Max( DS,CS ) ,( RRSe * RRSe ) ) / ( Max( CS,RRSe ) - Min( MUM ,MLU ) ) ) - Min( Min( ( MUC + RCSe ) ,( CS + CS ) ) ,( ( DS / MUR ) + Max( RCSe,RCSe ) ) ) )", "obj1": 0.7112970711297071, "obj2": 0.2618593747190572}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe + RRSe ) + ( RMSe + MUR ) )", "obj1": 0.7322175732217573, "obj2": 0.2859696401986063}, {"determining": "Max( ( RRS * ACS ),Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.6694560669456067, "obj2": 0.26163724570017627}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) + Max( MRS,Const ) )", "choosing": "Min( Min( DS ,MUM ) ,( MUC + RRSe ) )", "obj1": 0.7468619246861925, "obj2": 0.23437414651114247}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( RCSe / RMSe ) / ( RRSe + RRSe ) )", "obj1": 0.696652719665272, "obj2": 0.2744826127686358}, {"determining": "Max( ( ARS - Const ),( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( ( MUC / MUR ) * ( MUC + CS ) )", "obj1": 0.7259414225941423, "obj2": 0.2660898406946149}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.7343096234309623, "obj2": 0.27964377837371135}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "( Min( MLU ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) + ( FirstVNF_RAM + CRS ) )", "choosing": "( ( RMSe * RCSe ) + Max( MUM,RRSe ) )", "obj1": 0.7050209205020921, "obj2": 0.27989606806657114}, {"determining": "( ( AMS - PN ) * ( Const - RRS ) )", "choosing": "Max( ( CS + CS ),( DS + CS ) )", "obj1": 0.6548117154811716, "obj2": 0.26762251486086497}, {"determining": "Min( Max( DDR,FirstVNF_Mem_Server ) ,( ACS / DDR ) )", "choosing": "Min( ( CS * MUM ) ,Min( RRSe ,DS ) )", "obj1": 0.7343096234309623, "obj2": 0.23595201617879805}, {"determining": "( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU - ARS ) )", "choosing": "Max( ( MUR * MUR ),Min( RRSe ,RCSe ) )", "obj1": 0.7175732217573222, "obj2": 0.29761076452971785}, {"determining": "Max( ( RRS * CRS ),( CRS - ARS ) )", "choosing": "Min( ( MUC / MUR ) ,Max( MUM,RMSe ) )", "obj1": 0.6652719665271967, "obj2": 0.2742609139115225}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( Max( RMSe,RRSe ) - Max( RCSe,DS ) )", "obj1": 0.805439330543933, "obj2": 0.16466475378507067}, {"determining": "Min( ( ( RRS + ACS ) + ( Const - Const ) ) ,Max( ( DDR - PN ),Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MLU + RCSe ) + DS ),( RMSe + MLU ) )", "obj1": 0.7635983263598326, "obj2": 0.25051371745250794}, {"determining": "( ( ( ACS * FirstVNF_Mem ) - ( RRS / RRS ) ) / ( Max( PN,MRS ) * Max( BR,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR * MUM ),( RMSe + DS ) ) * Min( CS ,CS ) )", "obj1": 0.9602510460251046, "obj2": 0.03939061609200024}, {"determining": "Min( ( Max( BR,FirstVNF_RAM_Server ) + Max( FirstVNF_RAM,ACS ) ) ,( ( FirstVNF_RAM + FirstVNF_RAM ) * Max( MDR,ARS ) ) )", "choosing": "Min( Min( ( RMSe * MUR ) ,( CS * RRSe ) ) ,Max( ( CS - MUC ),Min( RMSe ,MUM ) ) )", "obj1": 0.7447698744769874, "obj2": 0.26807386734737926}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "( Min( ( FirstVNF_Mem_Server - CRS ) ,( CRS / FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "Min( ( ( RRSe * MLU ) + DS ) ,Min( MLU ,MLU ) )", "obj1": 0.7447698744769874, "obj2": 0.27178893379143737}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,PN ) ,( FirstVNF_Mem_Server / DDR ) ) ,( ( FirstVNF_CPU * CRS ) + ( MDR * MRS ) ) )", "choosing": "( Min( ( MUM / MUR ) ,Min( MUC ,MUR ) ) - ( RRSe - Min( CS ,MUC ) ) )", "obj1": 0.7050209205020921, "obj2": 0.26500300479632927}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - AMS ) / ( BR * ( MDR - DDR ) ) )", "choosing": "( ( ( DS / RMSe ) / MUC ) * ( MUM + MUM ) )", "obj1": 0.7845188284518828, "obj2": 0.20828393925461372}, {"determining": "Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) )", "choosing": "( Min( RCSe ,MLU ) - Max( ( RRSe / MUM ),RRSe ) )", "obj1": 0.7154811715481172, "obj2": 0.25940271422769295}, {"determining": "Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6255230125523012, "obj2": 0.26987638727168156}, {"determining": "Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( PN ,ACS ) )", "choosing": "Min( ( Max( RCSe,DS ) - CS ) ,( Min( MUM ,MUR ) * MUC ) )", "obj1": 0.694560669456067, "obj2": 0.25218639276121396}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + FirstVNF_RAM_Server ) / Min( FirstVNF_Mem ,MDR ) ) - ( Min( RRS ,MRS ) * Max( ARS,ARS ) ) )", "choosing": "Min( ( Min( CS ,MUR ) * ( DS + RRSe ) ) ,( ( RMSe + RCSe ) * Max( RMSe,MLU ) ) )", "obj1": 0.6903765690376569, "obj2": 0.25797935150559664}, {"determining": "( ( ( CRS + FirstVNF_CPU ) / Min( ARS ,RRS ) ) * ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - Max( MDR,BR ) ) )", "choosing": "( ( ( MUC / MUM ) / RCSe ) / Min( MUC ,RMSe ) )", "obj1": 0.7112970711297071, "obj2": 0.26196110715885135}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS * PN ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( CS + RCSe ) * ( MUM / RRSe ) )", "obj1": 0.7343096234309623, "obj2": 0.2670109489266611}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( FirstVNF_Mem / MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) ,( Min( FirstVNF_CPU ,ACS ) - ( Const / CRS ) ) ),( ( Min( AMS ,ACS ) + ( FirstVNF_Mem + ARS ) ) - Max( Max( MDR,FirstVNF_Mem_Server ),( DDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC / MUR ) * ( MUR - RRSe ) ) / ( ( RMSe + MUR ) + Max( MUR,RRSe ) ) ) * ( ( Max( MUM,RCSe ) - ( CS * RMSe ) ) + ( ( MUC / CS ) - ( MUC + RMSe ) ) ) )", "obj1": 0.7112970711297071, "obj2": 0.25887563130435404}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / Min( ( AMS * FirstVNF_RAM ) ,Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,Min( ( MDR + FirstVNF_CPU ) ,( ACS - ARS ) ) ) )", "choosing": "Max( ( ( Min( CS ,RCSe ) * ( MUC / MLU ) ) / ( ( MLU - CS ) + ( CS * RRSe ) ) ),( ( Min( RMSe ,MLU ) - Min( MUR ,CS ) ) * ( Min( CS ,MUR ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.26895972891034364}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( ( FirstVNF_Mem_Server * MRS ) - ( BR + MDR ) ),Min( Min( PN ,FirstVNF_CPU ) ,( MRS * FirstVNF_CPU ) ) ),Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( ( CS - MUM ) + ( RMSe / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.2556009388842175}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RMSe ) - MUR ) - ( RRSe - MLU ) ) / ( ( RRSe / MLU ) * ( ( MUM - RMSe ) + RRSe ) ) )", "obj1": 0.7468619246861925, "obj2": 0.27081420249426125}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( ARS + RRS ) ) / ( ( AMS / FirstVNF_CPU_Server ) / ( ARS / RRS ) ) ) + ( Max( ( FirstVNF_CPU_Server + CRS ),( MDR * ACS ) ) / ( Max( FirstVNF_CPU,MRS ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "Min( Max( Min( ( MLU * DS ) ,( CS - RMSe ) ),( ( MLU + DS ) + ( MUC / MUC ) ) ) ,Min( ( Min( CS ,RRSe ) + ( CS + MUC ) ) ,( Max( DS,RRSe ) - ( MUC + RCSe ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.28486325988849015}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( Min( CS ,MUR ) + ( MUC * MUR ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.27384613424333737}, {"determining": "( ( BR - MRS ) / ( BR * BR ) )", "choosing": "Max( ( Min( Max( MUR,RMSe ) ,( MUR / MUR ) ) / ( ( MLU - MUR ) * ( RCSe + RCSe ) ) ),( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) / ( Max( MLU,CS ) - Min( MUC ,CS ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.28728228857846977}, {"determining": "( ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( Min( ( ACS / FirstVNF_CPU ) ,( BR - Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - MUC ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.23878195257761928}, {"determining": "Min( Max( MDR,FirstVNF_RAM ) ,Max( FirstVNF_RAM,Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) ) )", "choosing": "( ( CS / Max( DS,MUR ) ) / Max( MUM,RMSe ) )", "obj1": 0.7343096234309623, "obj2": 0.26258105562267403}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( Const - FirstVNF_Mem_Server ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) + Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RRSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + Max( MUR,Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / BR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - BR ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Min( RCSe ,( DS + MLU ) ) * ( MUR - RRSe ) )", "obj1": 0.6401673640167364, "obj2": 0.2624750376107921}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) * ( MRS / ACS ) )", "choosing": "( ( ( Min( DS ,RMSe ) * Max( MLU,MUR ) ) + ( ( RCSe * MUR ) * ( RRSe / RCSe ) ) ) - ( Max( ( MLU - RMSe ),( RMSe * DS ) ) * Min( ( DS / DS ) ,( MUM + MUC ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.2649118175564347}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( BR * ACS ) )", "choosing": "( ( Max( ( MUR * RCSe ),Min( MUR ,MUC ) ) / ( ( CS / MUC ) * ( RMSe / RMSe ) ) ) / ( Min( ( MUC * MLU ) ,( MLU + RMSe ) ) / ( ( RRSe - MUR ) - ( MUC - DS ) ) ) )", "obj1": 0.700836820083682, "obj2": 0.27290692275902684}, {"determining": "Max( ( Max( ( PN / MRS ),Min( RRS ,RRS ) ) - Max( Max( FirstVNF_RAM_Server,ARS ),( MRS + AMS ) ) ),Min( ( Max( FirstVNF_CPU,ARS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,( ( FirstVNF_CPU + MDR ) + ( MDR + FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUC ,( DS * MLU ) ),Max( ( RMSe * ( MUC / RCSe ) ),( MUC * RCSe ) ) )", "obj1": 0.7092050209205021, "obj2": 0.2580984125872782}], "2": [{"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( RCSe * MLU ) )", "obj1": 0.8389121338912134, "obj2": 0.13637265348652441}, {"determining": "Min( Min( ( RRS * DDR ) ,( MRS * ( ( MDR - AMS ) / ( BR * ( MDR - DDR ) ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( ( ( CS + RMSe ) / ( ( MLU / RMSe ) / MUC ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.700836820083682, "obj2": 0.21404092471390943}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( Max( MDR,BR ) - Max( ( CRS * BR ),( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "( ( RCSe - MUC ) / ( ( CS + CS ) + MUR ) )", "obj1": 0.7740585774058577, "obj2": 0.15873405724675319}, {"determining": "( Max( ( RRS * ACS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( Max( Min( RRSe ,MUM ),Min( DS ,RRSe ) ) ,MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.09619188103802111}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "( Min( MLU ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,FirstVNF_CPU )", "choosing": "Min( Min( ( Max( DS,Min( MUM ,MUM ) ) + ( Min( MUM ,DS ) / RMSe ) ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9058577405857741, "obj2": 0.07702077631093099}, {"determining": "Min( Max( ( ( ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / Max( ( ARS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,RRS ) ) ) / ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / MRS ) ) - ( ( Const / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,RRS ) ) ) ) / ( ( ( ( CRS * MRS ) / ( DDR - FirstVNF_Mem_Server ) ) / Min( ( BR + BR ) ,( Const - FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,FirstVNF_RAM ) + ( Const / ARS ) ) * ( ( FirstVNF_Mem_Server + MDR ) - ( MRS + FirstVNF_RAM ) ) ) ) ) - ( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_RAM + CRS ) ) ,( Max( ARS,FirstVNF_RAM_Server ) + ( ARS * FirstVNF_RAM ) ) ) / ( ( ( MRS / MDR ) * ( Const + AMS ) ) * ( Max( AMS,ARS ) - ( CRS / FirstVNF_Mem ) ) ) ) * Min( ( ( Max( MRS,AMS ) + Max( ARS,FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU + ARS ) ,( FirstVNF_CPU_Server - MDR ) ) ) ,( Min( Max( RRS,FirstVNF_CPU_Server ) ,( FirstVNF_Mem + PN ) ) + ( Max( CRS,AMS ) + ( BR / FirstVNF_Mem ) ) ) ) ) ),Min( ( ( ( Min( ( PN + DDR ) ,( RRS - DDR ) ) + ( ( CRS / DDR ) / Max( MRS,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS / MRS ) - ( PN + PN ) ) + ( ( FirstVNF_CPU - RRS ) * Min( AMS ,RRS ) ) ) ) / Max( ( ( ( FirstVNF_CPU_Server / MDR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + Max( Min( MRS ,FirstVNF_CPU ),( PN / FirstVNF_RAM_Server ) ) ),Max( ( ( RRS / MRS ) - ( FirstVNF_RAM - AMS ) ),Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( CRS * MDR ) ) ) ) ) ,Max( ( ( Min( ( ACS - PN ) ,( Const / FirstVNF_CPU ) ) - Min( ( MRS + FirstVNF_RAM ) ,( FirstVNF_RAM_Server + Const ) ) ) + ( ( ( DDR - FirstVNF_Mem_Server ) * Max( BR,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU / ACS ) / ( FirstVNF_Mem * RRS ) ) ) ),Max( Max( ( ( MDR / ARS ) + Min( FirstVNF_CPU ,DDR ) ),( ( ARS - FirstVNF_Mem_Server ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ),( Max( Max( PN,FirstVNF_CPU_Server ),( RRS * DDR ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + ( ACS * DDR ) ) ) ) ) ) ) ,( ( ( ( Min( ( ( FirstVNF_Mem - Const ) + Min( ACS ,AMS ) ) ,Min( ( BR * FirstVNF_CPU ) ,( PN - FirstVNF_CPU ) ) ) + Min( ( Min( PN ,AMS ) + ( DDR * FirstVNF_Mem ) ) ,Max( ( CRS / CRS ),( FirstVNF_CPU + Const ) ) ) ) / ( ( ( Max( PN,FirstVNF_CPU ) / ( PN * FirstVNF_Mem ) ) - Min( ( MRS + FirstVNF_RAM_Server ) ,( FirstVNF_RAM + RRS ) ) ) * Min( Max( Min( MDR ,FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,( Min( CRS ,DDR ) / ( BR + FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( Max( Max( BR,FirstVNF_RAM ),( DDR * FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem_Server ,CRS ),( AMS - FirstVNF_CPU ) ) ) * Min( ( ( RRS / ARS ) + ( FirstVNF_CPU * RRS ) ) ,( ( AMS + ARS ) / ( DDR - RRS ) ) ) ) * ( Min( ( Min( ACS ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) ,( ( BR / MDR ) - ( MDR / RRS ) ) ) / ( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,MRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) * Min( ( Max( ( Min( ( BR + FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,AMS ) ) - ( Max( Const,CRS ) * Max( FirstVNF_RAM,CRS ) ) ),Max( ( ( FirstVNF_CPU + MRS ) / ( FirstVNF_Mem + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_CPU ,CRS ) ) ) ) / ( ( Max( ( FirstVNF_RAM_Server + PN ),( RRS / FirstVNF_Mem ) ) + ( ( Const / FirstVNF_RAM_Server ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( ACS * PN ) ) ) ) ) ,Max( Max( ( Min( ( ARS - MRS ) ,Min( BR ,FirstVNF_Mem_Server ) ) * ( Max( Const,FirstVNF_Mem_Server ) - ( RRS * RRS ) ) ),Min( ( ( MDR * AMS ) / ( Const / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * BR ) * ( DDR - CRS ) ) ) ),( ( ( Min( FirstVNF_Mem_Server ,AMS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * Max( Min( FirstVNF_Mem ,RRS ),( DDR - FirstVNF_RAM_Server ) ) ) * ( Max( ( Const * Const ),( FirstVNF_CPU - AMS ) ) / ( ( MDR - BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( ( ( ( ( Max( RRSe,CS ) + ( MUM - RCSe ) ) + Min( Min( RCSe ,RMSe ) ,Max( DS,RCSe ) ) ) - ( ( Min( MUC ,MUR ) * ( MLU / MUC ) ) + ( Min( MUR ,DS ) + ( RRSe - RMSe ) ) ) ) * ( Max( Min( ( RMSe + RCSe ) ,( RMSe - DS ) ),( ( RMSe - RRSe ) - ( MUC + RMSe ) ) ) + Max( ( ( MUM * MLU ) / Max( RRSe,MUR ) ),Min( ( CS / MUC ) ,( MUC + RMSe ) ) ) ) ) * ( Min( Min( ( Max( CS,RRSe ) + ( RMSe + MLU ) ) ,Max( ( MLU + MUM ),( MUC + MLU ) ) ) ,( ( Max( RRSe,RMSe ) + Min( MUM ,RRSe ) ) * ( ( MLU - CS ) + ( CS - MLU ) ) ) ) - ( ( Min( Max( RCSe,MUM ) ,Min( RCSe ,DS ) ) - ( Min( RCSe ,MUM ) * ( CS / MLU ) ) ) * Min( ( Max( RRSe,DS ) + ( RCSe * CS ) ) ,Min( ( CS + RRSe ) ,Min( MUC ,MUR ) ) ) ) ) ),( Min( Max( ( ( ( CS + MUM ) * ( MLU / MUM ) ) / Min( ( MLU / RRSe ) ,( DS - DS ) ) ),( ( ( MUM + DS ) - ( MLU + MLU ) ) / ( ( MLU / RCSe ) + Max( MUR,RCSe ) ) ) ) ,Min( ( ( ( RRSe / CS ) - ( CS * RMSe ) ) / Max( ( MUM / CS ),( CS * CS ) ) ) ,Max( ( ( DS + MUC ) - ( CS - MUM ) ),Max( ( CS - DS ),( CS - RCSe ) ) ) ) ) / Min( Max( ( Max( ( MUC / DS ),( MUC * MLU ) ) + ( ( MUC / MLU ) + ( CS + CS ) ) ),( Max( ( RMSe / MUR ),( DS * CS ) ) * Max( ( CS / MUM ),( RRSe / MUM ) ) ) ) ,( Min( ( ( MUR / CS ) * ( MUR - MUC ) ) ,( ( RRSe / MUC ) + ( MUC - DS ) ) ) * ( ( ( RMSe / MUC ) / ( MUM + RRSe ) ) * ( Min( RRSe ,MUC ) / ( MUM * MLU ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( CS - RCSe ) - ( MUR * RRSe ) ) + ( ( RCSe / MUR ) / ( DS - CS ) ) ) - ( ( ( DS + MUM ) * ( MLU * RCSe ) ) - ( ( CS - RRSe ) / ( MLU - CS ) ) ) ) - ( ( Max( ( MUM * RCSe ),Min( MUM ,RRSe ) ) * Min( ( MLU / RCSe ) ,( MLU - MUC ) ) ) + ( Max( Min( MUM ,RCSe ),( CS - RMSe ) ) * ( ( RCSe + CS ) - Max( CS,MUR ) ) ) ) ),( ( ( ( ( RCSe - MLU ) / ( MUC + MUR ) ) - ( ( RRSe - MUM ) * ( RRSe - CS ) ) ) * ( ( ( DS * CS ) / ( RRSe * CS ) ) / ( ( RRSe - RRSe ) + Max( CS,MUR ) ) ) ) / ( Min( ( ( MLU + CS ) / ( MLU - MUM ) ) ,Max( Max( MUR,MUR ),( DS - RMSe ) ) ) + Min( ( Min( RRSe ,RCSe ) - Max( RCSe,DS ) ) ,( ( RCSe / MUR ) / Min( DS ,MUR ) ) ) ) ) ) - Max( ( ( ( Min( Max( MUR,MUM ) ,( MLU - MUC ) ) / ( ( MUR * MUM ) - ( MUC + MUM ) ) ) - ( ( Max( RCSe,RMSe ) - ( RRSe - RRSe ) ) - Min( ( MUC + CS ) ,Min( CS ,CS ) ) ) ) + Max( ( ( Max( RCSe,RCSe ) - ( RRSe / RMSe ) ) + ( Min( MUM ,MUC ) * Min( RRSe ,MUR ) ) ),Max( ( ( RRSe + MUR ) - ( MLU - DS ) ),( ( MLU / CS ) - ( CS / MLU ) ) ) ) ),( Min( ( ( ( RMSe / RMSe ) * ( RRSe * MLU ) ) + Max( Min( MUM ,RMSe ),Min( MUM ,CS ) ) ) ,Max( ( Min( RCSe ,MUC ) * ( MUM + MUM ) ),( ( DS + RRSe ) / Min( RRSe ,RRSe ) ) ) ) - Min( ( ( Min( MUC ,RCSe ) * ( MUR - RCSe ) ) / ( Max( MUC,RRSe ) + ( MUR * RRSe ) ) ) ,( ( ( DS + RMSe ) + ( MLU * MUC ) ) + Min( ( CS - DS ) ,( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 0.9811715481171548, "obj2": 0.019217607041275675}, {"determining": "( ( ( ACS * FirstVNF_Mem ) - ( RRS / RRS ) ) / ( Max( PN,MRS ) * Max( BR,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR * MUM ),( RMSe + DS ) ) * Min( CS ,CS ) )", "obj1": 0.9602510460251046, "obj2": 0.03939061609200024}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( MDR - AMS ) + ( BR * ( MDR - DDR ) ) )", "choosing": "( ( ( DS / RMSe ) / MUC ) * ( MUM + MUM ) )", "obj1": 0.9895397489539749, "obj2": 0.008255074114669825}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / BR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - BR ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Min( RCSe ,( DS + MLU ) ) * ( MUR - RRSe ) )", "obj1": 0.6401673640167364, "obj2": 0.2624750376107921}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RRSe ) )", "obj1": 0.6401673640167364, "obj2": 0.2624750376107921}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( FirstVNF_Mem ,Max( ( ARS * AMS ),( Const / PN ) ) ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * ( ( MUC - CS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( FirstVNF_RAM / AMS ) )", "choosing": "Max( Min( DS ,MUM ),Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) )", "choosing": "Max( ( RRSe * CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( ARS / ARS ) )", "choosing": "Min( ( RMSe / DS ) ,( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( Max( ACS,BR ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RRSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) )", "choosing": "( Max( MUC,RCSe ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( AMS + CRS ) )", "choosing": "( ( RCSe / RMSe ) / ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) / ( Min( ( Min( FirstVNF_Mem ,Max( AMS,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,PN ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / CS ) + MUC ) ,Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) - ( FirstVNF_CPU + ACS ) )", "choosing": "( ( RMSe + MLU ) - Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - PN ) ,( DDR * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MRS * RRS ) ) )", "choosing": "( Max( DS,Min( CS ,MUM ) ) + ( Min( MUM ,DS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( DDR * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + Min( ( Max( BR,FirstVNF_RAM_Server ) + Max( FirstVNF_RAM,ACS ) ) ,( ( FirstVNF_RAM + FirstVNF_RAM ) * Max( MDR,ARS ) ) ) ) )", "choosing": "( Min( ( RMSe * MUR ) ,( CS * RRSe ) ) + ( Min( MUM ,DS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( DDR * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MRS * RRS ) ) )", "choosing": "Min( Min( ( RMSe * MUR ) ,( CS * RRSe ) ) ,Max( ( CS - MUC ),Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( DDR * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MRS * RRS ) ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( MDR * MRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * Min( RMSe ,( Min( ( MUM / MUR ) ,Min( MUC ,MUR ) ) - ( RRSe - Min( CS ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( MDR / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "( Min( RCSe ,MLU ) - Max( ( RRSe / MUM ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( Max( ( MLU - RMSe ),( RMSe * DS ) ) * Min( ( DS / RMSe ) ,( MUM + MUC ) ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.27568344339484335}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) ) - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( RCSe / RMSe ) )", "obj1": 0.8682008368200836, "obj2": 0.07471228162433036}, {"determining": "( ( AMS / AMS ) - ( AMS / ARS ) )", "choosing": "( RCSe - Min( CS ,MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.03204859716060774}, {"determining": "Min( Min( ( RRS * DDR ) ,( MRS * ( ( MDR - AMS ) / ( BR * ( MDR - DDR ) ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( ( ( CS + RMSe ) / ( ( MLU / RMSe ) / MUC ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.700836820083682, "obj2": 0.21404092471390943}, {"determining": "( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( RCSe * MLU ) )", "obj1": 0.8389121338912134, "obj2": 0.13637265348652441}, {"determining": "( Max( ( RRS * ACS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( Max( Min( RRSe ,MUM ),Min( DS ,RRSe ) ) ,MUM ) )", "obj1": 0.797071129707113, "obj2": 0.15388285851689312}, {"determining": "( ( ACS - MDR ) - ( BR * ACS ) )", "choosing": "( ( MUC - MLU ) - MUM )", "obj1": 0.7092050209205021, "obj2": 0.18054197712330022}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( AMS - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8577405857740585, "obj2": 0.11786324548752367}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) * ( MRS / Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) * Max( MLU,MUR ) ) + ( RCSe * ( RRSe / RCSe ) ) ) - ( Max( ( MLU - RMSe ),( RMSe * DS ) ) * Min( ( DS / RMSe ) ,( MUM + MUC ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.24037162918426824}, {"determining": "Min( Max( ( ( ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / Max( ( ARS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,RRS ) ) ) / ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / MRS ) ) - ( ( Const / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,RRS ) ) ) ) / ( ( ( ( CRS * MRS ) / ( DDR - FirstVNF_Mem_Server ) ) / Min( ( BR + BR ) ,( Const - FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,FirstVNF_RAM ) + ( Const / ARS ) ) * ( ( FirstVNF_Mem_Server + MDR ) - ( MRS + FirstVNF_RAM ) ) ) ) ) - ( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_RAM + CRS ) ) ,( Max( ARS,FirstVNF_RAM_Server ) + ( ARS * FirstVNF_RAM ) ) ) / ( ( ( MRS / MDR ) * ( Const + AMS ) ) * ( Max( AMS,ARS ) - ( CRS / FirstVNF_Mem ) ) ) ) * Min( ( ( Max( MRS,AMS ) + Max( ARS,FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU + ARS ) ,( FirstVNF_CPU_Server - MDR ) ) ) ,( Min( Max( RRS,FirstVNF_CPU_Server ) ,( FirstVNF_Mem + PN ) ) + ( Max( CRS,AMS ) + ( BR / FirstVNF_Mem ) ) ) ) ) ),Min( ( ( ( Min( ( PN + DDR ) ,( RRS - DDR ) ) + ( ( CRS / DDR ) / Max( MRS,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS / MRS ) - ( PN + PN ) ) + ( ( FirstVNF_CPU - RRS ) * Min( AMS ,RRS ) ) ) ) / Max( ( ( ( FirstVNF_CPU_Server / MDR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + Max( Min( MRS ,FirstVNF_CPU ),( PN / FirstVNF_RAM_Server ) ) ),Max( ( ( RRS / MRS ) - ( FirstVNF_RAM - AMS ) ),Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( CRS * MDR ) ) ) ) ) ,Max( ( ( Min( ( ACS - PN ) ,( Const / FirstVNF_CPU ) ) - Min( ( MRS + FirstVNF_RAM ) ,( FirstVNF_RAM_Server + Const ) ) ) + ( ( ( DDR - FirstVNF_Mem_Server ) * Max( BR,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU / ACS ) / ( FirstVNF_Mem * RRS ) ) ) ),Max( Max( ( ( MDR / ARS ) + Min( FirstVNF_CPU ,DDR ) ),( ( ARS - FirstVNF_Mem_Server ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ),( Max( Max( PN,FirstVNF_CPU_Server ),( RRS * DDR ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + ( ACS * DDR ) ) ) ) ) ) ) ,( ( ( ( Min( ( ( FirstVNF_Mem - Const ) + Min( ACS ,AMS ) ) ,Min( ( BR * FirstVNF_CPU ) ,( PN - FirstVNF_CPU ) ) ) + Min( ( Min( PN ,AMS ) + ( DDR * FirstVNF_Mem ) ) ,Max( ( CRS / CRS ),( FirstVNF_CPU + Const ) ) ) ) / ( ( ( Max( PN,FirstVNF_CPU ) / ( PN * FirstVNF_Mem ) ) - Min( ( MRS + FirstVNF_RAM_Server ) ,( FirstVNF_RAM + RRS ) ) ) * Min( Max( Min( MDR ,FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,( Min( CRS ,DDR ) / ( BR + FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( Max( Max( BR,FirstVNF_RAM ),( DDR * FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem_Server ,CRS ),( AMS - FirstVNF_CPU ) ) ) * Min( ( ( RRS / ARS ) + ( FirstVNF_CPU * RRS ) ) ,( ( AMS + ARS ) / ( DDR - RRS ) ) ) ) * ( Min( ( Min( ACS ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) ,( ( BR / MDR ) - ( MDR / RRS ) ) ) / ( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,MRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) * Min( ( Max( ( Min( ( BR + FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,AMS ) ) - ( Max( Const,CRS ) * Max( FirstVNF_RAM,CRS ) ) ),Max( ( ( FirstVNF_CPU + MRS ) / ( FirstVNF_Mem + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_CPU ,CRS ) ) ) ) / ( ( Max( ( FirstVNF_RAM_Server + PN ),( RRS / FirstVNF_Mem ) ) + ( ( Const / FirstVNF_RAM_Server ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( ACS * PN ) ) ) ) ) ,Max( Max( ( Min( ( ARS - MRS ) ,Min( BR ,FirstVNF_Mem_Server ) ) * ( Max( Const,FirstVNF_Mem_Server ) - ( RRS * RRS ) ) ),Min( ( ( MDR * AMS ) / ( Const / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * BR ) * ( DDR - CRS ) ) ) ),( ( ( Min( FirstVNF_Mem_Server ,AMS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * Max( Min( FirstVNF_Mem ,RRS ),( DDR - FirstVNF_RAM_Server ) ) ) * ( Max( ( Const * Const ),( FirstVNF_CPU - AMS ) ) / ( ( MDR - BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( ( ( ( ( Max( RRSe,CS ) + ( MUM - RCSe ) ) + Min( Min( RCSe ,RMSe ) ,Max( DS,RCSe ) ) ) - ( ( Min( MUC ,MUR ) * ( MLU / MUC ) ) + ( Min( MUR ,DS ) + ( RRSe - RMSe ) ) ) ) * ( Max( Min( ( RMSe + RCSe ) ,( RMSe - DS ) ),( ( RMSe - RRSe ) - ( MUC + RMSe ) ) ) + Max( ( ( MUM * MLU ) / Max( RRSe,MUR ) ),Min( ( CS / MUC ) ,( MUC + RMSe ) ) ) ) ) * ( Min( Min( ( Max( CS,RRSe ) + ( RMSe + MLU ) ) ,Max( ( MLU + MUM ),( MUC + MLU ) ) ) ,( ( Max( RRSe,RMSe ) + Min( MUM ,RRSe ) ) * ( ( MLU - CS ) + ( CS - MLU ) ) ) ) - ( ( Min( Max( RCSe,MUM ) ,Min( RCSe ,DS ) ) - ( Min( RCSe ,MUM ) * ( CS / MLU ) ) ) * Min( ( Max( RRSe,DS ) + ( RCSe * CS ) ) ,Min( ( CS + RRSe ) ,Min( MUC ,MUR ) ) ) ) ) ),( Min( Max( ( ( ( CS + MUM ) * ( MLU / MUM ) ) / Min( ( MLU / RRSe ) ,( DS - DS ) ) ),( ( ( MUM + DS ) - ( MLU + MLU ) ) / ( ( MLU / RCSe ) + Max( MUR,RCSe ) ) ) ) ,Min( ( ( ( RRSe / CS ) - ( CS * RMSe ) ) / Max( ( MUM / CS ),( CS * CS ) ) ) ,Max( ( ( DS + MUC ) - ( CS - MUM ) ),Max( ( CS - DS ),( CS - RCSe ) ) ) ) ) / Min( Max( ( Max( ( MUC / DS ),( MUC * MLU ) ) + ( ( MUC / MLU ) + ( CS + CS ) ) ),( Max( ( RMSe / MUR ),( DS * CS ) ) * Max( ( CS / MUM ),( RRSe / MUM ) ) ) ) ,( Min( ( ( MUR / CS ) * ( MUR - MUC ) ) ,( ( RRSe / MUC ) + ( MUC - DS ) ) ) * ( ( ( RMSe / MUC ) / ( MUM + RRSe ) ) * ( Min( RRSe ,MUC ) / ( MUM * MLU ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( CS - RCSe ) - ( MUR * RRSe ) ) + ( ( RCSe / MUR ) / ( DS - CS ) ) ) - ( ( ( DS + MUM ) * ( MLU * RCSe ) ) - ( ( CS - RRSe ) / ( MLU - CS ) ) ) ) - ( ( Max( ( MUM * RCSe ),Min( MUM ,RRSe ) ) * Min( ( MLU / RCSe ) ,( MLU - MUC ) ) ) + ( Max( Min( MUM ,RCSe ),( CS - RMSe ) ) * ( ( RCSe + CS ) - Max( CS,MUR ) ) ) ) ),( ( ( ( ( RCSe - MLU ) / ( MUC + MUR ) ) - ( ( RRSe - MUM ) * ( RRSe - CS ) ) ) * ( ( ( DS * CS ) / ( RRSe * CS ) ) / ( ( RRSe - RRSe ) + Max( CS,MUR ) ) ) ) / ( Min( ( ( MLU + CS ) / ( MLU - MUM ) ) ,Max( Max( MUR,MUR ),( DS - RMSe ) ) ) + Min( ( Min( RRSe ,RCSe ) - Max( RCSe,DS ) ) ,( ( RCSe / MUR ) / Min( DS ,MUR ) ) ) ) ) ) - Max( ( ( ( Min( Max( MUR,MUM ) ,( MLU - MUC ) ) / ( ( MUR * MUM ) - ( MUC + MUM ) ) ) - ( ( Max( RCSe,RMSe ) - ( RRSe - RRSe ) ) - Min( ( MUC + CS ) ,Min( CS ,CS ) ) ) ) + Max( ( ( Max( RCSe,RCSe ) - ( RRSe / RMSe ) ) + ( Min( MUM ,MUC ) * Min( RRSe ,MUR ) ) ),Max( ( ( RRSe + MUR ) - ( MLU - DS ) ),( ( MLU / CS ) - ( CS / MLU ) ) ) ) ),( Min( ( ( ( RMSe / RMSe ) * ( RRSe * MLU ) ) + Max( Min( MUM ,RMSe ),Min( MUM ,CS ) ) ) ,Max( ( Min( RCSe ,MUC ) * ( MUM + MUM ) ),( ( DS + RRSe ) / Min( RRSe ,RRSe ) ) ) ) - Min( ( ( Min( MUC ,RCSe ) * ( MUR - RCSe ) ) / ( Max( MUC,RRSe ) + ( MUR * RRSe ) ) ) ,( ( ( DS + RMSe ) + ( MLU * MUC ) ) + Min( ( CS - DS ) ,( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 0.9811715481171548, "obj2": 0.019217607041275675}, {"determining": "( Max( MDR,BR ) - Max( ( CRS * BR ),( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "( ( RCSe - MUC ) / ( ( CS + CS ) + MUR ) )", "obj1": 0.7740585774058577, "obj2": 0.15873405724675319}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( Max( ( RRS * ACS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( Max( Min( RRSe ,MUM ),Min( DS ,RRSe ) ) ,MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.09619188103802111}, {"determining": "( ( MDR - AMS ) + ( BR * ( MDR - DDR ) ) )", "choosing": "( ( ( DS / RMSe ) / MUC ) * ( MUM + MUM ) )", "obj1": 0.9895397489539749, "obj2": 0.008255074114669825}, {"determining": "( Max( ( RRS * ACS ),Max( Const,FirstVNF_RAM_Server ) ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ,MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.09619188103802111}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.7740585774058577, "obj2": 0.15873405724675319}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ACS )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( FirstVNF_Mem ,Max( ( ARS * AMS ),( Const / PN ) ) ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * ( ( MUC - CS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( FirstVNF_RAM / AMS ) )", "choosing": "Max( Min( DS ,MUM ),Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) )", "choosing": "Max( ( RRSe * CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( ARS / ARS ) )", "choosing": "Min( ( RMSe / DS ) ,( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( Max( ACS,BR ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RRSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) )", "choosing": "( Max( MUC,RCSe ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( AMS + CRS ) )", "choosing": "( ( RCSe / RMSe ) / ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) / ( Min( ( Min( FirstVNF_Mem ,Max( AMS,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,PN ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / CS ) + MUC ) ,Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) - ( FirstVNF_CPU + ACS ) )", "choosing": "( ( RMSe + MLU ) - Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - PN ) ,( DDR * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MRS * RRS ) ) )", "choosing": "( Max( DS,Min( CS ,MUM ) ) + ( Min( MUM ,DS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( DDR * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + Min( ( Max( BR,FirstVNF_RAM_Server ) + Max( FirstVNF_RAM,ACS ) ) ,( ( FirstVNF_RAM + FirstVNF_RAM ) * Max( MDR,ARS ) ) ) ) )", "choosing": "( Min( ( RMSe * MUR ) ,( CS * RRSe ) ) + ( Min( MUM ,DS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( DDR * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MRS * RRS ) ) )", "choosing": "Min( Min( ( RMSe * MUR ) ,( CS * RRSe ) ) ,Max( ( CS - MUC ),Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( Max( ( MLU - RMSe ),( RMSe * DS ) ) * Min( ( DS / RMSe ) ,( MUM + MUC ) ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.27568344339484335}, {"determining": "( ( AMS + CRS ) - ( AMS / ARS ) )", "choosing": "Max( Min( RCSe ,MUM ),RMSe )", "obj1": 0.9184100418410042, "obj2": 0.07220858184540717}, {"determining": "( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( RCSe * MLU ) )", "obj1": 0.8389121338912134, "obj2": 0.13637265348652441}, {"determining": "( ( AMS / AMS ) - ( AMS / ARS ) )", "choosing": "( RCSe - Min( CS ,MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.03204859716060774}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / Max( ( RCSe / ( RCSe / RMSe ) ),MUR ) )", "obj1": 0.7845188284518828, "obj2": 0.1501668469935363}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) ) - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( RCSe / RMSe ) )", "obj1": 0.8682008368200836, "obj2": 0.07471228162433036}, {"determining": "( AMS - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8577405857740585, "obj2": 0.11786324548752367}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( Max( MDR,BR ) - Max( ( CRS * BR ),( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "( ( RCSe - MUC ) / ( ( CS + CS ) + MUR ) )", "obj1": 0.7740585774058577, "obj2": 0.15873405724675319}, {"determining": "Min( Min( ( RRS * DDR ) ,( MRS * ( ( MDR - AMS ) / ( BR * ( MDR - DDR ) ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( ( ( CS + RMSe ) / ( ( MLU / RMSe ) / MUC ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.700836820083682, "obj2": 0.21404092471390943}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe * RCSe ) + Min( RRSe ,DS ) )", "obj1": 0.6924686192468619, "obj2": 0.23749353952084382}, {"determining": "( ( ( ACS / DDR ) - PN ) * ( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) ) )", "choosing": "Max( ( DS * CS ),DS )", "obj1": 0.7071129707112971, "obj2": 0.20438868501892773}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "Min( Max( ( ( ( ( Min( ( MDR - FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) / Max( ( ARS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,RRS ) ) ) / ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / MRS ) ) - ( ( Const / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,RRS ) ) ) ) / ( ( ( ( CRS * MRS ) / ( DDR - FirstVNF_Mem_Server ) ) / Min( ( BR + BR ) ,( Const - FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,FirstVNF_RAM ) + ( Const / ARS ) ) * ( ( FirstVNF_Mem_Server + MDR ) - ( MRS + FirstVNF_RAM ) ) ) ) ) - ( ( Min( ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_RAM + CRS ) ) ,( Max( ARS,FirstVNF_RAM_Server ) + ( ARS * FirstVNF_RAM ) ) ) / ( ( ( MRS / MDR ) * ( Const + AMS ) ) * ( Max( AMS,ARS ) - ( CRS / FirstVNF_Mem ) ) ) ) * Min( ( ( Max( MRS,AMS ) + Max( ARS,FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU + ARS ) ,( FirstVNF_CPU_Server - MDR ) ) ) ,( Min( Max( RRS,FirstVNF_CPU_Server ) ,( FirstVNF_Mem + PN ) ) + ( Max( CRS,AMS ) + ( BR / FirstVNF_Mem ) ) ) ) ) ),Min( ( ( ( Min( ( PN + DDR ) ,( RRS - DDR ) ) + ( ( CRS / DDR ) / Max( MRS,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS / MRS ) - ( PN + PN ) ) + ( ( FirstVNF_CPU - RRS ) * Min( AMS ,RRS ) ) ) ) / Max( ( ( ( FirstVNF_CPU_Server / MDR ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + Max( Min( MRS ,FirstVNF_CPU ),( PN / FirstVNF_RAM_Server ) ) ),Max( ( ( RRS / MRS ) - ( FirstVNF_RAM - AMS ) ),Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( CRS * MDR ) ) ) ) ) ,Max( ( ( Min( ( ACS - PN ) ,( Const / FirstVNF_CPU ) ) - Min( ( MRS + FirstVNF_RAM ) ,( FirstVNF_RAM_Server + Const ) ) ) + ( ( ( DDR - FirstVNF_Mem_Server ) * Max( BR,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU / ACS ) / ( FirstVNF_Mem * RRS ) ) ) ),Max( Max( ( ( MDR / ARS ) + Min( FirstVNF_CPU ,DDR ) ),( ( ARS - FirstVNF_Mem_Server ) * ( FirstVNF_CPU * FirstVNF_Mem ) ) ),( Max( Max( PN,FirstVNF_CPU_Server ),( RRS * DDR ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + ( ACS * DDR ) ) ) ) ) ) ) ,( ( ( ( Min( ( ( FirstVNF_Mem - Const ) + Min( ACS ,AMS ) ) ,Min( ( BR * FirstVNF_CPU ) ,( PN - FirstVNF_CPU ) ) ) + Min( ( Min( PN ,AMS ) + ( DDR * FirstVNF_Mem ) ) ,Max( ( CRS / CRS ),( FirstVNF_CPU + Const ) ) ) ) / ( ( ( Max( PN,FirstVNF_CPU ) / ( PN * FirstVNF_Mem ) ) - Min( ( MRS + FirstVNF_RAM_Server ) ,( FirstVNF_RAM + RRS ) ) ) * Min( Max( Min( MDR ,FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,( Min( CRS ,DDR ) / ( BR + FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( Max( Max( BR,FirstVNF_RAM ),( DDR * FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem_Server ,CRS ),( AMS - FirstVNF_CPU ) ) ) * Min( ( ( RRS / ARS ) + ( FirstVNF_CPU * RRS ) ) ,( ( AMS + ARS ) / ( DDR - RRS ) ) ) ) * ( Min( ( Min( ACS ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_RAM ) ) ,( ( BR / MDR ) - ( MDR / RRS ) ) ) / ( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,MRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + ( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) * Min( ( Max( ( Min( ( BR + FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,AMS ) ) - ( Max( Const,CRS ) * Max( FirstVNF_RAM,CRS ) ) ),Max( ( ( FirstVNF_CPU + MRS ) / ( FirstVNF_Mem + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_CPU ,CRS ) ) ) ) / ( ( Max( ( FirstVNF_RAM_Server + PN ),( RRS / FirstVNF_Mem ) ) + ( ( Const / FirstVNF_RAM_Server ) - Min( PN ,FirstVNF_Mem_Server ) ) ) / ( Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,Max( AMS,AMS ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( ACS * PN ) ) ) ) ) ,Max( Max( ( Min( ( ARS - MRS ) ,Min( BR ,FirstVNF_Mem_Server ) ) * ( Max( Const,FirstVNF_Mem_Server ) - ( RRS * RRS ) ) ),Min( ( ( MDR * AMS ) / ( Const / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * BR ) * ( DDR - CRS ) ) ) ),( ( ( Min( FirstVNF_Mem_Server ,AMS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * Max( Min( FirstVNF_Mem ,RRS ),( DDR - FirstVNF_RAM_Server ) ) ) * ( Max( ( Const * Const ),( FirstVNF_CPU - AMS ) ) / ( ( MDR - BR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( ( ( ( ( Max( RRSe,CS ) + ( MUM - RCSe ) ) + Min( Min( RCSe ,RMSe ) ,Max( DS,RCSe ) ) ) - ( ( Min( MUC ,MUR ) * ( MLU / MUC ) ) + ( Min( MUR ,DS ) + ( RRSe - RMSe ) ) ) ) * ( Max( Min( ( RMSe + RCSe ) ,( RMSe - DS ) ),( ( RMSe - RRSe ) - ( MUC + RMSe ) ) ) + Max( ( ( MUM * MLU ) / Max( RRSe,MUR ) ),Min( ( CS / MUC ) ,( MUC + RMSe ) ) ) ) ) * ( Min( Min( ( Max( CS,RRSe ) + ( RMSe + MLU ) ) ,Max( ( MLU + MUM ),( MUC + MLU ) ) ) ,( ( Max( RRSe,RMSe ) + Min( MUM ,RRSe ) ) * ( ( MLU - CS ) + ( CS - MLU ) ) ) ) - ( ( Min( Max( RCSe,MUM ) ,Min( RCSe ,DS ) ) - ( Min( RCSe ,MUM ) * ( CS / MLU ) ) ) * Min( ( Max( RRSe,DS ) + ( RCSe * CS ) ) ,Min( ( CS + RRSe ) ,Min( MUC ,MUR ) ) ) ) ) ),( Min( Max( ( ( ( CS + MUM ) * ( MLU / MUM ) ) / Min( ( MLU / RRSe ) ,( DS - DS ) ) ),( ( ( MUM + DS ) - ( MLU + MLU ) ) / ( ( MLU / RCSe ) + Max( MUR,RCSe ) ) ) ) ,Min( ( ( ( RRSe / CS ) - ( CS * RMSe ) ) / Max( ( MUM / CS ),( CS * CS ) ) ) ,Max( ( ( DS + MUC ) - ( CS - MUM ) ),Max( ( CS - DS ),( CS - RCSe ) ) ) ) ) / Min( Max( ( Max( ( MUC / DS ),( MUC * MLU ) ) + ( ( MUC / MLU ) + ( CS + CS ) ) ),( Max( ( RMSe / MUR ),( DS * CS ) ) * Max( ( CS / MUM ),( RRSe / MUM ) ) ) ) ,( Min( ( ( MUR / CS ) * ( MUR - MUC ) ) ,( ( RRSe / MUC ) + ( MUC - DS ) ) ) * ( ( ( RMSe / MUC ) / ( MUM + RRSe ) ) * ( Min( RRSe ,MUC ) / ( MUM * MLU ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( CS - RCSe ) - ( MUR * RRSe ) ) + ( ( RCSe / MUR ) / ( DS - CS ) ) ) - ( ( ( DS + MUM ) * ( MLU * RCSe ) ) - ( ( CS - RRSe ) / ( MLU - CS ) ) ) ) - ( ( Max( ( MUM * RCSe ),Min( MUM ,RRSe ) ) * Min( ( MLU / RCSe ) ,( MLU - MUC ) ) ) + ( Max( Min( MUM ,RCSe ),( CS - RMSe ) ) * ( ( RCSe + CS ) - Max( CS,MUR ) ) ) ) ),( ( ( ( ( RCSe - MLU ) / ( MUC + MUR ) ) - ( ( RRSe - MUM ) * ( RRSe - CS ) ) ) * ( ( ( DS * CS ) / ( RRSe * CS ) ) / ( ( RRSe - RRSe ) + Max( CS,MUR ) ) ) ) / ( Min( ( ( MLU + CS ) / ( MLU - MUM ) ) ,Max( Max( MUR,MUR ),( DS - RMSe ) ) ) + Min( ( Min( RRSe ,RCSe ) - Max( RCSe,DS ) ) ,( ( RCSe / MUR ) / Min( DS ,MUR ) ) ) ) ) ) - Max( ( ( ( Min( Max( MUR,MUM ) ,( MLU - MUC ) ) / ( ( MUR * MUM ) - ( MUC + MUM ) ) ) - ( ( Max( RCSe,RMSe ) - ( RRSe - RRSe ) ) - Min( ( MUC + CS ) ,Min( CS ,CS ) ) ) ) + Max( ( ( Max( RCSe,RCSe ) - ( RRSe / RMSe ) ) + ( Min( MUM ,MUC ) * Min( RRSe ,MUR ) ) ),Max( ( ( RRSe + MUR ) - ( MLU - DS ) ),( ( MLU / CS ) - ( CS / MLU ) ) ) ) ),( Min( ( ( ( RMSe / RMSe ) * ( RRSe * MLU ) ) + Max( Min( MUM ,RMSe ),Min( MUM ,CS ) ) ) ,Max( ( Min( RCSe ,MUC ) * ( MUM + MUM ) ),( ( DS + RRSe ) / Min( RRSe ,RRSe ) ) ) ) - Min( ( ( Min( MUC ,RCSe ) * ( MUR - RCSe ) ) / ( Max( MUC,RRSe ) + ( MUR * RRSe ) ) ) ,( ( ( DS + RMSe ) + ( MLU * MUC ) ) + Min( ( CS - DS ) ,( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 0.9811715481171548, "obj2": 0.019217607041275675}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) * ( MRS / Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) * Max( MLU,MUR ) ) + ( RCSe * ( RRSe / RCSe ) ) ) - ( Max( ( MLU - RMSe ),( RMSe * DS ) ) * Min( ( DS / RMSe ) ,( MUM + MUC ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.24037162918426824}, {"determining": "( Max( ( RRS * ACS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( Max( Min( RRSe ,MUM ),Min( DS ,RRSe ) ) ,MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.09619188103802111}, {"determining": "( Max( ( RRS * ACS ),Max( Const,FirstVNF_RAM_Server ) ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ,MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.09619188103802111}, {"determining": "( ( MDR - AMS ) + ( BR * ( MDR - DDR ) ) )", "choosing": "( ( ( DS / RMSe ) / MUC ) * ( MUM + MUM ) )", "obj1": 0.9895397489539749, "obj2": 0.008255074114669825}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( AMS / ARS ) )", "choosing": "Max( Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ),Min( DS ,RRSe ) )", "obj1": 0.9832635983263598, "obj2": 0.012362284832975676}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ACS )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.7740585774058577, "obj2": 0.15873405724675319}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( FirstVNF_Mem ,Max( ( ARS * AMS ),( Const / PN ) ) ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * ( ( MUC - CS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( FirstVNF_RAM / AMS ) )", "choosing": "Max( Min( DS ,MUM ),Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) )", "choosing": "Max( ( RRSe * CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( ARS / ARS ) )", "choosing": "Min( ( RMSe / DS ) ,( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( Max( ACS,BR ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RRSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) )", "choosing": "( Max( MUC,RCSe ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( AMS + CRS ) )", "choosing": "( ( RCSe / RMSe ) / ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,CRS ) / ( Min( ( Min( FirstVNF_Mem ,Max( AMS,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ,PN ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR / CS ) + MUC ) ,Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( Max( ( MLU - RMSe ),( RMSe * DS ) ) * Min( ( DS / RMSe ) ,( MUM + MUC ) ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.27568344339484335}, {"determining": "( ( AMS + CRS ) - ( AMS / ARS ) )", "choosing": "Max( Min( RCSe ,MUM ),RMSe )", "obj1": 0.9184100418410042, "obj2": 0.07220858184540717}, {"determining": "( FirstVNF_Mem_Server - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( RCSe * MLU ) )", "obj1": 0.8389121338912134, "obj2": 0.13637265348652441}, {"determining": "( ( AMS / AMS ) - ( AMS / ARS ) )", "choosing": "( RCSe - Min( CS ,MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.03204859716060774}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / Max( ( RCSe / ( RCSe / RMSe ) ),MUR ) )", "obj1": 0.7845188284518828, "obj2": 0.1501668469935363}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) ) - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( RCSe / RMSe ) )", "obj1": 0.8682008368200836, "obj2": 0.07471228162433036}, {"determining": "( AMS - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8577405857740585, "obj2": 0.11786324548752367}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( Max( MDR,BR ) - Max( ( CRS * BR ),( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "( ( RCSe - MUC ) / ( ( CS + CS ) + MUR ) )", "obj1": 0.7740585774058577, "obj2": 0.15873405724675319}, {"determining": "Min( Min( ( RRS * DDR ) ,( MRS * ( ( MDR - AMS ) / ( BR * ( MDR - DDR ) ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( ( ( CS + RMSe ) / ( ( MLU / RMSe ) / MUC ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.700836820083682, "obj2": 0.21404092471390943}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ( ACS / DDR ) - PN ) * ( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) ) )", "choosing": "Max( ( DS * CS ),DS )", "obj1": 0.7071129707112971, "obj2": 0.20438868501892773}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe * RCSe ) + Min( RRSe ,DS ) )", "obj1": 0.6924686192468619, "obj2": 0.23749353952084382}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) * ( MRS / Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) * Max( MLU,MUR ) ) + ( RCSe * ( RRSe / RCSe ) ) ) - ( Max( ( MLU - RMSe ),( RMSe * DS ) ) * Min( ( DS / RMSe ) ,( MUM + MUC ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.24037162918426824}, {"determining": "( Max( ( RRS * ACS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( Max( Min( RRSe ,MUM ),Min( DS ,RRSe ) ) ,MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.09619188103802111}, {"determining": "( Max( ( RRS * ACS ),Max( Const,FirstVNF_RAM_Server ) ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ,MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.09619188103802111}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ACS )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.7740585774058577, "obj2": 0.15873405724675319}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe * RCSe ) + Min( RRSe ,DS ) )", "obj1": 0.6924686192468619, "obj2": 0.23749353952084382}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( FirstVNF_Mem ,Max( ( ARS * AMS ),( Const / PN ) ) ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * ( ( MUC - CS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( FirstVNF_RAM / AMS ) )", "choosing": "Max( Min( DS ,MUM ),Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) )", "choosing": "Max( ( RRSe * CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( ARS / ARS ) )", "choosing": "Min( ( RMSe / DS ) ,( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( Max( ACS,BR ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RRSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) )", "choosing": "( Max( MUC,RCSe ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( AMS + CRS ) )", "choosing": "( ( RCSe / RMSe ) / ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( Max( ( MLU - RMSe ),( RMSe * DS ) ) * Min( ( DS / RMSe ) ,( MUM + MUC ) ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.27568344339484335}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( AMS / AMS ) - ( AMS / ARS ) )", "choosing": "( RCSe - Min( CS ,MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.03204859716060774}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( MUC ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.700836820083682, "obj2": 0.19701698997763978}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) * ( MRS / ACS ) )", "choosing": "( ( ( Min( DS ,RMSe ) * Max( MLU,MUR ) ) + ( ( RCSe * MUR ) * ( RRSe / RCSe ) ) ) - MUR )", "obj1": 0.6882845188284519, "obj2": 0.22978109090963506}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / Max( ( RCSe / ( RCSe / RMSe ) ),MUR ) )", "obj1": 0.7845188284518828, "obj2": 0.1501668469935363}, {"determining": "( Max( MDR,BR ) - Max( ( CRS * BR ),( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "( ( RCSe - MUC ) / ( ( CS + CS ) + MUR ) )", "obj1": 0.7740585774058577, "obj2": 0.15873405724675319}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) * ( MRS / Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) * Max( MLU,MUR ) ) + ( RCSe * ( RRSe / RCSe ) ) ) - ( Max( ( MLU - RMSe ),( RMSe * DS ) ) * Min( ( DS / RMSe ) ,( MUM + MUC ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.24037162918426824}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ACS )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( RMSe - MUC ) / Max( ( RCSe / RMSe ),MUR ) )", "obj1": 0.7740585774058577, "obj2": 0.15873405724675319}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( FirstVNF_Mem ,Max( ( ARS * AMS ),( Const / PN ) ) ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * ( ( MUC - CS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( FirstVNF_RAM / AMS ) )", "choosing": "Max( Min( DS ,MUM ),Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) )", "choosing": "Max( ( RRSe * CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( ARS / ARS ) )", "choosing": "Min( ( RMSe / DS ) ,( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( Max( ACS,BR ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RRSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) )", "choosing": "( Max( MUC,RCSe ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( AMS + CRS ) )", "choosing": "( ( RCSe / RMSe ) / ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( RRS ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,Max( Min( RRS ,ACS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - AMS ) - AMS ) - ( ( BR * AMS ) - ( AMS * ARS ) ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - AMS ) - AMS ) - Min( FirstVNF_RAM ,Max( ( RRS * ACS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,RCSe ) - ( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( AMS / AMS ) - ( AMS / ARS ) )", "choosing": "( RCSe - Min( CS ,MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.03204859716060774}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( ( BR / AMS ) + DDR ) ) )", "choosing": "( ( RMSe - DS ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.8326359832635983, "obj2": 0.10826222629547494}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Max( Max( ( ( FirstVNF_Mem_Server * MRS ) - ( BR + MDR ) ),Min( Min( PN ,FirstVNF_CPU ) ,( MRS * FirstVNF_CPU ) ) ),Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( CS - MUM ) + ( RMSe / MUR ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.14265084966924071}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ACS )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( FirstVNF_Mem ,Max( ( ARS * AMS ),( Const / PN ) ) ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * ( ( MUC - CS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( FirstVNF_RAM / AMS ) )", "choosing": "Max( Min( DS ,MUM ),Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) )", "choosing": "Max( ( RRSe * CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( ARS / ARS ) )", "choosing": "Min( ( RMSe / DS ) ,( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( Max( ACS,BR ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RRSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) )", "choosing": "( Max( MUC,RCSe ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( AMS + CRS ) )", "choosing": "( ( RCSe / RMSe ) / ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( RRS ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,Max( Min( RRS ,ACS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - AMS ) - AMS ) - ( ( BR * AMS ) - ( AMS * ARS ) ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - AMS ) - AMS ) - Min( FirstVNF_RAM ,Max( ( RRS * ACS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,RCSe ) - ( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - AMS ) - Min( FirstVNF_RAM ,AMS ) ) - Min( FirstVNF_RAM ,Max( Min( RRS ,ACS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( RCSe,Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( AMS / AMS ) - ( AMS / ARS ) )", "choosing": "( RCSe - Min( CS ,MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.03204859716060774}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( ( BR / AMS ) + DDR ) ) )", "choosing": "( ( RMSe - DS ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.8326359832635983, "obj2": 0.10826222629547494}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Max( Max( ( ( FirstVNF_Mem_Server * MRS ) - ( BR + MDR ) ),Min( Min( PN ,FirstVNF_CPU ) ,( MRS * FirstVNF_CPU ) ) ),Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( CS - MUM ) + ( RMSe / MUR ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.14265084966924071}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) + Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MUR / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.25736355501849684}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ACS )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( FirstVNF_Mem ,Max( ( ARS * AMS ),( Const / PN ) ) ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * ( ( MUC - CS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( FirstVNF_RAM / AMS ) )", "choosing": "Max( Min( DS ,MUM ),Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) )", "choosing": "Max( ( RRSe * CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( ARS / ARS ) )", "choosing": "Min( ( RMSe / DS ) ,( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( Max( ACS,BR ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RRSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) )", "choosing": "( Max( MUC,RCSe ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( AMS + CRS ) )", "choosing": "( ( RCSe / RMSe ) / ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( RRS ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,Max( Min( RRS ,ACS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - AMS ) - AMS ) - ( ( BR * AMS ) - ( AMS * ARS ) ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( AMS / AMS ) - ( AMS / ARS ) )", "choosing": "( RCSe - Min( CS ,MUM ) )", "obj1": 0.9435146443514645, "obj2": 0.03204859716060774}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( ( BR / AMS ) + DDR ) ) )", "choosing": "( ( RMSe - DS ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.8326359832635983, "obj2": 0.10826222629547494}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Max( Max( ( ( FirstVNF_Mem_Server * MRS ) - ( BR + MDR ) ),Min( Min( PN ,FirstVNF_CPU ) ,( MRS * FirstVNF_CPU ) ) ),Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( CS - MUM ) + ( RMSe / MUR ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.14265084966924071}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) + Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MUR / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.24068314424424664}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) + Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MUR / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.25736355501849684}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ACS )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MUR / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.25736355501849684}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( FirstVNF_Mem ,Max( ( ARS * AMS ),( Const / PN ) ) ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * ( ( MUC - CS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( FirstVNF_RAM / AMS ) )", "choosing": "Max( Min( DS ,MUM ),Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) )", "choosing": "Max( ( RRSe * CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( ARS / ARS ) )", "choosing": "Min( ( RMSe / DS ) ,( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( Max( ACS,BR ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RRSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_Mem ) - ( DDR - FirstVNF_CPU ) )", "choosing": "( Max( MUC,RCSe ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( AMS + CRS ) )", "choosing": "( ( RCSe / RMSe ) / ( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( RRS ,ACS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,Max( Min( RCSe ,MUM ),Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Max( Max( ( ( FirstVNF_Mem_Server * MRS ) - ( BR + MDR ) ),Min( Min( PN ,FirstVNF_CPU ) ,( MRS * FirstVNF_CPU ) ) ),Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( CS - MUM ) + ( RMSe / MUR ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.14265084966924071}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( ( BR / AMS ) + DDR ) ) )", "choosing": "( ( RMSe - DS ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.8326359832635983, "obj2": 0.10826222629547494}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( BR * AMS ) - ( MRS / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM + CS ) )", "obj1": 0.6673640167364017, "obj2": 0.21645397932166072}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( BR / AMS ) - ( Const / Const ) )", "choosing": "Max( Min( CS ,MUM ),( DS / RRSe ) )", "obj1": 0.8828451882845189, "obj2": 0.0540009642240393}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( MUC + RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1885388143440202}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) + Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MUR / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.25736355501849684}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ACS )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MUR / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.25736355501849684}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( FirstVNF_Mem ,Max( ( ARS * AMS ),( Const / PN ) ) ) )", "choosing": "( ( MUM * RMSe ) + ( RRSe * ( ( MUC - CS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( FirstVNF_RAM / AMS ) )", "choosing": "Max( Min( DS ,MUM ),Max( MLU,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) )", "choosing": "Max( ( RRSe * CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( ARS / ARS ) )", "choosing": "Min( ( RMSe / DS ) ,( CS + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( MRS / ARS ) )", "choosing": "( Max( CS,DS ) - ( DS + CS ) )", "obj1": 0.606694560669456, "obj2": 0.3195146391276521}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Max( Max( ( ( FirstVNF_Mem_Server * MRS ) - ( BR + MDR ) ),Min( Min( PN ,FirstVNF_CPU ) ,( MRS * FirstVNF_CPU ) ) ),Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( CS - MUM ) + ( RMSe / MUR ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.14265084966924071}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( ( BR / AMS ) + DDR ) ) )", "choosing": "( ( RMSe - DS ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.8326359832635983, "obj2": 0.10826222629547494}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( BR * AMS ) - ( MRS / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM + CS ) )", "obj1": 0.6673640167364017, "obj2": 0.21645397932166072}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( MUC + RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1885388143440202}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "Max( Min( CS ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.8807531380753139, "obj2": 0.05497298790144993}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( Min( CS ,MUR ) + ( MUC * MUR ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) ) ,Max( MUC,MLU ) )", "obj1": 0.8451882845188284, "obj2": 0.07264847912144083}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( BR / AMS ) - ( Const / Const ) )", "choosing": "Max( Min( CS ,MUM ),( DS / RRSe ) )", "obj1": 0.8828451882845189, "obj2": 0.0540009642240393}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( CS,DS ) - ( MUM + CS ) )", "obj1": 0.6255230125523012, "obj2": 0.2630934271121983}, {"determining": "( ( MRS - ACS ) + ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MLU + DS ) / Max( RMSe,DS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ACS )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.2646962310622688}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,MUM ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( MRS / ARS ) )", "choosing": "( Max( CS,DS ) - ( DS + CS ) )", "obj1": 0.606694560669456, "obj2": 0.3195146391276521}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Max( Max( ( ( FirstVNF_Mem_Server * MRS ) - ( BR + MDR ) ),Min( Min( PN ,FirstVNF_CPU ) ,( MRS * FirstVNF_CPU ) ) ),Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( CS - MUM ) + ( RMSe / MUR ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.14265084966924071}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( BR * AMS ) - ( MRS / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM + CS ) )", "obj1": 0.6673640167364017, "obj2": 0.21645397932166072}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( ( BR / AMS ) + DDR ) ) )", "choosing": "( ( RMSe - DS ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.8326359832635983, "obj2": 0.10826222629547494}, {"determining": "( ( ( BR * AMS ) / FirstVNF_Mem_Server ) - ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / FirstVNF_Mem ) )", "choosing": "( ( CS + MUR ) - ( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / MUM ) )", "obj1": 0.8075313807531381, "obj2": 0.11457425855816764}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( MUC + RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1885388143440202}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "Max( Min( CS ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.8807531380753139, "obj2": 0.05497298790144993}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( Min( CS ,MUR ) + ( MUC * MUR ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) ) ,Max( MUC,MLU ) )", "obj1": 0.8451882845188284, "obj2": 0.07264847912144083}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUC,MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.1705728103814913}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "Max( Min( CS ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.8870292887029289, "obj2": 0.05170260484434283}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( BR / AMS ) - ( Const / Const ) )", "choosing": "Max( Min( CS ,MUM ),( DS / RRSe ) )", "obj1": 0.8828451882845189, "obj2": 0.0540009642240393}, {"determining": "Max( Min( Const ,FirstVNF_CPU ),ACS )", "choosing": "Min( MUC ,( CS - CS ) )", "obj1": 0.6338912133891214, "obj2": 0.257276631922922}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - FirstVNF_CPU ) ,( RRS * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MDR * RRS ) ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + RRS ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) * ( MUR - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2881473432626703}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( BR * AMS ) - ( MRS / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM + CS ) )", "obj1": 0.6673640167364017, "obj2": 0.21645397932166072}, {"determining": "( ( MDR - AMS ) / ( BR * ( Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) ) - DDR ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) * ( MUM + MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16029919854299046}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24090081237454875}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( ( BR / AMS ) + DDR ) ) )", "choosing": "( ( RMSe - DS ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.8326359832635983, "obj2": 0.10826222629547494}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( ( BR * AMS ) / FirstVNF_Mem_Server ) - ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / FirstVNF_Mem ) )", "choosing": "( ( CS + MUR ) - ( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / MUM ) )", "obj1": 0.8075313807531381, "obj2": 0.11457425855816764}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( MUC + RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1885388143440202}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "Max( Min( CS ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.8807531380753139, "obj2": 0.05497298790144993}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( Min( CS ,MUR ) + ( MUC * MUR ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) ) ,Max( MUC,MLU ) )", "obj1": 0.8451882845188284, "obj2": 0.07264847912144083}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUC,MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.1705728103814913}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "Max( Min( CS ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.8870292887029289, "obj2": 0.05170260484434283}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( Min( Const ,FirstVNF_CPU ) + FirstVNF_Mem )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.6192468619246861, "obj2": 0.2655547058127579}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( BR / AMS ) - ( Const / Const ) )", "choosing": "Max( Min( CS ,MUM ),( DS / RRSe ) )", "obj1": 0.8828451882845189, "obj2": 0.0540009642240393}, {"determining": "Max( Min( Const ,FirstVNF_CPU ),ACS )", "choosing": "Min( MUC ,( CS - CS ) )", "obj1": 0.6338912133891214, "obj2": 0.257276631922922}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,Const ) - ( ACS + CRS ) )", "choosing": "( Max( RMSe,MUC ) / ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,BR ) - ( FirstVNF_CPU_Server / BR ) )", "choosing": "( ( MUM + RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( ( MDR / DDR ) - AMS ) - ( DDR + PN ) )", "choosing": "( ( RMSe + MUC ) + Min( ( Max( CS,DS ) / MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) * ( MUR - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2881473432626703}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6422594142259415, "obj2": 0.25050753524651787}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUC,MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.1705728103814913}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( AMS - DDR ) - ( AMS + ( ( BR / AMS ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) / ( CS / MUR ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( MUC + RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1885388143440202}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "Max( Min( CS ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.8807531380753139, "obj2": 0.05497298790144993}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "Max( Min( CS ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.8870292887029289, "obj2": 0.05170260484434283}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( ACS - MDR ) - ( BR / AMS ) )", "choosing": "( ( MUM * MUC ) / ( CS * CS ) )", "obj1": 0.7092050209205021, "obj2": 0.17879367724362302}, {"determining": "( ( BR / AMS ) - ( Const / Const ) )", "choosing": "Max( Min( CS ,MUM ),( DS / RRSe ) )", "obj1": 0.8828451882845189, "obj2": 0.0540009642240393}, {"determining": "( Min( Const ,FirstVNF_CPU ) + FirstVNF_Mem )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.6192468619246861, "obj2": 0.2655547058127579}, {"determining": "Max( Min( Const ,FirstVNF_CPU ),ACS )", "choosing": "Min( MUC ,( CS - CS ) )", "obj1": 0.6338912133891214, "obj2": 0.257276631922922}, {"determining": "( Min( Const ,FirstVNF_CPU ) + FirstVNF_Mem )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.6192468619246861, "obj2": 0.2655547058127579}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / DDR ) - AMS ) - ( DDR + PN ) )", "choosing": "( ( RMSe + MUC ) + Min( ( Max( CS,DS ) / MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) * ( MUR - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2881473432626703}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( AMS - DDR ) - ( AMS + ( ( BR / AMS ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) / ( CS / MUR ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "Max( Min( CS ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.8807531380753139, "obj2": 0.05497298790144993}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "Max( Min( CS ,MUM ),Min( DS ,RRSe ) )", "obj1": 0.8870292887029289, "obj2": 0.05170260484434283}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( ( BR / AMS ) - ( Const / Const ) )", "choosing": "Max( Min( CS ,MUM ),( DS / RRSe ) )", "obj1": 0.8828451882845189, "obj2": 0.0540009642240393}, {"determining": "( Min( Const ,FirstVNF_CPU ) + FirstVNF_Mem )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.6192468619246861, "obj2": 0.2655547058127579}, {"determining": "Max( Min( Const ,FirstVNF_CPU ),ACS )", "choosing": "Min( MUC ,( CS - CS ) )", "obj1": 0.6338912133891214, "obj2": 0.257276631922922}, {"determining": "( Min( Const ,FirstVNF_CPU ) + FirstVNF_Mem )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.6192468619246861, "obj2": 0.2655547058127579}, {"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( PN ,Max( ( RRS / Min( Const ,RRS ) ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUC ) + Max( RRSe,Max( Min( RCSe ,MUR ),( ( RRSe / RRSe ) / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( PN ,Max( ( RRS / ACS ),Max( ( RRS / ACS ),Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / MUC ) + Max( RRSe,Max( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ),( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / DS ) + ( Max( ( MUC * RCSe ),RMSe ) * Max( MLU,( RMSe / MLU ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.2960633901568777}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( AMS - DDR ) - ( AMS + ( ( BR / AMS ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) / ( CS / MUR ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) * ( MUR - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2881473432626703}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( FirstVNF_Mem * RRS ) + ( BR - MRS ) )", "choosing": "( ( Min( Max( MUR,RMSe ) ,( MUR / MUR ) ) / ( ( MLU - MUR ) * ( RCSe + RCSe ) ) ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2631604413885988}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "Max( Min( Const ,FirstVNF_CPU ),ACS )", "choosing": "Min( MUC ,( CS - CS ) )", "obj1": 0.6338912133891214, "obj2": 0.257276631922922}, {"determining": "( ( ( MDR / DDR ) - AMS ) - ( DDR + PN ) )", "choosing": "( ( RMSe + MUC ) + Min( ( Max( CS,DS ) / MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( PN ,Max( ( RRS / Min( Const ,RRS ) ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUC ) + Max( RRSe,Max( Min( RCSe ,MUR ),( ( RRSe / RRSe ) / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( PN ,Max( ( RRS / ACS ),Max( ( RRS / ACS ),Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / MUC ) + Max( RRSe,Max( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ),( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - ( Min( Const ,RRS ) - Min( PN ,Max( ( RRS / ACS ),Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RCSe ) + ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / DS ) + ( Max( ( MUC * RCSe ),RMSe ) * Max( MLU,( RMSe / MLU ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.2960633901568777}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19483650801628907}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) * ( MUR - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2881473432626703}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( AMS - DDR ) - ( AMS + ( ( BR / AMS ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) / ( CS / MUR ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( FirstVNF_Mem * RRS ) + ( BR - MRS ) )", "choosing": "( ( Min( Max( MUR,RMSe ) ,( MUR / MUR ) ) / ( ( MLU - MUR ) * ( RCSe + RCSe ) ) ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2631604413885988}, {"determining": "( ARS - ( BR * PN ) )", "choosing": "( Min( MUC ,CS ) - Max( MUC,CS ) )", "obj1": 0.6213389121338913, "obj2": 0.2627660321084139}, {"determining": "Max( Min( Const ,FirstVNF_CPU ),ACS )", "choosing": "Min( MUC ,( CS - CS ) )", "obj1": 0.6338912133891214, "obj2": 0.257276631922922}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / DDR ) - AMS ) - ( DDR + PN ) )", "choosing": "( ( RMSe + MUC ) + Min( ( Max( CS,DS ) / MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + ( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RMSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( ( Min( FirstVNF_Mem_Server ,MDR ) * ( CRS / Const ) ) ,( Min( FirstVNF_RAM_Server ,DDR ) - Max( DDR,CRS ) ) ) / ( ( ( DDR - FirstVNF_RAM_Server ) - ( BR + Const ) ) - ( ( FirstVNF_CPU * ARS ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) - Max( Max( ( ( ARS - ARS ) / ( RRS + FirstVNF_Mem_Server ) ),Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / Const ) ) ),( ( Max( MRS,CRS ) * ( CRS + RRS ) ) * ( ( DDR + RRS ) / Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,( ( ( Max( ( PN * Const ),( CRS - FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_Mem_Server ) / ( MRS - ACS ) ) ) - ( ( Min( DDR ,PN ) + ( DDR - FirstVNF_Mem_Server ) ) - ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) * ( Min( Min( ( PN + FirstVNF_Mem_Server ) ,( MRS - MRS ) ) ,( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_RAM_Server ) ) ) + Max( ( ( BR / FirstVNF_Mem ) - ( ACS / MDR ) ),( Max( ARS,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( Min( Max( RRS,FirstVNF_CPU_Server ) ,( ARS + CRS ) ) + ( ( PN + MDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( ( RRS / PN ) - ( Const - FirstVNF_Mem ) ) * ( ( DDR * FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) ) - Max( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - MRS ) ) * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ),Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( RRS * FirstVNF_RAM_Server ) + ( RRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU / ARS ),( DDR + BR ) ) + Max( Min( RRS ,RRS ),( Const / AMS ) ) ) / ( Min( Min( FirstVNF_Mem ,PN ) ,( ARS + AMS ) ) * ( ( RRS + AMS ) * ( ARS + DDR ) ) ) ) - ( ( ( Min( FirstVNF_Mem ,DDR ) - ( CRS + FirstVNF_CPU ) ) * ( ( Const + MDR ) - Min( CRS ,CRS ) ) ) / ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,AMS ) ) / ( ( Const / AMS ) + ( MDR * RRS ) ) ) ) ) ) ) - Max( ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),( ARS / BR ) ) * ( ( RRS * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) / Max( ( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ),( Min( CRS ,FirstVNF_RAM ) + Max( FirstVNF_RAM,AMS ) ) ) ) - ( ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_CPU_Server / RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ACS / ACS ) ) ) / Max( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_CPU,MDR ) ),Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) - Max( Max( ( Max( Max( ARS,FirstVNF_CPU_Server ),( Const * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_RAM ),Max( DDR,CRS ) ) ),( ( ( RRS + PN ) / ( FirstVNF_RAM_Server + DDR ) ) - ( Min( AMS ,DDR ) - ( Const / FirstVNF_Mem_Server ) ) ) ),( Min( ( ( FirstVNF_RAM - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ,Min( ( Const / FirstVNF_RAM_Server ) ,( AMS + BR ) ) ) + Max( ( Max( BR,FirstVNF_RAM_Server ) + ( BR * FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_CPU * Const ) ) ) ) ) ),( Min( ( ( Min( ( FirstVNF_Mem + MDR ) ,Min( PN ,CRS ) ) + ( Max( Const,AMS ) + ( AMS + MRS ) ) ) * ( ( Min( DDR ,DDR ) - Max( RRS,PN ) ) / Max( ( AMS - CRS ),( FirstVNF_Mem_Server - ARS ) ) ) ) ,( ( ( ( FirstVNF_Mem + CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) * ( ( AMS + CRS ) + Min( RRS ,AMS ) ) ) * ( Max( Min( ARS ,RRS ),( RRS * ARS ) ) / ( Min( PN ,ARS ) - ( ACS + FirstVNF_Mem ) ) ) ) ) - ( Min( Min( ( Max( RRS,RRS ) * Min( PN ,FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Max( ( ( AMS + ACS ) + ( Const + FirstVNF_Mem ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( AMS - ARS ) ) ) ) - ( Max( Min( ( FirstVNF_Mem + ARS ) ,( FirstVNF_CPU * MDR ) ),( ( DDR + RRS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU - DDR ) / ( ACS / FirstVNF_CPU ) ) * Min( Min( ARS ,ARS ) ,( FirstVNF_Mem * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( Min( ( RMSe + MUM ) ,Min( RMSe ,DS ) ) / ( ( RMSe - MUR ) / ( DS + MUM ) ) ) + ( ( ( RCSe / RCSe ) + ( MUR - MUM ) ) / Min( ( RRSe * DS ) ,Max( RRSe,RMSe ) ) ) ) ,Min( ( ( ( MUC + RCSe ) * ( RMSe * MUC ) ) * Min( ( MLU / MUM ) ,( CS / DS ) ) ) ,( Min( Min( MLU ,MUC ) ,( DS + DS ) ) + ( ( RCSe / MUC ) + ( MLU - RRSe ) ) ) ) ) - ( ( ( Max( ( MUM - DS ),Max( MUC,MUC ) ) * ( ( MLU * CS ) - ( RCSe - MUR ) ) ) + Min( ( ( MUC - MUM ) - Min( MLU ,MUC ) ) ,( ( RCSe + MUR ) * ( RCSe * MLU ) ) ) ) + ( ( ( ( CS - MUR ) * Max( MUM,MUM ) ) / Min( Min( MUM ,RMSe ) ,Max( MUR,RRSe ) ) ) * Max( ( Max( MUM,MUR ) - ( MLU * MLU ) ),( ( DS / CS ) * Max( RCSe,MLU ) ) ) ) ) ) / ( ( ( ( ( Max( MUM,MUM ) + ( DS - MUR ) ) - Min( Min( MUC ,MUR ) ,( CS + DS ) ) ) * ( ( ( MLU / RCSe ) + ( RRSe - MUM ) ) / ( ( MUM - MUM ) * ( MUC - RMSe ) ) ) ) - Max( ( Min( ( CS * DS ) ,( MLU * MUC ) ) * ( ( MUR - MUM ) + ( RMSe - DS ) ) ),( ( ( MUM / DS ) / ( RMSe - CS ) ) + Min( Max( RCSe,RCSe ) ,( RMSe / MLU ) ) ) ) ) * ( ( ( ( ( MUR / DS ) * ( MUC + RCSe ) ) + Min( ( RCSe / MUR ) ,( CS * RCSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( MUR + RCSe ) ) * Min( Min( MUC ,RRSe ) ,Max( RCSe,CS ) ) ) ) * ( ( Max( ( MUC * RMSe ),( MUR - MLU ) ) / Max( ( RRSe / MUR ),( CS / MUM ) ) ) + ( ( Min( RRSe ,CS ) - Min( RCSe ,RRSe ) ) * ( ( MUR - MLU ) - ( CS - MUM ) ) ) ) ) ) ) * ( ( Min( Max( ( ( ( MUM * RMSe ) * ( RMSe + MUC ) ) * ( ( CS + MLU ) / Min( MLU ,RCSe ) ) ),( ( Min( CS ,RRSe ) - ( MUC + MLU ) ) + ( ( MLU * RMSe ) + ( DS - RRSe ) ) ) ) ,( ( Min( ( MUR / CS ) ,( MUC - CS ) ) - Max( ( RMSe + MUC ),Min( MLU ,MUR ) ) ) - ( Min( ( CS - CS ) ,Min( RMSe ,CS ) ) - ( ( MUC - RCSe ) * ( MLU - RRSe ) ) ) ) ) * ( Max( Min( Max( ( MUR / MUM ),( MLU + MUC ) ) ,( ( RMSe * MLU ) - Min( MUC ,RRSe ) ) ),( Max( Max( RRSe,RRSe ),( MUR * RMSe ) ) - ( ( RCSe / DS ) / ( MUM * MUM ) ) ) ) * Max( Max( ( Max( MUC,CS ) / Max( RRSe,RMSe ) ),Min( ( RRSe + RMSe ) ,Min( MUR ,DS ) ) ),Max( Min( Max( RCSe,CS ) ,( MUR - MUC ) ),( Max( MLU,RCSe ) - Min( RRSe ,MLU ) ) ) ) ) ) / ( ( ( ( ( ( RMSe - CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe + RMSe ) / Min( RRSe ,DS ) ) ) + Min( ( ( MLU * RRSe ) - ( MUC / MUR ) ) ,( ( MLU + MUC ) / ( CS + CS ) ) ) ) + ( ( ( ( CS * RMSe ) - ( MLU + MUR ) ) + Max( ( MUC + RRSe ),( DS + DS ) ) ) - Max( ( ( DS / RCSe ) * ( RMSe * MLU ) ),( ( MUR - CS ) * ( CS / MUR ) ) ) ) ) + ( ( Max( Max( ( CS * RCSe ),Max( MUM,RMSe ) ),( ( MUR * MUR ) - ( MUC + MUM ) ) ) + Max( ( ( RCSe / RCSe ) + Max( MLU,MUM ) ),( Max( RMSe,MUR ) / ( MLU - DS ) ) ) ) + ( ( Min( ( CS + RCSe ) ,Max( MUR,MUR ) ) + ( ( RCSe - RRSe ) / ( DS * MUM ) ) ) / Min( ( ( MLU / MUM ) * ( CS / MUM ) ) ,( ( MUC / MUC ) - ( MUR - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) * ( DDR + FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,Min( ( MLU + MUR ) ,( ( ( DS * RMSe ) / ( MUR + RCSe ) ) / ( RMSe * CS ) ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RRSe / RCSe ) + Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / DS ) + ( Max( ( MUC * RCSe ),RMSe ) * Max( MLU,( RMSe / MLU ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.2960633901568777}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.6924686192468619, "obj2": 0.17185157780588953}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.030117047858400664}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( AMS - DDR ) - ( AMS + ( ( BR / AMS ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) / ( CS / MUR ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) * ( MUR - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2881473432626703}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.7447698744769874, "obj2": 0.13288810861456857}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( FirstVNF_Mem * RRS ) + ( BR - MRS ) )", "choosing": "( ( Min( Max( MUR,RMSe ) ,( MUR / MUR ) ) / ( ( MLU - MUR ) * ( RCSe + RCSe ) ) ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2631604413885988}, {"determining": "( ( BR / ( FirstVNF_Mem * ARS ) ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( CS / MUC ) - Min( MLU ,CS ) ) )", "obj1": 0.997907949790795, "obj2": 0.00093687028368557}, {"determining": "( ARS - ( BR * PN ) )", "choosing": "( Min( MUC ,CS ) - Max( MUC,CS ) )", "obj1": 0.6213389121338913, "obj2": 0.2627660321084139}, {"determining": "Max( Min( Const ,FirstVNF_CPU ),ACS )", "choosing": "Min( MUC ,( CS - CS ) )", "obj1": 0.6338912133891214, "obj2": 0.257276631922922}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / DDR ) - AMS ) - ( DDR + PN ) )", "choosing": "( ( RMSe + MUC ) + Min( ( Max( CS,DS ) / MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / DS ) + ( Max( ( MUC * RCSe ),RMSe ) * Max( MLU,( RMSe / MLU ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.2960633901568777}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) * ( MUR - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2881473432626703}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( FirstVNF_Mem * RRS ) + ( BR - MRS ) )", "choosing": "( ( Min( Max( MUR,RMSe ) ,( MUR / MUR ) ) / ( ( MLU - MUR ) * ( RCSe + RCSe ) ) ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2631604413885988}, {"determining": "( ( BR / ( FirstVNF_Mem * ARS ) ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( CS / MUC ) - Min( MLU ,CS ) ) )", "obj1": 0.997907949790795, "obj2": 0.00093687028368557}, {"determining": "( ARS - ( BR * PN ) )", "choosing": "( Min( MUC ,CS ) - Max( MUC,CS ) )", "obj1": 0.6213389121338913, "obj2": 0.2627660321084139}, {"determining": "Max( Min( Const ,FirstVNF_CPU ),ACS )", "choosing": "Min( MUC ,( CS - CS ) )", "obj1": 0.6338912133891214, "obj2": 0.257276631922922}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / DDR ) - AMS ) - ( DDR + PN ) )", "choosing": "( ( RMSe + MUC ) + Min( ( Max( CS,DS ) / MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Max( ARS,ARS ),( MDR + FirstVNF_CPU ) ) ) * Max( Min( Min( ACS ,RRS ) ,( FirstVNF_CPU - MDR ) ),( ( FirstVNF_CPU - FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,ARS ) ) ) ) ,Min( ( Max( ( ARS * FirstVNF_RAM ),( DDR / FirstVNF_Mem ) ) * ( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * CRS ) ) ) ,( ( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem ) ) * ( ( RRS / FirstVNF_CPU_Server ) - ( DDR / MRS ) ) ) ) ) + ( ( ( Max( Min( FirstVNF_RAM ,PN ),Max( PN,AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( AMS * PN ) ) ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Min( Const ,FirstVNF_CPU ) ) - Max( Min( MDR ,ARS ),( MDR * FirstVNF_Mem ) ) ) ) * Max( ( ( Min( FirstVNF_CPU_Server ,AMS ) / Max( ACS,DDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS / Const ) ) ),( ( ( BR - MDR ) * Max( DDR,BR ) ) - Min( ( FirstVNF_RAM / DDR ) ,Min( CRS ,Const ) ) ) ) ) ) ,Max( Min( Max( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( PN + MRS ) ) / Min( ( MDR - FirstVNF_Mem ) ,Min( MDR ,PN ) ) ),( ( ( FirstVNF_RAM * MRS ) - ( DDR + CRS ) ) / ( ( DDR / FirstVNF_Mem_Server ) * Min( RRS ,ARS ) ) ) ) ,( ( ( ( PN - PN ) + ( DDR * FirstVNF_RAM ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) - ( ( Min( PN ,FirstVNF_CPU ) - ( CRS + ARS ) ) + Min( Min( FirstVNF_RAM ,BR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ) ),( Max( ( ( ( ACS + FirstVNF_CPU_Server ) * ( ARS / DDR ) ) / ( ( MRS * FirstVNF_RAM ) - ( DDR * PN ) ) ),( ( ( MRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - ARS ) ) - ( ( ACS - FirstVNF_CPU ) * ( ACS / FirstVNF_RAM_Server ) ) ) ) - Max( ( Min( ( ARS * CRS ) ,Min( MDR ,MDR ) ) - Max( ( RRS / AMS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),( Min( ( DDR + FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) ) * ( Min( AMS ,AMS ) + ( PN + Const ) ) ) ) ) ) ) / ( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS / BR ) ) + ( ( CRS + CRS ) / ( FirstVNF_CPU / PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - AMS ) / ( FirstVNF_CPU + ACS ) ) ,( Min( DDR ,ARS ) * Max( FirstVNF_CPU,DDR ) ) ) ),( Min( Min( ( DDR + PN ) ,Max( FirstVNF_Mem,PN ) ) ,Min( ( FirstVNF_Mem_Server / RRS ) ,Min( Const ,FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_CPU ) - ( BR - ACS ) ) - Min( Min( DDR ,Const ) ,( MRS + FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Max( Min( BR ,BR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,Max( DDR,ARS ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ARS - RRS ) / ( ARS + RRS ) ) ) ) * ( ( ( Max( AMS,MDR ) * ( Const * ACS ) ) * ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( CRS - MDR ) ) ) * ( ( ( CRS + MDR ) + ( AMS - FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,CRS ) ) ) ) ) ) / ( ( ( Max( Min( Min( ARS ,MRS ) ,( RRS / BR ) ),Min( ( Const / CRS ) ,( Const * MRS ) ) ) / ( ( Min( ACS ,FirstVNF_RAM_Server ) / ( CRS + BR ) ) + Max( ( FirstVNF_Mem_Server + ACS ),Max( CRS,AMS ) ) ) ) * ( Max( Max( Min( FirstVNF_RAM ,MRS ),( ARS / BR ) ),( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) + Max( ( Min( MRS ,CRS ) / Max( FirstVNF_Mem_Server,RRS ) ),( Max( FirstVNF_CPU,PN ) * ( FirstVNF_Mem_Server * ACS ) ) ) ) ) * Max( ( Max( Min( ( BR - RRS ) ,( ARS * BR ) ),( Max( MRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ) ) + Min( ( Min( FirstVNF_Mem_Server ,ARS ) + ( AMS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - Min( AMS ,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU / RRS ) + ( MDR - CRS ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / Min( ARS ,AMS ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( RMSe ,MUM ) - MUR ) ) + Min( ( ( MUM * Max( CS,CS ) ) * MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( ( ( CRS / PN ) / ( MRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem / FirstVNF_RAM ) / ( RRS * MDR ) ) ) )", "choosing": "( MUR - RCSe )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( MRS / PN ) - ARS )", "choosing": "( ( CS / MUC ) - Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / DS ) + ( Max( ( MUC * RCSe ),RMSe ) * Max( MLU,( RMSe / MLU ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.2960633901568777}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) * ( MUR - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2881473432626703}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) - ( Const / ARS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Max( ( ( ( MUC / CS ) - Min( RRSe ,RMSe ) ) * ( Max( MUM,MUC ) + ( MUC - RCSe ) ) ),( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) / Max( ( CS * MUM ),( RRSe * RMSe ) ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2564618822166013}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( ( MLU + MUM ),Min( DS ,CS ) ) / ( RCSe / RRSe ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - ( MRS / ACS ) ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RCSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25822356617948067}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( FirstVNF_Mem * RRS ) + ( BR - MRS ) )", "choosing": "( ( Min( Max( MUR,RMSe ) ,( MUR / MUR ) ) / ( ( MLU - MUR ) * ( RCSe + RCSe ) ) ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2631604413885988}, {"determining": "( ( BR / ( FirstVNF_Mem * ARS ) ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( CS / MUC ) - Min( MLU ,CS ) ) )", "obj1": 0.997907949790795, "obj2": 0.00093687028368557}, {"determining": "( ARS - ( BR * PN ) )", "choosing": "( Min( MUC ,CS ) - Max( MUC,CS ) )", "obj1": 0.6213389121338913, "obj2": 0.2627660321084139}, {"determining": "Max( Min( Const ,FirstVNF_CPU ),ACS )", "choosing": "Min( MUC ,( CS - CS ) )", "obj1": 0.6338912133891214, "obj2": 0.257276631922922}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / DDR ) - AMS ) - ( DDR + PN ) )", "choosing": "( ( RMSe + MUC ) + Min( ( Max( CS,DS ) / MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - ARS )", "choosing": "( ( CS / MUC ) - Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / DS ) + ( Max( ( MUC * RCSe ),RMSe ) * Max( MLU,( RMSe / MLU ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.2960633901568777}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( BR * ( BR * AMS ) ) - ( MRS / ARS ) )", "choosing": "( Max( CS,( Max( CS,DS ) - ( MUM + CS ) ) ) - ( MUM + CS ) )", "obj1": 0.8368200836820083, "obj2": 0.08575500444298892}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) * ( MUR - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2881473432626703}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( Min( Const ,DDR ) + Min( Const ,DDR ) )", "choosing": "( MUC / ( ( CS - DS ) - DS ) )", "obj1": 0.6276150627615062, "obj2": 0.25219149824961895}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( Max( ( Max( ( ( ( FirstVNF_CPU * Const ) * Max( DDR,DDR ) ) / Min( Min( ACS ,ARS ) ,Max( MDR,Const ) ) ),( ( Min( FirstVNF_Mem ,ACS ) - Min( CRS ,DDR ) ) - Max( ( ARS * MRS ),( MDR - BR ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / MRS ) / Min( FirstVNF_Mem ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) + ( ACS + FirstVNF_CPU_Server ) ) ) + Min( ( ( FirstVNF_Mem / FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,MRS ) ) ,( ( ARS - DDR ) - ( ARS + FirstVNF_RAM ) ) ) ) ),( ( Max( ( ( DDR / FirstVNF_RAM_Server ) + Min( MRS ,MDR ) ),Max( ( FirstVNF_Mem_Server / Const ),Min( RRS ,FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU_Server / Const ) + ( CRS * FirstVNF_CPU_Server ) ),Min( Min( Const ,ARS ) ,Min( Const ,FirstVNF_Mem ) ) ) ) * Min( ( Max( Min( FirstVNF_CPU ,MRS ),Max( PN,CRS ) ) * ( ( FirstVNF_CPU * RRS ) * Max( FirstVNF_Mem,MRS ) ) ) ,( Max( Min( Const ,FirstVNF_RAM ),( Const - FirstVNF_CPU ) ) / Min( ( MRS - CRS ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) ) / ( ( Max( Min( ( Min( FirstVNF_RAM_Server ,RRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ,( Max( PN,AMS ) / ( FirstVNF_CPU_Server + AMS ) ) ),( Min( Min( PN ,DDR ) ,Min( FirstVNF_CPU_Server ,Const ) ) - ( ( ARS * Const ) * Min( ARS ,FirstVNF_RAM ) ) ) ) * ( ( ( ( AMS - FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_CPU * FirstVNF_CPU ),( CRS / BR ) ) ) / ( ( Min( RRS ,BR ) / ( FirstVNF_RAM - MRS ) ) - ( ( RRS + MRS ) - ( AMS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( ( RRS + PN ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + ( Max( ARS,BR ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( Min( DDR ,DDR ) + ( MDR - FirstVNF_RAM ) ) * Max( ( ARS / FirstVNF_Mem_Server ),( DDR * FirstVNF_Mem ) ) ) ) + Max( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - Min( DDR ,MRS ) ) + Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,DDR ) ) ),( Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) / ( ( MRS - ACS ) + Min( CRS ,RRS ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( Const / FirstVNF_Mem ) * ( RRS / FirstVNF_RAM_Server ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,RRS ) ) ),Max( ( Min( DDR ,RRS ) / Min( ACS ,MRS ) ),( Max( FirstVNF_Mem_Server,MDR ) / ( ACS + MDR ) ) ) ) - Min( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,Min( MDR ,DDR ) ) ,Min( Min( MDR ,DDR ) ,( FirstVNF_CPU / CRS ) ) ) ,( ( ( CRS * DDR ) * Max( CRS,MDR ) ) * Max( Min( FirstVNF_CPU ,DDR ),Min( Const ,FirstVNF_CPU ) ) ) ) ) * Min( ( Max( Max( ( FirstVNF_RAM / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ),( Max( ARS,AMS ) + Max( FirstVNF_RAM_Server,Const ) ) ) * ( ( ( CRS / FirstVNF_RAM ) - Min( ARS ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * BR ) * ( PN * FirstVNF_CPU ) ) ) ) ,Min( ( ( ( FirstVNF_RAM * Const ) / Min( CRS ,FirstVNF_RAM ) ) / ( ( PN * FirstVNF_Mem ) - ( FirstVNF_Mem - MRS ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - Max( ( AMS / BR ),( Const / FirstVNF_Mem_Server ) ) ) ) ) ) + Max( ( ( Max( ( ( FirstVNF_RAM + MRS ) * ( BR * FirstVNF_RAM ) ),Max( ( PN - FirstVNF_CPU ),( DDR * RRS ) ) ) / ( ( ( MDR - MRS ) * ( ARS / ARS ) ) / ( ( AMS - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) * ( ( ( ( FirstVNF_RAM / BR ) * ( Const * AMS ) ) * ( ( ARS - FirstVNF_CPU ) * Max( ACS,FirstVNF_Mem_Server ) ) ) * Min( Min( Max( BR,AMS ) ,( PN / MRS ) ) ,( ( FirstVNF_CPU_Server / ARS ) + Max( MRS,Const ) ) ) ) ),( Min( Max( ( Max( PN,FirstVNF_CPU_Server ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ),( ( BR + FirstVNF_CPU_Server ) + Min( AMS ,CRS ) ) ) ,( ( ( FirstVNF_RAM - ARS ) - ( AMS + FirstVNF_CPU_Server ) ) + Min( ( PN + FirstVNF_RAM_Server ) ,( AMS + CRS ) ) ) ) + Max( ( Max( Max( FirstVNF_Mem_Server,BR ),Min( ACS ,ARS ) ) - ( ( FirstVNF_CPU / ARS ) - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_Mem * MRS ) * ( ARS - RRS ) ) * Max( ( MDR * FirstVNF_Mem ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe / Max( MLU,MLU ) ),RMSe ) * ( ( MUC / MUM ) + DS ) )", "obj1": 0.6401673640167364, "obj2": 0.24776824500644185}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( Min( Const ,FirstVNF_CPU ) + ACS )", "choosing": "( Max( RMSe,RCSe ) / ( RRSe - CS ) )", "obj1": 0.6234309623430963, "obj2": 0.26136274093713596}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( FirstVNF_Mem * RRS ) + ( BR - MRS ) )", "choosing": "( ( Min( Max( MUR,RMSe ) ,( MUR / MUR ) ) / ( ( MLU - MUR ) * ( RCSe + RCSe ) ) ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2631604413885988}, {"determining": "( ( BR / ( FirstVNF_Mem * ARS ) ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( CS / MUC ) - Min( MLU ,CS ) ) )", "obj1": 0.997907949790795, "obj2": 0.00093687028368557}, {"determining": "( ARS - ( BR * PN ) )", "choosing": "( Min( MUC ,CS ) - Max( MUC,CS ) )", "obj1": 0.6213389121338913, "obj2": 0.2627660321084139}, {"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / DDR ) - AMS ) - ( DDR + PN ) )", "choosing": "( ( RMSe + MUC ) + Min( ( Max( CS,DS ) / MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( FirstVNF_RAM / ARS ) )", "choosing": "( Max( CS,DS ) - ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( ( MRS * FirstVNF_Mem_Server ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( MUR / MUC ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - BR ) - ( ( ( BR * AMS ) - ( ARS / MRS ) ) / FirstVNF_CPU ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( MUC / MUM ),( CS + MUR ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.28620153316830993}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( Const ,DDR ) + Min( Const ,DDR ) )", "choosing": "( MUC / ( ( CS - DS ) - DS ) )", "obj1": 0.6276150627615062, "obj2": 0.25219149824961895}, {"determining": "( ( Max( ( Max( ( ( ( FirstVNF_CPU * Const ) * Max( DDR,DDR ) ) / Min( Min( ACS ,ARS ) ,Max( MDR,Const ) ) ),( ( Min( FirstVNF_Mem ,ACS ) - Min( CRS ,DDR ) ) - Max( ( ARS * MRS ),( MDR - BR ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / MRS ) / Min( FirstVNF_Mem ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) + ( ACS + FirstVNF_CPU_Server ) ) ) + Min( ( ( FirstVNF_Mem / FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,MRS ) ) ,( ( ARS - DDR ) - ( ARS + FirstVNF_RAM ) ) ) ) ),( ( Max( ( ( DDR / FirstVNF_RAM_Server ) + Min( MRS ,MDR ) ),Max( ( FirstVNF_Mem_Server / Const ),Min( RRS ,FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU_Server / Const ) + ( CRS * FirstVNF_CPU_Server ) ),Min( Min( Const ,ARS ) ,Min( Const ,FirstVNF_Mem ) ) ) ) * Min( ( Max( Min( FirstVNF_CPU ,MRS ),Max( PN,CRS ) ) * ( ( FirstVNF_CPU * RRS ) * Max( FirstVNF_Mem,MRS ) ) ) ,( Max( Min( Const ,FirstVNF_RAM ),( Const - FirstVNF_CPU ) ) / Min( ( MRS - CRS ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) ) / ( ( Max( Min( ( Min( FirstVNF_RAM_Server ,RRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ,( Max( PN,AMS ) / ( FirstVNF_CPU_Server + AMS ) ) ),( Min( Min( PN ,DDR ) ,Min( FirstVNF_CPU_Server ,Const ) ) - ( ( ARS * Const ) * Min( ARS ,FirstVNF_RAM ) ) ) ) * ( ( ( ( AMS - FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_CPU * FirstVNF_CPU ),( CRS / BR ) ) ) / ( ( Min( RRS ,BR ) / ( FirstVNF_RAM - MRS ) ) - ( ( RRS + MRS ) - ( AMS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( ( RRS + PN ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + ( Max( ARS,BR ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( Min( DDR ,DDR ) + ( MDR - FirstVNF_RAM ) ) * Max( ( ARS / FirstVNF_Mem_Server ),( DDR * FirstVNF_Mem ) ) ) ) + Max( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - Min( DDR ,MRS ) ) + Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,DDR ) ) ),( Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) / ( ( MRS - ACS ) + Min( CRS ,RRS ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( Const / FirstVNF_Mem ) * ( RRS / FirstVNF_RAM_Server ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,RRS ) ) ),Max( ( Min( DDR ,RRS ) / Min( ACS ,MRS ) ),( Max( FirstVNF_Mem_Server,MDR ) / ( ACS + MDR ) ) ) ) - Min( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,Min( MDR ,DDR ) ) ,Min( Min( MDR ,DDR ) ,( FirstVNF_CPU / CRS ) ) ) ,( ( ( CRS * DDR ) * Max( CRS,MDR ) ) * Max( Min( FirstVNF_CPU ,DDR ),Min( Const ,FirstVNF_CPU ) ) ) ) ) * Min( ( Max( Max( ( FirstVNF_RAM / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ),( Max( ARS,AMS ) + Max( FirstVNF_RAM_Server,Const ) ) ) * ( ( ( CRS / FirstVNF_RAM ) - Min( ARS ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * BR ) * ( PN * FirstVNF_CPU ) ) ) ) ,Min( ( ( ( FirstVNF_RAM * Const ) / Min( CRS ,FirstVNF_RAM ) ) / ( ( PN * FirstVNF_Mem ) - ( FirstVNF_Mem - MRS ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - Max( ( AMS / BR ),( Const / FirstVNF_Mem_Server ) ) ) ) ) ) + Max( ( ( Max( ( ( FirstVNF_RAM + MRS ) * ( BR * FirstVNF_RAM ) ),Max( ( PN - FirstVNF_CPU ),( DDR * RRS ) ) ) / ( ( ( MDR - MRS ) * ( ARS / ARS ) ) / ( ( AMS - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) * ( ( ( ( FirstVNF_RAM / BR ) * ( Const * AMS ) ) * ( ( ARS - FirstVNF_CPU ) * Max( ACS,FirstVNF_Mem_Server ) ) ) * Min( Min( Max( BR,AMS ) ,( PN / MRS ) ) ,( ( FirstVNF_CPU_Server / ARS ) + Max( MRS,Const ) ) ) ) ),( Min( Max( ( Max( PN,FirstVNF_CPU_Server ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ),( ( BR + FirstVNF_CPU_Server ) + Min( AMS ,CRS ) ) ) ,( ( ( FirstVNF_RAM - ARS ) - ( AMS + FirstVNF_CPU_Server ) ) + Min( ( PN + FirstVNF_RAM_Server ) ,( AMS + CRS ) ) ) ) + Max( ( Max( Max( FirstVNF_Mem_Server,BR ),Min( ACS ,ARS ) ) - ( ( FirstVNF_CPU / ARS ) - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_Mem * MRS ) * ( ARS - RRS ) ) * Max( ( MDR * FirstVNF_Mem ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe / Max( MLU,MLU ) ),RMSe ) * ( ( MUC / MUM ) + DS ) )", "obj1": 0.6401673640167364, "obj2": 0.24776824500644185}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( Min( Const ,DDR ) + FirstVNF_Mem )", "choosing": "( ( MLU + MLU ) / Max( RMSe,CS ) )", "obj1": 0.6234309623430963, "obj2": 0.257946261244483}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( Min( Max( ( ( ( ( ( RRS * FirstVNF_CPU_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),( MDR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_CPU - BR ) ) / Min( Max( CRS,RRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) + Min( Min( ( ( MDR - FirstVNF_Mem ) - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,Max( Max( AMS,PN ),( ARS / CRS ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) + ( RRS / FirstVNF_RAM ) ) - ( ( DDR - DDR ) * ( FirstVNF_RAM_Server * DDR ) ) ) ) ),( Min( Min( ( Min( Const ,FirstVNF_CPU ) - ( CRS - RRS ) ) ,Min( Max( CRS,BR ) ,( CRS * FirstVNF_CPU ) ) ) ,( Max( ( ACS * ACS ),( FirstVNF_RAM / FirstVNF_CPU ) ) - ( ( MRS * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( CRS - BR ) + ( FirstVNF_Mem_Server + MRS ) ) / Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + ARS ) ) ) - ( Min( ( RRS - RRS ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_RAM_Server ) / Min( PN ,ACS ) ) ) ) ) ) ,Min( ( ( ( ( ( Const / AMS ) * ( ARS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( FirstVNF_CPU_Server + ARS ) ) ) - Min( Max( ( FirstVNF_Mem / RRS ),( AMS + RRS ) ) ,( ( CRS * MRS ) - Min( ARS ,RRS ) ) ) ) + ( Max( ( Max( CRS,CRS ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ),( ( MRS / DDR ) + ( ARS - FirstVNF_CPU ) ) ) + ( ( ( ARS - FirstVNF_RAM ) * Max( ACS,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem_Server - AMS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) ,( ( ( ( Max( MRS,FirstVNF_CPU ) * ( Const * MDR ) ) * ( ( FirstVNF_RAM_Server / BR ) - ( BR - CRS ) ) ) - ( ( ( Const * Const ) - Min( ACS ,FirstVNF_RAM_Server ) ) * ( Max( DDR,Const ) * ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( ( MDR + Const ) - ( BR / FirstVNF_RAM ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + PN ) ) ) * ( Min( Max( Const,PN ) ,Min( PN ,AMS ) ) + Min( ( MRS + Const ) ,( FirstVNF_CPU_Server + CRS ) ) ) ) ) ) ) - ( ( ( ( ( ( ( ACS - AMS ) * ( MDR * FirstVNF_Mem_Server ) ) - ( Min( BR ,RRS ) * Min( BR ,FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,CRS ) ) + Min( ( ARS - FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem_Server ) ) ) ) + ( ( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) / Min( Max( ACS,Const ) ,Max( DDR,BR ) ) ) - ( ( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) + Min( Min( FirstVNF_RAM_Server ,MRS ) ,( MDR / FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( Max( Min( PN ,PN ),( MDR - MRS ) ),Max( ( Const * FirstVNF_CPU ),( FirstVNF_Mem + AMS ) ) ),( ( ( FirstVNF_Mem_Server + MRS ) + Max( BR,FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server / ACS ) * Max( FirstVNF_RAM_Server,MDR ) ) ) ) + ( ( ( ( AMS - CRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( ( PN + MRS ) / ( CRS * FirstVNF_Mem_Server ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( BR + Const ) ) + ( ( FirstVNF_RAM - BR ) + ( MDR - FirstVNF_Mem_Server ) ) ) ) ) ) - ( Max( ( Max( ( ( FirstVNF_CPU + RRS ) + Max( PN,PN ) ),( ( FirstVNF_RAM_Server / Const ) + ( RRS - FirstVNF_RAM ) ) ) / ( ( Max( PN,MDR ) + Min( FirstVNF_Mem ,ACS ) ) - Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ),( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + Min( Const ,CRS ) ) - ( Max( BR,ACS ) + Min( FirstVNF_CPU ,MDR ) ) ) - Min( ( Max( FirstVNF_CPU_Server,BR ) + ( MRS * FirstVNF_CPU ) ) ,( ( DDR + FirstVNF_Mem_Server ) * Min( CRS ,CRS ) ) ) ) ) * Min( Min( ( ( ( BR / FirstVNF_CPU_Server ) * ( RRS / AMS ) ) * Min( ( PN - DDR ) ,( FirstVNF_RAM + PN ) ) ) ,Min( ( ( BR - DDR ) + ( FirstVNF_RAM - AMS ) ) ,Max( ( ARS + BR ),( FirstVNF_Mem_Server / Const ) ) ) ) ,Max( ( Min( Max( FirstVNF_RAM_Server,ACS ) ,Min( FirstVNF_RAM_Server ,CRS ) ) / ( Max( RRS,Const ) + ( DDR / MDR ) ) ),( Max( ( PN - Const ),Max( Const,FirstVNF_Mem ) ) - ( Max( RRS,DDR ) * Max( BR,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( Min( ( Min( ( RRSe - RRSe ) ,Max( RRSe,RMSe ) ) * Max( ( DS - MUR ),( MUC / RRSe ) ) ) ,( Min( Max( CS,CS ) ,Max( MUR,MUC ) ) * ( ( DS / MLU ) - ( MUM / RMSe ) ) ) ) - ( Min( Min( ( RMSe + CS ) ,Min( CS ,DS ) ) ,Min( Min( RMSe ,MUC ) ,( MLU - DS ) ) ) + ( ( ( RMSe / MLU ) / ( CS + MUR ) ) - ( ( CS + RRSe ) - Min( MLU ,RCSe ) ) ) ) ) / Max( ( ( ( ( MUM - DS ) * ( DS / RCSe ) ) * ( ( DS - MUR ) * ( CS - MLU ) ) ) - Min( Min( Min( RMSe ,CS ) ,Min( CS ,RCSe ) ) ,( ( MUR + RCSe ) - ( RMSe * CS ) ) ) ),Max( ( Max( Max( CS,MUR ),( CS * CS ) ) / ( ( MLU + MLU ) + ( RRSe * CS ) ) ),Min( ( Min( MUM ,MLU ) - ( MUC * DS ) ) ,( Max( MUM,MLU ) / ( RRSe * DS ) ) ) ) ) ) ,( ( Min( ( Max( ( RCSe * MLU ),( CS - DS ) ) * ( ( CS / RMSe ) / ( RRSe / CS ) ) ) ,Max( ( Min( CS ,DS ) + ( RMSe * RCSe ) ),Max( Max( MUM,CS ),( MUM * MUR ) ) ) ) + ( ( ( Min( RCSe ,RCSe ) / ( MUR - MLU ) ) * Max( ( RRSe / MLU ),( MLU / RMSe ) ) ) / Min( ( ( DS + MUC ) / ( MUR * MUM ) ) ,( ( RMSe * DS ) / ( CS / RRSe ) ) ) ) ) * Max( Max( ( Min( ( CS * MLU ) ,( MUC / MUC ) ) / ( Max( MLU,RRSe ) / Max( RCSe,CS ) ) ),( Min( ( MUM + DS ) ,( MLU - MUR ) ) - ( ( CS * MLU ) * ( RRSe * MUR ) ) ) ),( ( Max( ( RCSe + RCSe ),( RRSe - MLU ) ) + Max( ( MLU * RCSe ),( RMSe - RMSe ) ) ) + Max( ( ( CS * MLU ) / ( MLU * RMSe ) ),Min( ( MUM + RRSe ) ,( MLU * RRSe ) ) ) ) ) ) ) - ( ( ( ( Max( Min( ( MLU - CS ) ,( CS + RRSe ) ),( ( DS - MUC ) / ( MUR + RRSe ) ) ) / ( ( ( MUC / MUC ) - ( MUR * MLU ) ) / ( Min( MLU ,RCSe ) / ( DS / CS ) ) ) ) * Min( ( ( ( MUC + MUM ) - ( DS - RMSe ) ) - ( ( MUR - MUR ) / ( MLU - MUM ) ) ) ,( ( Max( RCSe,DS ) * Min( RMSe ,CS ) ) / Max( ( MUC * RRSe ),( RRSe - MUC ) ) ) ) ) / ( ( ( ( Min( MUR ,MUC ) / ( DS * MUR ) ) + ( Min( RRSe ,RMSe ) / Max( MUM,RMSe ) ) ) * Max( ( ( RCSe * MUR ) + ( RCSe - CS ) ),( ( MUM + RRSe ) - ( RCSe * RCSe ) ) ) ) / Min( ( ( ( DS * CS ) * ( MUM * RRSe ) ) + ( Min( MLU ,MUR ) * Min( MUM ,DS ) ) ) ,( ( ( MUM + DS ) * ( MUR + MUC ) ) * ( ( RMSe - MLU ) - ( CS - MUC ) ) ) ) ) ) - Max( ( ( Min( ( Max( MUR,MUR ) * ( RCSe * DS ) ) ,Min( ( RCSe + MUM ) ,( MUM - RMSe ) ) ) - ( ( ( RCSe + MLU ) / ( MLU + RCSe ) ) * Max( ( CS * DS ),( MUC * MUC ) ) ) ) * ( Max( Max( ( MUC * MLU ),Min( RRSe ,DS ) ),( ( DS - RCSe ) - Min( DS ,RRSe ) ) ) + Min( Min( ( RMSe / MUC ) ,( MUM + MUR ) ) ,Min( ( MUR - DS ) ,( MLU - RMSe ) ) ) ) ),( ( Max( ( ( DS * RMSe ) / ( RCSe + CS ) ),Max( ( MUR * RRSe ),Min( CS ,RMSe ) ) ) + ( ( Max( CS,DS ) - Max( DS,MUR ) ) + ( ( RMSe + MUR ) / ( RRSe + MUM ) ) ) ) / ( Max( ( Min( RCSe ,CS ) + ( RRSe * MLU ) ),( Min( MUC ,DS ) + ( MUM / CS ) ) ) + ( ( Min( MUC ,DS ) - ( RMSe / DS ) ) * Max( ( CS + MUR ),( CS - CS ) ) ) ) ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.004174672794471076}, {"determining": "( ( FirstVNF_Mem * RRS ) + ( BR - MRS ) )", "choosing": "( ( Min( Max( MUR,RMSe ) ,( MUR / MUR ) ) / ( ( MLU - MUR ) * ( RCSe + RCSe ) ) ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2631604413885988}, {"determining": "( ARS - ( BR * PN ) )", "choosing": "( Min( MUC ,CS ) - Max( MUC,CS ) )", "obj1": 0.6213389121338913, "obj2": 0.2627660321084139}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( BR / ( FirstVNF_Mem * ARS ) ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( CS / MUC ) - Min( MLU ,CS ) ) )", "obj1": 0.997907949790795, "obj2": 0.00093687028368557}, {"determining": "( ( MRS / PN ) - ARS )", "choosing": "( ( CS / MUC ) - Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / DDR ) - AMS ) - ( DDR + PN ) )", "choosing": "( ( RMSe + MUC ) + Min( ( Max( CS,DS ) / MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / PN ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( ( CS * MUC ) - ( ( ( CS * MUC ) - ( DS + CS ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( CS,MUC ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) - ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - AMS )", "choosing": "( Max( CS,DS ) - Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( PN - BR ) - ( ( ( BR * AMS ) - ( ARS / MRS ) ) / FirstVNF_CPU ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( MUC / MUM ),( CS + MUR ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.28620153316830993}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUR / MUC ) - ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_Mem_Server ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( MUR / MUC ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * AMS ) - ( ARS / ( ( ( RRS - BR ) / ( FirstVNF_Mem_Server / DDR ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( MUC / MUM ),( CS + MUR ) ) ) )", "obj1": 0.600418410041841, "obj2": 0.28620153316830993}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.602510460251046, "obj2": 0.27468834405599973}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( Const ,DDR ) + Min( Const ,DDR ) )", "choosing": "( MUC / ( ( CS - DS ) - DS ) )", "obj1": 0.6276150627615062, "obj2": 0.25219149824961895}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - ( MLU / Min( RMSe ,RRSe ) ) ) ) * ( MUR - RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.2688193640424662}, {"determining": "( ( Max( ( Max( ( ( ( FirstVNF_CPU * Const ) * Max( DDR,DDR ) ) / Min( Min( ACS ,ARS ) ,Max( MDR,Const ) ) ),( ( Min( FirstVNF_Mem ,ACS ) - Min( CRS ,DDR ) ) - Max( ( ARS * MRS ),( MDR - BR ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / MRS ) / Min( FirstVNF_Mem ,CRS ) ) * ( Max( FirstVNF_RAM_Server,Const ) + ( ACS + FirstVNF_CPU_Server ) ) ) + Min( ( ( FirstVNF_Mem / FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,MRS ) ) ,( ( ARS - DDR ) - ( ARS + FirstVNF_RAM ) ) ) ) ),( ( Max( ( ( DDR / FirstVNF_RAM_Server ) + Min( MRS ,MDR ) ),Max( ( FirstVNF_Mem_Server / Const ),Min( RRS ,FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU_Server / Const ) + ( CRS * FirstVNF_CPU_Server ) ),Min( Min( Const ,ARS ) ,Min( Const ,FirstVNF_Mem ) ) ) ) * Min( ( Max( Min( FirstVNF_CPU ,MRS ),Max( PN,CRS ) ) * ( ( FirstVNF_CPU * RRS ) * Max( FirstVNF_Mem,MRS ) ) ) ,( Max( Min( Const ,FirstVNF_RAM ),( Const - FirstVNF_CPU ) ) / Min( ( MRS - CRS ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) ) / ( ( Max( Min( ( Min( FirstVNF_RAM_Server ,RRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ,( Max( PN,AMS ) / ( FirstVNF_CPU_Server + AMS ) ) ),( Min( Min( PN ,DDR ) ,Min( FirstVNF_CPU_Server ,Const ) ) - ( ( ARS * Const ) * Min( ARS ,FirstVNF_RAM ) ) ) ) * ( ( ( ( AMS - FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_CPU * FirstVNF_CPU ),( CRS / BR ) ) ) / ( ( Min( RRS ,BR ) / ( FirstVNF_RAM - MRS ) ) - ( ( RRS + MRS ) - ( AMS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( ( ( ( RRS + PN ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + ( Max( ARS,BR ) - ( FirstVNF_Mem_Server - CRS ) ) ) - ( ( Min( DDR ,DDR ) + ( MDR - FirstVNF_RAM ) ) * Max( ( ARS / FirstVNF_Mem_Server ),( DDR * FirstVNF_Mem ) ) ) ) + Max( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - Min( DDR ,MRS ) ) + Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,DDR ) ) ),( Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) / ( ( MRS - ACS ) + Min( CRS ,RRS ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( Const / FirstVNF_Mem ) * ( RRS / FirstVNF_RAM_Server ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,RRS ) ) ),Max( ( Min( DDR ,RRS ) / Min( ACS ,MRS ) ),( Max( FirstVNF_Mem_Server,MDR ) / ( ACS + MDR ) ) ) ) - Min( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,Min( MDR ,DDR ) ) ,Min( Min( MDR ,DDR ) ,( FirstVNF_CPU / CRS ) ) ) ,( ( ( CRS * DDR ) * Max( CRS,MDR ) ) * Max( Min( FirstVNF_CPU ,DDR ),Min( Const ,FirstVNF_CPU ) ) ) ) ) * Min( ( Max( Max( ( FirstVNF_RAM / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ),( Max( ARS,AMS ) + Max( FirstVNF_RAM_Server,Const ) ) ) * ( ( ( CRS / FirstVNF_RAM ) - Min( ARS ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server * BR ) * ( PN * FirstVNF_CPU ) ) ) ) ,Min( ( ( ( FirstVNF_RAM * Const ) / Min( CRS ,FirstVNF_RAM ) ) / ( ( PN * FirstVNF_Mem ) - ( FirstVNF_Mem - MRS ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - Max( ( AMS / BR ),( Const / FirstVNF_Mem_Server ) ) ) ) ) ) + Max( ( ( Max( ( ( FirstVNF_RAM + MRS ) * ( BR * FirstVNF_RAM ) ),Max( ( PN - FirstVNF_CPU ),( DDR * RRS ) ) ) / ( ( ( MDR - MRS ) * ( ARS / ARS ) ) / ( ( AMS - AMS ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) * ( ( ( ( FirstVNF_RAM / BR ) * ( Const * AMS ) ) * ( ( ARS - FirstVNF_CPU ) * Max( ACS,FirstVNF_Mem_Server ) ) ) * Min( Min( Max( BR,AMS ) ,( PN / MRS ) ) ,( ( FirstVNF_CPU_Server / ARS ) + Max( MRS,Const ) ) ) ) ),( Min( Max( ( Max( PN,FirstVNF_CPU_Server ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ),( ( BR + FirstVNF_CPU_Server ) + Min( AMS ,CRS ) ) ) ,( ( ( FirstVNF_RAM - ARS ) - ( AMS + FirstVNF_CPU_Server ) ) + Min( ( PN + FirstVNF_RAM_Server ) ,( AMS + CRS ) ) ) ) + Max( ( Max( Max( FirstVNF_Mem_Server,BR ),Min( ACS ,ARS ) ) - ( ( FirstVNF_CPU / ARS ) - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ),( ( ( FirstVNF_Mem * MRS ) * ( ARS - RRS ) ) * Max( ( MDR * FirstVNF_Mem ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( Max( ( RCSe / Max( MLU,MLU ) ),RMSe ) * ( ( MUC / MUM ) + DS ) )", "obj1": 0.6401673640167364, "obj2": 0.24776824500644185}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( FirstVNF_Mem * RRS ) + ( BR - MRS ) )", "choosing": "( ( Min( Max( MUR,RMSe ) ,( MUR / MUR ) ) / ( ( MLU - MUR ) * ( RCSe + RCSe ) ) ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2631604413885988}, {"determining": "( ARS - ( BR * PN ) )", "choosing": "( Min( MUC ,CS ) - Max( MUC,CS ) )", "obj1": 0.6213389121338913, "obj2": 0.2627660321084139}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( Min( Const ,DDR ) + FirstVNF_Mem )", "choosing": "( ( MLU + MLU ) / Max( RMSe,CS ) )", "obj1": 0.6234309623430963, "obj2": 0.257946261244483}, {"determining": "( Min( Const ,DDR ) + FirstVNF_Mem )", "choosing": "( ( MLU + MLU ) / Max( RMSe,CS ) )", "obj1": 0.6234309623430963, "obj2": 0.257946261244483}, {"determining": "( ( BR / ( FirstVNF_Mem * ARS ) ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( CS / MUC ) - Min( MLU ,CS ) ) )", "obj1": 0.997907949790795, "obj2": 0.00093687028368557}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - ARS )", "choosing": "( ( CS / MUC ) - Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( ( MRS * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUR / MUC ) - ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - BR ) / ( FirstVNF_Mem_Server / DDR ) ) / FirstVNF_RAM ) - ( ARS / ( ( ( RRS - BR ) / ( FirstVNF_Mem_Server / DDR ) ) / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / RRSe ) / ( RRSe + RMSe ) ) * ( ( ( RCSe / RRSe ) / ( RRSe + RMSe ) ) * MLU ) ) / DS ) ,( CS + MUM ) )", "obj1": 0.600418410041841, "obj2": 0.27960189679657943}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) ) ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.6150627615062761, "obj2": 0.25652660510146574}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( Const ,DDR ) + Min( Const ,DDR ) )", "choosing": "( MUC / ( ( CS - DS ) - DS ) )", "obj1": 0.6276150627615062, "obj2": 0.25219149824961895}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.24660110064638147}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.602510460251046, "obj2": 0.27468834405599973}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.602510460251046, "obj2": 0.27468834405599973}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( BR / ( FirstVNF_Mem * ARS ) ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( CS / MUC ) - Min( MLU ,CS ) ) )", "obj1": 0.997907949790795, "obj2": 0.00093687028368557}, {"determining": "( ( MRS * FirstVNF_Mem_Server ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( MUR / MUC ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - ARS )", "choosing": "( ( CS / MUC ) - Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Const / FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + ( ( MUR * RMSe ) + Max( RRSe,Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( PN ,Max( ( MDR * ( ( PN - AMS ) - Min( FirstVNF_RAM ,AMS ) ) ),( Const / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR * ( ( MLU / RCSe ) + Max( MUM,RCSe ) ) ) + Max( RRSe,Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( ( ( RRS - BR ) / ( Max( BR,FirstVNF_Mem_Server ) - ( ( ( RRS - BR ) / ( BR / DDR ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) ) - ( ( ( BR * AMS ) - ( ARS / MRS ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( RCSe / RRSe ) / ( RCSe / RRSe ) ) - ( DS * Max( ( MUC / MUM ),( CS + MUR ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.30026361563332515}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) ) - MUM ) ),( MUM - MUM ) )", "obj1": 0.5962343096234309, "obj2": 0.2738846994030274}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) ) ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.6150627615062761, "obj2": 0.25652660510146574}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Min( ( RRS / BR ) ,( PN * BR ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - Max( CS,CS ) ) ),( MUM - MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.24669869185550022}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.24660110064638147}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( BR / ( FirstVNF_Mem * ARS ) ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( CS / MUC ) - Min( MLU ,CS ) ) )", "obj1": 0.997907949790795, "obj2": 0.00093687028368557}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUR / MUC ) - ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_Mem_Server ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( MUR / MUC ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - ARS )", "choosing": "( ( CS / MUC ) - Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Const / FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + ( ( MUR * RMSe ) + Max( RRSe,Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( PN ,Max( ( MDR * ( ( PN - AMS ) - Min( FirstVNF_RAM ,AMS ) ) ),( Const / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR * ( ( MLU / RCSe ) + Max( MUM,RCSe ) ) ) + Max( RRSe,Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5815899581589958, "obj2": 0.3102932346795574}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) ) - MUM ) ),( MUM - MUM ) )", "obj1": 0.5962343096234309, "obj2": 0.2738846994030274}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( Max( BR,FirstVNF_Mem_Server ) - ( ( ( RRS - BR ) / ( Max( BR,FirstVNF_Mem_Server ) - ( ( ( RRS - BR ) / ( BR / DDR ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) ) - ( ( ( BR * AMS ) - ( ARS / MRS ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( RCSe / RRSe ) / ( RCSe / RRSe ) ) - ( DS * Max( ( MUC / MUM ),( CS + MUR ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.30026361563332515}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) ) ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.6150627615062761, "obj2": 0.25652660510146574}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Min( ( RRS / BR ) ,( PN * BR ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - Max( CS,CS ) ) ),( MUM - MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.24669869185550022}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.24660110064638147}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( DDR,DDR ) ) - ( ( PN - FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( Min( CRS ,RRS ) + ( FirstVNF_CPU_Server - ACS ) ) + Min( Max( DDR,Const ) ,( MRS + BR ) ) ) ) - ( Min( ( ( RRS / Const ) - Min( BR ,ARS ) ) ,Max( Min( RRS ,Const ),( Const * ACS ) ) ) * ( ( ( BR * PN ) / Max( AMS,FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( FirstVNF_Mem + Const ) ) ) ) ) + ( Max( Max( ( Min( CRS ,Const ) - ( PN / RRS ) ),Max( Min( ARS ,MDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),Max( ( Max( RRS,FirstVNF_CPU ) / ( ACS / FirstVNF_RAM_Server ) ),( ( AMS * RRS ) + ( MDR / RRS ) ) ) ) + ( ( ( ( PN + PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) + Max( ( Const + BR ),( ACS + MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( FirstVNF_RAM_Server / AMS ) ) ,( ( RRS * FirstVNF_Mem_Server ) + Min( ARS ,MDR ) ) ) ) ) ) - Max( Max( Min( Max( ( ( PN - FirstVNF_Mem ) * ( Const + ARS ) ),( ( ACS - ACS ) / ( MDR - BR ) ) ) ,Min( Min( ( DDR - RRS ) ,Max( MDR,FirstVNF_Mem ) ) ,( ( MDR + FirstVNF_Mem_Server ) / Max( ARS,FirstVNF_RAM_Server ) ) ) ),( ( Max( Max( RRS,PN ),( ACS - MDR ) ) + ( ( ACS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) * Min( ( Max( ARS,RRS ) - Min( MRS ,CRS ) ) ,Max( ( PN / MRS ),( RRS * Const ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_CPU / FirstVNF_CPU ) ) - Max( ( DDR / CRS ),( FirstVNF_RAM_Server / MDR ) ) ) + Min( Max( ( CRS + CRS ),Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( MRS / DDR ) + ( RRS + AMS ) ) ) ) / Max( ( Min( ( FirstVNF_RAM + DDR ) ,( AMS - FirstVNF_Mem_Server ) ) - ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ),( ( Max( AMS,Const ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( Min( CRS ,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Min( ( ( ( ( Const / MRS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU / AMS ) - Min( CRS ,PN ) ) ) - ( ( ( MRS + FirstVNF_CPU ) / Min( MRS ,ACS ) ) / ( ( MDR + Const ) / ( ARS / FirstVNF_RAM ) ) ) ) ,( Min( Max( ( CRS + RRS ),( MDR * ARS ) ) ,Min( ( MRS + DDR ) ,Max( FirstVNF_CPU,CRS ) ) ) / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * ( Max( CRS,BR ) * ( Const + DDR ) ) ) ) ) / Max( ( ( Max( ( CRS + RRS ),Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( FirstVNF_Mem_Server,ARS ),( FirstVNF_RAM / DDR ) ) ) - ( ( Max( FirstVNF_Mem,RRS ) - ( MDR * FirstVNF_CPU ) ) - Max( ( PN + BR ),( PN - MRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( RRS + Const ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * MDR ) ) ) ,( ( Min( BR ,AMS ) / ( BR - DDR ) ) + Max( ( FirstVNF_RAM_Server + ARS ),Max( AMS,AMS ) ) ) ) ) ) + ( ( ( Min( ( ( ACS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem_Server * CRS ) ,( Const - FirstVNF_RAM_Server ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / DDR ) ) + ( Max( FirstVNF_RAM_Server,MDR ) * ( DDR - DDR ) ) ) ) * ( ( ( Min( ARS ,ACS ) - ( MDR * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server + DDR ) - Max( Const,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS * RRS ) ) ) ) ) / ( Max( ( ( ( FirstVNF_RAM_Server - ARS ) * Max( AMS,ACS ) ) / ( ( FirstVNF_Mem * BR ) - Min( MDR ,ARS ) ) ),( ( ( DDR * ARS ) * ( FirstVNF_RAM + RRS ) ) * ( Min( FirstVNF_RAM ,MRS ) - Max( MDR,MRS ) ) ) ) + ( Min( Min( Max( BR,ARS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( DDR * RRS ) + ( AMS + FirstVNF_RAM ) ) ) - ( ( Max( AMS,MDR ) * Min( FirstVNF_RAM_Server ,Const ) ) * ( Min( ARS ,ACS ) * ( ARS - RRS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( Max( ( ( ( MUC + MUM ) * ( MUM - DS ) ) / ( ( DS * MUR ) + ( RMSe * MLU ) ) ),( ( ( RRSe * RRSe ) + Min( MUR ,DS ) ) / Min( Min( MUC ,MUR ) ,( RMSe + MLU ) ) ) ) - Min( ( Min( ( RMSe + RMSe ) ,( RRSe + CS ) ) * ( Min( MUR ,MUM ) - ( MLU * MUC ) ) ) ,Min( ( ( RRSe / RCSe ) * ( MUM * MUM ) ) ,Min( Max( RCSe,DS ) ,Max( RCSe,MUC ) ) ) ) ),( Min( Min( Max( ( RCSe / RMSe ),( CS - RRSe ) ) ,Min( ( CS * RMSe ) ,( RRSe + MLU ) ) ) ,( ( ( MUC - RMSe ) * ( RCSe - RRSe ) ) + Max( Min( RRSe ,CS ),( RRSe / MUR ) ) ) ) * ( ( ( Max( RMSe,MUC ) * Max( MUM,RMSe ) ) - Min( ( RCSe / MUM ) ,Min( MUM ,MUC ) ) ) * ( ( ( RCSe / RCSe ) - ( MLU - RRSe ) ) / Max( ( MLU / MUM ),( MLU + CS ) ) ) ) ) ),Min( ( ( Min( ( ( MLU + RRSe ) / Max( MUM,DS ) ) ,Min( Min( DS ,MUM ) ,Max( RCSe,DS ) ) ) + ( ( ( MLU - MLU ) * Min( MUR ,CS ) ) * ( Min( MLU ,MUC ) / ( RMSe + RRSe ) ) ) ) * ( Min( ( ( DS - CS ) * ( MUR + MLU ) ) ,( ( MLU + CS ) + Min( MUM ,MUM ) ) ) / ( ( ( RMSe + CS ) - ( RMSe + DS ) ) + ( Min( MUM ,MUC ) + ( RRSe + MLU ) ) ) ) ) ,( ( ( ( ( MUC / CS ) + ( MUM + DS ) ) * ( ( RRSe / RCSe ) / ( MUC - MUM ) ) ) * Min( ( Max( RCSe,MUC ) - Max( CS,CS ) ) ,( ( MUC - MUR ) + ( MLU / MUC ) ) ) ) - Min( ( ( ( RMSe * RRSe ) / ( DS - RRSe ) ) / ( Min( CS ,RCSe ) / ( MUR / MUC ) ) ) ,( ( ( MUC * MLU ) - ( MUM - RMSe ) ) + Min( ( RCSe - MUR ) ,Max( RRSe,MUR ) ) ) ) ) ) ) + ( ( ( ( Max( ( Max( RMSe,RCSe ) + ( DS + MLU ) ),( ( RMSe * MUM ) - Max( MUM,DS ) ) ) * Max( ( ( MUM - CS ) * Min( RMSe ,CS ) ),( ( CS + MUC ) + ( RCSe - MLU ) ) ) ) + Min( ( Max( Min( MLU ,MUM ),Max( MUR,MUM ) ) - ( ( CS - RRSe ) / Min( MUR ,RCSe ) ) ) ,( ( Min( CS ,RCSe ) - ( CS + MUC ) ) - ( Max( MUR,MUR ) * ( MUC - RCSe ) ) ) ) ) - ( Max( ( Min( Max( MUR,RRSe ) ,( RRSe * MUR ) ) + ( Min( CS ,RCSe ) / Min( RRSe ,RRSe ) ) ),( ( ( RMSe * RCSe ) * Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( ( Max( RMSe,MUR ) + ( MUC + MUR ) ),( ( RCSe / MUM ) - Min( MLU ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,( MLU / RCSe ) ) / ( ( MUC - DS ) + Max( RRSe,MUC ) ) ) ) ) ) - ( Min( ( ( ( ( RCSe / RCSe ) + ( MUR / MLU ) ) * ( ( MUM + MUR ) / ( MLU - MUR ) ) ) - Max( ( ( MUR / RCSe ) - ( DS * MUC ) ),( ( RMSe * MUR ) * ( DS - DS ) ) ) ) ,( Max( ( Max( MUC,MUR ) + ( MUC * CS ) ),Max( Min( MUC ,DS ),( CS - RMSe ) ) ) / ( ( Min( MUM ,RRSe ) - ( RCSe * RRSe ) ) + Max( Min( RCSe ,RRSe ),( DS / CS ) ) ) ) ) + Max( ( ( ( ( CS - MUC ) / Max( RMSe,CS ) ) - ( Max( RMSe,CS ) / Max( CS,MUC ) ) ) * ( Max( Max( RCSe,DS ),Max( MUM,RMSe ) ) * Max( ( CS / MLU ),( DS - MUC ) ) ) ),( ( Min( ( RMSe + RRSe ) ,( MUR / RCSe ) ) - ( Max( RRSe,MUR ) / Max( MUC,MUM ) ) ) / ( ( ( RCSe - DS ) - Min( MLU ,RCSe ) ) + ( ( RRSe - MUM ) + ( MUR / MLU ) ) ) ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006770970819034605}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUR / MUC ) - ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_Mem_Server ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( MUR / MUC ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - ARS )", "choosing": "( ( CS / MUC ) - Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( Max( RRSe,RCSe ) - ( ( ( RCSe / MLU ) / ( RRSe + RCSe ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Const / FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + ( ( MUR * RMSe ) + Max( RRSe,Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5815899581589958, "obj2": 0.3102932346795574}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5815899581589958, "obj2": 0.3102932346795574}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) ) - MUM ) ),( MUM - MUM ) )", "obj1": 0.5962343096234309, "obj2": 0.2738846994030274}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5836820083682008, "obj2": 0.293661240945006}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) ) ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.6150627615062761, "obj2": 0.25652660510146574}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Min( ( RRS / BR ) ,( PN * BR ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - Max( CS,CS ) ) ),( MUM - MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.24669869185550022}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.24660110064638147}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( DDR,DDR ) ) - ( ( PN - FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( Min( CRS ,RRS ) + ( FirstVNF_CPU_Server - ACS ) ) + Min( Max( DDR,Const ) ,( MRS + BR ) ) ) ) - ( Min( ( ( RRS / Const ) - Min( BR ,ARS ) ) ,Max( Min( RRS ,Const ),( Const * ACS ) ) ) * ( ( ( BR * PN ) / Max( AMS,FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( FirstVNF_Mem + Const ) ) ) ) ) + ( Max( Max( ( Min( CRS ,Const ) - ( PN / RRS ) ),Max( Min( ARS ,MDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),Max( ( Max( RRS,FirstVNF_CPU ) / ( ACS / FirstVNF_RAM_Server ) ),( ( AMS * RRS ) + ( MDR / RRS ) ) ) ) + ( ( ( ( PN + PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) + Max( ( Const + BR ),( ACS + MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( FirstVNF_RAM_Server / AMS ) ) ,( ( RRS * FirstVNF_Mem_Server ) + Min( ARS ,MDR ) ) ) ) ) ) - Max( Max( Min( Max( ( ( PN - FirstVNF_Mem ) * ( Const + ARS ) ),( ( ACS - ACS ) / ( MDR - BR ) ) ) ,Min( Min( ( DDR - RRS ) ,Max( MDR,FirstVNF_Mem ) ) ,( ( MDR + FirstVNF_Mem_Server ) / Max( ARS,FirstVNF_RAM_Server ) ) ) ),( ( Max( Max( RRS,PN ),( ACS - MDR ) ) + ( ( ACS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) * Min( ( Max( ARS,RRS ) - Min( MRS ,CRS ) ) ,Max( ( PN / MRS ),( RRS * Const ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_CPU / FirstVNF_CPU ) ) - Max( ( DDR / CRS ),( FirstVNF_RAM_Server / MDR ) ) ) + Min( Max( ( CRS + CRS ),Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( MRS / DDR ) + ( RRS + AMS ) ) ) ) / Max( ( Min( ( FirstVNF_RAM + DDR ) ,( AMS - FirstVNF_Mem_Server ) ) - ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ),( ( Max( AMS,Const ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( Min( CRS ,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Min( ( ( ( ( Const / MRS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU / AMS ) - Min( CRS ,PN ) ) ) - ( ( ( MRS + FirstVNF_CPU ) / Min( MRS ,ACS ) ) / ( ( MDR + Const ) / ( ARS / FirstVNF_RAM ) ) ) ) ,( Min( Max( ( CRS + RRS ),( MDR * ARS ) ) ,Min( ( MRS + DDR ) ,Max( FirstVNF_CPU,CRS ) ) ) / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * ( Max( CRS,BR ) * ( Const + DDR ) ) ) ) ) / Max( ( ( Max( ( CRS + RRS ),Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( FirstVNF_Mem_Server,ARS ),( FirstVNF_RAM / DDR ) ) ) - ( ( Max( FirstVNF_Mem,RRS ) - ( MDR * FirstVNF_CPU ) ) - Max( ( PN + BR ),( PN - MRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( RRS + Const ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * MDR ) ) ) ,( ( Min( BR ,AMS ) / ( BR - DDR ) ) + Max( ( FirstVNF_RAM_Server + ARS ),Max( AMS,AMS ) ) ) ) ) ) + ( ( ( Min( ( ( ACS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem_Server * CRS ) ,( Const - FirstVNF_RAM_Server ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / DDR ) ) + ( Max( FirstVNF_RAM_Server,MDR ) * ( DDR - DDR ) ) ) ) * ( ( ( Min( ARS ,ACS ) - ( MDR * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server + DDR ) - Max( Const,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS * RRS ) ) ) ) ) / ( Max( ( ( ( FirstVNF_RAM_Server - ARS ) * Max( AMS,ACS ) ) / ( ( FirstVNF_Mem * BR ) - Min( MDR ,ARS ) ) ),( ( ( DDR * ARS ) * ( FirstVNF_RAM + RRS ) ) * ( Min( FirstVNF_RAM ,MRS ) - Max( MDR,MRS ) ) ) ) + ( Min( Min( Max( BR,ARS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( DDR * RRS ) + ( AMS + FirstVNF_RAM ) ) ) - ( ( Max( AMS,MDR ) * Min( FirstVNF_RAM_Server ,Const ) ) * ( Min( ARS ,ACS ) * ( ARS - RRS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( Max( ( ( ( MUC + MUM ) * ( MUM - DS ) ) / ( ( DS * MUR ) + ( RMSe * MLU ) ) ),( ( ( RRSe * RRSe ) + Min( MUR ,DS ) ) / Min( Min( MUC ,MUR ) ,( RMSe + MLU ) ) ) ) - Min( ( Min( ( RMSe + RMSe ) ,( RRSe + CS ) ) * ( Min( MUR ,MUM ) - ( MLU * MUC ) ) ) ,Min( ( ( RRSe / RCSe ) * ( MUM * MUM ) ) ,Min( Max( RCSe,DS ) ,Max( RCSe,MUC ) ) ) ) ),( Min( Min( Max( ( RCSe / RMSe ),( CS - RRSe ) ) ,Min( ( CS * RMSe ) ,( RRSe + MLU ) ) ) ,( ( ( MUC - RMSe ) * ( RCSe - RRSe ) ) + Max( Min( RRSe ,CS ),( RRSe / MUR ) ) ) ) * ( ( ( Max( RMSe,MUC ) * Max( MUM,RMSe ) ) - Min( ( RCSe / MUM ) ,Min( MUM ,MUC ) ) ) * ( ( ( RCSe / RCSe ) - ( MLU - RRSe ) ) / Max( ( MLU / MUM ),( MLU + CS ) ) ) ) ) ),Min( ( ( Min( ( ( MLU + RRSe ) / Max( MUM,DS ) ) ,Min( Min( DS ,MUM ) ,Max( RCSe,DS ) ) ) + ( ( ( MLU - MLU ) * Min( MUR ,CS ) ) * ( Min( MLU ,MUC ) / ( RMSe + RRSe ) ) ) ) * ( Min( ( ( DS - CS ) * ( MUR + MLU ) ) ,( ( MLU + CS ) + Min( MUM ,MUM ) ) ) / ( ( ( RMSe + CS ) - ( RMSe + DS ) ) + ( Min( MUM ,MUC ) + ( RRSe + MLU ) ) ) ) ) ,( ( ( ( ( MUC / CS ) + ( MUM + DS ) ) * ( ( RRSe / RCSe ) / ( MUC - MUM ) ) ) * Min( ( Max( RCSe,MUC ) - Max( CS,CS ) ) ,( ( MUC - MUR ) + ( MLU / MUC ) ) ) ) - Min( ( ( ( RMSe * RRSe ) / ( DS - RRSe ) ) / ( Min( CS ,RCSe ) / ( MUR / MUC ) ) ) ,( ( ( MUC * MLU ) - ( MUM - RMSe ) ) + Min( ( RCSe - MUR ) ,Max( RRSe,MUR ) ) ) ) ) ) ) + ( ( ( ( Max( ( Max( RMSe,RCSe ) + ( DS + MLU ) ),( ( RMSe * MUM ) - Max( MUM,DS ) ) ) * Max( ( ( MUM - CS ) * Min( RMSe ,CS ) ),( ( CS + MUC ) + ( RCSe - MLU ) ) ) ) + Min( ( Max( Min( MLU ,MUM ),Max( MUR,MUM ) ) - ( ( CS - RRSe ) / Min( MUR ,RCSe ) ) ) ,( ( Min( CS ,RCSe ) - ( CS + MUC ) ) - ( Max( MUR,MUR ) * ( MUC - RCSe ) ) ) ) ) - ( Max( ( Min( Max( MUR,RRSe ) ,( RRSe * MUR ) ) + ( Min( CS ,RCSe ) / Min( RRSe ,RRSe ) ) ),( ( ( RMSe * RCSe ) * Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( ( Max( RMSe,MUR ) + ( MUC + MUR ) ),( ( RCSe / MUM ) - Min( MLU ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,( MLU / RCSe ) ) / ( ( MUC - DS ) + Max( RRSe,MUC ) ) ) ) ) ) - ( Min( ( ( ( ( RCSe / RCSe ) + ( MUR / MLU ) ) * ( ( MUM + MUR ) / ( MLU - MUR ) ) ) - Max( ( ( MUR / RCSe ) - ( DS * MUC ) ),( ( RMSe * MUR ) * ( DS - DS ) ) ) ) ,( Max( ( Max( MUC,MUR ) + ( MUC * CS ) ),Max( Min( MUC ,DS ),( CS - RMSe ) ) ) / ( ( Min( MUM ,RRSe ) - ( RCSe * RRSe ) ) + Max( Min( RCSe ,RRSe ),( DS / CS ) ) ) ) ) + Max( ( ( ( ( CS - MUC ) / Max( RMSe,CS ) ) - ( Max( RMSe,CS ) / Max( CS,MUC ) ) ) * ( Max( Max( RCSe,DS ),Max( MUM,RMSe ) ) * Max( ( CS / MLU ),( DS - MUC ) ) ) ),( ( Min( ( RMSe + RRSe ) ,( MUR / RCSe ) ) - ( Max( RRSe,MUR ) / Max( MUC,MUM ) ) ) / ( ( ( RCSe - DS ) - Min( MLU ,RCSe ) ) + ( ( RRSe - MUM ) + ( MUR / MLU ) ) ) ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006770970819034605}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUR / MUC ) - ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_Mem_Server ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( MUR / MUC ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - ARS )", "choosing": "( ( CS / MUC ) - Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( BR / PN ) ) - ( FirstVNF_CPU * ARS ) )", "choosing": "( ( CS / MUC ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "28": [{"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( Max( MLU,RCSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Max( FirstVNF_Mem,RRS ) ) ) )", "choosing": "Max( ( RRSe / DS ),( MUM - DS ) )", "obj1": 0.5690376569037657, "obj2": 0.30649012928128233}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) ) - MUM ) ),( MUM - MUM ) )", "obj1": 0.5962343096234309, "obj2": 0.2738846994030274}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) ) ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.6150627615062761, "obj2": 0.25652660510146574}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5836820083682008, "obj2": 0.293661240945006}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - ( MUM - MUC ) ) ),( MUM - DS ) )", "obj1": 0.5941422594142259, "obj2": 0.2923818873416682}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Min( ( RRS / BR ) ,( PN * BR ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - Max( CS,CS ) ) ),( MUM - MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.24669869185550022}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.24660110064638147}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( DDR,DDR ) ) - ( ( PN - FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( Min( CRS ,RRS ) + ( FirstVNF_CPU_Server - ACS ) ) + Min( Max( DDR,Const ) ,( MRS + BR ) ) ) ) - ( Min( ( ( RRS / Const ) - Min( BR ,ARS ) ) ,Max( Min( RRS ,Const ),( Const * ACS ) ) ) * ( ( ( BR * PN ) / Max( AMS,FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( FirstVNF_Mem + Const ) ) ) ) ) + ( Max( Max( ( Min( CRS ,Const ) - ( PN / RRS ) ),Max( Min( ARS ,MDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),Max( ( Max( RRS,FirstVNF_CPU ) / ( ACS / FirstVNF_RAM_Server ) ),( ( AMS * RRS ) + ( MDR / RRS ) ) ) ) + ( ( ( ( PN + PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) + Max( ( Const + BR ),( ACS + MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( FirstVNF_RAM_Server / AMS ) ) ,( ( RRS * FirstVNF_Mem_Server ) + Min( ARS ,MDR ) ) ) ) ) ) - Max( Max( Min( Max( ( ( PN - FirstVNF_Mem ) * ( Const + ARS ) ),( ( ACS - ACS ) / ( MDR - BR ) ) ) ,Min( Min( ( DDR - RRS ) ,Max( MDR,FirstVNF_Mem ) ) ,( ( MDR + FirstVNF_Mem_Server ) / Max( ARS,FirstVNF_RAM_Server ) ) ) ),( ( Max( Max( RRS,PN ),( ACS - MDR ) ) + ( ( ACS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) * Min( ( Max( ARS,RRS ) - Min( MRS ,CRS ) ) ,Max( ( PN / MRS ),( RRS * Const ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_CPU / FirstVNF_CPU ) ) - Max( ( DDR / CRS ),( FirstVNF_RAM_Server / MDR ) ) ) + Min( Max( ( CRS + CRS ),Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( MRS / DDR ) + ( RRS + AMS ) ) ) ) / Max( ( Min( ( FirstVNF_RAM + DDR ) ,( AMS - FirstVNF_Mem_Server ) ) - ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ),( ( Max( AMS,Const ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( Min( CRS ,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Min( ( ( ( ( Const / MRS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU / AMS ) - Min( CRS ,PN ) ) ) - ( ( ( MRS + FirstVNF_CPU ) / Min( MRS ,ACS ) ) / ( ( MDR + Const ) / ( ARS / FirstVNF_RAM ) ) ) ) ,( Min( Max( ( CRS + RRS ),( MDR * ARS ) ) ,Min( ( MRS + DDR ) ,Max( FirstVNF_CPU,CRS ) ) ) / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * ( Max( CRS,BR ) * ( Const + DDR ) ) ) ) ) / Max( ( ( Max( ( CRS + RRS ),Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( FirstVNF_Mem_Server,ARS ),( FirstVNF_RAM / DDR ) ) ) - ( ( Max( FirstVNF_Mem,RRS ) - ( MDR * FirstVNF_CPU ) ) - Max( ( PN + BR ),( PN - MRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( RRS + Const ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * MDR ) ) ) ,( ( Min( BR ,AMS ) / ( BR - DDR ) ) + Max( ( FirstVNF_RAM_Server + ARS ),Max( AMS,AMS ) ) ) ) ) ) + ( ( ( Min( ( ( ACS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem_Server * CRS ) ,( Const - FirstVNF_RAM_Server ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / DDR ) ) + ( Max( FirstVNF_RAM_Server,MDR ) * ( DDR - DDR ) ) ) ) * ( ( ( Min( ARS ,ACS ) - ( MDR * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server + DDR ) - Max( Const,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS * RRS ) ) ) ) ) / ( Max( ( ( ( FirstVNF_RAM_Server - ARS ) * Max( AMS,ACS ) ) / ( ( FirstVNF_Mem * BR ) - Min( MDR ,ARS ) ) ),( ( ( DDR * ARS ) * ( FirstVNF_RAM + RRS ) ) * ( Min( FirstVNF_RAM ,MRS ) - Max( MDR,MRS ) ) ) ) + ( Min( Min( Max( BR,ARS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( DDR * RRS ) + ( AMS + FirstVNF_RAM ) ) ) - ( ( Max( AMS,MDR ) * Min( FirstVNF_RAM_Server ,Const ) ) * ( Min( ARS ,ACS ) * ( ARS - RRS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( Max( ( ( ( MUC + MUM ) * ( MUM - DS ) ) / ( ( DS * MUR ) + ( RMSe * MLU ) ) ),( ( ( RRSe * RRSe ) + Min( MUR ,DS ) ) / Min( Min( MUC ,MUR ) ,( RMSe + MLU ) ) ) ) - Min( ( Min( ( RMSe + RMSe ) ,( RRSe + CS ) ) * ( Min( MUR ,MUM ) - ( MLU * MUC ) ) ) ,Min( ( ( RRSe / RCSe ) * ( MUM * MUM ) ) ,Min( Max( RCSe,DS ) ,Max( RCSe,MUC ) ) ) ) ),( Min( Min( Max( ( RCSe / RMSe ),( CS - RRSe ) ) ,Min( ( CS * RMSe ) ,( RRSe + MLU ) ) ) ,( ( ( MUC - RMSe ) * ( RCSe - RRSe ) ) + Max( Min( RRSe ,CS ),( RRSe / MUR ) ) ) ) * ( ( ( Max( RMSe,MUC ) * Max( MUM,RMSe ) ) - Min( ( RCSe / MUM ) ,Min( MUM ,MUC ) ) ) * ( ( ( RCSe / RCSe ) - ( MLU - RRSe ) ) / Max( ( MLU / MUM ),( MLU + CS ) ) ) ) ) ),Min( ( ( Min( ( ( MLU + RRSe ) / Max( MUM,DS ) ) ,Min( Min( DS ,MUM ) ,Max( RCSe,DS ) ) ) + ( ( ( MLU - MLU ) * Min( MUR ,CS ) ) * ( Min( MLU ,MUC ) / ( RMSe + RRSe ) ) ) ) * ( Min( ( ( DS - CS ) * ( MUR + MLU ) ) ,( ( MLU + CS ) + Min( MUM ,MUM ) ) ) / ( ( ( RMSe + CS ) - ( RMSe + DS ) ) + ( Min( MUM ,MUC ) + ( RRSe + MLU ) ) ) ) ) ,( ( ( ( ( MUC / CS ) + ( MUM + DS ) ) * ( ( RRSe / RCSe ) / ( MUC - MUM ) ) ) * Min( ( Max( RCSe,MUC ) - Max( CS,CS ) ) ,( ( MUC - MUR ) + ( MLU / MUC ) ) ) ) - Min( ( ( ( RMSe * RRSe ) / ( DS - RRSe ) ) / ( Min( CS ,RCSe ) / ( MUR / MUC ) ) ) ,( ( ( MUC * MLU ) - ( MUM - RMSe ) ) + Min( ( RCSe - MUR ) ,Max( RRSe,MUR ) ) ) ) ) ) ) + ( ( ( ( Max( ( Max( RMSe,RCSe ) + ( DS + MLU ) ),( ( RMSe * MUM ) - Max( MUM,DS ) ) ) * Max( ( ( MUM - CS ) * Min( RMSe ,CS ) ),( ( CS + MUC ) + ( RCSe - MLU ) ) ) ) + Min( ( Max( Min( MLU ,MUM ),Max( MUR,MUM ) ) - ( ( CS - RRSe ) / Min( MUR ,RCSe ) ) ) ,( ( Min( CS ,RCSe ) - ( CS + MUC ) ) - ( Max( MUR,MUR ) * ( MUC - RCSe ) ) ) ) ) - ( Max( ( Min( Max( MUR,RRSe ) ,( RRSe * MUR ) ) + ( Min( CS ,RCSe ) / Min( RRSe ,RRSe ) ) ),( ( ( RMSe * RCSe ) * Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( ( Max( RMSe,MUR ) + ( MUC + MUR ) ),( ( RCSe / MUM ) - Min( MLU ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,( MLU / RCSe ) ) / ( ( MUC - DS ) + Max( RRSe,MUC ) ) ) ) ) ) - ( Min( ( ( ( ( RCSe / RCSe ) + ( MUR / MLU ) ) * ( ( MUM + MUR ) / ( MLU - MUR ) ) ) - Max( ( ( MUR / RCSe ) - ( DS * MUC ) ),( ( RMSe * MUR ) * ( DS - DS ) ) ) ) ,( Max( ( Max( MUC,MUR ) + ( MUC * CS ) ),Max( Min( MUC ,DS ),( CS - RMSe ) ) ) / ( ( Min( MUM ,RRSe ) - ( RCSe * RRSe ) ) + Max( Min( RCSe ,RRSe ),( DS / CS ) ) ) ) ) + Max( ( ( ( ( CS - MUC ) / Max( RMSe,CS ) ) - ( Max( RMSe,CS ) / Max( CS,MUC ) ) ) * ( Max( Max( RCSe,DS ),Max( MUM,RMSe ) ) * Max( ( CS / MLU ),( DS - MUC ) ) ) ),( ( Min( ( RMSe + RRSe ) ,( MUR / RCSe ) ) - ( Max( RRSe,MUR ) / Max( MUC,MUM ) ) ) / ( ( ( RCSe - DS ) - Min( MLU ,RCSe ) ) + ( ( RRSe - MUM ) + ( MUR / MLU ) ) ) ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006770970819034605}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUR / MUC ) - ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_Mem_Server ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( MUR / MUC ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( ( RRSe / MUC ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - ARS )", "choosing": "( ( CS / MUC ) - Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ACS ) - Min( MDR ,ARS ) )", "choosing": "( ( ( CS * ( RRSe + DS ) ) / MUC ) + Max( Max( ( MUC * RCSe ),RMSe ),Min( MLU ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( CS / MUC ) - Min( RMSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem_Server ) - ( ( ( Max( BR,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ( FirstVNF_Mem_Server / DDR ) ) / Const ) )", "choosing": "( ( CS / MUC ) - Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MLU / RCSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( Max( MLU,RCSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Max( FirstVNF_Mem,RRS ) ) ) )", "choosing": "Max( ( RRSe / DS ),( MUM - DS ) )", "obj1": 0.5690376569037657, "obj2": 0.30649012928128233}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) ) - MUM ) ),( MUM - MUM ) )", "obj1": 0.5962343096234309, "obj2": 0.2738846994030274}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) ) ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.6150627615062761, "obj2": 0.25652660510146574}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( ( ACS - ( Max( BR,FirstVNF_Mem_Server ) - ( Max( ( ACS - BR ),( BR / FirstVNF_RAM ) ) - ACS ) ) ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RCSe ) - Max( ( ( RCSe / RRSe ) + ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ) ),DS ) )", "obj1": 0.604602510460251, "obj2": 0.26618336321501723}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - ( MUM - MUC ) ) ),( MUM - DS ) )", "obj1": 0.5941422594142259, "obj2": 0.2923818873416682}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Min( ( RRS / BR ) ,( PN * BR ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - Max( CS,CS ) ) ),( MUM - MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.24669869185550022}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5815899581589958, "obj2": 0.30433287180048113}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.24660110064638147}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5836820083682008, "obj2": 0.293661240945006}, {"determining": "( ( ACS - MDR ) - ( BR * ACS ) )", "choosing": "( ( RCSe / MUM ) - ( DS * MUC ) )", "obj1": 0.6610878661087866, "obj2": 0.21270360317693926}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( ( RRSe * ( RRSe - MUC ) ),( MUM - DS ) )", "obj1": 0.5878661087866108, "obj2": 0.2932097644118226}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( DDR,DDR ) ) - ( ( PN - FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( Min( CRS ,RRS ) + ( FirstVNF_CPU_Server - ACS ) ) + Min( Max( DDR,Const ) ,( MRS + BR ) ) ) ) - ( Min( ( ( RRS / Const ) - Min( BR ,ARS ) ) ,Max( Min( RRS ,Const ),( Const * ACS ) ) ) * ( ( ( BR * PN ) / Max( AMS,FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( FirstVNF_Mem + Const ) ) ) ) ) + ( Max( Max( ( Min( CRS ,Const ) - ( PN / RRS ) ),Max( Min( ARS ,MDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),Max( ( Max( RRS,FirstVNF_CPU ) / ( ACS / FirstVNF_RAM_Server ) ),( ( AMS * RRS ) + ( MDR / RRS ) ) ) ) + ( ( ( ( PN + PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) + Max( ( Const + BR ),( ACS + MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( FirstVNF_RAM_Server / AMS ) ) ,( ( RRS * FirstVNF_Mem_Server ) + Min( ARS ,MDR ) ) ) ) ) ) - Max( Max( Min( Max( ( ( PN - FirstVNF_Mem ) * ( Const + ARS ) ),( ( ACS - ACS ) / ( MDR - BR ) ) ) ,Min( Min( ( DDR - RRS ) ,Max( MDR,FirstVNF_Mem ) ) ,( ( MDR + FirstVNF_Mem_Server ) / Max( ARS,FirstVNF_RAM_Server ) ) ) ),( ( Max( Max( RRS,PN ),( ACS - MDR ) ) + ( ( ACS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) * Min( ( Max( ARS,RRS ) - Min( MRS ,CRS ) ) ,Max( ( PN / MRS ),( RRS * Const ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_CPU / FirstVNF_CPU ) ) - Max( ( DDR / CRS ),( FirstVNF_RAM_Server / MDR ) ) ) + Min( Max( ( CRS + CRS ),Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( MRS / DDR ) + ( RRS + AMS ) ) ) ) / Max( ( Min( ( FirstVNF_RAM + DDR ) ,( AMS - FirstVNF_Mem_Server ) ) - ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ),( ( Max( AMS,Const ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( Min( CRS ,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Min( ( ( ( ( Const / MRS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU / AMS ) - Min( CRS ,PN ) ) ) - ( ( ( MRS + FirstVNF_CPU ) / Min( MRS ,ACS ) ) / ( ( MDR + Const ) / ( ARS / FirstVNF_RAM ) ) ) ) ,( Min( Max( ( CRS + RRS ),( MDR * ARS ) ) ,Min( ( MRS + DDR ) ,Max( FirstVNF_CPU,CRS ) ) ) / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * ( Max( CRS,BR ) * ( Const + DDR ) ) ) ) ) / Max( ( ( Max( ( CRS + RRS ),Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( FirstVNF_Mem_Server,ARS ),( FirstVNF_RAM / DDR ) ) ) - ( ( Max( FirstVNF_Mem,RRS ) - ( MDR * FirstVNF_CPU ) ) - Max( ( PN + BR ),( PN - MRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( RRS + Const ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * MDR ) ) ) ,( ( Min( BR ,AMS ) / ( BR - DDR ) ) + Max( ( FirstVNF_RAM_Server + ARS ),Max( AMS,AMS ) ) ) ) ) ) + ( ( ( Min( ( ( ACS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem_Server * CRS ) ,( Const - FirstVNF_RAM_Server ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / DDR ) ) + ( Max( FirstVNF_RAM_Server,MDR ) * ( DDR - DDR ) ) ) ) * ( ( ( Min( ARS ,ACS ) - ( MDR * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server + DDR ) - Max( Const,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS * RRS ) ) ) ) ) / ( Max( ( ( ( FirstVNF_RAM_Server - ARS ) * Max( AMS,ACS ) ) / ( ( FirstVNF_Mem * BR ) - Min( MDR ,ARS ) ) ),( ( ( DDR * ARS ) * ( FirstVNF_RAM + RRS ) ) * ( Min( FirstVNF_RAM ,MRS ) - Max( MDR,MRS ) ) ) ) + ( Min( Min( Max( BR,ARS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( DDR * RRS ) + ( AMS + FirstVNF_RAM ) ) ) - ( ( Max( AMS,MDR ) * Min( FirstVNF_RAM_Server ,Const ) ) * ( Min( ARS ,ACS ) * ( ARS - RRS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( Max( ( ( ( MUC + MUM ) * ( MUM - DS ) ) / ( ( DS * MUR ) + ( RMSe * MLU ) ) ),( ( ( RRSe * RRSe ) + Min( MUR ,DS ) ) / Min( Min( MUC ,MUR ) ,( RMSe + MLU ) ) ) ) - Min( ( Min( ( RMSe + RMSe ) ,( RRSe + CS ) ) * ( Min( MUR ,MUM ) - ( MLU * MUC ) ) ) ,Min( ( ( RRSe / RCSe ) * ( MUM * MUM ) ) ,Min( Max( RCSe,DS ) ,Max( RCSe,MUC ) ) ) ) ),( Min( Min( Max( ( RCSe / RMSe ),( CS - RRSe ) ) ,Min( ( CS * RMSe ) ,( RRSe + MLU ) ) ) ,( ( ( MUC - RMSe ) * ( RCSe - RRSe ) ) + Max( Min( RRSe ,CS ),( RRSe / MUR ) ) ) ) * ( ( ( Max( RMSe,MUC ) * Max( MUM,RMSe ) ) - Min( ( RCSe / MUM ) ,Min( MUM ,MUC ) ) ) * ( ( ( RCSe / RCSe ) - ( MLU - RRSe ) ) / Max( ( MLU / MUM ),( MLU + CS ) ) ) ) ) ),Min( ( ( Min( ( ( MLU + RRSe ) / Max( MUM,DS ) ) ,Min( Min( DS ,MUM ) ,Max( RCSe,DS ) ) ) + ( ( ( MLU - MLU ) * Min( MUR ,CS ) ) * ( Min( MLU ,MUC ) / ( RMSe + RRSe ) ) ) ) * ( Min( ( ( DS - CS ) * ( MUR + MLU ) ) ,( ( MLU + CS ) + Min( MUM ,MUM ) ) ) / ( ( ( RMSe + CS ) - ( RMSe + DS ) ) + ( Min( MUM ,MUC ) + ( RRSe + MLU ) ) ) ) ) ,( ( ( ( ( MUC / CS ) + ( MUM + DS ) ) * ( ( RRSe / RCSe ) / ( MUC - MUM ) ) ) * Min( ( Max( RCSe,MUC ) - Max( CS,CS ) ) ,( ( MUC - MUR ) + ( MLU / MUC ) ) ) ) - Min( ( ( ( RMSe * RRSe ) / ( DS - RRSe ) ) / ( Min( CS ,RCSe ) / ( MUR / MUC ) ) ) ,( ( ( MUC * MLU ) - ( MUM - RMSe ) ) + Min( ( RCSe - MUR ) ,Max( RRSe,MUR ) ) ) ) ) ) ) + ( ( ( ( Max( ( Max( RMSe,RCSe ) + ( DS + MLU ) ),( ( RMSe * MUM ) - Max( MUM,DS ) ) ) * Max( ( ( MUM - CS ) * Min( RMSe ,CS ) ),( ( CS + MUC ) + ( RCSe - MLU ) ) ) ) + Min( ( Max( Min( MLU ,MUM ),Max( MUR,MUM ) ) - ( ( CS - RRSe ) / Min( MUR ,RCSe ) ) ) ,( ( Min( CS ,RCSe ) - ( CS + MUC ) ) - ( Max( MUR,MUR ) * ( MUC - RCSe ) ) ) ) ) - ( Max( ( Min( Max( MUR,RRSe ) ,( RRSe * MUR ) ) + ( Min( CS ,RCSe ) / Min( RRSe ,RRSe ) ) ),( ( ( RMSe * RCSe ) * Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( ( Max( RMSe,MUR ) + ( MUC + MUR ) ),( ( RCSe / MUM ) - Min( MLU ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,( MLU / RCSe ) ) / ( ( MUC - DS ) + Max( RRSe,MUC ) ) ) ) ) ) - ( Min( ( ( ( ( RCSe / RCSe ) + ( MUR / MLU ) ) * ( ( MUM + MUR ) / ( MLU - MUR ) ) ) - Max( ( ( MUR / RCSe ) - ( DS * MUC ) ),( ( RMSe * MUR ) * ( DS - DS ) ) ) ) ,( Max( ( Max( MUC,MUR ) + ( MUC * CS ) ),Max( Min( MUC ,DS ),( CS - RMSe ) ) ) / ( ( Min( MUM ,RRSe ) - ( RCSe * RRSe ) ) + Max( Min( RCSe ,RRSe ),( DS / CS ) ) ) ) ) + Max( ( ( ( ( CS - MUC ) / Max( RMSe,CS ) ) - ( Max( RMSe,CS ) / Max( CS,MUC ) ) ) * ( Max( Max( RCSe,DS ),Max( MUM,RMSe ) ) * Max( ( CS / MLU ),( DS - MUC ) ) ) ),( ( Min( ( RMSe + RRSe ) ,( MUR / RCSe ) ) - ( Max( RRSe,MUR ) / Max( MUC,MUM ) ) ) / ( ( ( RCSe - DS ) - Min( MLU ,RCSe ) ) + ( ( RRSe - MUM ) + ( MUR / MLU ) ) ) ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006770970819034605}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUR / MUC ) - ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_Mem_Server ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( MUR / MUC ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "30": [{"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MLU / RCSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Max( FirstVNF_Mem,RRS ) ) ) )", "choosing": "Max( ( RRSe / DS ),( MUM - DS ) )", "obj1": 0.5690376569037657, "obj2": 0.30649012928128233}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) ) - MUM ) ),( MUM - MUM ) )", "obj1": 0.5962343096234309, "obj2": 0.2738846994030274}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) ) ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.6150627615062761, "obj2": 0.25652660510146574}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( ( ACS - ( Max( BR,FirstVNF_Mem_Server ) - ( Max( ( ACS - BR ),( BR / FirstVNF_RAM ) ) - ACS ) ) ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RCSe ) - Max( ( ( RCSe / RRSe ) + ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ) ),DS ) )", "obj1": 0.604602510460251, "obj2": 0.26618336321501723}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - ( MUM - MUC ) ) ),( MUM - DS ) )", "obj1": 0.5941422594142259, "obj2": 0.2923818873416682}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Min( ( RRS / BR ) ,( PN * BR ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - Max( CS,CS ) ) ),( MUM - MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.24669869185550022}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5815899581589958, "obj2": 0.30433287180048113}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.24660110064638147}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5836820083682008, "obj2": 0.293661240945006}, {"determining": "( ( ACS - MDR ) - ( BR * ACS ) )", "choosing": "( ( RCSe / MUM ) - ( DS * MUC ) )", "obj1": 0.6610878661087866, "obj2": 0.21270360317693926}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( ( RRSe * ( RRSe - MUC ) ),( MUM - DS ) )", "obj1": 0.5878661087866108, "obj2": 0.2932097644118226}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( DDR,DDR ) ) - ( ( PN - FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( Min( CRS ,RRS ) + ( FirstVNF_CPU_Server - ACS ) ) + Min( Max( DDR,Const ) ,( MRS + BR ) ) ) ) - ( Min( ( ( RRS / Const ) - Min( BR ,ARS ) ) ,Max( Min( RRS ,Const ),( Const * ACS ) ) ) * ( ( ( BR * PN ) / Max( AMS,FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( FirstVNF_Mem + Const ) ) ) ) ) + ( Max( Max( ( Min( CRS ,Const ) - ( PN / RRS ) ),Max( Min( ARS ,MDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),Max( ( Max( RRS,FirstVNF_CPU ) / ( ACS / FirstVNF_RAM_Server ) ),( ( AMS * RRS ) + ( MDR / RRS ) ) ) ) + ( ( ( ( PN + PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) + Max( ( Const + BR ),( ACS + MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( FirstVNF_RAM_Server / AMS ) ) ,( ( RRS * FirstVNF_Mem_Server ) + Min( ARS ,MDR ) ) ) ) ) ) - Max( Max( Min( Max( ( ( PN - FirstVNF_Mem ) * ( Const + ARS ) ),( ( ACS - ACS ) / ( MDR - BR ) ) ) ,Min( Min( ( DDR - RRS ) ,Max( MDR,FirstVNF_Mem ) ) ,( ( MDR + FirstVNF_Mem_Server ) / Max( ARS,FirstVNF_RAM_Server ) ) ) ),( ( Max( Max( RRS,PN ),( ACS - MDR ) ) + ( ( ACS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) * Min( ( Max( ARS,RRS ) - Min( MRS ,CRS ) ) ,Max( ( PN / MRS ),( RRS * Const ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_CPU / FirstVNF_CPU ) ) - Max( ( DDR / CRS ),( FirstVNF_RAM_Server / MDR ) ) ) + Min( Max( ( CRS + CRS ),Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( MRS / DDR ) + ( RRS + AMS ) ) ) ) / Max( ( Min( ( FirstVNF_RAM + DDR ) ,( AMS - FirstVNF_Mem_Server ) ) - ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ),( ( Max( AMS,Const ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( Min( CRS ,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Min( ( ( ( ( Const / MRS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU / AMS ) - Min( CRS ,PN ) ) ) - ( ( ( MRS + FirstVNF_CPU ) / Min( MRS ,ACS ) ) / ( ( MDR + Const ) / ( ARS / FirstVNF_RAM ) ) ) ) ,( Min( Max( ( CRS + RRS ),( MDR * ARS ) ) ,Min( ( MRS + DDR ) ,Max( FirstVNF_CPU,CRS ) ) ) / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * ( Max( CRS,BR ) * ( Const + DDR ) ) ) ) ) / Max( ( ( Max( ( CRS + RRS ),Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( FirstVNF_Mem_Server,ARS ),( FirstVNF_RAM / DDR ) ) ) - ( ( Max( FirstVNF_Mem,RRS ) - ( MDR * FirstVNF_CPU ) ) - Max( ( PN + BR ),( PN - MRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( RRS + Const ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * MDR ) ) ) ,( ( Min( BR ,AMS ) / ( BR - DDR ) ) + Max( ( FirstVNF_RAM_Server + ARS ),Max( AMS,AMS ) ) ) ) ) ) + ( ( ( Min( ( ( ACS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem_Server * CRS ) ,( Const - FirstVNF_RAM_Server ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / DDR ) ) + ( Max( FirstVNF_RAM_Server,MDR ) * ( DDR - DDR ) ) ) ) * ( ( ( Min( ARS ,ACS ) - ( MDR * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server + DDR ) - Max( Const,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS * RRS ) ) ) ) ) / ( Max( ( ( ( FirstVNF_RAM_Server - ARS ) * Max( AMS,ACS ) ) / ( ( FirstVNF_Mem * BR ) - Min( MDR ,ARS ) ) ),( ( ( DDR * ARS ) * ( FirstVNF_RAM + RRS ) ) * ( Min( FirstVNF_RAM ,MRS ) - Max( MDR,MRS ) ) ) ) + ( Min( Min( Max( BR,ARS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( DDR * RRS ) + ( AMS + FirstVNF_RAM ) ) ) - ( ( Max( AMS,MDR ) * Min( FirstVNF_RAM_Server ,Const ) ) * ( Min( ARS ,ACS ) * ( ARS - RRS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( Max( ( ( ( MUC + MUM ) * ( MUM - DS ) ) / ( ( DS * MUR ) + ( RMSe * MLU ) ) ),( ( ( RRSe * RRSe ) + Min( MUR ,DS ) ) / Min( Min( MUC ,MUR ) ,( RMSe + MLU ) ) ) ) - Min( ( Min( ( RMSe + RMSe ) ,( RRSe + CS ) ) * ( Min( MUR ,MUM ) - ( MLU * MUC ) ) ) ,Min( ( ( RRSe / RCSe ) * ( MUM * MUM ) ) ,Min( Max( RCSe,DS ) ,Max( RCSe,MUC ) ) ) ) ),( Min( Min( Max( ( RCSe / RMSe ),( CS - RRSe ) ) ,Min( ( CS * RMSe ) ,( RRSe + MLU ) ) ) ,( ( ( MUC - RMSe ) * ( RCSe - RRSe ) ) + Max( Min( RRSe ,CS ),( RRSe / MUR ) ) ) ) * ( ( ( Max( RMSe,MUC ) * Max( MUM,RMSe ) ) - Min( ( RCSe / MUM ) ,Min( MUM ,MUC ) ) ) * ( ( ( RCSe / RCSe ) - ( MLU - RRSe ) ) / Max( ( MLU / MUM ),( MLU + CS ) ) ) ) ) ),Min( ( ( Min( ( ( MLU + RRSe ) / Max( MUM,DS ) ) ,Min( Min( DS ,MUM ) ,Max( RCSe,DS ) ) ) + ( ( ( MLU - MLU ) * Min( MUR ,CS ) ) * ( Min( MLU ,MUC ) / ( RMSe + RRSe ) ) ) ) * ( Min( ( ( DS - CS ) * ( MUR + MLU ) ) ,( ( MLU + CS ) + Min( MUM ,MUM ) ) ) / ( ( ( RMSe + CS ) - ( RMSe + DS ) ) + ( Min( MUM ,MUC ) + ( RRSe + MLU ) ) ) ) ) ,( ( ( ( ( MUC / CS ) + ( MUM + DS ) ) * ( ( RRSe / RCSe ) / ( MUC - MUM ) ) ) * Min( ( Max( RCSe,MUC ) - Max( CS,CS ) ) ,( ( MUC - MUR ) + ( MLU / MUC ) ) ) ) - Min( ( ( ( RMSe * RRSe ) / ( DS - RRSe ) ) / ( Min( CS ,RCSe ) / ( MUR / MUC ) ) ) ,( ( ( MUC * MLU ) - ( MUM - RMSe ) ) + Min( ( RCSe - MUR ) ,Max( RRSe,MUR ) ) ) ) ) ) ) + ( ( ( ( Max( ( Max( RMSe,RCSe ) + ( DS + MLU ) ),( ( RMSe * MUM ) - Max( MUM,DS ) ) ) * Max( ( ( MUM - CS ) * Min( RMSe ,CS ) ),( ( CS + MUC ) + ( RCSe - MLU ) ) ) ) + Min( ( Max( Min( MLU ,MUM ),Max( MUR,MUM ) ) - ( ( CS - RRSe ) / Min( MUR ,RCSe ) ) ) ,( ( Min( CS ,RCSe ) - ( CS + MUC ) ) - ( Max( MUR,MUR ) * ( MUC - RCSe ) ) ) ) ) - ( Max( ( Min( Max( MUR,RRSe ) ,( RRSe * MUR ) ) + ( Min( CS ,RCSe ) / Min( RRSe ,RRSe ) ) ),( ( ( RMSe * RCSe ) * Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( ( Max( RMSe,MUR ) + ( MUC + MUR ) ),( ( RCSe / MUM ) - Min( MLU ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,( MLU / RCSe ) ) / ( ( MUC - DS ) + Max( RRSe,MUC ) ) ) ) ) ) - ( Min( ( ( ( ( RCSe / RCSe ) + ( MUR / MLU ) ) * ( ( MUM + MUR ) / ( MLU - MUR ) ) ) - Max( ( ( MUR / RCSe ) - ( DS * MUC ) ),( ( RMSe * MUR ) * ( DS - DS ) ) ) ) ,( Max( ( Max( MUC,MUR ) + ( MUC * CS ) ),Max( Min( MUC ,DS ),( CS - RMSe ) ) ) / ( ( Min( MUM ,RRSe ) - ( RCSe * RRSe ) ) + Max( Min( RCSe ,RRSe ),( DS / CS ) ) ) ) ) + Max( ( ( ( ( CS - MUC ) / Max( RMSe,CS ) ) - ( Max( RMSe,CS ) / Max( CS,MUC ) ) ) * ( Max( Max( RCSe,DS ),Max( MUM,RMSe ) ) * Max( ( CS / MLU ),( DS - MUC ) ) ) ),( ( Min( ( RMSe + RRSe ) ,( MUR / RCSe ) ) - ( Max( RRSe,MUR ) / Max( MUC,MUM ) ) ) / ( ( ( RCSe - DS ) - Min( MLU ,RCSe ) ) + ( ( RRSe - MUM ) + ( MUR / MLU ) ) ) ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006770970819034605}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( Max( MLU,RCSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUR / MUC ) - ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}], "31": [{"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUM / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Max( FirstVNF_Mem,RRS ) ) ) )", "choosing": "Max( ( RRSe / DS ),( MUM - DS ) )", "obj1": 0.5690376569037657, "obj2": 0.30649012928128233}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) ) - MUM ) ),( MUM - MUM ) )", "obj1": 0.5962343096234309, "obj2": 0.2738846994030274}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) ) ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.6150627615062761, "obj2": 0.25652660510146574}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( ( ACS - ( Max( BR,FirstVNF_Mem_Server ) - ( Max( ( ACS - BR ),( BR / FirstVNF_RAM ) ) - ACS ) ) ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RCSe ) - Max( ( ( RCSe / RRSe ) + ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ) ),DS ) )", "obj1": 0.604602510460251, "obj2": 0.26618336321501723}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - ( MUM - MUC ) ) ),( MUM - DS ) )", "obj1": 0.5941422594142259, "obj2": 0.2923818873416682}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Min( ( RRS / BR ) ,( PN * BR ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - Max( CS,CS ) ) ),( MUM - MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.24669869185550022}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5815899581589958, "obj2": 0.30433287180048113}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.24660110064638147}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( Const * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) )", "obj1": 0.5836820083682008, "obj2": 0.293661240945006}, {"determining": "( ( ACS - MDR ) - ( BR * ACS ) )", "choosing": "( ( RCSe / MUM ) - ( DS * MUC ) )", "obj1": 0.6610878661087866, "obj2": 0.21270360317693926}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( ( RRSe * ( RRSe - MUC ) ),( MUM - DS ) )", "obj1": 0.5878661087866108, "obj2": 0.2932097644118226}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( DDR,DDR ) ) - ( ( PN - FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( Min( CRS ,RRS ) + ( FirstVNF_CPU_Server - ACS ) ) + Min( Max( DDR,Const ) ,( MRS + BR ) ) ) ) - ( Min( ( ( RRS / Const ) - Min( BR ,ARS ) ) ,Max( Min( RRS ,Const ),( Const * ACS ) ) ) * ( ( ( BR * PN ) / Max( AMS,FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( FirstVNF_Mem + Const ) ) ) ) ) + ( Max( Max( ( Min( CRS ,Const ) - ( PN / RRS ) ),Max( Min( ARS ,MDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),Max( ( Max( RRS,FirstVNF_CPU ) / ( ACS / FirstVNF_RAM_Server ) ),( ( AMS * RRS ) + ( MDR / RRS ) ) ) ) + ( ( ( ( PN + PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) + Max( ( Const + BR ),( ACS + MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( FirstVNF_RAM_Server / AMS ) ) ,( ( RRS * FirstVNF_Mem_Server ) + Min( ARS ,MDR ) ) ) ) ) ) - Max( Max( Min( Max( ( ( PN - FirstVNF_Mem ) * ( Const + ARS ) ),( ( ACS - ACS ) / ( MDR - BR ) ) ) ,Min( Min( ( DDR - RRS ) ,Max( MDR,FirstVNF_Mem ) ) ,( ( MDR + FirstVNF_Mem_Server ) / Max( ARS,FirstVNF_RAM_Server ) ) ) ),( ( Max( Max( RRS,PN ),( ACS - MDR ) ) + ( ( ACS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) * Min( ( Max( ARS,RRS ) - Min( MRS ,CRS ) ) ,Max( ( PN / MRS ),( RRS * Const ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_CPU / FirstVNF_CPU ) ) - Max( ( DDR / CRS ),( FirstVNF_RAM_Server / MDR ) ) ) + Min( Max( ( CRS + CRS ),Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( MRS / DDR ) + ( RRS + AMS ) ) ) ) / Max( ( Min( ( FirstVNF_RAM + DDR ) ,( AMS - FirstVNF_Mem_Server ) ) - ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ),( ( Max( AMS,Const ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( Min( CRS ,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Min( ( ( ( ( Const / MRS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU / AMS ) - Min( CRS ,PN ) ) ) - ( ( ( MRS + FirstVNF_CPU ) / Min( MRS ,ACS ) ) / ( ( MDR + Const ) / ( ARS / FirstVNF_RAM ) ) ) ) ,( Min( Max( ( CRS + RRS ),( MDR * ARS ) ) ,Min( ( MRS + DDR ) ,Max( FirstVNF_CPU,CRS ) ) ) / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * ( Max( CRS,BR ) * ( Const + DDR ) ) ) ) ) / Max( ( ( Max( ( CRS + RRS ),Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( FirstVNF_Mem_Server,ARS ),( FirstVNF_RAM / DDR ) ) ) - ( ( Max( FirstVNF_Mem,RRS ) - ( MDR * FirstVNF_CPU ) ) - Max( ( PN + BR ),( PN - MRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( RRS + Const ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * MDR ) ) ) ,( ( Min( BR ,AMS ) / ( BR - DDR ) ) + Max( ( FirstVNF_RAM_Server + ARS ),Max( AMS,AMS ) ) ) ) ) ) + ( ( ( Min( ( ( ACS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem_Server * CRS ) ,( Const - FirstVNF_RAM_Server ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / DDR ) ) + ( Max( FirstVNF_RAM_Server,MDR ) * ( DDR - DDR ) ) ) ) * ( ( ( Min( ARS ,ACS ) - ( MDR * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server + DDR ) - Max( Const,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS * RRS ) ) ) ) ) / ( Max( ( ( ( FirstVNF_RAM_Server - ARS ) * Max( AMS,ACS ) ) / ( ( FirstVNF_Mem * BR ) - Min( MDR ,ARS ) ) ),( ( ( DDR * ARS ) * ( FirstVNF_RAM + RRS ) ) * ( Min( FirstVNF_RAM ,MRS ) - Max( MDR,MRS ) ) ) ) + ( Min( Min( Max( BR,ARS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( DDR * RRS ) + ( AMS + FirstVNF_RAM ) ) ) - ( ( Max( AMS,MDR ) * Min( FirstVNF_RAM_Server ,Const ) ) * ( Min( ARS ,ACS ) * ( ARS - RRS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( Max( ( ( ( MUC + MUM ) * ( MUM - DS ) ) / ( ( DS * MUR ) + ( RMSe * MLU ) ) ),( ( ( RRSe * RRSe ) + Min( MUR ,DS ) ) / Min( Min( MUC ,MUR ) ,( RMSe + MLU ) ) ) ) - Min( ( Min( ( RMSe + RMSe ) ,( RRSe + CS ) ) * ( Min( MUR ,MUM ) - ( MLU * MUC ) ) ) ,Min( ( ( RRSe / RCSe ) * ( MUM * MUM ) ) ,Min( Max( RCSe,DS ) ,Max( RCSe,MUC ) ) ) ) ),( Min( Min( Max( ( RCSe / RMSe ),( CS - RRSe ) ) ,Min( ( CS * RMSe ) ,( RRSe + MLU ) ) ) ,( ( ( MUC - RMSe ) * ( RCSe - RRSe ) ) + Max( Min( RRSe ,CS ),( RRSe / MUR ) ) ) ) * ( ( ( Max( RMSe,MUC ) * Max( MUM,RMSe ) ) - Min( ( RCSe / MUM ) ,Min( MUM ,MUC ) ) ) * ( ( ( RCSe / RCSe ) - ( MLU - RRSe ) ) / Max( ( MLU / MUM ),( MLU + CS ) ) ) ) ) ),Min( ( ( Min( ( ( MLU + RRSe ) / Max( MUM,DS ) ) ,Min( Min( DS ,MUM ) ,Max( RCSe,DS ) ) ) + ( ( ( MLU - MLU ) * Min( MUR ,CS ) ) * ( Min( MLU ,MUC ) / ( RMSe + RRSe ) ) ) ) * ( Min( ( ( DS - CS ) * ( MUR + MLU ) ) ,( ( MLU + CS ) + Min( MUM ,MUM ) ) ) / ( ( ( RMSe + CS ) - ( RMSe + DS ) ) + ( Min( MUM ,MUC ) + ( RRSe + MLU ) ) ) ) ) ,( ( ( ( ( MUC / CS ) + ( MUM + DS ) ) * ( ( RRSe / RCSe ) / ( MUC - MUM ) ) ) * Min( ( Max( RCSe,MUC ) - Max( CS,CS ) ) ,( ( MUC - MUR ) + ( MLU / MUC ) ) ) ) - Min( ( ( ( RMSe * RRSe ) / ( DS - RRSe ) ) / ( Min( CS ,RCSe ) / ( MUR / MUC ) ) ) ,( ( ( MUC * MLU ) - ( MUM - RMSe ) ) + Min( ( RCSe - MUR ) ,Max( RRSe,MUR ) ) ) ) ) ) ) + ( ( ( ( Max( ( Max( RMSe,RCSe ) + ( DS + MLU ) ),( ( RMSe * MUM ) - Max( MUM,DS ) ) ) * Max( ( ( MUM - CS ) * Min( RMSe ,CS ) ),( ( CS + MUC ) + ( RCSe - MLU ) ) ) ) + Min( ( Max( Min( MLU ,MUM ),Max( MUR,MUM ) ) - ( ( CS - RRSe ) / Min( MUR ,RCSe ) ) ) ,( ( Min( CS ,RCSe ) - ( CS + MUC ) ) - ( Max( MUR,MUR ) * ( MUC - RCSe ) ) ) ) ) - ( Max( ( Min( Max( MUR,RRSe ) ,( RRSe * MUR ) ) + ( Min( CS ,RCSe ) / Min( RRSe ,RRSe ) ) ),( ( ( RMSe * RCSe ) * Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( ( Max( RMSe,MUR ) + ( MUC + MUR ) ),( ( RCSe / MUM ) - Min( MLU ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,( MLU / RCSe ) ) / ( ( MUC - DS ) + Max( RRSe,MUC ) ) ) ) ) ) - ( Min( ( ( ( ( RCSe / RCSe ) + ( MUR / MLU ) ) * ( ( MUM + MUR ) / ( MLU - MUR ) ) ) - Max( ( ( MUR / RCSe ) - ( DS * MUC ) ),( ( RMSe * MUR ) * ( DS - DS ) ) ) ) ,( Max( ( Max( MUC,MUR ) + ( MUC * CS ) ),Max( Min( MUC ,DS ),( CS - RMSe ) ) ) / ( ( Min( MUM ,RRSe ) - ( RCSe * RRSe ) ) + Max( Min( RCSe ,RRSe ),( DS / CS ) ) ) ) ) + Max( ( ( ( ( CS - MUC ) / Max( RMSe,CS ) ) - ( Max( RMSe,CS ) / Max( CS,MUC ) ) ) * ( Max( Max( RCSe,DS ),Max( MUM,RMSe ) ) * Max( ( CS / MLU ),( DS - MUC ) ) ) ),( ( Min( ( RMSe + RRSe ) ,( MUR / RCSe ) ) - ( Max( RRSe,MUR ) / Max( MUC,MUM ) ) ) / ( ( ( RCSe - DS ) - Min( MLU ,RCSe ) ) + ( ( RRSe - MUM ) + ( MUR / MLU ) ) ) ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006770970819034605}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MLU / RCSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( Max( MLU,RCSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}], "32": [{"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUM / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MUM / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( ( RRSe * ( Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) ) - MUC ) ),( MUM - DS ) )", "obj1": 0.5669456066945606, "obj2": 0.30933795679278453}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ,MUM ) / MUR ) )", "obj1": 0.7426778242677824, "obj2": 0.1300125189923139}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_Mem * BR ) + Max( ( ( CRS / FirstVNF_CPU ) / FirstVNF_Mem ),( ( ACS / ARS ) * DDR ) ) ) )", "choosing": "( MLU / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.12136645077295234}, {"determining": "( ( ( ACS - MDR ) - ( BR * PN ) ) - Min( MDR ,ARS ) )", "choosing": "Min( CS ,Max( MUC,CS ) )", "obj1": 0.8117154811715481, "obj2": 0.08680834114064999}, {"determining": "( ( BR * BR ) - CRS )", "choosing": "Max( ( Max( RMSe,MUC ) / ( CS / MUR ) ),( DS - MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.018312067837752653}, {"determining": "( ( Const - RRS ) - ( ( DDR / AMS ) - Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( ( MLU / MUC ) + RRSe )", "obj1": 0.797071129707113, "obj2": 0.10690815266793739}, {"determining": "Min( Min( ( RRS / DDR ) ,( PN * BR ) ) ,( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.8326359832635983, "obj2": 0.0775744799478986}, {"determining": "( ( ( AMS - DDR ) - Const ) - Const )", "choosing": "( ( RMSe / MUC ) / ( Min( ( Min( DS ,MUM ) / MUR ) ,MUM ) / MUR ) )", "obj1": 0.7217573221757322, "obj2": 0.13703403483022852}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( BR / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.7050209205020921, "obj2": 0.14596591054972252}, {"determining": "( ( ( ACS - MDR ) - ( BR * AMS ) ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,CS )", "obj1": 0.8765690376569037, "obj2": 0.04881606576753139}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9121338912133892, "obj2": 0.031134378000567932}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "( ( RCSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.6652719665271967, "obj2": 0.20635762253779996}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * AMS ) ) )", "choosing": "( Max( Min( ( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) ) ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.702928870292887, "obj2": 0.1655262170914611}, {"determining": "( Min( Const ,FirstVNF_Mem ) + FirstVNF_Mem )", "choosing": "( ( MUC / ( CS - DS ) ) / ( CS - DS ) )", "obj1": 0.6527196652719666, "obj2": 0.24043312724626018}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUC + MUC ) )", "obj1": 0.8556485355648535, "obj2": 0.05799405443065243}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - ( AMS + ( ( ( RRS / DDR ) / FirstVNF_CPU_Server ) - ( AMS - Const ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( MUC ,CS ) ),Min( DS ,CS ) ) / ( CS / MUR ) )", "obj1": 0.6548117154811716, "obj2": 0.213930184541024}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) ) - MUM ) ),( MUM - MUM ) )", "obj1": 0.5962343096234309, "obj2": 0.2738846994030274}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( Const / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( ( ( MUM + MUC ) - ( Max( Min( RCSe ,MUM ),Min( DS ,MUM ) ) * MUC ) ) / MUR ) )", "obj1": 0.6841004184100419, "obj2": 0.16776362160879155}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) )", "choosing": "Max( Max( ( RRSe * ( MUM - MUC ) ),( MUM - DS ) ),( MUM - DS ) )", "obj1": 0.5815899581589958, "obj2": 0.29273766789787475}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( Min( Min( ( RRS / BR ) ,( PN * BR ) ) ,Max( ( FirstVNF_Mem - MDR ),Max( FirstVNF_Mem,RRS ) ) ) ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "Max( ( RRSe * ( MUM - MUM ) ),( MUM - MUM ) )", "obj1": 0.6150627615062761, "obj2": 0.25652660510146574}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( Max( ( ACS - ( Max( BR,FirstVNF_Mem_Server ) - ( Max( ( ACS - BR ),( BR / FirstVNF_RAM ) ) - ACS ) ) ),( BR / FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( MLU / RCSe ) - Max( ( ( RCSe / RRSe ) + ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ) ),DS ) )", "obj1": 0.604602510460251, "obj2": 0.26618336321501723}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Const ) ) ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - ( MUM - MUC ) ) ),( MUM - DS ) )", "obj1": 0.5941422594142259, "obj2": 0.2923818873416682}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Max( AMS,Max( FirstVNF_Mem,RRS ) ) ) )", "choosing": "Max( ( RRSe / DS ),( MUM - DS ) )", "obj1": 0.5690376569037657, "obj2": 0.30649012928128233}, {"determining": "( ( BR / AMS ) - ( ( ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) )", "choosing": "( Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9602510460251046, "obj2": 0.01557591583380925}, {"determining": "( ( BR / ( ( BR / PN ) - ( FirstVNF_Mem * ARS ) ) ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( CS / MUC ) - Min( MLU ,CS ) ) / MUC ) - Min( MLU ,CS ) )", "obj1": 0.9769874476987448, "obj2": 0.01224152480633289}, {"determining": "( ( ACS - MDR ) - Min( MDR ,ARS ) )", "choosing": "( ( MUC + MUC ) - DS )", "obj1": 0.8430962343096234, "obj2": 0.06489263988610772}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( PN - CRS ) - ( DDR * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,( Min( CS ,CS ) * MUC ) ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6799163179916318, "obj2": 0.1824152929381156}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - Min( ( RRS / BR ) ,( PN * BR ) ) ) )", "choosing": "Max( ( RRSe * ( MUM - Max( CS,CS ) ) ),( MUM - MUM ) )", "obj1": 0.6213389121338913, "obj2": 0.24669869185550022}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( Min( BR ,FirstVNF_Mem ) - ( AMS - Const ) ) )", "choosing": "( ( ( MUR + MUR ) / ( RRSe / DS ) ) / ( Max( CS,CS ) * MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.24660110064638147}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) - Min( ( RRS / DDR ) ,( MRS * BR ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),Min( DS ,CS ) ) / ( CS / ( RRSe / RRSe ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2412084915390207}, {"determining": "( ( BR / AMS ) - ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / ( ( Max( FirstVNF_Mem,BR ) / ( FirstVNF_Mem_Server / DDR ) ) / ARS ) ) ) / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( ( ( RCSe / RRSe ) / ( RRSe + RRSe ) ) ,MUM ) )", "obj1": 0.9832635983263598, "obj2": 0.006248705388187424}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( Max( DS,Min( MUM ,MUM ) ) + ( Min( DS ,DS ) / DS ) )", "obj1": 0.893305439330544, "obj2": 0.0444354947892255}, {"determining": "( ( ( ACS - MDR ) - MDR ) - ( BR / AMS ) )", "choosing": "( ( ( MUC + MUC ) - RCSe ) - RCSe )", "obj1": 0.8472803347280334, "obj2": 0.06235679878460039}, {"determining": "( ( ACS - MDR ) - ( BR * ACS ) )", "choosing": "( ( RCSe / MUM ) - ( DS * MUC ) )", "obj1": 0.6610878661087866, "obj2": 0.21270360317693926}, {"determining": "( ( PN - CRS ) - ( AMS * ( ( BR / FirstVNF_Mem ) * ( AMS - Const ) ) ) )", "choosing": "( Max( Min( MLU ,MUM ),Min( DS ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.6778242677824268, "obj2": 0.18761716508921425}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( BR / AMS ) - ( MRS / Const ) )", "choosing": "( ( RMSe - MUC ) / ( ( RCSe - RCSe ) - MUR ) )", "obj1": 0.9100418410041841, "obj2": 0.031841987694748046}, {"determining": "( ( PN - BR ) - ( BR / PN ) )", "choosing": "( ( MUM + MUC ) - ( DS * Max( ( ( ( CS / MUC ) - CS ) / MUM ),( CS + MUR ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0039492230186826925}, {"determining": "( ( ACS - MDR ) - Max( ( ( BR / AMS ) - ( AMS / ARS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * Min( Min( DS ,MUM ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.0022384036370637224}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( DDR,DDR ) ) - ( ( PN - FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( Min( CRS ,RRS ) + ( FirstVNF_CPU_Server - ACS ) ) + Min( Max( DDR,Const ) ,( MRS + BR ) ) ) ) - ( Min( ( ( RRS / Const ) - Min( BR ,ARS ) ) ,Max( Min( RRS ,Const ),( Const * ACS ) ) ) * ( ( ( BR * PN ) / Max( AMS,FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( FirstVNF_Mem + Const ) ) ) ) ) + ( Max( Max( ( Min( CRS ,Const ) - ( PN / RRS ) ),Max( Min( ARS ,MDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),Max( ( Max( RRS,FirstVNF_CPU ) / ( ACS / FirstVNF_RAM_Server ) ),( ( AMS * RRS ) + ( MDR / RRS ) ) ) ) + ( ( ( ( PN + PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) + Max( ( Const + BR ),( ACS + MDR ) ) ) * Min( ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( FirstVNF_RAM_Server / AMS ) ) ,( ( RRS * FirstVNF_Mem_Server ) + Min( ARS ,MDR ) ) ) ) ) ) - Max( Max( Min( Max( ( ( PN - FirstVNF_Mem ) * ( Const + ARS ) ),( ( ACS - ACS ) / ( MDR - BR ) ) ) ,Min( Min( ( DDR - RRS ) ,Max( MDR,FirstVNF_Mem ) ) ,( ( MDR + FirstVNF_Mem_Server ) / Max( ARS,FirstVNF_RAM_Server ) ) ) ),( ( Max( Max( RRS,PN ),( ACS - MDR ) ) + ( ( ACS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem_Server ) ) ) * Min( ( Max( ARS,RRS ) - Min( MRS ,CRS ) ) ,Max( ( PN / MRS ),( RRS * Const ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_CPU / FirstVNF_CPU ) ) - Max( ( DDR / CRS ),( FirstVNF_RAM_Server / MDR ) ) ) + Min( Max( ( CRS + CRS ),Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( MRS / DDR ) + ( RRS + AMS ) ) ) ) / Max( ( Min( ( FirstVNF_RAM + DDR ) ,( AMS - FirstVNF_Mem_Server ) ) - ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ),( ( Max( AMS,Const ) * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( Min( CRS ,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Min( ( ( ( ( Const / MRS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU / AMS ) - Min( CRS ,PN ) ) ) - ( ( ( MRS + FirstVNF_CPU ) / Min( MRS ,ACS ) ) / ( ( MDR + Const ) / ( ARS / FirstVNF_RAM ) ) ) ) ,( Min( Max( ( CRS + RRS ),( MDR * ARS ) ) ,Min( ( MRS + DDR ) ,Max( FirstVNF_CPU,CRS ) ) ) / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) * ( Max( CRS,BR ) * ( Const + DDR ) ) ) ) ) / Max( ( ( Max( ( CRS + RRS ),Max( FirstVNF_RAM_Server,MDR ) ) - Max( Max( FirstVNF_Mem_Server,ARS ),( FirstVNF_RAM / DDR ) ) ) - ( ( Max( FirstVNF_Mem,RRS ) - ( MDR * FirstVNF_CPU ) ) - Max( ( PN + BR ),( PN - MRS ) ) ) ),Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( RRS + Const ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( FirstVNF_CPU_Server * MDR ) ) ) ,( ( Min( BR ,AMS ) / ( BR - DDR ) ) + Max( ( FirstVNF_RAM_Server + ARS ),Max( AMS,AMS ) ) ) ) ) ) + ( ( ( Min( ( ( ACS * MRS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem_Server * CRS ) ,( Const - FirstVNF_RAM_Server ) ) ) + ( ( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / DDR ) ) + ( Max( FirstVNF_RAM_Server,MDR ) * ( DDR - DDR ) ) ) ) * ( ( ( Min( ARS ,ACS ) - ( MDR * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server + DDR ) - Max( Const,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM + CRS ) ) * ( Min( FirstVNF_Mem ,MDR ) + ( RRS * RRS ) ) ) ) ) / ( Max( ( ( ( FirstVNF_RAM_Server - ARS ) * Max( AMS,ACS ) ) / ( ( FirstVNF_Mem * BR ) - Min( MDR ,ARS ) ) ),( ( ( DDR * ARS ) * ( FirstVNF_RAM + RRS ) ) * ( Min( FirstVNF_RAM ,MRS ) - Max( MDR,MRS ) ) ) ) + ( Min( Min( Max( BR,ARS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( DDR * RRS ) + ( AMS + FirstVNF_RAM ) ) ) - ( ( Max( AMS,MDR ) * Min( FirstVNF_RAM_Server ,Const ) ) * ( Min( ARS ,ACS ) * ( ARS - RRS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( Max( ( ( ( MUC + MUM ) * ( MUM - DS ) ) / ( ( DS * MUR ) + ( RMSe * MLU ) ) ),( ( ( RRSe * RRSe ) + Min( MUR ,DS ) ) / Min( Min( MUC ,MUR ) ,( RMSe + MLU ) ) ) ) - Min( ( Min( ( RMSe + RMSe ) ,( RRSe + CS ) ) * ( Min( MUR ,MUM ) - ( MLU * MUC ) ) ) ,Min( ( ( RRSe / RCSe ) * ( MUM * MUM ) ) ,Min( Max( RCSe,DS ) ,Max( RCSe,MUC ) ) ) ) ),( Min( Min( Max( ( RCSe / RMSe ),( CS - RRSe ) ) ,Min( ( CS * RMSe ) ,( RRSe + MLU ) ) ) ,( ( ( MUC - RMSe ) * ( RCSe - RRSe ) ) + Max( Min( RRSe ,CS ),( RRSe / MUR ) ) ) ) * ( ( ( Max( RMSe,MUC ) * Max( MUM,RMSe ) ) - Min( ( RCSe / MUM ) ,Min( MUM ,MUC ) ) ) * ( ( ( RCSe / RCSe ) - ( MLU - RRSe ) ) / Max( ( MLU / MUM ),( MLU + CS ) ) ) ) ) ),Min( ( ( Min( ( ( MLU + RRSe ) / Max( MUM,DS ) ) ,Min( Min( DS ,MUM ) ,Max( RCSe,DS ) ) ) + ( ( ( MLU - MLU ) * Min( MUR ,CS ) ) * ( Min( MLU ,MUC ) / ( RMSe + RRSe ) ) ) ) * ( Min( ( ( DS - CS ) * ( MUR + MLU ) ) ,( ( MLU + CS ) + Min( MUM ,MUM ) ) ) / ( ( ( RMSe + CS ) - ( RMSe + DS ) ) + ( Min( MUM ,MUC ) + ( RRSe + MLU ) ) ) ) ) ,( ( ( ( ( MUC / CS ) + ( MUM + DS ) ) * ( ( RRSe / RCSe ) / ( MUC - MUM ) ) ) * Min( ( Max( RCSe,MUC ) - Max( CS,CS ) ) ,( ( MUC - MUR ) + ( MLU / MUC ) ) ) ) - Min( ( ( ( RMSe * RRSe ) / ( DS - RRSe ) ) / ( Min( CS ,RCSe ) / ( MUR / MUC ) ) ) ,( ( ( MUC * MLU ) - ( MUM - RMSe ) ) + Min( ( RCSe - MUR ) ,Max( RRSe,MUR ) ) ) ) ) ) ) + ( ( ( ( Max( ( Max( RMSe,RCSe ) + ( DS + MLU ) ),( ( RMSe * MUM ) - Max( MUM,DS ) ) ) * Max( ( ( MUM - CS ) * Min( RMSe ,CS ) ),( ( CS + MUC ) + ( RCSe - MLU ) ) ) ) + Min( ( Max( Min( MLU ,MUM ),Max( MUR,MUM ) ) - ( ( CS - RRSe ) / Min( MUR ,RCSe ) ) ) ,( ( Min( CS ,RCSe ) - ( CS + MUC ) ) - ( Max( MUR,MUR ) * ( MUC - RCSe ) ) ) ) ) - ( Max( ( Min( Max( MUR,RRSe ) ,( RRSe * MUR ) ) + ( Min( CS ,RCSe ) / Min( RRSe ,RRSe ) ) ),( ( ( RMSe * RCSe ) * Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( RRSe - DS ) ) ) ) + ( Max( ( Max( RMSe,MUR ) + ( MUC + MUR ) ),( ( RCSe / MUM ) - Min( MLU ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,( MLU / RCSe ) ) / ( ( MUC - DS ) + Max( RRSe,MUC ) ) ) ) ) ) - ( Min( ( ( ( ( RCSe / RCSe ) + ( MUR / MLU ) ) * ( ( MUM + MUR ) / ( MLU - MUR ) ) ) - Max( ( ( MUR / RCSe ) - ( DS * MUC ) ),( ( RMSe * MUR ) * ( DS - DS ) ) ) ) ,( Max( ( Max( MUC,MUR ) + ( MUC * CS ) ),Max( Min( MUC ,DS ),( CS - RMSe ) ) ) / ( ( Min( MUM ,RRSe ) - ( RCSe * RRSe ) ) + Max( Min( RCSe ,RRSe ),( DS / CS ) ) ) ) ) + Max( ( ( ( ( CS - MUC ) / Max( RMSe,CS ) ) - ( Max( RMSe,CS ) / Max( CS,MUC ) ) ) * ( Max( Max( RCSe,DS ),Max( MUM,RMSe ) ) * Max( ( CS / MLU ),( DS - MUC ) ) ) ),( ( Min( ( RMSe + RRSe ) ,( MUR / RCSe ) ) - ( Max( RRSe,MUR ) / Max( MUC,MUM ) ) ) / ( ( ( RCSe - DS ) - Min( MLU ,RCSe ) ) + ( ( RRSe - MUM ) + ( MUR / MLU ) ) ) ) ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006770970819034605}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( MLU / RCSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( Max( MLU,RCSe ) - Max( ( ( RCSe / RRSe ) + Min( DS ,RCSe ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / RCSe ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM ) - ( ( BR / PN ) - ( FirstVNF_Mem - ARS ) ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) )", "choosing": "( ( CS / MLU ) - Min( MLU ,MUR ) )", "obj1": 1.0, "obj2": 0.0}]}